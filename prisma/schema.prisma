
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  name       String
  role       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([id, email])
}

model Vehicles {
  id         Int      @id @default(autoincrement())
  plate      String   @unique
  color      String?
  brand      String
  chassis    String?
  supplier   Suppliers @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  supplierId Int
  orders     VehicleOrders[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model VehicleOrders {
  id             Int      @id @default(autoincrement())
  transaction_code String   @unique
  date            DateTime @db.Date
  plate           String
  transaction    Transactions @relation(fields: [transactionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  transactionId  Int
  vehicle        Vehicles   @relation(fields: [plate], references: [plate], onDelete: Cascade, onUpdate: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Suppliers {
  id             Int                @id @default(autoincrement())
  code           String             @unique
  name           String
  vehicles       Vehicles[]
  supplierOrders SupplierOrders[]
  prices         SupplierPrices[]
  factories      Factories[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model SupplierOrders {
  id             Int      @id @default(autoincrement())
  transaction_code String   @unique
  date        DateTime @db.Date
  transaction    Transactions @relation(fields: [transactionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  transactionId  Int
  supplier       Suppliers  @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  supplierId     Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model SupplierPrices {
  id           Int      @id @default(autoincrement())
  price        Int
  isPPN        Boolean
  supplier     Suppliers @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  supplierId   Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Factories {
  id           Int                @id @default(autoincrement())
  code         String             @unique
  name         String
  prices       FactoryPrices[]
  suppliers    Suppliers[]
  orders       FactoryOrders[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model FactoryOrders {
  id             Int      @id @default(autoincrement())
  kode_transaksi String   @unique
  tanggal        DateTime @db.Date
  transaction    Transactions @relation(fields: [transactionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  transactionId  Int
  factory        Factories   @relation(fields: [factoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  factoryId      Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model FactoryPrices {
  id         Int      @id @default(autoincrement())
  price      Int
  factory    Factories  @relation(fields: [factoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  factoryId  Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Farmers {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  name       String
  address    String
  phone      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  farmer_orders FarmerOrder[]
}

model FarmerOrder {
  id         Int      @id @default(autoincrement())
  code       String   @unique
  date       DateTime @db.Date
  farmer     Farmers  @relation(fields: [farmerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  farmerId   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Transactions {
  id            Int      @id @default(autoincrement())
  kode          String   @unique
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  vehicleOrders VehicleOrders[]
  supplierOrders SupplierOrders[]
  factoryOrders FactoryOrders[]
}