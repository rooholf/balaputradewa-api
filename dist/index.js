var __create = Object.create;
var __defProp = Object.defineProperty;
var __getProtoOf = Object.getPrototypeOf;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __reExport = (target, mod, secondTarget) => {
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(target, key) && key !== "default")
      __defProp(target, key, {
        get: () => mod[key],
        enumerable: true
      });
  if (secondTarget) {
    for (let key of __getOwnPropNames(mod))
      if (!__hasOwnProp.call(secondTarget, key) && key !== "default")
        __defProp(secondTarget, key, {
          get: () => mod[key],
          enumerable: true
        });
    return secondTarget;
  }
};
var __toESM = (mod, isNodeMode, target) => {
  target = mod != null ? __create(__getProtoOf(mod)) : {};
  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target;
  for (let key of __getOwnPropNames(mod))
    if (!__hasOwnProp.call(to, key))
      __defProp(to, key, {
        get: () => mod[key],
        enumerable: true
      });
  return to;
};
var __toCommonJS = (from) => {
  const moduleCache = __toCommonJS.moduleCache ??= new WeakMap;
  var cached = moduleCache.get(from);
  if (cached)
    return cached;
  var to = __defProp({}, "__esModule", { value: true });
  var desc = { enumerable: false };
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key))
        __defProp(to, key, {
          get: () => from[key],
          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
        });
  }
  moduleCache.set(from, to);
  return to;
};
var __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, {
      get: all[name],
      enumerable: true,
      configurable: true,
      set: (newValue) => all[name] = () => newValue
    });
};
var __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);

// node_modules/eventemitter3/index.js
var require_eventemitter3 = __commonJS((exports, module) => {
  var Events = function() {
  };
  var EE = function(fn, context, once) {
    this.fn = fn;
    this.context = context;
    this.once = once || false;
  };
  var addListener = function(emitter, event, fn, context, once) {
    if (typeof fn !== "function") {
      throw new TypeError("The listener must be a function");
    }
    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt])
      emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn)
      emitter._events[evt].push(listener);
    else
      emitter._events[evt] = [emitter._events[evt], listener];
    return emitter;
  };
  var clearEvent = function(emitter, evt) {
    if (--emitter._eventsCount === 0)
      emitter._events = new Events;
    else
      delete emitter._events[evt];
  };
  var EventEmitter = function() {
    this._events = new Events;
    this._eventsCount = 0;
  };
  var has = Object.prototype.hasOwnProperty;
  var prefix = "~";
  if (Object.create) {
    Events.prototype = Object.create(null);
    if (!new Events().__proto__)
      prefix = false;
  }
  EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name;
    if (this._eventsCount === 0)
      return names;
    for (name in events = this._events) {
      if (has.call(events, name))
        names.push(prefix ? name.slice(1) : name);
    }
    if (Object.getOwnPropertySymbols) {
      return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
  };
  EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers)
      return [];
    if (handlers.fn)
      return [handlers.fn];
    for (var i = 0, l = handlers.length, ee = new Array(l);i < l; i++) {
      ee[i] = handlers[i].fn;
    }
    return ee;
  };
  EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners)
      return 0;
    if (listeners.fn)
      return 1;
    return listeners.length;
  };
  EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return false;
    var listeners = this._events[evt], len = arguments.length, args, i;
    if (listeners.fn) {
      if (listeners.once)
        this.removeListener(event, listeners.fn, undefined, true);
      switch (len) {
        case 1:
          return listeners.fn.call(listeners.context), true;
        case 2:
          return listeners.fn.call(listeners.context, a1), true;
        case 3:
          return listeners.fn.call(listeners.context, a1, a2), true;
        case 4:
          return listeners.fn.call(listeners.context, a1, a2, a3), true;
        case 5:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
        case 6:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
      }
      for (i = 1, args = new Array(len - 1);i < len; i++) {
        args[i - 1] = arguments[i];
      }
      listeners.fn.apply(listeners.context, args);
    } else {
      var length = listeners.length, j;
      for (i = 0;i < length; i++) {
        if (listeners[i].once)
          this.removeListener(event, listeners[i].fn, undefined, true);
        switch (len) {
          case 1:
            listeners[i].fn.call(listeners[i].context);
            break;
          case 2:
            listeners[i].fn.call(listeners[i].context, a1);
            break;
          case 3:
            listeners[i].fn.call(listeners[i].context, a1, a2);
            break;
          case 4:
            listeners[i].fn.call(listeners[i].context, a1, a2, a3);
            break;
          default:
            if (!args)
              for (j = 1, args = new Array(len - 1);j < len; j++) {
                args[j - 1] = arguments[j];
              }
            listeners[i].fn.apply(listeners[i].context, args);
        }
      }
    }
    return true;
  };
  EventEmitter.prototype.on = function on(event, fn, context) {
    return addListener(this, event, fn, context, false);
  };
  EventEmitter.prototype.once = function once(event, fn, context) {
    return addListener(this, event, fn, context, true);
  };
  EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return this;
    if (!fn) {
      clearEvent(this, evt);
      return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
      if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {
        clearEvent(this, evt);
      }
    } else {
      for (var i = 0, events = [], length = listeners.length;i < length; i++) {
        if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {
          events.push(listeners[i]);
        }
      }
      if (events.length)
        this._events[evt] = events.length === 1 ? events[0] : events;
      else
        clearEvent(this, evt);
    }
    return this;
  };
  EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
      evt = prefix ? prefix + event : event;
      if (this._events[evt])
        clearEvent(this, evt);
    } else {
      this._events = new Events;
      this._eventsCount = 0;
    }
    return this;
  };
  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
  EventEmitter.prototype.addListener = EventEmitter.prototype.on;
  EventEmitter.prefixed = prefix;
  EventEmitter.EventEmitter = EventEmitter;
  if (typeof module !== "undefined") {
    module.exports = EventEmitter;
  }
});

// node_modules/@sinclair/typebox/value/guard.js
var require_guard = __commonJS((exports) => {
  var IsAsyncIterator = function(value) {
    return IsObject(value) && (Symbol.asyncIterator in value);
  };
  var IsIterator = function(value) {
    return IsObject(value) && (Symbol.iterator in value);
  };
  var IsTypedArray = function(value) {
    return ArrayBuffer.isView(value);
  };
  var IsPromise = function(value) {
    return value instanceof Promise;
  };
  var IsUint8Array = function(value) {
    return value instanceof Uint8Array;
  };
  var IsDate = function(value) {
    return value instanceof Date && Number.isFinite(value.getTime());
  };
  var HasPropertyKey = function(value, key) {
    return key in value;
  };
  var IsPlainObject = function(value) {
    return IsObject(value) && IsFunction(value.constructor) && value.constructor.name === "Object";
  };
  var IsObject = function(value) {
    return value !== null && typeof value === "object";
  };
  var IsArray = function(value) {
    return Array.isArray(value) && !ArrayBuffer.isView(value);
  };
  var IsUndefined = function(value) {
    return value === undefined;
  };
  var IsNull = function(value) {
    return value === null;
  };
  var IsBoolean = function(value) {
    return typeof value === "boolean";
  };
  var IsNumber = function(value) {
    return typeof value === "number";
  };
  var IsInteger = function(value) {
    return IsNumber(value) && Number.isInteger(value);
  };
  var IsBigInt = function(value) {
    return typeof value === "bigint";
  };
  var IsString = function(value) {
    return typeof value === "string";
  };
  var IsFunction = function(value) {
    return typeof value === "function";
  };
  var IsSymbol = function(value) {
    return typeof value === "symbol";
  };
  var IsValueType = function(value) {
    return IsBigInt(value) || IsBoolean(value) || IsNull(value) || IsNumber(value) || IsString(value) || IsSymbol(value) || IsUndefined(value);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.IsValueType = exports.IsSymbol = exports.IsFunction = exports.IsString = exports.IsBigInt = exports.IsInteger = exports.IsNumber = exports.IsBoolean = exports.IsNull = exports.IsUndefined = exports.IsArray = exports.IsObject = exports.IsPlainObject = exports.HasPropertyKey = exports.IsDate = exports.IsUint8Array = exports.IsPromise = exports.IsTypedArray = exports.IsIterator = exports.IsAsyncIterator = undefined;
  exports.IsAsyncIterator = IsAsyncIterator;
  exports.IsIterator = IsIterator;
  exports.IsTypedArray = IsTypedArray;
  exports.IsPromise = IsPromise;
  exports.IsUint8Array = IsUint8Array;
  exports.IsDate = IsDate;
  exports.HasPropertyKey = HasPropertyKey;
  exports.IsPlainObject = IsPlainObject;
  exports.IsObject = IsObject;
  exports.IsArray = IsArray;
  exports.IsUndefined = IsUndefined;
  exports.IsNull = IsNull;
  exports.IsBoolean = IsBoolean;
  exports.IsNumber = IsNumber;
  exports.IsInteger = IsInteger;
  exports.IsBigInt = IsBigInt;
  exports.IsString = IsString;
  exports.IsFunction = IsFunction;
  exports.IsSymbol = IsSymbol;
  exports.IsValueType = IsValueType;
});

// node_modules/@sinclair/typebox/typebox.js
var require_typebox = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Type = exports.JsonType = exports.JavaScriptTypeBuilder = exports.JsonTypeBuilder = exports.TypeBuilder = exports.TypeBuilderError = exports.TransformEncodeBuilder = exports.TransformDecodeBuilder = exports.TemplateLiteralDslParser = exports.TemplateLiteralGenerator = exports.TemplateLiteralGeneratorError = exports.TemplateLiteralFinite = exports.TemplateLiteralFiniteError = exports.TemplateLiteralParser = exports.TemplateLiteralParserError = exports.TemplateLiteralResolver = exports.TemplateLiteralPattern = exports.TemplateLiteralPatternError = exports.UnionResolver = exports.KeyArrayResolver = exports.KeyArrayResolverError = exports.KeyResolver = exports.ObjectMap = exports.Intrinsic = exports.IndexedAccessor = exports.TypeClone = exports.TypeExtends = exports.TypeExtendsResult = exports.TypeExtendsError = exports.ExtendsUndefined = exports.TypeGuard = exports.TypeGuardUnknownTypeError = exports.ValueGuard = exports.FormatRegistry = exports.TypeBoxError = exports.TypeRegistry = exports.PatternStringExact = exports.PatternNumberExact = exports.PatternBooleanExact = exports.PatternString = exports.PatternNumber = exports.PatternBoolean = exports.Kind = exports.Hint = exports.Optional = exports.Readonly = exports.Transform = undefined;
  exports.Transform = Symbol.for("TypeBox.Transform");
  exports.Readonly = Symbol.for("TypeBox.Readonly");
  exports.Optional = Symbol.for("TypeBox.Optional");
  exports.Hint = Symbol.for("TypeBox.Hint");
  exports.Kind = Symbol.for("TypeBox.Kind");
  exports.PatternBoolean = "(true|false)";
  exports.PatternNumber = "(0|[1-9][0-9]*)";
  exports.PatternString = "(.*)";
  exports.PatternBooleanExact = `^${exports.PatternBoolean}\$`;
  exports.PatternNumberExact = `^${exports.PatternNumber}\$`;
  exports.PatternStringExact = `^${exports.PatternString}\$`;
  var TypeRegistry;
  (function(TypeRegistry2) {
    const map = new Map;
    function Entries() {
      return new Map(map);
    }
    TypeRegistry2.Entries = Entries;
    function Clear() {
      return map.clear();
    }
    TypeRegistry2.Clear = Clear;
    function Delete(kind) {
      return map.delete(kind);
    }
    TypeRegistry2.Delete = Delete;
    function Has(kind) {
      return map.has(kind);
    }
    TypeRegistry2.Has = Has;
    function Set2(kind, func) {
      map.set(kind, func);
    }
    TypeRegistry2.Set = Set2;
    function Get(kind) {
      return map.get(kind);
    }
    TypeRegistry2.Get = Get;
  })(TypeRegistry || (exports.TypeRegistry = TypeRegistry = {}));

  class TypeBoxError extends Error {
    constructor(message) {
      super(message);
    }
  }
  exports.TypeBoxError = TypeBoxError;
  var FormatRegistry;
  (function(FormatRegistry2) {
    const map = new Map;
    function Entries() {
      return new Map(map);
    }
    FormatRegistry2.Entries = Entries;
    function Clear() {
      return map.clear();
    }
    FormatRegistry2.Clear = Clear;
    function Delete(format) {
      return map.delete(format);
    }
    FormatRegistry2.Delete = Delete;
    function Has(format) {
      return map.has(format);
    }
    FormatRegistry2.Has = Has;
    function Set2(format, func) {
      map.set(format, func);
    }
    FormatRegistry2.Set = Set2;
    function Get(format) {
      return map.get(format);
    }
    FormatRegistry2.Get = Get;
  })(FormatRegistry || (exports.FormatRegistry = FormatRegistry = {}));
  var ValueGuard;
  (function(ValueGuard2) {
    function IsArray(value) {
      return Array.isArray(value);
    }
    ValueGuard2.IsArray = IsArray;
    function IsBigInt(value) {
      return typeof value === "bigint";
    }
    ValueGuard2.IsBigInt = IsBigInt;
    function IsBoolean(value) {
      return typeof value === "boolean";
    }
    ValueGuard2.IsBoolean = IsBoolean;
    function IsDate(value) {
      return value instanceof globalThis.Date;
    }
    ValueGuard2.IsDate = IsDate;
    function IsNull(value) {
      return value === null;
    }
    ValueGuard2.IsNull = IsNull;
    function IsNumber(value) {
      return typeof value === "number";
    }
    ValueGuard2.IsNumber = IsNumber;
    function IsObject(value) {
      return typeof value === "object" && value !== null;
    }
    ValueGuard2.IsObject = IsObject;
    function IsString(value) {
      return typeof value === "string";
    }
    ValueGuard2.IsString = IsString;
    function IsUint8Array(value) {
      return value instanceof globalThis.Uint8Array;
    }
    ValueGuard2.IsUint8Array = IsUint8Array;
    function IsUndefined(value) {
      return value === undefined;
    }
    ValueGuard2.IsUndefined = IsUndefined;
  })(ValueGuard || (exports.ValueGuard = ValueGuard = {}));

  class TypeGuardUnknownTypeError extends TypeBoxError {
  }
  exports.TypeGuardUnknownTypeError = TypeGuardUnknownTypeError;
  var TypeGuard;
  (function(TypeGuard2) {
    function IsPattern(value) {
      try {
        new RegExp(value);
        return true;
      } catch {
        return false;
      }
    }
    function IsControlCharacterFree(value) {
      if (!ValueGuard.IsString(value))
        return false;
      for (let i = 0;i < value.length; i++) {
        const code = value.charCodeAt(i);
        if (code >= 7 && code <= 13 || code === 27 || code === 127) {
          return false;
        }
      }
      return true;
    }
    function IsAdditionalProperties(value) {
      return IsOptionalBoolean(value) || TSchema(value);
    }
    function IsOptionalBigInt(value) {
      return ValueGuard.IsUndefined(value) || ValueGuard.IsBigInt(value);
    }
    function IsOptionalNumber(value) {
      return ValueGuard.IsUndefined(value) || ValueGuard.IsNumber(value);
    }
    function IsOptionalBoolean(value) {
      return ValueGuard.IsUndefined(value) || ValueGuard.IsBoolean(value);
    }
    function IsOptionalString(value) {
      return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value);
    }
    function IsOptionalPattern(value) {
      return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value) && IsControlCharacterFree(value) && IsPattern(value);
    }
    function IsOptionalFormat(value) {
      return ValueGuard.IsUndefined(value) || ValueGuard.IsString(value) && IsControlCharacterFree(value);
    }
    function IsOptionalSchema(value) {
      return ValueGuard.IsUndefined(value) || TSchema(value);
    }
    function TAny(schema) {
      return TKindOf(schema, "Any") && IsOptionalString(schema.$id);
    }
    TypeGuard2.TAny = TAny;
    function TArray(schema) {
      return TKindOf(schema, "Array") && schema.type === "array" && IsOptionalString(schema.$id) && TSchema(schema.items) && IsOptionalNumber(schema.minItems) && IsOptionalNumber(schema.maxItems) && IsOptionalBoolean(schema.uniqueItems) && IsOptionalSchema(schema.contains) && IsOptionalNumber(schema.minContains) && IsOptionalNumber(schema.maxContains);
    }
    TypeGuard2.TArray = TArray;
    function TAsyncIterator(schema) {
      return TKindOf(schema, "AsyncIterator") && schema.type === "AsyncIterator" && IsOptionalString(schema.$id) && TSchema(schema.items);
    }
    TypeGuard2.TAsyncIterator = TAsyncIterator;
    function TBigInt(schema) {
      return TKindOf(schema, "BigInt") && schema.type === "bigint" && IsOptionalString(schema.$id) && IsOptionalBigInt(schema.exclusiveMaximum) && IsOptionalBigInt(schema.exclusiveMinimum) && IsOptionalBigInt(schema.maximum) && IsOptionalBigInt(schema.minimum) && IsOptionalBigInt(schema.multipleOf);
    }
    TypeGuard2.TBigInt = TBigInt;
    function TBoolean(schema) {
      return TKindOf(schema, "Boolean") && schema.type === "boolean" && IsOptionalString(schema.$id);
    }
    TypeGuard2.TBoolean = TBoolean;
    function TConstructor(schema) {
      return TKindOf(schema, "Constructor") && schema.type === "Constructor" && IsOptionalString(schema.$id) && ValueGuard.IsArray(schema.parameters) && schema.parameters.every((schema2) => TSchema(schema2)) && TSchema(schema.returns);
    }
    TypeGuard2.TConstructor = TConstructor;
    function TDate(schema) {
      return TKindOf(schema, "Date") && schema.type === "Date" && IsOptionalString(schema.$id) && IsOptionalNumber(schema.exclusiveMaximumTimestamp) && IsOptionalNumber(schema.exclusiveMinimumTimestamp) && IsOptionalNumber(schema.maximumTimestamp) && IsOptionalNumber(schema.minimumTimestamp) && IsOptionalNumber(schema.multipleOfTimestamp);
    }
    TypeGuard2.TDate = TDate;
    function TFunction(schema) {
      return TKindOf(schema, "Function") && schema.type === "Function" && IsOptionalString(schema.$id) && ValueGuard.IsArray(schema.parameters) && schema.parameters.every((schema2) => TSchema(schema2)) && TSchema(schema.returns);
    }
    TypeGuard2.TFunction = TFunction;
    function TInteger(schema) {
      return TKindOf(schema, "Integer") && schema.type === "integer" && IsOptionalString(schema.$id) && IsOptionalNumber(schema.exclusiveMaximum) && IsOptionalNumber(schema.exclusiveMinimum) && IsOptionalNumber(schema.maximum) && IsOptionalNumber(schema.minimum) && IsOptionalNumber(schema.multipleOf);
    }
    TypeGuard2.TInteger = TInteger;
    function TIntersect(schema) {
      return TKindOf(schema, "Intersect") && (ValueGuard.IsString(schema.type) && schema.type !== "object" ? false : true) && ValueGuard.IsArray(schema.allOf) && schema.allOf.every((schema2) => TSchema(schema2) && !TTransform(schema2)) && IsOptionalString(schema.type) && (IsOptionalBoolean(schema.unevaluatedProperties) || IsOptionalSchema(schema.unevaluatedProperties)) && IsOptionalString(schema.$id);
    }
    TypeGuard2.TIntersect = TIntersect;
    function TIterator(schema) {
      return TKindOf(schema, "Iterator") && schema.type === "Iterator" && IsOptionalString(schema.$id) && TSchema(schema.items);
    }
    TypeGuard2.TIterator = TIterator;
    function TKindOf(schema, kind) {
      return TKind(schema) && schema[exports.Kind] === kind;
    }
    TypeGuard2.TKindOf = TKindOf;
    function TKind(schema) {
      return ValueGuard.IsObject(schema) && (exports.Kind in schema) && ValueGuard.IsString(schema[exports.Kind]);
    }
    TypeGuard2.TKind = TKind;
    function TLiteralString(schema) {
      return TLiteral(schema) && ValueGuard.IsString(schema.const);
    }
    TypeGuard2.TLiteralString = TLiteralString;
    function TLiteralNumber(schema) {
      return TLiteral(schema) && ValueGuard.IsNumber(schema.const);
    }
    TypeGuard2.TLiteralNumber = TLiteralNumber;
    function TLiteralBoolean(schema) {
      return TLiteral(schema) && ValueGuard.IsBoolean(schema.const);
    }
    TypeGuard2.TLiteralBoolean = TLiteralBoolean;
    function TLiteral(schema) {
      return TKindOf(schema, "Literal") && IsOptionalString(schema.$id) && (ValueGuard.IsBoolean(schema.const) || ValueGuard.IsNumber(schema.const) || ValueGuard.IsString(schema.const));
    }
    TypeGuard2.TLiteral = TLiteral;
    function TNever(schema) {
      return TKindOf(schema, "Never") && ValueGuard.IsObject(schema.not) && Object.getOwnPropertyNames(schema.not).length === 0;
    }
    TypeGuard2.TNever = TNever;
    function TNot(schema) {
      return TKindOf(schema, "Not") && TSchema(schema.not);
    }
    TypeGuard2.TNot = TNot;
    function TNull(schema) {
      return TKindOf(schema, "Null") && schema.type === "null" && IsOptionalString(schema.$id);
    }
    TypeGuard2.TNull = TNull;
    function TNumber(schema) {
      return TKindOf(schema, "Number") && schema.type === "number" && IsOptionalString(schema.$id) && IsOptionalNumber(schema.exclusiveMaximum) && IsOptionalNumber(schema.exclusiveMinimum) && IsOptionalNumber(schema.maximum) && IsOptionalNumber(schema.minimum) && IsOptionalNumber(schema.multipleOf);
    }
    TypeGuard2.TNumber = TNumber;
    function TObject(schema) {
      return TKindOf(schema, "Object") && schema.type === "object" && IsOptionalString(schema.$id) && ValueGuard.IsObject(schema.properties) && IsAdditionalProperties(schema.additionalProperties) && IsOptionalNumber(schema.minProperties) && IsOptionalNumber(schema.maxProperties) && Object.entries(schema.properties).every(([key, schema2]) => IsControlCharacterFree(key) && TSchema(schema2));
    }
    TypeGuard2.TObject = TObject;
    function TPromise(schema) {
      return TKindOf(schema, "Promise") && schema.type === "Promise" && IsOptionalString(schema.$id) && TSchema(schema.item);
    }
    TypeGuard2.TPromise = TPromise;
    function TRecord(schema) {
      return TKindOf(schema, "Record") && schema.type === "object" && IsOptionalString(schema.$id) && IsAdditionalProperties(schema.additionalProperties) && ValueGuard.IsObject(schema.patternProperties) && ((schema2) => {
        const keys = Object.getOwnPropertyNames(schema2.patternProperties);
        return keys.length === 1 && IsPattern(keys[0]) && ValueGuard.IsObject(schema2.patternProperties) && TSchema(schema2.patternProperties[keys[0]]);
      })(schema);
    }
    TypeGuard2.TRecord = TRecord;
    function TRecursive(schema) {
      return ValueGuard.IsObject(schema) && (exports.Hint in schema) && schema[exports.Hint] === "Recursive";
    }
    TypeGuard2.TRecursive = TRecursive;
    function TRef(schema) {
      return TKindOf(schema, "Ref") && IsOptionalString(schema.$id) && ValueGuard.IsString(schema.$ref);
    }
    TypeGuard2.TRef = TRef;
    function TString(schema) {
      return TKindOf(schema, "String") && schema.type === "string" && IsOptionalString(schema.$id) && IsOptionalNumber(schema.minLength) && IsOptionalNumber(schema.maxLength) && IsOptionalPattern(schema.pattern) && IsOptionalFormat(schema.format);
    }
    TypeGuard2.TString = TString;
    function TSymbol(schema) {
      return TKindOf(schema, "Symbol") && schema.type === "symbol" && IsOptionalString(schema.$id);
    }
    TypeGuard2.TSymbol = TSymbol;
    function TTemplateLiteral(schema) {
      return TKindOf(schema, "TemplateLiteral") && schema.type === "string" && ValueGuard.IsString(schema.pattern) && schema.pattern[0] === "^" && schema.pattern[schema.pattern.length - 1] === "$";
    }
    TypeGuard2.TTemplateLiteral = TTemplateLiteral;
    function TThis(schema) {
      return TKindOf(schema, "This") && IsOptionalString(schema.$id) && ValueGuard.IsString(schema.$ref);
    }
    TypeGuard2.TThis = TThis;
    function TTransform(schema) {
      return ValueGuard.IsObject(schema) && (exports.Transform in schema);
    }
    TypeGuard2.TTransform = TTransform;
    function TTuple(schema) {
      return TKindOf(schema, "Tuple") && schema.type === "array" && IsOptionalString(schema.$id) && ValueGuard.IsNumber(schema.minItems) && ValueGuard.IsNumber(schema.maxItems) && schema.minItems === schema.maxItems && (ValueGuard.IsUndefined(schema.items) && ValueGuard.IsUndefined(schema.additionalItems) && schema.minItems === 0 || ValueGuard.IsArray(schema.items) && schema.items.every((schema2) => TSchema(schema2)));
    }
    TypeGuard2.TTuple = TTuple;
    function TUndefined(schema) {
      return TKindOf(schema, "Undefined") && schema.type === "undefined" && IsOptionalString(schema.$id);
    }
    TypeGuard2.TUndefined = TUndefined;
    function TUnionLiteral(schema) {
      return TUnion(schema) && schema.anyOf.every((schema2) => TLiteralString(schema2) || TLiteralNumber(schema2));
    }
    TypeGuard2.TUnionLiteral = TUnionLiteral;
    function TUnion(schema) {
      return TKindOf(schema, "Union") && IsOptionalString(schema.$id) && ValueGuard.IsObject(schema) && ValueGuard.IsArray(schema.anyOf) && schema.anyOf.every((schema2) => TSchema(schema2));
    }
    TypeGuard2.TUnion = TUnion;
    function TUint8Array(schema) {
      return TKindOf(schema, "Uint8Array") && schema.type === "Uint8Array" && IsOptionalString(schema.$id) && IsOptionalNumber(schema.minByteLength) && IsOptionalNumber(schema.maxByteLength);
    }
    TypeGuard2.TUint8Array = TUint8Array;
    function TUnknown(schema) {
      return TKindOf(schema, "Unknown") && IsOptionalString(schema.$id);
    }
    TypeGuard2.TUnknown = TUnknown;
    function TUnsafe(schema) {
      return TKindOf(schema, "Unsafe");
    }
    TypeGuard2.TUnsafe = TUnsafe;
    function TVoid(schema) {
      return TKindOf(schema, "Void") && schema.type === "void" && IsOptionalString(schema.$id);
    }
    TypeGuard2.TVoid = TVoid;
    function TReadonly(schema) {
      return ValueGuard.IsObject(schema) && schema[exports.Readonly] === "Readonly";
    }
    TypeGuard2.TReadonly = TReadonly;
    function TOptional(schema) {
      return ValueGuard.IsObject(schema) && schema[exports.Optional] === "Optional";
    }
    TypeGuard2.TOptional = TOptional;
    function TSchema(schema) {
      return ValueGuard.IsObject(schema) && (TAny(schema) || TArray(schema) || TBoolean(schema) || TBigInt(schema) || TAsyncIterator(schema) || TConstructor(schema) || TDate(schema) || TFunction(schema) || TInteger(schema) || TIntersect(schema) || TIterator(schema) || TLiteral(schema) || TNever(schema) || TNot(schema) || TNull(schema) || TNumber(schema) || TObject(schema) || TPromise(schema) || TRecord(schema) || TRef(schema) || TString(schema) || TSymbol(schema) || TTemplateLiteral(schema) || TThis(schema) || TTuple(schema) || TUndefined(schema) || TUnion(schema) || TUint8Array(schema) || TUnknown(schema) || TUnsafe(schema) || TVoid(schema) || TKind(schema) && TypeRegistry.Has(schema[exports.Kind]));
    }
    TypeGuard2.TSchema = TSchema;
  })(TypeGuard || (exports.TypeGuard = TypeGuard = {}));
  var ExtendsUndefined;
  (function(ExtendsUndefined2) {
    function Check(schema) {
      return schema[exports.Kind] === "Intersect" ? schema.allOf.every((schema2) => Check(schema2)) : schema[exports.Kind] === "Union" ? schema.anyOf.some((schema2) => Check(schema2)) : schema[exports.Kind] === "Undefined" ? true : schema[exports.Kind] === "Not" ? !Check(schema.not) : false;
    }
    ExtendsUndefined2.Check = Check;
  })(ExtendsUndefined || (exports.ExtendsUndefined = ExtendsUndefined = {}));

  class TypeExtendsError extends TypeBoxError {
  }
  exports.TypeExtendsError = TypeExtendsError;
  var TypeExtendsResult;
  (function(TypeExtendsResult2) {
    TypeExtendsResult2[TypeExtendsResult2["Union"] = 0] = "Union";
    TypeExtendsResult2[TypeExtendsResult2["True"] = 1] = "True";
    TypeExtendsResult2[TypeExtendsResult2["False"] = 2] = "False";
  })(TypeExtendsResult || (exports.TypeExtendsResult = TypeExtendsResult = {}));
  var TypeExtends;
  (function(TypeExtends2) {
    function IntoBooleanResult(result) {
      return result === TypeExtendsResult.False ? result : TypeExtendsResult.True;
    }
    function Throw(message) {
      throw new TypeExtendsError(message);
    }
    function IsStructuralRight(right) {
      return TypeGuard.TNever(right) || TypeGuard.TIntersect(right) || TypeGuard.TUnion(right) || TypeGuard.TUnknown(right) || TypeGuard.TAny(right);
    }
    function StructuralRight(left, right) {
      return TypeGuard.TNever(right) ? TNeverRight(left, right) : TypeGuard.TIntersect(right) ? TIntersectRight(left, right) : TypeGuard.TUnion(right) ? TUnionRight(left, right) : TypeGuard.TUnknown(right) ? TUnknownRight(left, right) : TypeGuard.TAny(right) ? TAnyRight(left, right) : Throw("StructuralRight");
    }
    function TAnyRight(left, right) {
      return TypeExtendsResult.True;
    }
    function TAny(left, right) {
      return TypeGuard.TIntersect(right) ? TIntersectRight(left, right) : TypeGuard.TUnion(right) && right.anyOf.some((schema) => TypeGuard.TAny(schema) || TypeGuard.TUnknown(schema)) ? TypeExtendsResult.True : TypeGuard.TUnion(right) ? TypeExtendsResult.Union : TypeGuard.TUnknown(right) ? TypeExtendsResult.True : TypeGuard.TAny(right) ? TypeExtendsResult.True : TypeExtendsResult.Union;
    }
    function TArrayRight(left, right) {
      return TypeGuard.TUnknown(left) ? TypeExtendsResult.False : TypeGuard.TAny(left) ? TypeExtendsResult.Union : TypeGuard.TNever(left) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TArray(left, right) {
      return TypeGuard.TObject(right) && IsObjectArrayLike(right) ? TypeExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : !TypeGuard.TArray(right) ? TypeExtendsResult.False : IntoBooleanResult(Visit(left.items, right.items));
    }
    function TAsyncIterator(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : !TypeGuard.TAsyncIterator(right) ? TypeExtendsResult.False : IntoBooleanResult(Visit(left.items, right.items));
    }
    function TBigInt(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TBigInt(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TBooleanRight(left, right) {
      return TypeGuard.TLiteral(left) && ValueGuard.IsBoolean(left.const) ? TypeExtendsResult.True : TypeGuard.TBoolean(left) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TBoolean(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TBoolean(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TConstructor(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : !TypeGuard.TConstructor(right) ? TypeExtendsResult.False : left.parameters.length > right.parameters.length ? TypeExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === TypeExtendsResult.True) ? TypeExtendsResult.False : IntoBooleanResult(Visit(left.returns, right.returns));
    }
    function TDate(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TDate(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TFunction(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : !TypeGuard.TFunction(right) ? TypeExtendsResult.False : left.parameters.length > right.parameters.length ? TypeExtendsResult.False : !left.parameters.every((schema, index) => IntoBooleanResult(Visit(right.parameters[index], schema)) === TypeExtendsResult.True) ? TypeExtendsResult.False : IntoBooleanResult(Visit(left.returns, right.returns));
    }
    function TIntegerRight(left, right) {
      return TypeGuard.TLiteral(left) && ValueGuard.IsNumber(left.const) ? TypeExtendsResult.True : TypeGuard.TNumber(left) || TypeGuard.TInteger(left) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TInteger(left, right) {
      return TypeGuard.TInteger(right) || TypeGuard.TNumber(right) ? TypeExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeExtendsResult.False;
    }
    function TIntersectRight(left, right) {
      return right.allOf.every((schema) => Visit(left, schema) === TypeExtendsResult.True) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TIntersect(left, right) {
      return left.allOf.some((schema) => Visit(schema, right) === TypeExtendsResult.True) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TIterator(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : !TypeGuard.TIterator(right) ? TypeExtendsResult.False : IntoBooleanResult(Visit(left.items, right.items));
    }
    function TLiteral(left, right) {
      return TypeGuard.TLiteral(right) && right.const === left.const ? TypeExtendsResult.True : IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TString(right) ? TStringRight(left, right) : TypeGuard.TNumber(right) ? TNumberRight(left, right) : TypeGuard.TInteger(right) ? TIntegerRight(left, right) : TypeGuard.TBoolean(right) ? TBooleanRight(left, right) : TypeExtendsResult.False;
    }
    function TNeverRight(left, right) {
      return TypeExtendsResult.False;
    }
    function TNever(left, right) {
      return TypeExtendsResult.True;
    }
    function UnwrapTNot(schema) {
      let [current, depth] = [schema, 0];
      while (true) {
        if (!TypeGuard.TNot(current))
          break;
        current = current.not;
        depth += 1;
      }
      return depth % 2 === 0 ? current : exports.Type.Unknown();
    }
    function TNot(left, right) {
      return TypeGuard.TNot(left) ? Visit(UnwrapTNot(left), right) : TypeGuard.TNot(right) ? Visit(left, UnwrapTNot(right)) : Throw("Invalid fallthrough for Not");
    }
    function TNull(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TNull(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TNumberRight(left, right) {
      return TypeGuard.TLiteralNumber(left) ? TypeExtendsResult.True : TypeGuard.TNumber(left) || TypeGuard.TInteger(left) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TNumber(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TInteger(right) || TypeGuard.TNumber(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function IsObjectPropertyCount(schema, count) {
      return Object.getOwnPropertyNames(schema.properties).length === count;
    }
    function IsObjectStringLike(schema) {
      return IsObjectArrayLike(schema);
    }
    function IsObjectSymbolLike(schema) {
      return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && ("description" in schema.properties) && TypeGuard.TUnion(schema.properties.description) && schema.properties.description.anyOf.length === 2 && (TypeGuard.TString(schema.properties.description.anyOf[0]) && TypeGuard.TUndefined(schema.properties.description.anyOf[1]) || TypeGuard.TString(schema.properties.description.anyOf[1]) && TypeGuard.TUndefined(schema.properties.description.anyOf[0]));
    }
    function IsObjectNumberLike(schema) {
      return IsObjectPropertyCount(schema, 0);
    }
    function IsObjectBooleanLike(schema) {
      return IsObjectPropertyCount(schema, 0);
    }
    function IsObjectBigIntLike(schema) {
      return IsObjectPropertyCount(schema, 0);
    }
    function IsObjectDateLike(schema) {
      return IsObjectPropertyCount(schema, 0);
    }
    function IsObjectUint8ArrayLike(schema) {
      return IsObjectArrayLike(schema);
    }
    function IsObjectFunctionLike(schema) {
      const length = exports.Type.Number();
      return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && ("length" in schema.properties) && IntoBooleanResult(Visit(schema.properties["length"], length)) === TypeExtendsResult.True;
    }
    function IsObjectConstructorLike(schema) {
      return IsObjectPropertyCount(schema, 0);
    }
    function IsObjectArrayLike(schema) {
      const length = exports.Type.Number();
      return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && ("length" in schema.properties) && IntoBooleanResult(Visit(schema.properties["length"], length)) === TypeExtendsResult.True;
    }
    function IsObjectPromiseLike(schema) {
      const then = exports.Type.Function([exports.Type.Any()], exports.Type.Any());
      return IsObjectPropertyCount(schema, 0) || IsObjectPropertyCount(schema, 1) && ("then" in schema.properties) && IntoBooleanResult(Visit(schema.properties["then"], then)) === TypeExtendsResult.True;
    }
    function Property(left, right) {
      return Visit(left, right) === TypeExtendsResult.False ? TypeExtendsResult.False : TypeGuard.TOptional(left) && !TypeGuard.TOptional(right) ? TypeExtendsResult.False : TypeExtendsResult.True;
    }
    function TObjectRight(left, right) {
      return TypeGuard.TUnknown(left) ? TypeExtendsResult.False : TypeGuard.TAny(left) ? TypeExtendsResult.Union : TypeGuard.TNever(left) || TypeGuard.TLiteralString(left) && IsObjectStringLike(right) || TypeGuard.TLiteralNumber(left) && IsObjectNumberLike(right) || TypeGuard.TLiteralBoolean(left) && IsObjectBooleanLike(right) || TypeGuard.TSymbol(left) && IsObjectSymbolLike(right) || TypeGuard.TBigInt(left) && IsObjectBigIntLike(right) || TypeGuard.TString(left) && IsObjectStringLike(right) || TypeGuard.TSymbol(left) && IsObjectSymbolLike(right) || TypeGuard.TNumber(left) && IsObjectNumberLike(right) || TypeGuard.TInteger(left) && IsObjectNumberLike(right) || TypeGuard.TBoolean(left) && IsObjectBooleanLike(right) || TypeGuard.TUint8Array(left) && IsObjectUint8ArrayLike(right) || TypeGuard.TDate(left) && IsObjectDateLike(right) || TypeGuard.TConstructor(left) && IsObjectConstructorLike(right) || TypeGuard.TFunction(left) && IsObjectFunctionLike(right) ? TypeExtendsResult.True : TypeGuard.TRecord(left) && TypeGuard.TString(RecordKey(left)) ? (() => {
        return right[exports.Hint] === "Record" ? TypeExtendsResult.True : TypeExtendsResult.False;
      })() : TypeGuard.TRecord(left) && TypeGuard.TNumber(RecordKey(left)) ? (() => {
        return IsObjectPropertyCount(right, 0) ? TypeExtendsResult.True : TypeExtendsResult.False;
      })() : TypeExtendsResult.False;
    }
    function TObject(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : !TypeGuard.TObject(right) ? TypeExtendsResult.False : (() => {
        for (const key of Object.getOwnPropertyNames(right.properties)) {
          if (!(key in left.properties) && !TypeGuard.TOptional(right.properties[key])) {
            return TypeExtendsResult.False;
          }
          if (TypeGuard.TOptional(right.properties[key])) {
            return TypeExtendsResult.True;
          }
          if (Property(left.properties[key], right.properties[key]) === TypeExtendsResult.False) {
            return TypeExtendsResult.False;
          }
        }
        return TypeExtendsResult.True;
      })();
    }
    function TPromise(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) && IsObjectPromiseLike(right) ? TypeExtendsResult.True : !TypeGuard.TPromise(right) ? TypeExtendsResult.False : IntoBooleanResult(Visit(left.item, right.item));
    }
    function RecordKey(schema) {
      return exports.PatternNumberExact in schema.patternProperties ? exports.Type.Number() : (exports.PatternStringExact in schema.patternProperties) ? exports.Type.String() : Throw("Unknown record key pattern");
    }
    function RecordValue(schema) {
      return exports.PatternNumberExact in schema.patternProperties ? schema.patternProperties[exports.PatternNumberExact] : (exports.PatternStringExact in schema.patternProperties) ? schema.patternProperties[exports.PatternStringExact] : Throw("Unable to get record value schema");
    }
    function TRecordRight(left, right) {
      const [Key, Value] = [RecordKey(right), RecordValue(right)];
      return TypeGuard.TLiteralString(left) && TypeGuard.TNumber(Key) && IntoBooleanResult(Visit(left, Value)) === TypeExtendsResult.True ? TypeExtendsResult.True : TypeGuard.TUint8Array(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) : TypeGuard.TString(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) : TypeGuard.TArray(left) && TypeGuard.TNumber(Key) ? Visit(left, Value) : TypeGuard.TObject(left) ? (() => {
        for (const key of Object.getOwnPropertyNames(left.properties)) {
          if (Property(Value, left.properties[key]) === TypeExtendsResult.False) {
            return TypeExtendsResult.False;
          }
        }
        return TypeExtendsResult.True;
      })() : TypeExtendsResult.False;
    }
    function TRecord(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : !TypeGuard.TRecord(right) ? TypeExtendsResult.False : Visit(RecordValue(left), RecordValue(right));
    }
    function TStringRight(left, right) {
      return TypeGuard.TLiteral(left) && ValueGuard.IsString(left.const) ? TypeExtendsResult.True : TypeGuard.TString(left) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TString(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TString(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TSymbol(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TSymbol(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TTemplateLiteral(left, right) {
      return TypeGuard.TTemplateLiteral(left) ? Visit(TemplateLiteralResolver.Resolve(left), right) : TypeGuard.TTemplateLiteral(right) ? Visit(left, TemplateLiteralResolver.Resolve(right)) : Throw("Invalid fallthrough for TemplateLiteral");
    }
    function IsArrayOfTuple(left, right) {
      return TypeGuard.TArray(right) && left.items !== undefined && left.items.every((schema) => Visit(schema, right.items) === TypeExtendsResult.True);
    }
    function TTupleRight(left, right) {
      return TypeGuard.TNever(left) ? TypeExtendsResult.True : TypeGuard.TUnknown(left) ? TypeExtendsResult.False : TypeGuard.TAny(left) ? TypeExtendsResult.Union : TypeExtendsResult.False;
    }
    function TTuple(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) && IsObjectArrayLike(right) ? TypeExtendsResult.True : TypeGuard.TArray(right) && IsArrayOfTuple(left, right) ? TypeExtendsResult.True : !TypeGuard.TTuple(right) ? TypeExtendsResult.False : ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items) || !ValueGuard.IsUndefined(left.items) && ValueGuard.IsUndefined(right.items) ? TypeExtendsResult.False : ValueGuard.IsUndefined(left.items) && !ValueGuard.IsUndefined(right.items) ? TypeExtendsResult.True : left.items.every((schema, index) => Visit(schema, right.items[index]) === TypeExtendsResult.True) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TUint8Array(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TUint8Array(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TUndefined(left, right) {
      return IsStructuralRight(right) ? StructuralRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TRecord(right) ? TRecordRight(left, right) : TypeGuard.TVoid(right) ? VoidRight(left, right) : TypeGuard.TUndefined(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TUnionRight(left, right) {
      return right.anyOf.some((schema) => Visit(left, schema) === TypeExtendsResult.True) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TUnion(left, right) {
      return left.anyOf.every((schema) => Visit(schema, right) === TypeExtendsResult.True) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TUnknownRight(left, right) {
      return TypeExtendsResult.True;
    }
    function TUnknown(left, right) {
      return TypeGuard.TNever(right) ? TNeverRight(left, right) : TypeGuard.TIntersect(right) ? TIntersectRight(left, right) : TypeGuard.TUnion(right) ? TUnionRight(left, right) : TypeGuard.TAny(right) ? TAnyRight(left, right) : TypeGuard.TString(right) ? TStringRight(left, right) : TypeGuard.TNumber(right) ? TNumberRight(left, right) : TypeGuard.TInteger(right) ? TIntegerRight(left, right) : TypeGuard.TBoolean(right) ? TBooleanRight(left, right) : TypeGuard.TArray(right) ? TArrayRight(left, right) : TypeGuard.TTuple(right) ? TTupleRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TUnknown(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function VoidRight(left, right) {
      return TypeGuard.TUndefined(left) ? TypeExtendsResult.True : TypeGuard.TUndefined(left) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function TVoid(left, right) {
      return TypeGuard.TIntersect(right) ? TIntersectRight(left, right) : TypeGuard.TUnion(right) ? TUnionRight(left, right) : TypeGuard.TUnknown(right) ? TUnknownRight(left, right) : TypeGuard.TAny(right) ? TAnyRight(left, right) : TypeGuard.TObject(right) ? TObjectRight(left, right) : TypeGuard.TVoid(right) ? TypeExtendsResult.True : TypeExtendsResult.False;
    }
    function Visit(left, right) {
      return TypeGuard.TTemplateLiteral(left) || TypeGuard.TTemplateLiteral(right) ? TTemplateLiteral(left, right) : TypeGuard.TNot(left) || TypeGuard.TNot(right) ? TNot(left, right) : TypeGuard.TAny(left) ? TAny(left, right) : TypeGuard.TArray(left) ? TArray(left, right) : TypeGuard.TBigInt(left) ? TBigInt(left, right) : TypeGuard.TBoolean(left) ? TBoolean(left, right) : TypeGuard.TAsyncIterator(left) ? TAsyncIterator(left, right) : TypeGuard.TConstructor(left) ? TConstructor(left, right) : TypeGuard.TDate(left) ? TDate(left, right) : TypeGuard.TFunction(left) ? TFunction(left, right) : TypeGuard.TInteger(left) ? TInteger(left, right) : TypeGuard.TIntersect(left) ? TIntersect(left, right) : TypeGuard.TIterator(left) ? TIterator(left, right) : TypeGuard.TLiteral(left) ? TLiteral(left, right) : TypeGuard.TNever(left) ? TNever(left, right) : TypeGuard.TNull(left) ? TNull(left, right) : TypeGuard.TNumber(left) ? TNumber(left, right) : TypeGuard.TObject(left) ? TObject(left, right) : TypeGuard.TRecord(left) ? TRecord(left, right) : TypeGuard.TString(left) ? TString(left, right) : TypeGuard.TSymbol(left) ? TSymbol(left, right) : TypeGuard.TTuple(left) ? TTuple(left, right) : TypeGuard.TPromise(left) ? TPromise(left, right) : TypeGuard.TUint8Array(left) ? TUint8Array(left, right) : TypeGuard.TUndefined(left) ? TUndefined(left, right) : TypeGuard.TUnion(left) ? TUnion(left, right) : TypeGuard.TUnknown(left) ? TUnknown(left, right) : TypeGuard.TVoid(left) ? TVoid(left, right) : Throw(`Unknown left type operand '${left[exports.Kind]}'`);
    }
    function Extends(left, right) {
      return Visit(left, right);
    }
    TypeExtends2.Extends = Extends;
  })(TypeExtends || (exports.TypeExtends = TypeExtends = {}));
  var TypeClone;
  (function(TypeClone2) {
    function ArrayType(value) {
      return value.map((value2) => Visit(value2));
    }
    function DateType(value) {
      return new Date(value.getTime());
    }
    function Uint8ArrayType(value) {
      return new Uint8Array(value);
    }
    function ObjectType(value) {
      const clonedProperties = Object.getOwnPropertyNames(value).reduce((acc, key) => ({ ...acc, [key]: Visit(value[key]) }), {});
      const clonedSymbols = Object.getOwnPropertySymbols(value).reduce((acc, key) => ({ ...acc, [key]: Visit(value[key]) }), {});
      return { ...clonedProperties, ...clonedSymbols };
    }
    function Visit(value) {
      return ValueGuard.IsArray(value) ? ArrayType(value) : ValueGuard.IsDate(value) ? DateType(value) : ValueGuard.IsUint8Array(value) ? Uint8ArrayType(value) : ValueGuard.IsObject(value) ? ObjectType(value) : value;
    }
    function Rest(schemas) {
      return schemas.map((schema) => Type(schema));
    }
    TypeClone2.Rest = Rest;
    function Type(schema, options = {}) {
      return { ...Visit(schema), ...options };
    }
    TypeClone2.Type = Type;
  })(TypeClone || (exports.TypeClone = TypeClone = {}));
  var IndexedAccessor;
  (function(IndexedAccessor2) {
    function OptionalUnwrap(schema) {
      return schema.map((schema2) => {
        const { [exports.Optional]: _, ...clone } = TypeClone.Type(schema2);
        return clone;
      });
    }
    function IsIntersectOptional(schema) {
      return schema.every((schema2) => TypeGuard.TOptional(schema2));
    }
    function IsUnionOptional(schema) {
      return schema.some((schema2) => TypeGuard.TOptional(schema2));
    }
    function ResolveIntersect(schema) {
      return IsIntersectOptional(schema.allOf) ? exports.Type.Optional(exports.Type.Intersect(OptionalUnwrap(schema.allOf))) : schema;
    }
    function ResolveUnion(schema) {
      return IsUnionOptional(schema.anyOf) ? exports.Type.Optional(exports.Type.Union(OptionalUnwrap(schema.anyOf))) : schema;
    }
    function ResolveOptional(schema) {
      return schema[exports.Kind] === "Intersect" ? ResolveIntersect(schema) : schema[exports.Kind] === "Union" ? ResolveUnion(schema) : schema;
    }
    function TIntersect(schema, key) {
      const resolved = schema.allOf.reduce((acc, schema2) => {
        const indexed = Visit(schema2, key);
        return indexed[exports.Kind] === "Never" ? acc : [...acc, indexed];
      }, []);
      return ResolveOptional(exports.Type.Intersect(resolved));
    }
    function TUnion(schema, key) {
      const resolved = schema.anyOf.map((schema2) => Visit(schema2, key));
      return ResolveOptional(exports.Type.Union(resolved));
    }
    function TObject(schema, key) {
      const property = schema.properties[key];
      return ValueGuard.IsUndefined(property) ? exports.Type.Never() : exports.Type.Union([property]);
    }
    function TTuple(schema, key) {
      const items = schema.items;
      if (ValueGuard.IsUndefined(items))
        return exports.Type.Never();
      const element = items[key];
      if (ValueGuard.IsUndefined(element))
        return exports.Type.Never();
      return element;
    }
    function Visit(schema, key) {
      return schema[exports.Kind] === "Intersect" ? TIntersect(schema, key) : schema[exports.Kind] === "Union" ? TUnion(schema, key) : schema[exports.Kind] === "Object" ? TObject(schema, key) : schema[exports.Kind] === "Tuple" ? TTuple(schema, key) : exports.Type.Never();
    }
    function Resolve(schema, keys, options = {}) {
      const resolved = keys.map((key) => Visit(schema, key.toString()));
      return ResolveOptional(exports.Type.Union(resolved, options));
    }
    IndexedAccessor2.Resolve = Resolve;
  })(IndexedAccessor || (exports.IndexedAccessor = IndexedAccessor = {}));
  var Intrinsic;
  (function(Intrinsic2) {
    function Uncapitalize(value) {
      const [first, rest] = [value.slice(0, 1), value.slice(1)];
      return `${first.toLowerCase()}${rest}`;
    }
    function Capitalize(value) {
      const [first, rest] = [value.slice(0, 1), value.slice(1)];
      return `${first.toUpperCase()}${rest}`;
    }
    function Uppercase(value) {
      return value.toUpperCase();
    }
    function Lowercase(value) {
      return value.toLowerCase();
    }
    function IntrinsicTemplateLiteral(schema, mode) {
      const expression = TemplateLiteralParser.ParseExact(schema.pattern);
      const finite = TemplateLiteralFinite.Check(expression);
      if (!finite)
        return { ...schema, pattern: IntrinsicLiteral(schema.pattern, mode) };
      const strings = [...TemplateLiteralGenerator.Generate(expression)];
      const literals = strings.map((value) => exports.Type.Literal(value));
      const mapped = IntrinsicRest(literals, mode);
      const union = exports.Type.Union(mapped);
      return exports.Type.TemplateLiteral([union]);
    }
    function IntrinsicLiteral(value, mode) {
      return typeof value === "string" ? mode === "Uncapitalize" ? Uncapitalize(value) : mode === "Capitalize" ? Capitalize(value) : mode === "Uppercase" ? Uppercase(value) : mode === "Lowercase" ? Lowercase(value) : value : value.toString();
    }
    function IntrinsicRest(schema, mode) {
      if (schema.length === 0)
        return [];
      const [L, ...R] = schema;
      return [Map2(L, mode), ...IntrinsicRest(R, mode)];
    }
    function Visit(schema, mode) {
      return TypeGuard.TTemplateLiteral(schema) ? IntrinsicTemplateLiteral(schema, mode) : TypeGuard.TUnion(schema) ? exports.Type.Union(IntrinsicRest(schema.anyOf, mode)) : TypeGuard.TLiteral(schema) ? exports.Type.Literal(IntrinsicLiteral(schema.const, mode)) : schema;
    }
    function Map2(schema, mode) {
      return Visit(schema, mode);
    }
    Intrinsic2.Map = Map2;
  })(Intrinsic || (exports.Intrinsic = Intrinsic = {}));
  var ObjectMap;
  (function(ObjectMap2) {
    function TIntersect(schema, callback) {
      return exports.Type.Intersect(schema.allOf.map((inner) => Visit(inner, callback)), { ...schema });
    }
    function TUnion(schema, callback) {
      return exports.Type.Union(schema.anyOf.map((inner) => Visit(inner, callback)), { ...schema });
    }
    function TObject(schema, callback) {
      return callback(schema);
    }
    function Visit(schema, callback) {
      return schema[exports.Kind] === "Intersect" ? TIntersect(schema, callback) : schema[exports.Kind] === "Union" ? TUnion(schema, callback) : schema[exports.Kind] === "Object" ? TObject(schema, callback) : schema;
    }
    function Map2(schema, callback, options) {
      return { ...Visit(TypeClone.Type(schema), callback), ...options };
    }
    ObjectMap2.Map = Map2;
  })(ObjectMap || (exports.ObjectMap = ObjectMap = {}));
  var KeyResolver;
  (function(KeyResolver2) {
    function UnwrapPattern(key) {
      return key[0] === "^" && key[key.length - 1] === "$" ? key.slice(1, key.length - 1) : key;
    }
    function TIntersect(schema, options) {
      return schema.allOf.reduce((acc, schema2) => [...acc, ...Visit(schema2, options)], []);
    }
    function TUnion(schema, options) {
      const sets = schema.anyOf.map((inner) => Visit(inner, options));
      return [...sets.reduce((set, outer) => outer.map((key) => sets.every((inner) => inner.includes(key)) ? set.add(key) : set)[0], new Set)];
    }
    function TObject(schema, options) {
      return Object.getOwnPropertyNames(schema.properties);
    }
    function TRecord(schema, options) {
      return options.includePatterns ? Object.getOwnPropertyNames(schema.patternProperties) : [];
    }
    function Visit(schema, options) {
      return TypeGuard.TIntersect(schema) ? TIntersect(schema, options) : TypeGuard.TUnion(schema) ? TUnion(schema, options) : TypeGuard.TObject(schema) ? TObject(schema, options) : TypeGuard.TRecord(schema) ? TRecord(schema, options) : [];
    }
    function ResolveKeys(schema, options) {
      return [...new Set(Visit(schema, options))];
    }
    KeyResolver2.ResolveKeys = ResolveKeys;
    function ResolvePattern(schema) {
      const keys = ResolveKeys(schema, { includePatterns: true });
      const pattern = keys.map((key) => `(${UnwrapPattern(key)})`);
      return `^(${pattern.join("|")})\$`;
    }
    KeyResolver2.ResolvePattern = ResolvePattern;
  })(KeyResolver || (exports.KeyResolver = KeyResolver = {}));

  class KeyArrayResolverError extends TypeBoxError {
  }
  exports.KeyArrayResolverError = KeyArrayResolverError;
  var KeyArrayResolver;
  (function(KeyArrayResolver2) {
    function Resolve(schema) {
      return Array.isArray(schema) ? schema : TypeGuard.TUnionLiteral(schema) ? schema.anyOf.map((schema2) => schema2.const.toString()) : TypeGuard.TLiteral(schema) ? [schema.const] : TypeGuard.TTemplateLiteral(schema) ? (() => {
        const expression = TemplateLiteralParser.ParseExact(schema.pattern);
        if (!TemplateLiteralFinite.Check(expression))
          throw new KeyArrayResolverError("Cannot resolve keys from infinite template expression");
        return [...TemplateLiteralGenerator.Generate(expression)];
      })() : [];
    }
    KeyArrayResolver2.Resolve = Resolve;
  })(KeyArrayResolver || (exports.KeyArrayResolver = KeyArrayResolver = {}));
  var UnionResolver;
  (function(UnionResolver2) {
    function* TUnion(union) {
      for (const schema of union.anyOf) {
        if (schema[exports.Kind] === "Union") {
          yield* TUnion(schema);
        } else {
          yield schema;
        }
      }
    }
    function Resolve(union) {
      return exports.Type.Union([...TUnion(union)], { ...union });
    }
    UnionResolver2.Resolve = Resolve;
  })(UnionResolver || (exports.UnionResolver = UnionResolver = {}));

  class TemplateLiteralPatternError extends TypeBoxError {
  }
  exports.TemplateLiteralPatternError = TemplateLiteralPatternError;
  var TemplateLiteralPattern;
  (function(TemplateLiteralPattern2) {
    function Throw(message) {
      throw new TemplateLiteralPatternError(message);
    }
    function Escape(value) {
      return value.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    }
    function Visit(schema, acc) {
      return TypeGuard.TTemplateLiteral(schema) ? schema.pattern.slice(1, schema.pattern.length - 1) : TypeGuard.TUnion(schema) ? `(${schema.anyOf.map((schema2) => Visit(schema2, acc)).join("|")})` : TypeGuard.TNumber(schema) ? `${acc}${exports.PatternNumber}` : TypeGuard.TInteger(schema) ? `${acc}${exports.PatternNumber}` : TypeGuard.TBigInt(schema) ? `${acc}${exports.PatternNumber}` : TypeGuard.TString(schema) ? `${acc}${exports.PatternString}` : TypeGuard.TLiteral(schema) ? `${acc}${Escape(schema.const.toString())}` : TypeGuard.TBoolean(schema) ? `${acc}${exports.PatternBoolean}` : Throw(`Unexpected Kind '${schema[exports.Kind]}'`);
    }
    function Create(kinds) {
      return `^${kinds.map((schema) => Visit(schema, "")).join("")}$`;
    }
    TemplateLiteralPattern2.Create = Create;
  })(TemplateLiteralPattern || (exports.TemplateLiteralPattern = TemplateLiteralPattern = {}));
  var TemplateLiteralResolver;
  (function(TemplateLiteralResolver2) {
    function Resolve(template) {
      const expression = TemplateLiteralParser.ParseExact(template.pattern);
      if (!TemplateLiteralFinite.Check(expression))
        return exports.Type.String();
      const literals = [...TemplateLiteralGenerator.Generate(expression)].map((value) => exports.Type.Literal(value));
      return exports.Type.Union(literals);
    }
    TemplateLiteralResolver2.Resolve = Resolve;
  })(TemplateLiteralResolver || (exports.TemplateLiteralResolver = TemplateLiteralResolver = {}));

  class TemplateLiteralParserError extends TypeBoxError {
  }
  exports.TemplateLiteralParserError = TemplateLiteralParserError;
  var TemplateLiteralParser;
  (function(TemplateLiteralParser2) {
    function IsNonEscaped(pattern, index, char) {
      return pattern[index] === char && pattern.charCodeAt(index - 1) !== 92;
    }
    function IsOpenParen(pattern, index) {
      return IsNonEscaped(pattern, index, "(");
    }
    function IsCloseParen(pattern, index) {
      return IsNonEscaped(pattern, index, ")");
    }
    function IsSeparator(pattern, index) {
      return IsNonEscaped(pattern, index, "|");
    }
    function IsGroup(pattern) {
      if (!(IsOpenParen(pattern, 0) && IsCloseParen(pattern, pattern.length - 1)))
        return false;
      let count = 0;
      for (let index = 0;index < pattern.length; index++) {
        if (IsOpenParen(pattern, index))
          count += 1;
        if (IsCloseParen(pattern, index))
          count -= 1;
        if (count === 0 && index !== pattern.length - 1)
          return false;
      }
      return true;
    }
    function InGroup(pattern) {
      return pattern.slice(1, pattern.length - 1);
    }
    function IsPrecedenceOr(pattern) {
      let count = 0;
      for (let index = 0;index < pattern.length; index++) {
        if (IsOpenParen(pattern, index))
          count += 1;
        if (IsCloseParen(pattern, index))
          count -= 1;
        if (IsSeparator(pattern, index) && count === 0)
          return true;
      }
      return false;
    }
    function IsPrecedenceAnd(pattern) {
      for (let index = 0;index < pattern.length; index++) {
        if (IsOpenParen(pattern, index))
          return true;
      }
      return false;
    }
    function Or(pattern) {
      let [count, start] = [0, 0];
      const expressions = [];
      for (let index = 0;index < pattern.length; index++) {
        if (IsOpenParen(pattern, index))
          count += 1;
        if (IsCloseParen(pattern, index))
          count -= 1;
        if (IsSeparator(pattern, index) && count === 0) {
          const range2 = pattern.slice(start, index);
          if (range2.length > 0)
            expressions.push(Parse(range2));
          start = index + 1;
        }
      }
      const range = pattern.slice(start);
      if (range.length > 0)
        expressions.push(Parse(range));
      if (expressions.length === 0)
        return { type: "const", const: "" };
      if (expressions.length === 1)
        return expressions[0];
      return { type: "or", expr: expressions };
    }
    function And(pattern) {
      function Group(value, index) {
        if (!IsOpenParen(value, index))
          throw new TemplateLiteralParserError(`TemplateLiteralParser: Index must point to open parens`);
        let count = 0;
        for (let scan = index;scan < value.length; scan++) {
          if (IsOpenParen(value, scan))
            count += 1;
          if (IsCloseParen(value, scan))
            count -= 1;
          if (count === 0)
            return [index, scan];
        }
        throw new TemplateLiteralParserError(`TemplateLiteralParser: Unclosed group parens in expression`);
      }
      function Range(pattern2, index) {
        for (let scan = index;scan < pattern2.length; scan++) {
          if (IsOpenParen(pattern2, scan))
            return [index, scan];
        }
        return [index, pattern2.length];
      }
      const expressions = [];
      for (let index = 0;index < pattern.length; index++) {
        if (IsOpenParen(pattern, index)) {
          const [start, end] = Group(pattern, index);
          const range = pattern.slice(start, end + 1);
          expressions.push(Parse(range));
          index = end;
        } else {
          const [start, end] = Range(pattern, index);
          const range = pattern.slice(start, end);
          if (range.length > 0)
            expressions.push(Parse(range));
          index = end - 1;
        }
      }
      return expressions.length === 0 ? { type: "const", const: "" } : expressions.length === 1 ? expressions[0] : { type: "and", expr: expressions };
    }
    function Parse(pattern) {
      return IsGroup(pattern) ? Parse(InGroup(pattern)) : IsPrecedenceOr(pattern) ? Or(pattern) : IsPrecedenceAnd(pattern) ? And(pattern) : { type: "const", const: pattern };
    }
    TemplateLiteralParser2.Parse = Parse;
    function ParseExact(pattern) {
      return Parse(pattern.slice(1, pattern.length - 1));
    }
    TemplateLiteralParser2.ParseExact = ParseExact;
  })(TemplateLiteralParser || (exports.TemplateLiteralParser = TemplateLiteralParser = {}));

  class TemplateLiteralFiniteError extends TypeBoxError {
  }
  exports.TemplateLiteralFiniteError = TemplateLiteralFiniteError;
  var TemplateLiteralFinite;
  (function(TemplateLiteralFinite2) {
    function Throw(message) {
      throw new TemplateLiteralFiniteError(message);
    }
    function IsNumber(expression) {
      return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "0" && expression.expr[1].type === "const" && expression.expr[1].const === "[1-9][0-9]*";
    }
    function IsBoolean(expression) {
      return expression.type === "or" && expression.expr.length === 2 && expression.expr[0].type === "const" && expression.expr[0].const === "true" && expression.expr[1].type === "const" && expression.expr[1].const === "false";
    }
    function IsString(expression) {
      return expression.type === "const" && expression.const === ".*";
    }
    function Check(expression) {
      return IsBoolean(expression) ? true : IsNumber(expression) || IsString(expression) ? false : expression.type === "and" ? expression.expr.every((expr) => Check(expr)) : expression.type === "or" ? expression.expr.every((expr) => Check(expr)) : expression.type === "const" ? true : Throw(`Unknown expression type`);
    }
    TemplateLiteralFinite2.Check = Check;
  })(TemplateLiteralFinite || (exports.TemplateLiteralFinite = TemplateLiteralFinite = {}));

  class TemplateLiteralGeneratorError extends TypeBoxError {
  }
  exports.TemplateLiteralGeneratorError = TemplateLiteralGeneratorError;
  var TemplateLiteralGenerator;
  (function(TemplateLiteralGenerator2) {
    function* Reduce(buffer) {
      if (buffer.length === 1)
        return yield* buffer[0];
      for (const left of buffer[0]) {
        for (const right of Reduce(buffer.slice(1))) {
          yield `${left}${right}`;
        }
      }
    }
    function* And(expression) {
      return yield* Reduce(expression.expr.map((expr) => [...Generate(expr)]));
    }
    function* Or(expression) {
      for (const expr of expression.expr)
        yield* Generate(expr);
    }
    function* Const(expression) {
      return yield expression.const;
    }
    function* Generate(expression) {
      return expression.type === "and" ? yield* And(expression) : expression.type === "or" ? yield* Or(expression) : expression.type === "const" ? yield* Const(expression) : (() => {
        throw new TemplateLiteralGeneratorError("Unknown expression");
      })();
    }
    TemplateLiteralGenerator2.Generate = Generate;
  })(TemplateLiteralGenerator || (exports.TemplateLiteralGenerator = TemplateLiteralGenerator = {}));
  var TemplateLiteralDslParser;
  (function(TemplateLiteralDslParser2) {
    function* ParseUnion(template) {
      const trim = template.trim().replace(/"|'/g, "");
      return trim === "boolean" ? yield exports.Type.Boolean() : trim === "number" ? yield exports.Type.Number() : trim === "bigint" ? yield exports.Type.BigInt() : trim === "string" ? yield exports.Type.String() : yield (() => {
        const literals = trim.split("|").map((literal) => exports.Type.Literal(literal.trim()));
        return literals.length === 0 ? exports.Type.Never() : literals.length === 1 ? literals[0] : exports.Type.Union(literals);
      })();
    }
    function* ParseTerminal(template) {
      if (template[1] !== "{") {
        const L = exports.Type.Literal("$");
        const R = ParseLiteral(template.slice(1));
        return yield* [L, ...R];
      }
      for (let i = 2;i < template.length; i++) {
        if (template[i] === "}") {
          const L = ParseUnion(template.slice(2, i));
          const R = ParseLiteral(template.slice(i + 1));
          return yield* [...L, ...R];
        }
      }
      yield exports.Type.Literal(template);
    }
    function* ParseLiteral(template) {
      for (let i = 0;i < template.length; i++) {
        if (template[i] === "$") {
          const L = exports.Type.Literal(template.slice(0, i));
          const R = ParseTerminal(template.slice(i));
          return yield* [L, ...R];
        }
      }
      yield exports.Type.Literal(template);
    }
    function Parse(template_dsl) {
      return [...ParseLiteral(template_dsl)];
    }
    TemplateLiteralDslParser2.Parse = Parse;
  })(TemplateLiteralDslParser || (exports.TemplateLiteralDslParser = TemplateLiteralDslParser = {}));

  class TransformDecodeBuilder {
    constructor(schema) {
      this.schema = schema;
    }
    Decode(decode) {
      return new TransformEncodeBuilder(this.schema, decode);
    }
  }
  exports.TransformDecodeBuilder = TransformDecodeBuilder;

  class TransformEncodeBuilder {
    constructor(schema, decode) {
      this.schema = schema;
      this.decode = decode;
    }
    Encode(encode) {
      const schema = TypeClone.Type(this.schema);
      return TypeGuard.TTransform(schema) ? (() => {
        const Encode = (value) => schema[exports.Transform].Encode(encode(value));
        const Decode = (value) => this.decode(schema[exports.Transform].Decode(value));
        const Codec = { Encode, Decode };
        return { ...schema, [exports.Transform]: Codec };
      })() : (() => {
        const Codec = { Decode: this.decode, Encode: encode };
        return { ...schema, [exports.Transform]: Codec };
      })();
    }
  }
  exports.TransformEncodeBuilder = TransformEncodeBuilder;
  var TypeOrdinal = 0;

  class TypeBuilderError extends TypeBoxError {
  }
  exports.TypeBuilderError = TypeBuilderError;

  class TypeBuilder {
    Create(schema) {
      return schema;
    }
    Throw(message) {
      throw new TypeBuilderError(message);
    }
    Discard(record, keys) {
      return keys.reduce((acc, key) => {
        const { [key]: _, ...rest } = acc;
        return rest;
      }, record);
    }
    Strict(schema) {
      return JSON.parse(JSON.stringify(schema));
    }
  }
  exports.TypeBuilder = TypeBuilder;

  class JsonTypeBuilder extends TypeBuilder {
    ReadonlyOptional(schema) {
      return this.Readonly(this.Optional(schema));
    }
    Readonly(schema) {
      return { ...TypeClone.Type(schema), [exports.Readonly]: "Readonly" };
    }
    Optional(schema) {
      return { ...TypeClone.Type(schema), [exports.Optional]: "Optional" };
    }
    Any(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Any" });
    }
    Array(schema, options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Array", type: "array", items: TypeClone.Type(schema) });
    }
    Boolean(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Boolean", type: "boolean" });
    }
    Capitalize(schema, options = {}) {
      return { ...Intrinsic.Map(TypeClone.Type(schema), "Capitalize"), ...options };
    }
    Composite(objects, options) {
      const intersect = exports.Type.Intersect(objects, {});
      const keys = KeyResolver.ResolveKeys(intersect, { includePatterns: false });
      const properties = keys.reduce((acc, key) => ({ ...acc, [key]: exports.Type.Index(intersect, [key]) }), {});
      return exports.Type.Object(properties, options);
    }
    Enum(item, options = {}) {
      if (ValueGuard.IsUndefined(item))
        return this.Throw("Enum undefined or empty");
      const values1 = Object.getOwnPropertyNames(item).filter((key) => isNaN(key)).map((key) => item[key]);
      const values2 = [...new Set(values1)];
      const anyOf = values2.map((value) => exports.Type.Literal(value));
      return this.Union(anyOf, { ...options, [exports.Hint]: "Enum" });
    }
    Extends(left, right, trueType, falseType, options = {}) {
      switch (TypeExtends.Extends(left, right)) {
        case TypeExtendsResult.Union:
          return this.Union([TypeClone.Type(trueType, options), TypeClone.Type(falseType, options)]);
        case TypeExtendsResult.True:
          return TypeClone.Type(trueType, options);
        case TypeExtendsResult.False:
          return TypeClone.Type(falseType, options);
      }
    }
    Exclude(unionType, excludedMembers, options = {}) {
      return TypeGuard.TTemplateLiteral(unionType) ? this.Exclude(TemplateLiteralResolver.Resolve(unionType), excludedMembers, options) : TypeGuard.TTemplateLiteral(excludedMembers) ? this.Exclude(unionType, TemplateLiteralResolver.Resolve(excludedMembers), options) : TypeGuard.TUnion(unionType) ? (() => {
        const narrowed = unionType.anyOf.filter((inner) => TypeExtends.Extends(inner, excludedMembers) === TypeExtendsResult.False);
        return narrowed.length === 1 ? TypeClone.Type(narrowed[0], options) : this.Union(narrowed, options);
      })() : TypeExtends.Extends(unionType, excludedMembers) !== TypeExtendsResult.False ? this.Never(options) : TypeClone.Type(unionType, options);
    }
    Extract(type, union, options = {}) {
      return TypeGuard.TTemplateLiteral(type) ? this.Extract(TemplateLiteralResolver.Resolve(type), union, options) : TypeGuard.TTemplateLiteral(union) ? this.Extract(type, TemplateLiteralResolver.Resolve(union), options) : TypeGuard.TUnion(type) ? (() => {
        const narrowed = type.anyOf.filter((inner) => TypeExtends.Extends(inner, union) !== TypeExtendsResult.False);
        return narrowed.length === 1 ? TypeClone.Type(narrowed[0], options) : this.Union(narrowed, options);
      })() : TypeExtends.Extends(type, union) !== TypeExtendsResult.False ? TypeClone.Type(type, options) : this.Never(options);
    }
    Index(schema, unresolved, options = {}) {
      return TypeGuard.TArray(schema) && TypeGuard.TNumber(unresolved) ? (() => {
        return TypeClone.Type(schema.items, options);
      })() : TypeGuard.TTuple(schema) && TypeGuard.TNumber(unresolved) ? (() => {
        const items = ValueGuard.IsUndefined(schema.items) ? [] : schema.items;
        const cloned = items.map((schema2) => TypeClone.Type(schema2));
        return this.Union(cloned, options);
      })() : (() => {
        const keys = KeyArrayResolver.Resolve(unresolved);
        const clone = TypeClone.Type(schema);
        return IndexedAccessor.Resolve(clone, keys, options);
      })();
    }
    Integer(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Integer", type: "integer" });
    }
    Intersect(allOf, options = {}) {
      if (allOf.length === 0)
        return exports.Type.Never();
      if (allOf.length === 1)
        return TypeClone.Type(allOf[0], options);
      if (allOf.some((schema) => TypeGuard.TTransform(schema)))
        this.Throw("Cannot intersect transform types");
      const objects = allOf.every((schema) => TypeGuard.TObject(schema));
      const cloned = TypeClone.Rest(allOf);
      const clonedUnevaluatedProperties = TypeGuard.TSchema(options.unevaluatedProperties) ? { unevaluatedProperties: TypeClone.Type(options.unevaluatedProperties) } : {};
      return options.unevaluatedProperties === false || TypeGuard.TSchema(options.unevaluatedProperties) || objects ? this.Create({ ...options, ...clonedUnevaluatedProperties, [exports.Kind]: "Intersect", type: "object", allOf: cloned }) : this.Create({ ...options, ...clonedUnevaluatedProperties, [exports.Kind]: "Intersect", allOf: cloned });
    }
    KeyOf(schema, options = {}) {
      return TypeGuard.TRecord(schema) ? (() => {
        const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];
        return pattern === exports.PatternNumberExact ? this.Number(options) : pattern === exports.PatternStringExact ? this.String(options) : this.Throw("Unable to resolve key type from Record key pattern");
      })() : TypeGuard.TTuple(schema) ? (() => {
        const items = ValueGuard.IsUndefined(schema.items) ? [] : schema.items;
        const literals = items.map((_, index) => exports.Type.Literal(index.toString()));
        return this.Union(literals, options);
      })() : TypeGuard.TArray(schema) ? (() => {
        return this.Number(options);
      })() : (() => {
        const keys = KeyResolver.ResolveKeys(schema, { includePatterns: false });
        if (keys.length === 0)
          return this.Never(options);
        const literals = keys.map((key) => this.Literal(key));
        return this.Union(literals, options);
      })();
    }
    Literal(value, options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Literal", const: value, type: typeof value });
    }
    Lowercase(schema, options = {}) {
      return { ...Intrinsic.Map(TypeClone.Type(schema), "Lowercase"), ...options };
    }
    Never(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Never", not: {} });
    }
    Not(schema, options) {
      return this.Create({ ...options, [exports.Kind]: "Not", not: TypeClone.Type(schema) });
    }
    Null(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Null", type: "null" });
    }
    Number(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Number", type: "number" });
    }
    Object(properties, options = {}) {
      const propertyKeys = Object.getOwnPropertyNames(properties);
      const optionalKeys = propertyKeys.filter((key) => TypeGuard.TOptional(properties[key]));
      const requiredKeys = propertyKeys.filter((name) => !optionalKeys.includes(name));
      const clonedAdditionalProperties = TypeGuard.TSchema(options.additionalProperties) ? { additionalProperties: TypeClone.Type(options.additionalProperties) } : {};
      const clonedProperties = propertyKeys.reduce((acc, key) => ({ ...acc, [key]: TypeClone.Type(properties[key]) }), {});
      return requiredKeys.length > 0 ? this.Create({ ...options, ...clonedAdditionalProperties, [exports.Kind]: "Object", type: "object", properties: clonedProperties, required: requiredKeys }) : this.Create({ ...options, ...clonedAdditionalProperties, [exports.Kind]: "Object", type: "object", properties: clonedProperties });
    }
    Omit(schema, unresolved, options = {}) {
      const keys = KeyArrayResolver.Resolve(unresolved);
      return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ["$id", exports.Transform]), (object) => {
        if (ValueGuard.IsArray(object.required)) {
          object.required = object.required.filter((key) => !keys.includes(key));
          if (object.required.length === 0)
            delete object.required;
        }
        for (const key of Object.getOwnPropertyNames(object.properties)) {
          if (keys.includes(key))
            delete object.properties[key];
        }
        return this.Create(object);
      }, options);
    }
    Partial(schema, options = {}) {
      return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ["$id", exports.Transform]), (object) => {
        const properties = Object.getOwnPropertyNames(object.properties).reduce((acc, key) => {
          return { ...acc, [key]: this.Optional(object.properties[key]) };
        }, {});
        return this.Object(properties, this.Discard(object, ["required"]));
      }, options);
    }
    Pick(schema, unresolved, options = {}) {
      const keys = KeyArrayResolver.Resolve(unresolved);
      return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ["$id", exports.Transform]), (object) => {
        if (ValueGuard.IsArray(object.required)) {
          object.required = object.required.filter((key) => keys.includes(key));
          if (object.required.length === 0)
            delete object.required;
        }
        for (const key of Object.getOwnPropertyNames(object.properties)) {
          if (!keys.includes(key))
            delete object.properties[key];
        }
        return this.Create(object);
      }, options);
    }
    Record(key, schema, options = {}) {
      return TypeGuard.TTemplateLiteral(key) ? (() => {
        const expression = TemplateLiteralParser.ParseExact(key.pattern);
        return TemplateLiteralFinite.Check(expression) ? this.Object([...TemplateLiteralGenerator.Generate(expression)].reduce((acc, key2) => ({ ...acc, [key2]: TypeClone.Type(schema) }), {}), options) : this.Create({ ...options, [exports.Kind]: "Record", type: "object", patternProperties: { [key.pattern]: TypeClone.Type(schema) } });
      })() : TypeGuard.TUnion(key) ? (() => {
        const union = UnionResolver.Resolve(key);
        if (TypeGuard.TUnionLiteral(union)) {
          const properties = union.anyOf.reduce((acc, literal) => ({ ...acc, [literal.const]: TypeClone.Type(schema) }), {});
          return this.Object(properties, { ...options, [exports.Hint]: "Record" });
        } else
          this.Throw("Record key of type union contains non-literal types");
      })() : TypeGuard.TLiteral(key) ? (() => {
        return ValueGuard.IsString(key.const) || ValueGuard.IsNumber(key.const) ? this.Object({ [key.const]: TypeClone.Type(schema) }, options) : this.Throw("Record key of type literal is not of type string or number");
      })() : TypeGuard.TInteger(key) || TypeGuard.TNumber(key) ? (() => {
        return this.Create({ ...options, [exports.Kind]: "Record", type: "object", patternProperties: { [exports.PatternNumberExact]: TypeClone.Type(schema) } });
      })() : TypeGuard.TString(key) ? (() => {
        const pattern = ValueGuard.IsUndefined(key.pattern) ? exports.PatternStringExact : key.pattern;
        return this.Create({ ...options, [exports.Kind]: "Record", type: "object", patternProperties: { [pattern]: TypeClone.Type(schema) } });
      })() : this.Never();
    }
    Recursive(callback, options = {}) {
      if (ValueGuard.IsUndefined(options.$id))
        options.$id = `T${TypeOrdinal++}`;
      const thisType = callback({ [exports.Kind]: "This", $ref: `${options.$id}` });
      thisType.$id = options.$id;
      return this.Create({ ...options, [exports.Hint]: "Recursive", ...thisType });
    }
    Ref(unresolved, options = {}) {
      if (ValueGuard.IsString(unresolved))
        return this.Create({ ...options, [exports.Kind]: "Ref", $ref: unresolved });
      if (ValueGuard.IsUndefined(unresolved.$id))
        this.Throw("Reference target type must specify an $id");
      return this.Create({ ...options, [exports.Kind]: "Ref", $ref: unresolved.$id });
    }
    Required(schema, options = {}) {
      return ObjectMap.Map(this.Discard(TypeClone.Type(schema), ["$id", exports.Transform]), (object) => {
        const properties = Object.getOwnPropertyNames(object.properties).reduce((acc, key) => {
          return { ...acc, [key]: this.Discard(object.properties[key], [exports.Optional]) };
        }, {});
        return this.Object(properties, object);
      }, options);
    }
    Rest(schema) {
      return TypeGuard.TTuple(schema) && !ValueGuard.IsUndefined(schema.items) ? TypeClone.Rest(schema.items) : TypeGuard.TIntersect(schema) ? TypeClone.Rest(schema.allOf) : TypeGuard.TUnion(schema) ? TypeClone.Rest(schema.anyOf) : [];
    }
    String(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "String", type: "string" });
    }
    TemplateLiteral(unresolved, options = {}) {
      const pattern = ValueGuard.IsString(unresolved) ? TemplateLiteralPattern.Create(TemplateLiteralDslParser.Parse(unresolved)) : TemplateLiteralPattern.Create(unresolved);
      return this.Create({ ...options, [exports.Kind]: "TemplateLiteral", type: "string", pattern });
    }
    Transform(schema) {
      return new TransformDecodeBuilder(schema);
    }
    Tuple(items, options = {}) {
      const [additionalItems, minItems, maxItems] = [false, items.length, items.length];
      const clonedItems = TypeClone.Rest(items);
      const schema = items.length > 0 ? { ...options, [exports.Kind]: "Tuple", type: "array", items: clonedItems, additionalItems, minItems, maxItems } : { ...options, [exports.Kind]: "Tuple", type: "array", minItems, maxItems };
      return this.Create(schema);
    }
    Uncapitalize(schema, options = {}) {
      return { ...Intrinsic.Map(TypeClone.Type(schema), "Uncapitalize"), ...options };
    }
    Union(union, options = {}) {
      return TypeGuard.TTemplateLiteral(union) ? TemplateLiteralResolver.Resolve(union) : (() => {
        const anyOf = union;
        if (anyOf.length === 0)
          return this.Never(options);
        if (anyOf.length === 1)
          return this.Create(TypeClone.Type(anyOf[0], options));
        const clonedAnyOf = TypeClone.Rest(anyOf);
        return this.Create({ ...options, [exports.Kind]: "Union", anyOf: clonedAnyOf });
      })();
    }
    Unknown(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Unknown" });
    }
    Unsafe(options = {}) {
      return this.Create({ ...options, [exports.Kind]: options[exports.Kind] || "Unsafe" });
    }
    Uppercase(schema, options = {}) {
      return { ...Intrinsic.Map(TypeClone.Type(schema), "Uppercase"), ...options };
    }
  }
  exports.JsonTypeBuilder = JsonTypeBuilder;

  class JavaScriptTypeBuilder extends JsonTypeBuilder {
    AsyncIterator(items, options = {}) {
      return this.Create({ ...options, [exports.Kind]: "AsyncIterator", type: "AsyncIterator", items: TypeClone.Type(items) });
    }
    Awaited(schema, options = {}) {
      const Unwrap = (rest) => rest.length > 0 ? (() => {
        const [L, ...R] = rest;
        return [this.Awaited(L), ...Unwrap(R)];
      })() : rest;
      return TypeGuard.TIntersect(schema) ? exports.Type.Intersect(Unwrap(schema.allOf)) : TypeGuard.TUnion(schema) ? exports.Type.Union(Unwrap(schema.anyOf)) : TypeGuard.TPromise(schema) ? this.Awaited(schema.item) : TypeClone.Type(schema, options);
    }
    BigInt(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "BigInt", type: "bigint" });
    }
    ConstructorParameters(schema, options = {}) {
      return this.Tuple([...schema.parameters], { ...options });
    }
    Constructor(parameters, returns, options) {
      const [clonedParameters, clonedReturns] = [TypeClone.Rest(parameters), TypeClone.Type(returns)];
      return this.Create({ ...options, [exports.Kind]: "Constructor", type: "Constructor", parameters: clonedParameters, returns: clonedReturns });
    }
    Date(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Date", type: "Date" });
    }
    Function(parameters, returns, options) {
      const [clonedParameters, clonedReturns] = [TypeClone.Rest(parameters), TypeClone.Type(returns)];
      return this.Create({ ...options, [exports.Kind]: "Function", type: "Function", parameters: clonedParameters, returns: clonedReturns });
    }
    InstanceType(schema, options = {}) {
      return TypeClone.Type(schema.returns, options);
    }
    Iterator(items, options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Iterator", type: "Iterator", items: TypeClone.Type(items) });
    }
    Parameters(schema, options = {}) {
      return this.Tuple(schema.parameters, { ...options });
    }
    Promise(item, options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Promise", type: "Promise", item: TypeClone.Type(item) });
    }
    RegExp(unresolved, options = {}) {
      const pattern = ValueGuard.IsString(unresolved) ? unresolved : unresolved.source;
      return this.Create({ ...options, [exports.Kind]: "String", type: "string", pattern });
    }
    RegEx(regex, options = {}) {
      return this.RegExp(regex, options);
    }
    ReturnType(schema, options = {}) {
      return TypeClone.Type(schema.returns, options);
    }
    Symbol(options) {
      return this.Create({ ...options, [exports.Kind]: "Symbol", type: "symbol" });
    }
    Undefined(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Undefined", type: "undefined" });
    }
    Uint8Array(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Uint8Array", type: "Uint8Array" });
    }
    Void(options = {}) {
      return this.Create({ ...options, [exports.Kind]: "Void", type: "void" });
    }
  }
  exports.JavaScriptTypeBuilder = JavaScriptTypeBuilder;
  exports.JsonType = new JsonTypeBuilder;
  exports.Type = new JavaScriptTypeBuilder;
});

// node_modules/@sinclair/typebox/system/system.js
var require_system = __commonJS((exports) => {
  var DefaultErrorFunction = function(schema, errorType) {
    switch (errorType) {
      case errors_1.ValueErrorType.ArrayContains:
        return "Expected array to contain at least one matching value";
      case errors_1.ValueErrorType.ArrayMaxContains:
        return `Expected array to contain no more than ${schema.maxContains} matching values`;
      case errors_1.ValueErrorType.ArrayMinContains:
        return `Expected array to contain at least ${schema.minContains} matching values`;
      case errors_1.ValueErrorType.ArrayMaxItems:
        return `Expected array length to be less or equal to ${schema.maxItems}`;
      case errors_1.ValueErrorType.ArrayMinItems:
        return `Expected array length to be greater or equal to ${schema.minItems}`;
      case errors_1.ValueErrorType.ArrayUniqueItems:
        return "Expected array elements to be unique";
      case errors_1.ValueErrorType.Array:
        return "Expected array";
      case errors_1.ValueErrorType.AsyncIterator:
        return "Expected AsyncIterator";
      case errors_1.ValueErrorType.BigIntExclusiveMaximum:
        return `Expected bigint to be less than ${schema.exclusiveMaximum}`;
      case errors_1.ValueErrorType.BigIntExclusiveMinimum:
        return `Expected bigint to be greater than ${schema.exclusiveMinimum}`;
      case errors_1.ValueErrorType.BigIntMaximum:
        return `Expected bigint to be less or equal to ${schema.maximum}`;
      case errors_1.ValueErrorType.BigIntMinimum:
        return `Expected bigint to be greater or equal to ${schema.minimum}`;
      case errors_1.ValueErrorType.BigIntMultipleOf:
        return `Expected bigint to be a multiple of ${schema.multipleOf}`;
      case errors_1.ValueErrorType.BigInt:
        return "Expected bigint";
      case errors_1.ValueErrorType.Boolean:
        return "Expected boolean";
      case errors_1.ValueErrorType.DateExclusiveMinimumTimestamp:
        return `Expected Date timestamp to be greater than ${schema.exclusiveMinimumTimestamp}`;
      case errors_1.ValueErrorType.DateExclusiveMaximumTimestamp:
        return `Expected Date timestamp to be less than ${schema.exclusiveMaximumTimestamp}`;
      case errors_1.ValueErrorType.DateMinimumTimestamp:
        return `Expected Date timestamp to be greater or equal to ${schema.minimumTimestamp}`;
      case errors_1.ValueErrorType.DateMaximumTimestamp:
        return `Expected Date timestamp to be less or equal to ${schema.maximumTimestamp}`;
      case errors_1.ValueErrorType.DateMultipleOfTimestamp:
        return `Expected Date timestamp to be a multiple of ${schema.multipleOfTimestamp}`;
      case errors_1.ValueErrorType.Date:
        return "Expected Date";
      case errors_1.ValueErrorType.Function:
        return "Expected function";
      case errors_1.ValueErrorType.IntegerExclusiveMaximum:
        return `Expected integer to be less than ${schema.exclusiveMaximum}`;
      case errors_1.ValueErrorType.IntegerExclusiveMinimum:
        return `Expected integer to be greater than ${schema.exclusiveMinimum}`;
      case errors_1.ValueErrorType.IntegerMaximum:
        return `Expected integer to be less or equal to ${schema.maximum}`;
      case errors_1.ValueErrorType.IntegerMinimum:
        return `Expected integer to be greater or equal to ${schema.minimum}`;
      case errors_1.ValueErrorType.IntegerMultipleOf:
        return `Expected integer to be a multiple of ${schema.multipleOf}`;
      case errors_1.ValueErrorType.Integer:
        return "Expected integer";
      case errors_1.ValueErrorType.IntersectUnevaluatedProperties:
        return "Unexpected property";
      case errors_1.ValueErrorType.Intersect:
        return "Expected all values to match";
      case errors_1.ValueErrorType.Iterator:
        return "Expected Iterator";
      case errors_1.ValueErrorType.Literal:
        return `Expected ${typeof schema.const === "string" ? `'${schema.const}'` : schema.const}`;
      case errors_1.ValueErrorType.Never:
        return "Never";
      case errors_1.ValueErrorType.Not:
        return "Value should not match";
      case errors_1.ValueErrorType.Null:
        return "Expected null";
      case errors_1.ValueErrorType.NumberExclusiveMaximum:
        return `Expected number to be less than ${schema.exclusiveMaximum}`;
      case errors_1.ValueErrorType.NumberExclusiveMinimum:
        return `Expected number to be greater than ${schema.exclusiveMinimum}`;
      case errors_1.ValueErrorType.NumberMaximum:
        return `Expected number to be less or equal to ${schema.maximum}`;
      case errors_1.ValueErrorType.NumberMinimum:
        return `Expected number to be greater or equal to ${schema.minimum}`;
      case errors_1.ValueErrorType.NumberMultipleOf:
        return `Expected number to be a multiple of ${schema.multipleOf}`;
      case errors_1.ValueErrorType.Number:
        return "Expected number";
      case errors_1.ValueErrorType.Object:
        return "Expected object";
      case errors_1.ValueErrorType.ObjectAdditionalProperties:
        return "Unexpected property";
      case errors_1.ValueErrorType.ObjectMaxProperties:
        return `Expected object to have no more than ${schema.maxProperties} properties`;
      case errors_1.ValueErrorType.ObjectMinProperties:
        return `Expected object to have at least ${schema.minProperties} properties`;
      case errors_1.ValueErrorType.ObjectRequiredProperty:
        return "Required property";
      case errors_1.ValueErrorType.Promise:
        return "Expected Promise";
      case errors_1.ValueErrorType.StringFormatUnknown:
        return `Unknown format '${schema.format}'`;
      case errors_1.ValueErrorType.StringFormat:
        return `Expected string to match '${schema.format}' format`;
      case errors_1.ValueErrorType.StringMaxLength:
        return `Expected string length less or equal to ${schema.maxLength}`;
      case errors_1.ValueErrorType.StringMinLength:
        return `Expected string length greater or equal to ${schema.minLength}`;
      case errors_1.ValueErrorType.StringPattern:
        return `Expected string to match '${schema.pattern}'`;
      case errors_1.ValueErrorType.String:
        return "Expected string";
      case errors_1.ValueErrorType.Symbol:
        return "Expected symbol";
      case errors_1.ValueErrorType.TupleLength:
        return `Expected tuple to have ${schema.maxItems || 0} elements`;
      case errors_1.ValueErrorType.Tuple:
        return "Expected tuple";
      case errors_1.ValueErrorType.Uint8ArrayMaxByteLength:
        return `Expected byte length less or equal to ${schema.maxByteLength}`;
      case errors_1.ValueErrorType.Uint8ArrayMinByteLength:
        return `Expected byte length greater or equal to ${schema.minByteLength}`;
      case errors_1.ValueErrorType.Uint8Array:
        return "Expected Uint8Array";
      case errors_1.ValueErrorType.Undefined:
        return "Expected undefined";
      case errors_1.ValueErrorType.Union:
        return "Expected union value";
      case errors_1.ValueErrorType.Void:
        return "Expected void";
      case errors_1.ValueErrorType.Kind:
        return `Expected kind '${schema[Types.Kind]}'`;
      default:
        return "Unknown error type";
    }
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.DefaultErrorFunction = exports.TypeSystemPolicy = exports.TypeSystemErrorFunction = exports.TypeSystem = exports.TypeSystemDuplicateFormat = exports.TypeSystemDuplicateTypeKind = undefined;
  var guard_1 = require_guard();
  var errors_1 = require_errors();
  var Types = require_typebox();

  class TypeSystemDuplicateTypeKind extends Types.TypeBoxError {
    constructor(kind) {
      super(`Duplicate type kind '${kind}' detected`);
    }
  }
  exports.TypeSystemDuplicateTypeKind = TypeSystemDuplicateTypeKind;

  class TypeSystemDuplicateFormat extends Types.TypeBoxError {
    constructor(kind) {
      super(`Duplicate string format '${kind}' detected`);
    }
  }
  exports.TypeSystemDuplicateFormat = TypeSystemDuplicateFormat;
  var TypeSystem;
  (function(TypeSystem2) {
    function Type(kind, check) {
      if (Types.TypeRegistry.Has(kind))
        throw new TypeSystemDuplicateTypeKind(kind);
      Types.TypeRegistry.Set(kind, check);
      return (options = {}) => Types.Type.Unsafe({ ...options, [Types.Kind]: kind });
    }
    TypeSystem2.Type = Type;
    function Format(format, check) {
      if (Types.FormatRegistry.Has(format))
        throw new TypeSystemDuplicateFormat(format);
      Types.FormatRegistry.Set(format, check);
      return format;
    }
    TypeSystem2.Format = Format;
  })(TypeSystem || (exports.TypeSystem = TypeSystem = {}));
  var TypeSystemErrorFunction;
  (function(TypeSystemErrorFunction2) {
    let errorMessageFunction = DefaultErrorFunction;
    function Reset() {
      errorMessageFunction = DefaultErrorFunction;
    }
    TypeSystemErrorFunction2.Reset = Reset;
    function Set2(callback) {
      errorMessageFunction = callback;
    }
    TypeSystemErrorFunction2.Set = Set2;
    function Get() {
      return errorMessageFunction;
    }
    TypeSystemErrorFunction2.Get = Get;
  })(TypeSystemErrorFunction || (exports.TypeSystemErrorFunction = TypeSystemErrorFunction = {}));
  var TypeSystemPolicy;
  (function(TypeSystemPolicy2) {
    TypeSystemPolicy2.ExactOptionalPropertyTypes = false;
    TypeSystemPolicy2.AllowArrayObject = false;
    TypeSystemPolicy2.AllowNaN = false;
    TypeSystemPolicy2.AllowNullVoid = false;
    function IsExactOptionalProperty(value, key) {
      return TypeSystemPolicy2.ExactOptionalPropertyTypes ? key in value : value[key] !== undefined;
    }
    TypeSystemPolicy2.IsExactOptionalProperty = IsExactOptionalProperty;
    function IsObjectLike(value) {
      const isObject = (0, guard_1.IsObject)(value);
      return TypeSystemPolicy2.AllowArrayObject ? isObject : isObject && !(0, guard_1.IsArray)(value);
    }
    TypeSystemPolicy2.IsObjectLike = IsObjectLike;
    function IsRecordLike(value) {
      return IsObjectLike(value) && !(value instanceof Date) && !(value instanceof Uint8Array);
    }
    TypeSystemPolicy2.IsRecordLike = IsRecordLike;
    function IsNumberLike(value) {
      const isNumber = (0, guard_1.IsNumber)(value);
      return TypeSystemPolicy2.AllowNaN ? isNumber : isNumber && Number.isFinite(value);
    }
    TypeSystemPolicy2.IsNumberLike = IsNumberLike;
    function IsVoidLike(value) {
      const isUndefined = (0, guard_1.IsUndefined)(value);
      return TypeSystemPolicy2.AllowNullVoid ? isUndefined || value === null : isUndefined;
    }
    TypeSystemPolicy2.IsVoidLike = IsVoidLike;
  })(TypeSystemPolicy || (exports.TypeSystemPolicy = TypeSystemPolicy = {}));
  exports.DefaultErrorFunction = DefaultErrorFunction;
});

// node_modules/@sinclair/typebox/value/deref.js
var require_deref = __commonJS((exports) => {
  var Deref = function(schema, references) {
    const index = references.findIndex((target) => target.$id === schema.$ref);
    if (index === -1)
      throw new TypeDereferenceError(schema);
    return references[index];
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Deref = exports.TypeDereferenceError = undefined;
  var typebox_1 = require_typebox();

  class TypeDereferenceError extends typebox_1.TypeBoxError {
    constructor(schema) {
      super(`Unable to dereference schema with \$id '${schema.$id}'`);
      this.schema = schema;
    }
  }
  exports.TypeDereferenceError = TypeDereferenceError;
  exports.Deref = Deref;
});

// node_modules/@sinclair/typebox/value/hash.js
var require_hash = __commonJS((exports) => {
  function* NumberToBytes(value) {
    const byteCount = value === 0 ? 1 : Math.ceil(Math.floor(Math.log2(value) + 1) / 8);
    for (let i = 0;i < byteCount; i++) {
      yield value >> 8 * (byteCount - 1 - i) & 255;
    }
  }
  var ArrayType = function(value) {
    FNV1A64(ByteMarker.Array);
    for (const item of value) {
      Visit(item);
    }
  };
  var BooleanType = function(value) {
    FNV1A64(ByteMarker.Boolean);
    FNV1A64(value ? 1 : 0);
  };
  var BigIntType = function(value) {
    FNV1A64(ByteMarker.BigInt);
    F64In.setBigInt64(0, value);
    for (const byte of F64Out) {
      FNV1A64(byte);
    }
  };
  var DateType = function(value) {
    FNV1A64(ByteMarker.Date);
    Visit(value.getTime());
  };
  var NullType = function(value) {
    FNV1A64(ByteMarker.Null);
  };
  var NumberType = function(value) {
    FNV1A64(ByteMarker.Number);
    F64In.setFloat64(0, value);
    for (const byte of F64Out) {
      FNV1A64(byte);
    }
  };
  var ObjectType = function(value) {
    FNV1A64(ByteMarker.Object);
    for (const key of globalThis.Object.keys(value).sort()) {
      Visit(key);
      Visit(value[key]);
    }
  };
  var StringType = function(value) {
    FNV1A64(ByteMarker.String);
    for (let i = 0;i < value.length; i++) {
      for (const byte of NumberToBytes(value.charCodeAt(i))) {
        FNV1A64(byte);
      }
    }
  };
  var SymbolType = function(value) {
    FNV1A64(ByteMarker.Symbol);
    Visit(value.description);
  };
  var Uint8ArrayType = function(value) {
    FNV1A64(ByteMarker.Uint8Array);
    for (let i = 0;i < value.length; i++) {
      FNV1A64(value[i]);
    }
  };
  var UndefinedType = function(value) {
    return FNV1A64(ByteMarker.Undefined);
  };
  var Visit = function(value) {
    if ((0, guard_1.IsArray)(value))
      return ArrayType(value);
    if ((0, guard_1.IsBoolean)(value))
      return BooleanType(value);
    if ((0, guard_1.IsBigInt)(value))
      return BigIntType(value);
    if ((0, guard_1.IsDate)(value))
      return DateType(value);
    if ((0, guard_1.IsNull)(value))
      return NullType(value);
    if ((0, guard_1.IsNumber)(value))
      return NumberType(value);
    if ((0, guard_1.IsPlainObject)(value))
      return ObjectType(value);
    if ((0, guard_1.IsString)(value))
      return StringType(value);
    if ((0, guard_1.IsSymbol)(value))
      return SymbolType(value);
    if ((0, guard_1.IsUint8Array)(value))
      return Uint8ArrayType(value);
    if ((0, guard_1.IsUndefined)(value))
      return UndefinedType(value);
    throw new ValueHashError(value);
  };
  var FNV1A64 = function(byte) {
    Accumulator = Accumulator ^ Bytes[byte];
    Accumulator = Accumulator * Prime % Size;
  };
  var Hash = function(value) {
    Accumulator = BigInt("14695981039346656037");
    Visit(value);
    return Accumulator;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Hash = exports.ByteMarker = exports.ValueHashError = undefined;
  var guard_1 = require_guard();

  class ValueHashError extends Error {
    constructor(value) {
      super(`Unable to hash value`);
      this.value = value;
    }
  }
  exports.ValueHashError = ValueHashError;
  var ByteMarker;
  (function(ByteMarker2) {
    ByteMarker2[ByteMarker2["Undefined"] = 0] = "Undefined";
    ByteMarker2[ByteMarker2["Null"] = 1] = "Null";
    ByteMarker2[ByteMarker2["Boolean"] = 2] = "Boolean";
    ByteMarker2[ByteMarker2["Number"] = 3] = "Number";
    ByteMarker2[ByteMarker2["String"] = 4] = "String";
    ByteMarker2[ByteMarker2["Object"] = 5] = "Object";
    ByteMarker2[ByteMarker2["Array"] = 6] = "Array";
    ByteMarker2[ByteMarker2["Date"] = 7] = "Date";
    ByteMarker2[ByteMarker2["Uint8Array"] = 8] = "Uint8Array";
    ByteMarker2[ByteMarker2["Symbol"] = 9] = "Symbol";
    ByteMarker2[ByteMarker2["BigInt"] = 10] = "BigInt";
  })(ByteMarker || (exports.ByteMarker = ByteMarker = {}));
  var Accumulator = BigInt("14695981039346656037");
  var [Prime, Size] = [BigInt("1099511628211"), BigInt("2") ** BigInt("64")];
  var Bytes = Array.from({ length: 256 }).map((_, i) => BigInt(i));
  var F64 = new Float64Array(1);
  var F64In = new DataView(F64.buffer);
  var F64Out = new Uint8Array(F64.buffer);
  exports.Hash = Hash;
});

// node_modules/@sinclair/typebox/errors/errors.js
var require_errors = __commonJS((exports) => {
  var EscapeKey = function(key) {
    return key.replace(/~/g, "~0").replace(/\//g, "~1");
  };
  var IsDefined = function(value) {
    return value !== undefined;
  };
  var Create = function(type, schema, path, value) {
    return { type, schema, path, value, message: system_1.TypeSystemErrorFunction.Get()(schema, type) };
  };
  function* TAny(schema, references, path, value) {
  }
  function* TArray(schema, references, path, value) {
    if (!(0, guard_1.IsArray)(value)) {
      return yield Create(ValueErrorType.Array, schema, path, value);
    }
    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {
      yield Create(ValueErrorType.ArrayMinItems, schema, path, value);
    }
    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {
      yield Create(ValueErrorType.ArrayMaxItems, schema, path, value);
    }
    for (let i = 0;i < value.length; i++) {
      yield* Visit(schema.items, references, `${path}/${i}`, value[i]);
    }
    if (schema.uniqueItems === true && !function() {
      const set = new Set;
      for (const element of value) {
        const hashed = (0, hash_1.Hash)(element);
        if (set.has(hashed)) {
          return false;
        } else {
          set.add(hashed);
        }
      }
      return true;
    }()) {
      yield Create(ValueErrorType.ArrayUniqueItems, schema, path, value);
    }
    if (!(IsDefined(schema.contains) || IsDefined(schema.minContains) || IsDefined(schema.maxContains))) {
      return;
    }
    const containsSchema = IsDefined(schema.contains) ? schema.contains : Types.Type.Never();
    const containsCount = value.reduce((acc, value2, index) => Visit(containsSchema, references, `${path}${index}`, value2).next().done === true ? acc + 1 : acc, 0);
    if (containsCount === 0) {
      yield Create(ValueErrorType.ArrayContains, schema, path, value);
    }
    if ((0, guard_1.IsNumber)(schema.minContains) && containsCount < schema.minContains) {
      yield Create(ValueErrorType.ArrayMinContains, schema, path, value);
    }
    if ((0, guard_1.IsNumber)(schema.maxContains) && containsCount > schema.maxContains) {
      yield Create(ValueErrorType.ArrayMaxContains, schema, path, value);
    }
  }
  function* TAsyncIterator(schema, references, path, value) {
    if (!(0, guard_1.IsAsyncIterator)(value))
      yield Create(ValueErrorType.AsyncIterator, schema, path, value);
  }
  function* TBigInt(schema, references, path, value) {
    if (!(0, guard_1.IsBigInt)(value))
      return yield Create(ValueErrorType.BigInt, schema, path, value);
    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
      yield Create(ValueErrorType.BigIntExclusiveMaximum, schema, path, value);
    }
    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
      yield Create(ValueErrorType.BigIntExclusiveMinimum, schema, path, value);
    }
    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
      yield Create(ValueErrorType.BigIntMaximum, schema, path, value);
    }
    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
      yield Create(ValueErrorType.BigIntMinimum, schema, path, value);
    }
    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {
      yield Create(ValueErrorType.BigIntMultipleOf, schema, path, value);
    }
  }
  function* TBoolean(schema, references, path, value) {
    if (!(0, guard_1.IsBoolean)(value))
      yield Create(ValueErrorType.Boolean, schema, path, value);
  }
  function* TConstructor(schema, references, path, value) {
    yield* Visit(schema.returns, references, path, value.prototype);
  }
  function* TDate(schema, references, path, value) {
    if (!(0, guard_1.IsDate)(value))
      return yield Create(ValueErrorType.Date, schema, path, value);
    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {
      yield Create(ValueErrorType.DateExclusiveMaximumTimestamp, schema, path, value);
    }
    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {
      yield Create(ValueErrorType.DateExclusiveMinimumTimestamp, schema, path, value);
    }
    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {
      yield Create(ValueErrorType.DateMaximumTimestamp, schema, path, value);
    }
    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {
      yield Create(ValueErrorType.DateMinimumTimestamp, schema, path, value);
    }
    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {
      yield Create(ValueErrorType.DateMultipleOfTimestamp, schema, path, value);
    }
  }
  function* TFunction(schema, references, path, value) {
    if (!(0, guard_1.IsFunction)(value))
      yield Create(ValueErrorType.Function, schema, path, value);
  }
  function* TInteger(schema, references, path, value) {
    if (!(0, guard_1.IsInteger)(value))
      return yield Create(ValueErrorType.Integer, schema, path, value);
    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
      yield Create(ValueErrorType.IntegerExclusiveMaximum, schema, path, value);
    }
    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
      yield Create(ValueErrorType.IntegerExclusiveMinimum, schema, path, value);
    }
    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
      yield Create(ValueErrorType.IntegerMaximum, schema, path, value);
    }
    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
      yield Create(ValueErrorType.IntegerMinimum, schema, path, value);
    }
    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
      yield Create(ValueErrorType.IntegerMultipleOf, schema, path, value);
    }
  }
  function* TIntersect(schema, references, path, value) {
    for (const inner of schema.allOf) {
      const next = Visit(inner, references, path, value).next();
      if (!next.done) {
        yield Create(ValueErrorType.Intersect, schema, path, value);
        yield next.value;
      }
    }
    if (schema.unevaluatedProperties === false) {
      const keyCheck = new RegExp(Types.KeyResolver.ResolvePattern(schema));
      for (const valueKey of Object.getOwnPropertyNames(value)) {
        if (!keyCheck.test(valueKey)) {
          yield Create(ValueErrorType.IntersectUnevaluatedProperties, schema, `${path}/${valueKey}`, value);
        }
      }
    }
    if (typeof schema.unevaluatedProperties === "object") {
      const keyCheck = new RegExp(Types.KeyResolver.ResolvePattern(schema));
      for (const valueKey of Object.getOwnPropertyNames(value)) {
        if (!keyCheck.test(valueKey)) {
          const next = Visit(schema.unevaluatedProperties, references, `${path}/${valueKey}`, value[valueKey]).next();
          if (!next.done)
            yield next.value;
        }
      }
    }
  }
  function* TIterator(schema, references, path, value) {
    if (!(0, guard_1.IsIterator)(value))
      yield Create(ValueErrorType.Iterator, schema, path, value);
  }
  function* TLiteral(schema, references, path, value) {
    if (!(value === schema.const))
      yield Create(ValueErrorType.Literal, schema, path, value);
  }
  function* TNever(schema, references, path, value) {
    yield Create(ValueErrorType.Never, schema, path, value);
  }
  function* TNot(schema, references, path, value) {
    if (Visit(schema.not, references, path, value).next().done === true)
      yield Create(ValueErrorType.Not, schema, path, value);
  }
  function* TNull(schema, references, path, value) {
    if (!(0, guard_1.IsNull)(value))
      yield Create(ValueErrorType.Null, schema, path, value);
  }
  function* TNumber(schema, references, path, value) {
    if (!system_1.TypeSystemPolicy.IsNumberLike(value))
      return yield Create(ValueErrorType.Number, schema, path, value);
    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
      yield Create(ValueErrorType.NumberExclusiveMaximum, schema, path, value);
    }
    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
      yield Create(ValueErrorType.NumberExclusiveMinimum, schema, path, value);
    }
    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
      yield Create(ValueErrorType.NumberMaximum, schema, path, value);
    }
    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
      yield Create(ValueErrorType.NumberMinimum, schema, path, value);
    }
    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
      yield Create(ValueErrorType.NumberMultipleOf, schema, path, value);
    }
  }
  function* TObject(schema, references, path, value) {
    if (!system_1.TypeSystemPolicy.IsObjectLike(value))
      return yield Create(ValueErrorType.Object, schema, path, value);
    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
      yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);
    }
    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
      yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);
    }
    const requiredKeys = Array.isArray(schema.required) ? schema.required : [];
    const knownKeys = Object.getOwnPropertyNames(schema.properties);
    const unknownKeys = Object.getOwnPropertyNames(value);
    for (const requiredKey of requiredKeys) {
      if (unknownKeys.includes(requiredKey))
        continue;
      yield Create(ValueErrorType.ObjectRequiredProperty, schema.properties[requiredKey], `${path}/${EscapeKey(requiredKey)}`, undefined);
    }
    if (schema.additionalProperties === false) {
      for (const valueKey of unknownKeys) {
        if (!knownKeys.includes(valueKey)) {
          yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);
        }
      }
    }
    if (typeof schema.additionalProperties === "object") {
      for (const valueKey of unknownKeys) {
        if (knownKeys.includes(valueKey))
          continue;
        yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(valueKey)}`, value[valueKey]);
      }
    }
    for (const knownKey of knownKeys) {
      const property = schema.properties[knownKey];
      if (schema.required && schema.required.includes(knownKey)) {
        yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);
        if (Types.ExtendsUndefined.Check(schema) && !(knownKey in value)) {
          yield Create(ValueErrorType.ObjectRequiredProperty, property, `${path}/${EscapeKey(knownKey)}`, undefined);
        }
      } else {
        if (system_1.TypeSystemPolicy.IsExactOptionalProperty(value, knownKey)) {
          yield* Visit(property, references, `${path}/${EscapeKey(knownKey)}`, value[knownKey]);
        }
      }
    }
  }
  function* TPromise(schema, references, path, value) {
    if (!(0, guard_1.IsPromise)(value))
      yield Create(ValueErrorType.Promise, schema, path, value);
  }
  function* TRecord(schema, references, path, value) {
    if (!system_1.TypeSystemPolicy.IsRecordLike(value))
      return yield Create(ValueErrorType.Object, schema, path, value);
    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
      yield Create(ValueErrorType.ObjectMinProperties, schema, path, value);
    }
    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
      yield Create(ValueErrorType.ObjectMaxProperties, schema, path, value);
    }
    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
    const regex = new RegExp(patternKey);
    for (const [propertyKey, propertyValue] of Object.entries(value)) {
      if (regex.test(propertyKey))
        yield* Visit(patternSchema, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
    }
    if (typeof schema.additionalProperties === "object") {
      for (const [propertyKey, propertyValue] of Object.entries(value)) {
        if (!regex.test(propertyKey))
          yield* Visit(schema.additionalProperties, references, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
      }
    }
    if (schema.additionalProperties === false) {
      for (const [propertyKey, propertyValue] of Object.entries(value)) {
        if (regex.test(propertyKey))
          continue;
        return yield Create(ValueErrorType.ObjectAdditionalProperties, schema, `${path}/${EscapeKey(propertyKey)}`, propertyValue);
      }
    }
  }
  function* TRef(schema, references, path, value) {
    yield* Visit((0, deref_1.Deref)(schema, references), references, path, value);
  }
  function* TString(schema, references, path, value) {
    if (!(0, guard_1.IsString)(value))
      return yield Create(ValueErrorType.String, schema, path, value);
    if (IsDefined(schema.minLength) && !(value.length >= schema.minLength)) {
      yield Create(ValueErrorType.StringMinLength, schema, path, value);
    }
    if (IsDefined(schema.maxLength) && !(value.length <= schema.maxLength)) {
      yield Create(ValueErrorType.StringMaxLength, schema, path, value);
    }
    if ((0, guard_1.IsString)(schema.pattern)) {
      const regex = new RegExp(schema.pattern);
      if (!regex.test(value)) {
        yield Create(ValueErrorType.StringPattern, schema, path, value);
      }
    }
    if ((0, guard_1.IsString)(schema.format)) {
      if (!Types.FormatRegistry.Has(schema.format)) {
        yield Create(ValueErrorType.StringFormatUnknown, schema, path, value);
      } else {
        const format = Types.FormatRegistry.Get(schema.format);
        if (!format(value)) {
          yield Create(ValueErrorType.StringFormat, schema, path, value);
        }
      }
    }
  }
  function* TSymbol(schema, references, path, value) {
    if (!(0, guard_1.IsSymbol)(value))
      yield Create(ValueErrorType.Symbol, schema, path, value);
  }
  function* TTemplateLiteral(schema, references, path, value) {
    if (!(0, guard_1.IsString)(value))
      return yield Create(ValueErrorType.String, schema, path, value);
    const regex = new RegExp(schema.pattern);
    if (!regex.test(value)) {
      yield Create(ValueErrorType.StringPattern, schema, path, value);
    }
  }
  function* TThis(schema, references, path, value) {
    yield* Visit((0, deref_1.Deref)(schema, references), references, path, value);
  }
  function* TTuple(schema, references, path, value) {
    if (!(0, guard_1.IsArray)(value))
      return yield Create(ValueErrorType.Tuple, schema, path, value);
    if (schema.items === undefined && !(value.length === 0)) {
      return yield Create(ValueErrorType.TupleLength, schema, path, value);
    }
    if (!(value.length === schema.maxItems)) {
      return yield Create(ValueErrorType.TupleLength, schema, path, value);
    }
    if (!schema.items) {
      return;
    }
    for (let i = 0;i < schema.items.length; i++) {
      yield* Visit(schema.items[i], references, `${path}/${i}`, value[i]);
    }
  }
  function* TUndefined(schema, references, path, value) {
    if (!(0, guard_1.IsUndefined)(value))
      yield Create(ValueErrorType.Undefined, schema, path, value);
  }
  function* TUnion(schema, references, path, value) {
    let count = 0;
    for (const subschema of schema.anyOf) {
      const errors = [...Visit(subschema, references, path, value)];
      if (errors.length === 0)
        return;
      count += errors.length;
    }
    if (count > 0) {
      yield Create(ValueErrorType.Union, schema, path, value);
    }
  }
  function* TUint8Array(schema, references, path, value) {
    if (!(0, guard_1.IsUint8Array)(value))
      return yield Create(ValueErrorType.Uint8Array, schema, path, value);
    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {
      yield Create(ValueErrorType.Uint8ArrayMaxByteLength, schema, path, value);
    }
    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {
      yield Create(ValueErrorType.Uint8ArrayMinByteLength, schema, path, value);
    }
  }
  function* TUnknown(schema, references, path, value) {
  }
  function* TVoid(schema, references, path, value) {
    if (!system_1.TypeSystemPolicy.IsVoidLike(value))
      yield Create(ValueErrorType.Void, schema, path, value);
  }
  function* TKind(schema, references, path, value) {
    const check = Types.TypeRegistry.Get(schema[Types.Kind]);
    if (!check(schema, value))
      yield Create(ValueErrorType.Kind, schema, path, value);
  }
  function* Visit(schema, references, path, value) {
    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;
    const schema_ = schema;
    switch (schema_[Types.Kind]) {
      case "Any":
        return yield* TAny(schema_, references_, path, value);
      case "Array":
        return yield* TArray(schema_, references_, path, value);
      case "AsyncIterator":
        return yield* TAsyncIterator(schema_, references_, path, value);
      case "BigInt":
        return yield* TBigInt(schema_, references_, path, value);
      case "Boolean":
        return yield* TBoolean(schema_, references_, path, value);
      case "Constructor":
        return yield* TConstructor(schema_, references_, path, value);
      case "Date":
        return yield* TDate(schema_, references_, path, value);
      case "Function":
        return yield* TFunction(schema_, references_, path, value);
      case "Integer":
        return yield* TInteger(schema_, references_, path, value);
      case "Intersect":
        return yield* TIntersect(schema_, references_, path, value);
      case "Iterator":
        return yield* TIterator(schema_, references_, path, value);
      case "Literal":
        return yield* TLiteral(schema_, references_, path, value);
      case "Never":
        return yield* TNever(schema_, references_, path, value);
      case "Not":
        return yield* TNot(schema_, references_, path, value);
      case "Null":
        return yield* TNull(schema_, references_, path, value);
      case "Number":
        return yield* TNumber(schema_, references_, path, value);
      case "Object":
        return yield* TObject(schema_, references_, path, value);
      case "Promise":
        return yield* TPromise(schema_, references_, path, value);
      case "Record":
        return yield* TRecord(schema_, references_, path, value);
      case "Ref":
        return yield* TRef(schema_, references_, path, value);
      case "String":
        return yield* TString(schema_, references_, path, value);
      case "Symbol":
        return yield* TSymbol(schema_, references_, path, value);
      case "TemplateLiteral":
        return yield* TTemplateLiteral(schema_, references_, path, value);
      case "This":
        return yield* TThis(schema_, references_, path, value);
      case "Tuple":
        return yield* TTuple(schema_, references_, path, value);
      case "Undefined":
        return yield* TUndefined(schema_, references_, path, value);
      case "Union":
        return yield* TUnion(schema_, references_, path, value);
      case "Uint8Array":
        return yield* TUint8Array(schema_, references_, path, value);
      case "Unknown":
        return yield* TUnknown(schema_, references_, path, value);
      case "Void":
        return yield* TVoid(schema_, references_, path, value);
      default:
        if (!Types.TypeRegistry.Has(schema_[Types.Kind]))
          throw new ValueErrorsUnknownTypeError(schema);
        return yield* TKind(schema_, references_, path, value);
    }
  }
  var Errors = function(...args) {
    const iterator = args.length === 3 ? Visit(args[0], args[1], "", args[2]) : Visit(args[0], [], "", args[1]);
    return new ValueErrorIterator(iterator);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Errors = exports.ValueErrorIterator = exports.EscapeKey = exports.ValueErrorsUnknownTypeError = exports.ValueErrorType = undefined;
  var guard_1 = require_guard();
  var system_1 = require_system();
  var deref_1 = require_deref();
  var hash_1 = require_hash();
  var Types = require_typebox();
  var ValueErrorType;
  (function(ValueErrorType2) {
    ValueErrorType2[ValueErrorType2["ArrayContains"] = 0] = "ArrayContains";
    ValueErrorType2[ValueErrorType2["ArrayMaxContains"] = 1] = "ArrayMaxContains";
    ValueErrorType2[ValueErrorType2["ArrayMaxItems"] = 2] = "ArrayMaxItems";
    ValueErrorType2[ValueErrorType2["ArrayMinContains"] = 3] = "ArrayMinContains";
    ValueErrorType2[ValueErrorType2["ArrayMinItems"] = 4] = "ArrayMinItems";
    ValueErrorType2[ValueErrorType2["ArrayUniqueItems"] = 5] = "ArrayUniqueItems";
    ValueErrorType2[ValueErrorType2["Array"] = 6] = "Array";
    ValueErrorType2[ValueErrorType2["AsyncIterator"] = 7] = "AsyncIterator";
    ValueErrorType2[ValueErrorType2["BigIntExclusiveMaximum"] = 8] = "BigIntExclusiveMaximum";
    ValueErrorType2[ValueErrorType2["BigIntExclusiveMinimum"] = 9] = "BigIntExclusiveMinimum";
    ValueErrorType2[ValueErrorType2["BigIntMaximum"] = 10] = "BigIntMaximum";
    ValueErrorType2[ValueErrorType2["BigIntMinimum"] = 11] = "BigIntMinimum";
    ValueErrorType2[ValueErrorType2["BigIntMultipleOf"] = 12] = "BigIntMultipleOf";
    ValueErrorType2[ValueErrorType2["BigInt"] = 13] = "BigInt";
    ValueErrorType2[ValueErrorType2["Boolean"] = 14] = "Boolean";
    ValueErrorType2[ValueErrorType2["DateExclusiveMaximumTimestamp"] = 15] = "DateExclusiveMaximumTimestamp";
    ValueErrorType2[ValueErrorType2["DateExclusiveMinimumTimestamp"] = 16] = "DateExclusiveMinimumTimestamp";
    ValueErrorType2[ValueErrorType2["DateMaximumTimestamp"] = 17] = "DateMaximumTimestamp";
    ValueErrorType2[ValueErrorType2["DateMinimumTimestamp"] = 18] = "DateMinimumTimestamp";
    ValueErrorType2[ValueErrorType2["DateMultipleOfTimestamp"] = 19] = "DateMultipleOfTimestamp";
    ValueErrorType2[ValueErrorType2["Date"] = 20] = "Date";
    ValueErrorType2[ValueErrorType2["Function"] = 21] = "Function";
    ValueErrorType2[ValueErrorType2["IntegerExclusiveMaximum"] = 22] = "IntegerExclusiveMaximum";
    ValueErrorType2[ValueErrorType2["IntegerExclusiveMinimum"] = 23] = "IntegerExclusiveMinimum";
    ValueErrorType2[ValueErrorType2["IntegerMaximum"] = 24] = "IntegerMaximum";
    ValueErrorType2[ValueErrorType2["IntegerMinimum"] = 25] = "IntegerMinimum";
    ValueErrorType2[ValueErrorType2["IntegerMultipleOf"] = 26] = "IntegerMultipleOf";
    ValueErrorType2[ValueErrorType2["Integer"] = 27] = "Integer";
    ValueErrorType2[ValueErrorType2["IntersectUnevaluatedProperties"] = 28] = "IntersectUnevaluatedProperties";
    ValueErrorType2[ValueErrorType2["Intersect"] = 29] = "Intersect";
    ValueErrorType2[ValueErrorType2["Iterator"] = 30] = "Iterator";
    ValueErrorType2[ValueErrorType2["Kind"] = 31] = "Kind";
    ValueErrorType2[ValueErrorType2["Literal"] = 32] = "Literal";
    ValueErrorType2[ValueErrorType2["Never"] = 33] = "Never";
    ValueErrorType2[ValueErrorType2["Not"] = 34] = "Not";
    ValueErrorType2[ValueErrorType2["Null"] = 35] = "Null";
    ValueErrorType2[ValueErrorType2["NumberExclusiveMaximum"] = 36] = "NumberExclusiveMaximum";
    ValueErrorType2[ValueErrorType2["NumberExclusiveMinimum"] = 37] = "NumberExclusiveMinimum";
    ValueErrorType2[ValueErrorType2["NumberMaximum"] = 38] = "NumberMaximum";
    ValueErrorType2[ValueErrorType2["NumberMinimum"] = 39] = "NumberMinimum";
    ValueErrorType2[ValueErrorType2["NumberMultipleOf"] = 40] = "NumberMultipleOf";
    ValueErrorType2[ValueErrorType2["Number"] = 41] = "Number";
    ValueErrorType2[ValueErrorType2["ObjectAdditionalProperties"] = 42] = "ObjectAdditionalProperties";
    ValueErrorType2[ValueErrorType2["ObjectMaxProperties"] = 43] = "ObjectMaxProperties";
    ValueErrorType2[ValueErrorType2["ObjectMinProperties"] = 44] = "ObjectMinProperties";
    ValueErrorType2[ValueErrorType2["ObjectRequiredProperty"] = 45] = "ObjectRequiredProperty";
    ValueErrorType2[ValueErrorType2["Object"] = 46] = "Object";
    ValueErrorType2[ValueErrorType2["Promise"] = 47] = "Promise";
    ValueErrorType2[ValueErrorType2["StringFormatUnknown"] = 48] = "StringFormatUnknown";
    ValueErrorType2[ValueErrorType2["StringFormat"] = 49] = "StringFormat";
    ValueErrorType2[ValueErrorType2["StringMaxLength"] = 50] = "StringMaxLength";
    ValueErrorType2[ValueErrorType2["StringMinLength"] = 51] = "StringMinLength";
    ValueErrorType2[ValueErrorType2["StringPattern"] = 52] = "StringPattern";
    ValueErrorType2[ValueErrorType2["String"] = 53] = "String";
    ValueErrorType2[ValueErrorType2["Symbol"] = 54] = "Symbol";
    ValueErrorType2[ValueErrorType2["TupleLength"] = 55] = "TupleLength";
    ValueErrorType2[ValueErrorType2["Tuple"] = 56] = "Tuple";
    ValueErrorType2[ValueErrorType2["Uint8ArrayMaxByteLength"] = 57] = "Uint8ArrayMaxByteLength";
    ValueErrorType2[ValueErrorType2["Uint8ArrayMinByteLength"] = 58] = "Uint8ArrayMinByteLength";
    ValueErrorType2[ValueErrorType2["Uint8Array"] = 59] = "Uint8Array";
    ValueErrorType2[ValueErrorType2["Undefined"] = 60] = "Undefined";
    ValueErrorType2[ValueErrorType2["Union"] = 61] = "Union";
    ValueErrorType2[ValueErrorType2["Void"] = 62] = "Void";
  })(ValueErrorType || (exports.ValueErrorType = ValueErrorType = {}));

  class ValueErrorsUnknownTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Unknown type");
      this.schema = schema;
    }
  }
  exports.ValueErrorsUnknownTypeError = ValueErrorsUnknownTypeError;
  exports.EscapeKey = EscapeKey;

  class ValueErrorIterator {
    constructor(iterator) {
      this.iterator = iterator;
    }
    [Symbol.iterator]() {
      return this.iterator;
    }
    First() {
      const next = this.iterator.next();
      return next.done ? undefined : next.value;
    }
  }
  exports.ValueErrorIterator = ValueErrorIterator;
  exports.Errors = Errors;
});

// node_modules/@sinclair/typebox/errors/index.js
var require_errors2 = __commonJS((exports) => {
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() {
        return m[k];
      } };
    }
    Object.defineProperty(o, k2, desc);
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __exportStar = exports && exports.__exportStar || function(m, exports2) {
    for (var p in m)
      if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
        __createBinding(exports2, m, p);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  __exportStar(require_errors(), exports);
});

// node_modules/@sinclair/typebox/value/pointer.js
var require_pointer = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ValuePointer = exports.ValuePointerRootDeleteError = exports.ValuePointerRootSetError = undefined;

  class ValuePointerRootSetError extends Error {
    constructor(value, path, update) {
      super("Cannot set root value");
      this.value = value;
      this.path = path;
      this.update = update;
    }
  }
  exports.ValuePointerRootSetError = ValuePointerRootSetError;

  class ValuePointerRootDeleteError extends Error {
    constructor(value, path) {
      super("Cannot delete root value");
      this.value = value;
      this.path = path;
    }
  }
  exports.ValuePointerRootDeleteError = ValuePointerRootDeleteError;
  var ValuePointer;
  (function(ValuePointer2) {
    function Escape(component) {
      return component.indexOf("~") === -1 ? component : component.replace(/~1/g, "/").replace(/~0/g, "~");
    }
    function* Format(pointer) {
      if (pointer === "")
        return;
      let [start, end] = [0, 0];
      for (let i = 0;i < pointer.length; i++) {
        const char = pointer.charAt(i);
        if (char === "/") {
          if (i === 0) {
            start = i + 1;
          } else {
            end = i;
            yield Escape(pointer.slice(start, end));
            start = i + 1;
          }
        } else {
          end = i;
        }
      }
      yield Escape(pointer.slice(start));
    }
    ValuePointer2.Format = Format;
    function Set2(value, pointer, update) {
      if (pointer === "")
        throw new ValuePointerRootSetError(value, pointer, update);
      let [owner, next, key] = [null, value, ""];
      for (const component of Format(pointer)) {
        if (next[component] === undefined)
          next[component] = {};
        owner = next;
        next = next[component];
        key = component;
      }
      owner[key] = update;
    }
    ValuePointer2.Set = Set2;
    function Delete(value, pointer) {
      if (pointer === "")
        throw new ValuePointerRootDeleteError(value, pointer);
      let [owner, next, key] = [null, value, ""];
      for (const component of Format(pointer)) {
        if (next[component] === undefined || next[component] === null)
          return;
        owner = next;
        next = next[component];
        key = component;
      }
      if (Array.isArray(owner)) {
        const index = parseInt(key);
        owner.splice(index, 1);
      } else {
        delete owner[key];
      }
    }
    ValuePointer2.Delete = Delete;
    function Has(value, pointer) {
      if (pointer === "")
        return true;
      let [owner, next, key] = [null, value, ""];
      for (const component of Format(pointer)) {
        if (next[component] === undefined)
          return false;
        owner = next;
        next = next[component];
        key = component;
      }
      return Object.getOwnPropertyNames(owner).includes(key);
    }
    ValuePointer2.Has = Has;
    function Get(value, pointer) {
      if (pointer === "")
        return value;
      let current = value;
      for (const component of Format(pointer)) {
        if (current[component] === undefined)
          return;
        current = current[component];
      }
      return current;
    }
    ValuePointer2.Get = Get;
  })(ValuePointer || (exports.ValuePointer = ValuePointer = {}));
});

// node_modules/@sinclair/typebox/value/clone.js
var require_clone = __commonJS((exports) => {
  var ObjectType = function(value) {
    const keys = [...Object.getOwnPropertyNames(value), ...Object.getOwnPropertySymbols(value)];
    return keys.reduce((acc, key) => ({ ...acc, [key]: Clone(value[key]) }), {});
  };
  var ArrayType = function(value) {
    return value.map((element) => Clone(element));
  };
  var TypedArrayType = function(value) {
    return value.slice();
  };
  var DateType = function(value) {
    return new Date(value.toISOString());
  };
  var ValueType = function(value) {
    return value;
  };
  var Clone = function(value) {
    if ((0, guard_1.IsArray)(value))
      return ArrayType(value);
    if ((0, guard_1.IsDate)(value))
      return DateType(value);
    if ((0, guard_1.IsPlainObject)(value))
      return ObjectType(value);
    if ((0, guard_1.IsTypedArray)(value))
      return TypedArrayType(value);
    if ((0, guard_1.IsValueType)(value))
      return ValueType(value);
    throw new Error("ValueClone: Unable to clone value");
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Clone = undefined;
  var guard_1 = require_guard();
  exports.Clone = Clone;
});

// node_modules/@sinclair/typebox/value/delta.js
var require_delta = __commonJS((exports) => {
  var CreateUpdate = function(path, value) {
    return { type: "update", path, value };
  };
  var CreateInsert = function(path, value) {
    return { type: "insert", path, value };
  };
  var CreateDelete = function(path) {
    return { type: "delete", path };
  };
  function* ObjectType(path, current, next) {
    if (!(0, guard_1.IsPlainObject)(next))
      return yield CreateUpdate(path, next);
    const currentKeys = [...Object.keys(current), ...Object.getOwnPropertySymbols(current)];
    const nextKeys = [...Object.keys(next), ...Object.getOwnPropertySymbols(next)];
    for (const key of currentKeys) {
      if ((0, guard_1.IsSymbol)(key))
        throw new ValueDeltaObjectWithSymbolKeyError(key);
      if ((0, guard_1.IsUndefined)(next[key]) && nextKeys.includes(key))
        yield CreateUpdate(`${path}/${String(key)}`, undefined);
    }
    for (const key of nextKeys) {
      if ((0, guard_1.IsUndefined)(current[key]) || (0, guard_1.IsUndefined)(next[key]))
        continue;
      if ((0, guard_1.IsSymbol)(key))
        throw new ValueDeltaObjectWithSymbolKeyError(key);
      yield* Visit(`${path}/${String(key)}`, current[key], next[key]);
    }
    for (const key of nextKeys) {
      if ((0, guard_1.IsSymbol)(key))
        throw new ValueDeltaObjectWithSymbolKeyError(key);
      if ((0, guard_1.IsUndefined)(current[key]))
        yield CreateInsert(`${path}/${String(key)}`, next[key]);
    }
    for (const key of currentKeys.reverse()) {
      if ((0, guard_1.IsSymbol)(key))
        throw new ValueDeltaObjectWithSymbolKeyError(key);
      if ((0, guard_1.IsUndefined)(next[key]) && !nextKeys.includes(key))
        yield CreateDelete(`${path}/${String(key)}`);
    }
  }
  function* ArrayType(path, current, next) {
    if (!(0, guard_1.IsArray)(next))
      return yield CreateUpdate(path, next);
    for (let i = 0;i < Math.min(current.length, next.length); i++) {
      yield* Visit(`${path}/${i}`, current[i], next[i]);
    }
    for (let i = 0;i < next.length; i++) {
      if (i < current.length)
        continue;
      yield CreateInsert(`${path}/${i}`, next[i]);
    }
    for (let i = current.length - 1;i >= 0; i--) {
      if (i < next.length)
        continue;
      yield CreateDelete(`${path}/${i}`);
    }
  }
  function* TypedArrayType(path, current, next) {
    if (!(0, guard_1.IsTypedArray)(next) || current.length !== next.length || Object.getPrototypeOf(current).constructor.name !== Object.getPrototypeOf(next).constructor.name)
      return yield CreateUpdate(path, next);
    for (let i = 0;i < Math.min(current.length, next.length); i++) {
      yield* Visit(`${path}/${i}`, current[i], next[i]);
    }
  }
  function* ValueType(path, current, next) {
    if (current === next)
      return;
    yield CreateUpdate(path, next);
  }
  function* Visit(path, current, next) {
    if ((0, guard_1.IsPlainObject)(current))
      return yield* ObjectType(path, current, next);
    if ((0, guard_1.IsArray)(current))
      return yield* ArrayType(path, current, next);
    if ((0, guard_1.IsTypedArray)(current))
      return yield* TypedArrayType(path, current, next);
    if ((0, guard_1.IsValueType)(current))
      return yield* ValueType(path, current, next);
    throw new ValueDeltaUnableToDiffUnknownValue(current);
  }
  var Diff = function(current, next) {
    return [...Visit("", current, next)];
  };
  var IsRootUpdate = function(edits) {
    return edits.length > 0 && edits[0].path === "" && edits[0].type === "update";
  };
  var IsIdentity = function(edits) {
    return edits.length === 0;
  };
  var Patch = function(current, edits) {
    if (IsRootUpdate(edits)) {
      return (0, clone_1.Clone)(edits[0].value);
    }
    if (IsIdentity(edits)) {
      return (0, clone_1.Clone)(current);
    }
    const clone = (0, clone_1.Clone)(current);
    for (const edit of edits) {
      switch (edit.type) {
        case "insert": {
          pointer_1.ValuePointer.Set(clone, edit.path, edit.value);
          break;
        }
        case "update": {
          pointer_1.ValuePointer.Set(clone, edit.path, edit.value);
          break;
        }
        case "delete": {
          pointer_1.ValuePointer.Delete(clone, edit.path);
          break;
        }
      }
    }
    return clone;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Patch = exports.Diff = exports.ValueDeltaUnableToDiffUnknownValue = exports.ValueDeltaObjectWithSymbolKeyError = exports.Edit = exports.Delete = exports.Update = exports.Insert = undefined;
  var guard_1 = require_guard();
  var typebox_1 = require_typebox();
  var pointer_1 = require_pointer();
  var clone_1 = require_clone();
  exports.Insert = typebox_1.Type.Object({
    type: typebox_1.Type.Literal("insert"),
    path: typebox_1.Type.String(),
    value: typebox_1.Type.Unknown()
  });
  exports.Update = typebox_1.Type.Object({
    type: typebox_1.Type.Literal("update"),
    path: typebox_1.Type.String(),
    value: typebox_1.Type.Unknown()
  });
  exports.Delete = typebox_1.Type.Object({
    type: typebox_1.Type.Literal("delete"),
    path: typebox_1.Type.String()
  });
  exports.Edit = typebox_1.Type.Union([exports.Insert, exports.Update, exports.Delete]);

  class ValueDeltaObjectWithSymbolKeyError extends Error {
    constructor(key) {
      super("Cannot diff objects with symbol keys");
      this.key = key;
    }
  }
  exports.ValueDeltaObjectWithSymbolKeyError = ValueDeltaObjectWithSymbolKeyError;

  class ValueDeltaUnableToDiffUnknownValue extends Error {
    constructor(value) {
      super("Unable to create diff edits for unknown value");
      this.value = value;
    }
  }
  exports.ValueDeltaUnableToDiffUnknownValue = ValueDeltaUnableToDiffUnknownValue;
  exports.Diff = Diff;
  exports.Patch = Patch;
});

// node_modules/@sinclair/typebox/value/mutate.js
var require_mutate = __commonJS((exports) => {
  var ObjectType = function(root, path, current, next) {
    if (!(0, guard_1.IsPlainObject)(current)) {
      pointer_1.ValuePointer.Set(root, path, (0, clone_1.Clone)(next));
    } else {
      const currentKeys = Object.keys(current);
      const nextKeys = Object.keys(next);
      for (const currentKey of currentKeys) {
        if (!nextKeys.includes(currentKey)) {
          delete current[currentKey];
        }
      }
      for (const nextKey of nextKeys) {
        if (!currentKeys.includes(nextKey)) {
          current[nextKey] = null;
        }
      }
      for (const nextKey of nextKeys) {
        Visit(root, `${path}/${nextKey}`, current[nextKey], next[nextKey]);
      }
    }
  };
  var ArrayType = function(root, path, current, next) {
    if (!(0, guard_1.IsArray)(current)) {
      pointer_1.ValuePointer.Set(root, path, (0, clone_1.Clone)(next));
    } else {
      for (let index = 0;index < next.length; index++) {
        Visit(root, `${path}/${index}`, current[index], next[index]);
      }
      current.splice(next.length);
    }
  };
  var TypedArrayType = function(root, path, current, next) {
    if ((0, guard_1.IsTypedArray)(current) && current.length === next.length) {
      for (let i = 0;i < current.length; i++) {
        current[i] = next[i];
      }
    } else {
      pointer_1.ValuePointer.Set(root, path, (0, clone_1.Clone)(next));
    }
  };
  var ValueType = function(root, path, current, next) {
    if (current === next)
      return;
    pointer_1.ValuePointer.Set(root, path, next);
  };
  var Visit = function(root, path, current, next) {
    if ((0, guard_1.IsArray)(next))
      return ArrayType(root, path, current, next);
    if ((0, guard_1.IsTypedArray)(next))
      return TypedArrayType(root, path, current, next);
    if ((0, guard_1.IsPlainObject)(next))
      return ObjectType(root, path, current, next);
    if ((0, guard_1.IsValueType)(next))
      return ValueType(root, path, current, next);
  };
  var IsNonMutableValue = function(value) {
    return (0, guard_1.IsTypedArray)(value) || (0, guard_1.IsValueType)(value);
  };
  var IsMismatchedValue = function(current, next) {
    return (0, guard_1.IsPlainObject)(current) && (0, guard_1.IsArray)(next) || (0, guard_1.IsArray)(current) && (0, guard_1.IsPlainObject)(next);
  };
  var Mutate = function(current, next) {
    if (IsNonMutableValue(current) || IsNonMutableValue(next))
      throw new ValueMutateInvalidRootMutationError;
    if (IsMismatchedValue(current, next))
      throw new ValueMutateTypeMismatchError;
    Visit(current, "", current, next);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Mutate = exports.ValueMutateInvalidRootMutationError = exports.ValueMutateTypeMismatchError = undefined;
  var guard_1 = require_guard();
  var pointer_1 = require_pointer();
  var clone_1 = require_clone();

  class ValueMutateTypeMismatchError extends Error {
    constructor() {
      super("Cannot assign due type mismatch of assignable values");
    }
  }
  exports.ValueMutateTypeMismatchError = ValueMutateTypeMismatchError;

  class ValueMutateInvalidRootMutationError extends Error {
    constructor() {
      super("Only object and array types can be mutated at the root level");
    }
  }
  exports.ValueMutateInvalidRootMutationError = ValueMutateInvalidRootMutationError;
  exports.Mutate = Mutate;
});

// node_modules/@sinclair/typebox/value/equal.js
var require_equal = __commonJS((exports) => {
  var ObjectType = function(left, right) {
    if (!(0, guard_1.IsPlainObject)(right))
      return false;
    const leftKeys = [...Object.keys(left), ...Object.getOwnPropertySymbols(left)];
    const rightKeys = [...Object.keys(right), ...Object.getOwnPropertySymbols(right)];
    if (leftKeys.length !== rightKeys.length)
      return false;
    return leftKeys.every((key) => Equal(left[key], right[key]));
  };
  var DateType = function(left, right) {
    return (0, guard_1.IsDate)(right) && left.getTime() === right.getTime();
  };
  var ArrayType = function(left, right) {
    if (!(0, guard_1.IsArray)(right) || left.length !== right.length)
      return false;
    return left.every((value, index) => Equal(value, right[index]));
  };
  var TypedArrayType = function(left, right) {
    if (!(0, guard_1.IsTypedArray)(right) || left.length !== right.length || Object.getPrototypeOf(left).constructor.name !== Object.getPrototypeOf(right).constructor.name)
      return false;
    return left.every((value, index) => Equal(value, right[index]));
  };
  var ValueType = function(left, right) {
    return left === right;
  };
  var Equal = function(left, right) {
    if ((0, guard_1.IsPlainObject)(left))
      return ObjectType(left, right);
    if ((0, guard_1.IsDate)(left))
      return DateType(left, right);
    if ((0, guard_1.IsTypedArray)(left))
      return TypedArrayType(left, right);
    if ((0, guard_1.IsArray)(left))
      return ArrayType(left, right);
    if ((0, guard_1.IsValueType)(left))
      return ValueType(left, right);
    throw new Error("ValueEquals: Unable to compare value");
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Equal = undefined;
  var guard_1 = require_guard();
  exports.Equal = Equal;
});

// node_modules/@sinclair/typebox/system/index.js
var require_system2 = __commonJS((exports) => {
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() {
        return m[k];
      } };
    }
    Object.defineProperty(o, k2, desc);
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __exportStar = exports && exports.__exportStar || function(m, exports2) {
    for (var p in m)
      if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
        __createBinding(exports2, m, p);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ValueErrorType = undefined;
  var errors_1 = require_errors();
  Object.defineProperty(exports, "ValueErrorType", { enumerable: true, get: function() {
    return errors_1.ValueErrorType;
  } });
  __exportStar(require_system(), exports);
});

// node_modules/@sinclair/typebox/value/check.js
var require_check = __commonJS((exports) => {
  var IsAnyOrUnknown = function(schema) {
    return schema[Types.Kind] === "Any" || schema[Types.Kind] === "Unknown";
  };
  var IsDefined = function(value) {
    return value !== undefined;
  };
  var TAny = function(schema, references, value) {
    return true;
  };
  var TArray = function(schema, references, value) {
    if (!(0, guard_1.IsArray)(value))
      return false;
    if (IsDefined(schema.minItems) && !(value.length >= schema.minItems)) {
      return false;
    }
    if (IsDefined(schema.maxItems) && !(value.length <= schema.maxItems)) {
      return false;
    }
    if (!value.every((value2) => Visit(schema.items, references, value2))) {
      return false;
    }
    if (schema.uniqueItems === true && !function() {
      const set = new Set;
      for (const element of value) {
        const hashed = (0, hash_1.Hash)(element);
        if (set.has(hashed)) {
          return false;
        } else {
          set.add(hashed);
        }
      }
      return true;
    }()) {
      return false;
    }
    if (!(IsDefined(schema.contains) || (0, guard_1.IsNumber)(schema.minContains) || (0, guard_1.IsNumber)(schema.maxContains))) {
      return true;
    }
    const containsSchema = IsDefined(schema.contains) ? schema.contains : Types.Type.Never();
    const containsCount = value.reduce((acc, value2) => Visit(containsSchema, references, value2) ? acc + 1 : acc, 0);
    if (containsCount === 0) {
      return false;
    }
    if ((0, guard_1.IsNumber)(schema.minContains) && containsCount < schema.minContains) {
      return false;
    }
    if ((0, guard_1.IsNumber)(schema.maxContains) && containsCount > schema.maxContains) {
      return false;
    }
    return true;
  };
  var TAsyncIterator = function(schema, references, value) {
    return (0, guard_1.IsAsyncIterator)(value);
  };
  var TBigInt = function(schema, references, value) {
    if (!(0, guard_1.IsBigInt)(value))
      return false;
    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
      return false;
    }
    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
      return false;
    }
    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
      return false;
    }
    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
      return false;
    }
    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === BigInt(0))) {
      return false;
    }
    return true;
  };
  var TBoolean = function(schema, references, value) {
    return (0, guard_1.IsBoolean)(value);
  };
  var TConstructor = function(schema, references, value) {
    return Visit(schema.returns, references, value.prototype);
  };
  var TDate = function(schema, references, value) {
    if (!(0, guard_1.IsDate)(value))
      return false;
    if (IsDefined(schema.exclusiveMaximumTimestamp) && !(value.getTime() < schema.exclusiveMaximumTimestamp)) {
      return false;
    }
    if (IsDefined(schema.exclusiveMinimumTimestamp) && !(value.getTime() > schema.exclusiveMinimumTimestamp)) {
      return false;
    }
    if (IsDefined(schema.maximumTimestamp) && !(value.getTime() <= schema.maximumTimestamp)) {
      return false;
    }
    if (IsDefined(schema.minimumTimestamp) && !(value.getTime() >= schema.minimumTimestamp)) {
      return false;
    }
    if (IsDefined(schema.multipleOfTimestamp) && !(value.getTime() % schema.multipleOfTimestamp === 0)) {
      return false;
    }
    return true;
  };
  var TFunction = function(schema, references, value) {
    return (0, guard_1.IsFunction)(value);
  };
  var TInteger = function(schema, references, value) {
    if (!(0, guard_1.IsInteger)(value)) {
      return false;
    }
    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
      return false;
    }
    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
      return false;
    }
    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
      return false;
    }
    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
      return false;
    }
    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
      return false;
    }
    return true;
  };
  var TIntersect = function(schema, references, value) {
    const check1 = schema.allOf.every((schema2) => Visit(schema2, references, value));
    if (schema.unevaluatedProperties === false) {
      const keyPattern = new RegExp(Types.KeyResolver.ResolvePattern(schema));
      const check2 = Object.getOwnPropertyNames(value).every((key) => keyPattern.test(key));
      return check1 && check2;
    } else if (Types.TypeGuard.TSchema(schema.unevaluatedProperties)) {
      const keyCheck = new RegExp(Types.KeyResolver.ResolvePattern(schema));
      const check2 = Object.getOwnPropertyNames(value).every((key) => keyCheck.test(key) || Visit(schema.unevaluatedProperties, references, value[key]));
      return check1 && check2;
    } else {
      return check1;
    }
  };
  var TIterator = function(schema, references, value) {
    return (0, guard_1.IsIterator)(value);
  };
  var TLiteral = function(schema, references, value) {
    return value === schema.const;
  };
  var TNever = function(schema, references, value) {
    return false;
  };
  var TNot = function(schema, references, value) {
    return !Visit(schema.not, references, value);
  };
  var TNull = function(schema, references, value) {
    return (0, guard_1.IsNull)(value);
  };
  var TNumber = function(schema, references, value) {
    if (!index_1.TypeSystemPolicy.IsNumberLike(value))
      return false;
    if (IsDefined(schema.exclusiveMaximum) && !(value < schema.exclusiveMaximum)) {
      return false;
    }
    if (IsDefined(schema.exclusiveMinimum) && !(value > schema.exclusiveMinimum)) {
      return false;
    }
    if (IsDefined(schema.minimum) && !(value >= schema.minimum)) {
      return false;
    }
    if (IsDefined(schema.maximum) && !(value <= schema.maximum)) {
      return false;
    }
    if (IsDefined(schema.multipleOf) && !(value % schema.multipleOf === 0)) {
      return false;
    }
    return true;
  };
  var TObject = function(schema, references, value) {
    if (!index_1.TypeSystemPolicy.IsObjectLike(value))
      return false;
    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
      return false;
    }
    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
      return false;
    }
    const knownKeys = Object.getOwnPropertyNames(schema.properties);
    for (const knownKey of knownKeys) {
      const property = schema.properties[knownKey];
      if (schema.required && schema.required.includes(knownKey)) {
        if (!Visit(property, references, value[knownKey])) {
          return false;
        }
        if ((Types.ExtendsUndefined.Check(property) || IsAnyOrUnknown(property)) && !(knownKey in value)) {
          return false;
        }
      } else {
        if (index_1.TypeSystemPolicy.IsExactOptionalProperty(value, knownKey) && !Visit(property, references, value[knownKey])) {
          return false;
        }
      }
    }
    if (schema.additionalProperties === false) {
      const valueKeys = Object.getOwnPropertyNames(value);
      if (schema.required && schema.required.length === knownKeys.length && valueKeys.length === knownKeys.length) {
        return true;
      } else {
        return valueKeys.every((valueKey) => knownKeys.includes(valueKey));
      }
    } else if (typeof schema.additionalProperties === "object") {
      const valueKeys = Object.getOwnPropertyNames(value);
      return valueKeys.every((key) => knownKeys.includes(key) || Visit(schema.additionalProperties, references, value[key]));
    } else {
      return true;
    }
  };
  var TPromise = function(schema, references, value) {
    return (0, guard_1.IsPromise)(value);
  };
  var TRecord = function(schema, references, value) {
    if (!index_1.TypeSystemPolicy.IsRecordLike(value)) {
      return false;
    }
    if (IsDefined(schema.minProperties) && !(Object.getOwnPropertyNames(value).length >= schema.minProperties)) {
      return false;
    }
    if (IsDefined(schema.maxProperties) && !(Object.getOwnPropertyNames(value).length <= schema.maxProperties)) {
      return false;
    }
    const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
    const regex = new RegExp(patternKey);
    const check1 = Object.entries(value).every(([key, value2]) => {
      return regex.test(key) ? Visit(patternSchema, references, value2) : true;
    });
    const check2 = typeof schema.additionalProperties === "object" ? Object.entries(value).every(([key, value2]) => {
      return !regex.test(key) ? Visit(schema.additionalProperties, references, value2) : true;
    }) : true;
    const check3 = schema.additionalProperties === false ? Object.getOwnPropertyNames(value).every((key) => {
      return regex.test(key);
    }) : true;
    return check1 && check2 && check3;
  };
  var TRef = function(schema, references, value) {
    return Visit((0, deref_1.Deref)(schema, references), references, value);
  };
  var TString = function(schema, references, value) {
    if (!(0, guard_1.IsString)(value)) {
      return false;
    }
    if (IsDefined(schema.minLength)) {
      if (!(value.length >= schema.minLength))
        return false;
    }
    if (IsDefined(schema.maxLength)) {
      if (!(value.length <= schema.maxLength))
        return false;
    }
    if (IsDefined(schema.pattern)) {
      const regex = new RegExp(schema.pattern);
      if (!regex.test(value))
        return false;
    }
    if (IsDefined(schema.format)) {
      if (!Types.FormatRegistry.Has(schema.format))
        return false;
      const func = Types.FormatRegistry.Get(schema.format);
      return func(value);
    }
    return true;
  };
  var TSymbol = function(schema, references, value) {
    return (0, guard_1.IsSymbol)(value);
  };
  var TTemplateLiteral = function(schema, references, value) {
    return (0, guard_1.IsString)(value) && new RegExp(schema.pattern).test(value);
  };
  var TThis = function(schema, references, value) {
    return Visit((0, deref_1.Deref)(schema, references), references, value);
  };
  var TTuple = function(schema, references, value) {
    if (!(0, guard_1.IsArray)(value)) {
      return false;
    }
    if (schema.items === undefined && !(value.length === 0)) {
      return false;
    }
    if (!(value.length === schema.maxItems)) {
      return false;
    }
    if (!schema.items) {
      return true;
    }
    for (let i = 0;i < schema.items.length; i++) {
      if (!Visit(schema.items[i], references, value[i]))
        return false;
    }
    return true;
  };
  var TUndefined = function(schema, references, value) {
    return (0, guard_1.IsUndefined)(value);
  };
  var TUnion = function(schema, references, value) {
    return schema.anyOf.some((inner) => Visit(inner, references, value));
  };
  var TUint8Array = function(schema, references, value) {
    if (!(0, guard_1.IsUint8Array)(value)) {
      return false;
    }
    if (IsDefined(schema.maxByteLength) && !(value.length <= schema.maxByteLength)) {
      return false;
    }
    if (IsDefined(schema.minByteLength) && !(value.length >= schema.minByteLength)) {
      return false;
    }
    return true;
  };
  var TUnknown = function(schema, references, value) {
    return true;
  };
  var TVoid = function(schema, references, value) {
    return index_1.TypeSystemPolicy.IsVoidLike(value);
  };
  var TKind = function(schema, references, value) {
    if (!Types.TypeRegistry.Has(schema[Types.Kind]))
      return false;
    const func = Types.TypeRegistry.Get(schema[Types.Kind]);
    return func(schema, value);
  };
  var Visit = function(schema, references, value) {
    const references_ = IsDefined(schema.$id) ? [...references, schema] : references;
    const schema_ = schema;
    switch (schema_[Types.Kind]) {
      case "Any":
        return TAny(schema_, references_, value);
      case "Array":
        return TArray(schema_, references_, value);
      case "AsyncIterator":
        return TAsyncIterator(schema_, references_, value);
      case "BigInt":
        return TBigInt(schema_, references_, value);
      case "Boolean":
        return TBoolean(schema_, references_, value);
      case "Constructor":
        return TConstructor(schema_, references_, value);
      case "Date":
        return TDate(schema_, references_, value);
      case "Function":
        return TFunction(schema_, references_, value);
      case "Integer":
        return TInteger(schema_, references_, value);
      case "Intersect":
        return TIntersect(schema_, references_, value);
      case "Iterator":
        return TIterator(schema_, references_, value);
      case "Literal":
        return TLiteral(schema_, references_, value);
      case "Never":
        return TNever(schema_, references_, value);
      case "Not":
        return TNot(schema_, references_, value);
      case "Null":
        return TNull(schema_, references_, value);
      case "Number":
        return TNumber(schema_, references_, value);
      case "Object":
        return TObject(schema_, references_, value);
      case "Promise":
        return TPromise(schema_, references_, value);
      case "Record":
        return TRecord(schema_, references_, value);
      case "Ref":
        return TRef(schema_, references_, value);
      case "String":
        return TString(schema_, references_, value);
      case "Symbol":
        return TSymbol(schema_, references_, value);
      case "TemplateLiteral":
        return TTemplateLiteral(schema_, references_, value);
      case "This":
        return TThis(schema_, references_, value);
      case "Tuple":
        return TTuple(schema_, references_, value);
      case "Undefined":
        return TUndefined(schema_, references_, value);
      case "Union":
        return TUnion(schema_, references_, value);
      case "Uint8Array":
        return TUint8Array(schema_, references_, value);
      case "Unknown":
        return TUnknown(schema_, references_, value);
      case "Void":
        return TVoid(schema_, references_, value);
      default:
        if (!Types.TypeRegistry.Has(schema_[Types.Kind]))
          throw new ValueCheckUnknownTypeError(schema_);
        return TKind(schema_, references_, value);
    }
  };
  var Check = function(...args) {
    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Check = exports.ValueCheckUnknownTypeError = undefined;
  var guard_1 = require_guard();
  var index_1 = require_system2();
  var deref_1 = require_deref();
  var hash_1 = require_hash();
  var Types = require_typebox();

  class ValueCheckUnknownTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super(`Unknown type`);
      this.schema = schema;
    }
  }
  exports.ValueCheckUnknownTypeError = ValueCheckUnknownTypeError;
  exports.Check = Check;
});

// node_modules/@sinclair/typebox/value/create.js
var require_create = __commonJS((exports) => {
  var TAny = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return {};
    }
  };
  var TArray = function(schema, references) {
    if (schema.uniqueItems === true && !(0, guard_1.HasPropertyKey)(schema, "default")) {
      throw new Error("ValueCreate.Array: Array with the uniqueItems constraint requires a default value");
    } else if (("contains" in schema) && !(0, guard_1.HasPropertyKey)(schema, "default")) {
      throw new Error("ValueCreate.Array: Array with the contains constraint requires a default value");
    } else if ("default" in schema) {
      return schema.default;
    } else if (schema.minItems !== undefined) {
      return Array.from({ length: schema.minItems }).map((item) => {
        return Visit(schema.items, references);
      });
    } else {
      return [];
    }
  };
  var TAsyncIterator = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return async function* () {
      }();
    }
  };
  var TBigInt = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return BigInt(0);
    }
  };
  var TBoolean = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return false;
    }
  };
  var TConstructor = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      const value = Visit(schema.returns, references);
      if (typeof value === "object" && !Array.isArray(value)) {
        return class {
          constructor() {
            for (const [key, val] of Object.entries(value)) {
              const self2 = this;
              self2[key] = val;
            }
          }
        };
      } else {
        return class {
        };
      }
    }
  };
  var TDate = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else if (schema.minimumTimestamp !== undefined) {
      return new Date(schema.minimumTimestamp);
    } else {
      return new Date;
    }
  };
  var TFunction = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return () => Visit(schema.returns, references);
    }
  };
  var TInteger = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else if (schema.minimum !== undefined) {
      return schema.minimum;
    } else {
      return 0;
    }
  };
  var TIntersect = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      const value = schema.allOf.reduce((acc, schema2) => {
        const next = Visit(schema2, references);
        return typeof next === "object" ? { ...acc, ...next } : next;
      }, {});
      if (!(0, check_1.Check)(schema, references, value))
        throw new ValueCreateIntersectTypeError(schema);
      return value;
    }
  };
  var TIterator = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return function* () {
      }();
    }
  };
  var TLiteral = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return schema.const;
    }
  };
  var TNever = function(schema, references) {
    throw new ValueCreateNeverTypeError(schema);
  };
  var TNot = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      throw new ValueCreateNotTypeError(schema);
    }
  };
  var TNull = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return null;
    }
  };
  var TNumber = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else if (schema.minimum !== undefined) {
      return schema.minimum;
    } else {
      return 0;
    }
  };
  var TObject = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      const required = new Set(schema.required);
      return schema.default || Object.entries(schema.properties).reduce((acc, [key, schema2]) => {
        return required.has(key) ? { ...acc, [key]: Visit(schema2, references) } : { ...acc };
      }, {});
    }
  };
  var TPromise = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return Promise.resolve(Visit(schema.item, references));
    }
  };
  var TRecord = function(schema, references) {
    const [keyPattern, valueSchema] = Object.entries(schema.patternProperties)[0];
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else if (!(keyPattern === Types.PatternStringExact || keyPattern === Types.PatternNumberExact)) {
      const propertyKeys = keyPattern.slice(1, keyPattern.length - 1).split("|");
      return propertyKeys.reduce((acc, key) => {
        return { ...acc, [key]: Visit(valueSchema, references) };
      }, {});
    } else {
      return {};
    }
  };
  var TRef = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return Visit((0, deref_1.Deref)(schema, references), references);
    }
  };
  var TString = function(schema, references) {
    if (schema.pattern !== undefined) {
      if (!(0, guard_1.HasPropertyKey)(schema, "default")) {
        throw new Error("ValueCreate.String: String types with patterns must specify a default value");
      } else {
        return schema.default;
      }
    } else if (schema.format !== undefined) {
      if (!(0, guard_1.HasPropertyKey)(schema, "default")) {
        throw new Error("ValueCreate.String: String types with formats must specify a default value");
      } else {
        return schema.default;
      }
    } else {
      if ((0, guard_1.HasPropertyKey)(schema, "default")) {
        return schema.default;
      } else if (schema.minLength !== undefined) {
        return Array.from({ length: schema.minLength }).map(() => ".").join("");
      } else {
        return "";
      }
    }
  };
  var TSymbol = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else if ("value" in schema) {
      return Symbol.for(schema.value);
    } else {
      return Symbol();
    }
  };
  var TTemplateLiteral = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    }
    const expression = Types.TemplateLiteralParser.ParseExact(schema.pattern);
    if (!Types.TemplateLiteralFinite.Check(expression))
      throw new ValueCreateTempateLiteralTypeError(schema);
    const sequence = Types.TemplateLiteralGenerator.Generate(expression);
    return sequence.next().value;
  };
  var TThis = function(schema, references) {
    if (recursiveDepth++ > recursiveMaxDepth)
      throw new ValueCreateRecursiveInstantiationError(schema, recursiveMaxDepth);
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return Visit((0, deref_1.Deref)(schema, references), references);
    }
  };
  var TTuple = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    }
    if (schema.items === undefined) {
      return [];
    } else {
      return Array.from({ length: schema.minItems }).map((_, index) => Visit(schema.items[index], references));
    }
  };
  var TUndefined = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return;
    }
  };
  var TUnion = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else if (schema.anyOf.length === 0) {
      throw new Error("ValueCreate.Union: Cannot create Union with zero variants");
    } else {
      return Visit(schema.anyOf[0], references);
    }
  };
  var TUint8Array = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else if (schema.minByteLength !== undefined) {
      return new Uint8Array(schema.minByteLength);
    } else {
      return new Uint8Array(0);
    }
  };
  var TUnknown = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return {};
    }
  };
  var TVoid = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      return;
    }
  };
  var TKind = function(schema, references) {
    if ((0, guard_1.HasPropertyKey)(schema, "default")) {
      return schema.default;
    } else {
      throw new Error("User defined types must specify a default value");
    }
  };
  var Visit = function(schema, references) {
    const references_ = (0, guard_1.IsString)(schema.$id) ? [...references, schema] : references;
    const schema_ = schema;
    switch (schema_[Types.Kind]) {
      case "Any":
        return TAny(schema_, references_);
      case "Array":
        return TArray(schema_, references_);
      case "AsyncIterator":
        return TAsyncIterator(schema_, references_);
      case "BigInt":
        return TBigInt(schema_, references_);
      case "Boolean":
        return TBoolean(schema_, references_);
      case "Constructor":
        return TConstructor(schema_, references_);
      case "Date":
        return TDate(schema_, references_);
      case "Function":
        return TFunction(schema_, references_);
      case "Integer":
        return TInteger(schema_, references_);
      case "Intersect":
        return TIntersect(schema_, references_);
      case "Iterator":
        return TIterator(schema_, references_);
      case "Literal":
        return TLiteral(schema_, references_);
      case "Never":
        return TNever(schema_, references_);
      case "Not":
        return TNot(schema_, references_);
      case "Null":
        return TNull(schema_, references_);
      case "Number":
        return TNumber(schema_, references_);
      case "Object":
        return TObject(schema_, references_);
      case "Promise":
        return TPromise(schema_, references_);
      case "Record":
        return TRecord(schema_, references_);
      case "Ref":
        return TRef(schema_, references_);
      case "String":
        return TString(schema_, references_);
      case "Symbol":
        return TSymbol(schema_, references_);
      case "TemplateLiteral":
        return TTemplateLiteral(schema_, references_);
      case "This":
        return TThis(schema_, references_);
      case "Tuple":
        return TTuple(schema_, references_);
      case "Undefined":
        return TUndefined(schema_, references_);
      case "Union":
        return TUnion(schema_, references_);
      case "Uint8Array":
        return TUint8Array(schema_, references_);
      case "Unknown":
        return TUnknown(schema_, references_);
      case "Void":
        return TVoid(schema_, references_);
      default:
        if (!Types.TypeRegistry.Has(schema_[Types.Kind]))
          throw new ValueCreateUnknownTypeError(schema_);
        return TKind(schema_, references_);
    }
  };
  var Create = function(...args) {
    recursiveDepth = 0;
    return args.length === 2 ? Visit(args[0], args[1]) : Visit(args[0], []);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Create = exports.ValueCreateRecursiveInstantiationError = exports.ValueCreateTempateLiteralTypeError = exports.ValueCreateIntersectTypeError = exports.ValueCreateNotTypeError = exports.ValueCreateNeverTypeError = exports.ValueCreateUnknownTypeError = undefined;
  var guard_1 = require_guard();
  var check_1 = require_check();
  var deref_1 = require_deref();
  var Types = require_typebox();

  class ValueCreateUnknownTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Unknown type");
      this.schema = schema;
    }
  }
  exports.ValueCreateUnknownTypeError = ValueCreateUnknownTypeError;

  class ValueCreateNeverTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Never types cannot be created");
      this.schema = schema;
    }
  }
  exports.ValueCreateNeverTypeError = ValueCreateNeverTypeError;

  class ValueCreateNotTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Not types must have a default value");
      this.schema = schema;
    }
  }
  exports.ValueCreateNotTypeError = ValueCreateNotTypeError;

  class ValueCreateIntersectTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Intersect produced invalid value. Consider using a default value.");
      this.schema = schema;
    }
  }
  exports.ValueCreateIntersectTypeError = ValueCreateIntersectTypeError;

  class ValueCreateTempateLiteralTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Can only create template literal values from patterns that produce finite sequences. Consider using a default value.");
      this.schema = schema;
    }
  }
  exports.ValueCreateTempateLiteralTypeError = ValueCreateTempateLiteralTypeError;

  class ValueCreateRecursiveInstantiationError extends Types.TypeBoxError {
    constructor(schema, recursiveMaxDepth2) {
      super("Value cannot be created as recursive type may produce value of infinite size. Consider using a default.");
      this.schema = schema;
      this.recursiveMaxDepth = recursiveMaxDepth2;
    }
  }
  exports.ValueCreateRecursiveInstantiationError = ValueCreateRecursiveInstantiationError;
  var recursiveMaxDepth = 512;
  var recursiveDepth = 0;
  exports.Create = Create;
});

// node_modules/@sinclair/typebox/value/cast.js
var require_cast = __commonJS((exports) => {
  var DefaultClone = function(schema, references, value) {
    return (0, check_1.Check)(schema, references, value) ? (0, clone_1.Clone)(value) : (0, create_1.Create)(schema, references);
  };
  var Default = function(schema, references, value) {
    return (0, check_1.Check)(schema, references, value) ? value : (0, create_1.Create)(schema, references);
  };
  var TArray = function(schema, references, value) {
    if ((0, check_1.Check)(schema, references, value))
      return (0, clone_1.Clone)(value);
    const created = (0, guard_1.IsArray)(value) ? (0, clone_1.Clone)(value) : (0, create_1.Create)(schema, references);
    const minimum = (0, guard_1.IsNumber)(schema.minItems) && created.length < schema.minItems ? [...created, ...Array.from({ length: schema.minItems - created.length }, () => null)] : created;
    const maximum = (0, guard_1.IsNumber)(schema.maxItems) && minimum.length > schema.maxItems ? minimum.slice(0, schema.maxItems) : minimum;
    const casted = maximum.map((value2) => Visit(schema.items, references, value2));
    if (schema.uniqueItems !== true)
      return casted;
    const unique = [...new Set(casted)];
    if (!(0, check_1.Check)(schema, references, unique))
      throw new ValueCastArrayUniqueItemsTypeError(schema, unique);
    return unique;
  };
  var TConstructor = function(schema, references, value) {
    if ((0, check_1.Check)(schema, references, value))
      return (0, create_1.Create)(schema, references);
    const required = new Set(schema.returns.required || []);
    const result = function() {
    };
    for (const [key, property] of Object.entries(schema.returns.properties)) {
      if (!required.has(key) && value.prototype[key] === undefined)
        continue;
      result.prototype[key] = Visit(property, references, value.prototype[key]);
    }
    return result;
  };
  var TIntersect = function(schema, references, value) {
    const created = (0, create_1.Create)(schema, references);
    const mapped = (0, guard_1.IsPlainObject)(created) && (0, guard_1.IsPlainObject)(value) ? { ...created, ...value } : value;
    return (0, check_1.Check)(schema, references, mapped) ? mapped : (0, create_1.Create)(schema, references);
  };
  var TNever = function(schema, references, value) {
    throw new ValueCastNeverTypeError(schema);
  };
  var TObject = function(schema, references, value) {
    if ((0, check_1.Check)(schema, references, value))
      return value;
    if (value === null || typeof value !== "object")
      return (0, create_1.Create)(schema, references);
    const required = new Set(schema.required || []);
    const result = {};
    for (const [key, property] of Object.entries(schema.properties)) {
      if (!required.has(key) && value[key] === undefined)
        continue;
      result[key] = Visit(property, references, value[key]);
    }
    if (typeof schema.additionalProperties === "object") {
      const propertyNames = Object.getOwnPropertyNames(schema.properties);
      for (const propertyName of Object.getOwnPropertyNames(value)) {
        if (propertyNames.includes(propertyName))
          continue;
        result[propertyName] = Visit(schema.additionalProperties, references, value[propertyName]);
      }
    }
    return result;
  };
  var TRecord = function(schema, references, value) {
    if ((0, check_1.Check)(schema, references, value))
      return (0, clone_1.Clone)(value);
    if (value === null || typeof value !== "object" || Array.isArray(value) || value instanceof Date)
      return (0, create_1.Create)(schema, references);
    const subschemaPropertyName = Object.getOwnPropertyNames(schema.patternProperties)[0];
    const subschema = schema.patternProperties[subschemaPropertyName];
    const result = {};
    for (const [propKey, propValue] of Object.entries(value)) {
      result[propKey] = Visit(subschema, references, propValue);
    }
    return result;
  };
  var TRef = function(schema, references, value) {
    return Visit((0, deref_1.Deref)(schema, references), references, value);
  };
  var TThis = function(schema, references, value) {
    return Visit((0, deref_1.Deref)(schema, references), references, value);
  };
  var TTuple = function(schema, references, value) {
    if ((0, check_1.Check)(schema, references, value))
      return (0, clone_1.Clone)(value);
    if (!(0, guard_1.IsArray)(value))
      return (0, create_1.Create)(schema, references);
    if (schema.items === undefined)
      return [];
    return schema.items.map((schema2, index) => Visit(schema2, references, value[index]));
  };
  var TUnion = function(schema, references, value) {
    return (0, check_1.Check)(schema, references, value) ? (0, clone_1.Clone)(value) : UnionCastCreate.Create(schema, references, value);
  };
  var Visit = function(schema, references, value) {
    const references_ = (0, guard_1.IsString)(schema.$id) ? [...references, schema] : references;
    const schema_ = schema;
    switch (schema[Types.Kind]) {
      case "Array":
        return TArray(schema_, references_, value);
      case "Constructor":
        return TConstructor(schema_, references_, value);
      case "Intersect":
        return TIntersect(schema_, references_, value);
      case "Never":
        return TNever(schema_, references_, value);
      case "Object":
        return TObject(schema_, references_, value);
      case "Record":
        return TRecord(schema_, references_, value);
      case "Ref":
        return TRef(schema_, references_, value);
      case "This":
        return TThis(schema_, references_, value);
      case "Tuple":
        return TTuple(schema_, references_, value);
      case "Union":
        return TUnion(schema_, references_, value);
      case "Date":
      case "Symbol":
      case "Uint8Array":
        return DefaultClone(schema, references, value);
      case "Any":
      case "AsyncIterator":
      case "BigInt":
      case "Boolean":
      case "Function":
      case "Integer":
      case "Iterator":
      case "Literal":
      case "Not":
      case "Null":
      case "Number":
      case "Promise":
      case "String":
      case "TemplateLiteral":
      case "Undefined":
      case "Unknown":
      case "Void":
        return Default(schema_, references_, value);
      default:
        if (!Types.TypeRegistry.Has(schema_[Types.Kind]))
          throw new ValueCastUnknownTypeError(schema_);
        return Default(schema_, references_, value);
    }
  };
  var Cast = function(...args) {
    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Cast = exports.Default = exports.DefaultClone = exports.ValueCastUnknownTypeError = exports.ValueCastRecursiveTypeError = exports.ValueCastNeverTypeError = exports.ValueCastArrayUniqueItemsTypeError = undefined;
  var guard_1 = require_guard();
  var create_1 = require_create();
  var check_1 = require_check();
  var clone_1 = require_clone();
  var deref_1 = require_deref();
  var Types = require_typebox();

  class ValueCastArrayUniqueItemsTypeError extends Types.TypeBoxError {
    constructor(schema, value) {
      super("Array cast produced invalid data due to uniqueItems constraint");
      this.schema = schema;
      this.value = value;
    }
  }
  exports.ValueCastArrayUniqueItemsTypeError = ValueCastArrayUniqueItemsTypeError;

  class ValueCastNeverTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Never types cannot be cast");
      this.schema = schema;
    }
  }
  exports.ValueCastNeverTypeError = ValueCastNeverTypeError;

  class ValueCastRecursiveTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Cannot cast recursive schemas");
      this.schema = schema;
    }
  }
  exports.ValueCastRecursiveTypeError = ValueCastRecursiveTypeError;

  class ValueCastUnknownTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Unknown type");
      this.schema = schema;
    }
  }
  exports.ValueCastUnknownTypeError = ValueCastUnknownTypeError;
  var UnionCastCreate;
  (function(UnionCastCreate2) {
    function Score(schema, references, value) {
      if (schema[Types.Kind] === "Object" && typeof value === "object" && !(0, guard_1.IsNull)(value)) {
        const object = schema;
        const keys = Object.getOwnPropertyNames(value);
        const entries = Object.entries(object.properties);
        const [point, max] = [1 / entries.length, entries.length];
        return entries.reduce((acc, [key, schema2]) => {
          const literal = schema2[Types.Kind] === "Literal" && schema2.const === value[key] ? max : 0;
          const checks = (0, check_1.Check)(schema2, references, value[key]) ? point : 0;
          const exists = keys.includes(key) ? point : 0;
          return acc + (literal + checks + exists);
        }, 0);
      } else {
        return (0, check_1.Check)(schema, references, value) ? 1 : 0;
      }
    }
    function Select(union, references, value) {
      let [select, best] = [union.anyOf[0], 0];
      for (const schema of union.anyOf) {
        const score = Score(schema, references, value);
        if (score > best) {
          select = schema;
          best = score;
        }
      }
      return select;
    }
    function Create(union, references, value) {
      if ("default" in union) {
        return union.default;
      } else {
        const schema = Select(union, references, value);
        return Cast(schema, references, value);
      }
    }
    UnionCastCreate2.Create = Create;
  })(UnionCastCreate || (UnionCastCreate = {}));
  exports.DefaultClone = DefaultClone;
  exports.Default = Default;
  exports.Cast = Cast;
});

// node_modules/@sinclair/typebox/value/convert.js
var require_convert = __commonJS((exports) => {
  var IsStringNumeric = function(value) {
    return (0, guard_1.IsString)(value) && !isNaN(value) && !isNaN(parseFloat(value));
  };
  var IsValueToString = function(value) {
    return (0, guard_1.IsBigInt)(value) || (0, guard_1.IsBoolean)(value) || (0, guard_1.IsNumber)(value);
  };
  var IsValueTrue = function(value) {
    return value === true || (0, guard_1.IsNumber)(value) && value === 1 || (0, guard_1.IsBigInt)(value) && value === BigInt("1") || (0, guard_1.IsString)(value) && (value.toLowerCase() === "true" || value === "1");
  };
  var IsValueFalse = function(value) {
    return value === false || (0, guard_1.IsNumber)(value) && (value === 0 || Object.is(value, -0)) || (0, guard_1.IsBigInt)(value) && value === BigInt("0") || (0, guard_1.IsString)(value) && (value.toLowerCase() === "false" || value === "0" || value === "-0");
  };
  var IsTimeStringWithTimeZone = function(value) {
    return (0, guard_1.IsString)(value) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value);
  };
  var IsTimeStringWithoutTimeZone = function(value) {
    return (0, guard_1.IsString)(value) && /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value);
  };
  var IsDateTimeStringWithTimeZone = function(value) {
    return (0, guard_1.IsString)(value) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i.test(value);
  };
  var IsDateTimeStringWithoutTimeZone = function(value) {
    return (0, guard_1.IsString)(value) && /^\d\d\d\d-[0-1]\d-[0-3]\dt(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)?$/i.test(value);
  };
  var IsDateString = function(value) {
    return (0, guard_1.IsString)(value) && /^\d\d\d\d-[0-1]\d-[0-3]\d$/i.test(value);
  };
  var TryConvertLiteralString = function(value, target) {
    const conversion = TryConvertString(value);
    return conversion === target ? conversion : value;
  };
  var TryConvertLiteralNumber = function(value, target) {
    const conversion = TryConvertNumber(value);
    return conversion === target ? conversion : value;
  };
  var TryConvertLiteralBoolean = function(value, target) {
    const conversion = TryConvertBoolean(value);
    return conversion === target ? conversion : value;
  };
  var TryConvertLiteral = function(schema, value) {
    if (typeof schema.const === "string") {
      return TryConvertLiteralString(value, schema.const);
    } else if (typeof schema.const === "number") {
      return TryConvertLiteralNumber(value, schema.const);
    } else if (typeof schema.const === "boolean") {
      return TryConvertLiteralBoolean(value, schema.const);
    } else {
      return (0, clone_1.Clone)(value);
    }
  };
  var TryConvertBoolean = function(value) {
    return IsValueTrue(value) ? true : IsValueFalse(value) ? false : value;
  };
  var TryConvertBigInt = function(value) {
    return IsStringNumeric(value) ? BigInt(parseInt(value)) : (0, guard_1.IsNumber)(value) ? BigInt(value | 0) : IsValueFalse(value) ? BigInt(0) : IsValueTrue(value) ? BigInt(1) : value;
  };
  var TryConvertString = function(value) {
    return IsValueToString(value) ? value.toString() : (0, guard_1.IsSymbol)(value) && value.description !== undefined ? value.description.toString() : value;
  };
  var TryConvertNumber = function(value) {
    return IsStringNumeric(value) ? parseFloat(value) : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;
  };
  var TryConvertInteger = function(value) {
    return IsStringNumeric(value) ? parseInt(value) : (0, guard_1.IsNumber)(value) ? value | 0 : IsValueTrue(value) ? 1 : IsValueFalse(value) ? 0 : value;
  };
  var TryConvertNull = function(value) {
    return (0, guard_1.IsString)(value) && value.toLowerCase() === "null" ? null : value;
  };
  var TryConvertUndefined = function(value) {
    return (0, guard_1.IsString)(value) && value === "undefined" ? undefined : value;
  };
  var TryConvertDate = function(value) {
    return (0, guard_1.IsDate)(value) ? value : (0, guard_1.IsNumber)(value) ? new Date(value) : IsValueTrue(value) ? new Date(1) : IsValueFalse(value) ? new Date(0) : IsStringNumeric(value) ? new Date(parseInt(value)) : IsTimeStringWithoutTimeZone(value) ? new Date(`1970-01-01T${value}.000Z`) : IsTimeStringWithTimeZone(value) ? new Date(`1970-01-01T${value}`) : IsDateTimeStringWithoutTimeZone(value) ? new Date(`${value}.000Z`) : IsDateTimeStringWithTimeZone(value) ? new Date(value) : IsDateString(value) ? new Date(`${value}T00:00:00.000Z`) : value;
  };
  var Default = function(value) {
    return value;
  };
  var TArray = function(schema, references, value) {
    if ((0, guard_1.IsArray)(value)) {
      return value.map((value2) => Visit(schema.items, references, value2));
    }
    return value;
  };
  var TBigInt = function(schema, references, value) {
    return TryConvertBigInt(value);
  };
  var TBoolean = function(schema, references, value) {
    return TryConvertBoolean(value);
  };
  var TDate = function(schema, references, value) {
    return TryConvertDate(value);
  };
  var TInteger = function(schema, references, value) {
    return TryConvertInteger(value);
  };
  var TIntersect = function(schema, references, value) {
    return schema.allOf.every((schema2) => Types.TypeGuard.TObject(schema2)) ? Visit(Types.Type.Composite(schema.allOf), references, value) : Visit(schema.allOf[0], references, value);
  };
  var TLiteral = function(schema, references, value) {
    return TryConvertLiteral(schema, value);
  };
  var TNull = function(schema, references, value) {
    return TryConvertNull(value);
  };
  var TNumber = function(schema, references, value) {
    return TryConvertNumber(value);
  };
  var TObject = function(schema, references, value) {
    if ((0, guard_1.IsObject)(value))
      return Object.getOwnPropertyNames(schema.properties).reduce((acc, key) => {
        return value[key] !== undefined ? { ...acc, [key]: Visit(schema.properties[key], references, value[key]) } : { ...acc };
      }, value);
    return value;
  };
  var TRecord = function(schema, references, value) {
    const propertyKey = Object.getOwnPropertyNames(schema.patternProperties)[0];
    const property = schema.patternProperties[propertyKey];
    const result = {};
    for (const [propKey, propValue] of Object.entries(value)) {
      result[propKey] = Visit(property, references, propValue);
    }
    return result;
  };
  var TRef = function(schema, references, value) {
    return Visit((0, deref_1.Deref)(schema, references), references, value);
  };
  var TString = function(schema, references, value) {
    return TryConvertString(value);
  };
  var TSymbol = function(schema, references, value) {
    return (0, guard_1.IsString)(value) || (0, guard_1.IsNumber)(value) ? Symbol(value) : value;
  };
  var TThis = function(schema, references, value) {
    return Visit((0, deref_1.Deref)(schema, references), references, value);
  };
  var TTuple = function(schema, references, value) {
    if ((0, guard_1.IsArray)(value) && !(0, guard_1.IsUndefined)(schema.items)) {
      return value.map((value2, index) => {
        return index < schema.items.length ? Visit(schema.items[index], references, value2) : value2;
      });
    }
    return value;
  };
  var TUndefined = function(schema, references, value) {
    return TryConvertUndefined(value);
  };
  var TUnion = function(schema, references, value) {
    for (const subschema of schema.anyOf) {
      const converted = Visit(subschema, references, value);
      if ((0, check_1.Check)(subschema, references, converted)) {
        return converted;
      }
    }
    return value;
  };
  var Visit = function(schema, references, value) {
    const references_ = (0, guard_1.IsString)(schema.$id) ? [...references, schema] : references;
    const schema_ = schema;
    switch (schema[Types.Kind]) {
      case "Array":
        return TArray(schema_, references_, value);
      case "BigInt":
        return TBigInt(schema_, references_, value);
      case "Boolean":
        return TBoolean(schema_, references_, value);
      case "Date":
        return TDate(schema_, references_, value);
      case "Integer":
        return TInteger(schema_, references_, value);
      case "Intersect":
        return TIntersect(schema_, references_, value);
      case "Literal":
        return TLiteral(schema_, references_, value);
      case "Null":
        return TNull(schema_, references_, value);
      case "Number":
        return TNumber(schema_, references_, value);
      case "Object":
        return TObject(schema_, references_, value);
      case "Record":
        return TRecord(schema_, references_, value);
      case "Ref":
        return TRef(schema_, references_, value);
      case "String":
        return TString(schema_, references_, value);
      case "Symbol":
        return TSymbol(schema_, references_, value);
      case "This":
        return TThis(schema_, references_, value);
      case "Tuple":
        return TTuple(schema_, references_, value);
      case "Undefined":
        return TUndefined(schema_, references_, value);
      case "Union":
        return TUnion(schema_, references_, value);
      case "Any":
      case "AsyncIterator":
      case "Constructor":
      case "Function":
      case "Iterator":
      case "Never":
      case "Promise":
      case "TemplateLiteral":
      case "Uint8Array":
      case "Unknown":
      case "Void":
        return Default(value);
      default:
        if (!Types.TypeRegistry.Has(schema_[Types.Kind]))
          throw new ValueConvertUnknownTypeError(schema_);
        return Default(value);
    }
  };
  var Convert = function(...args) {
    return args.length === 3 ? Visit(args[0], args[1], args[2]) : Visit(args[0], [], args[1]);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Convert = exports.Default = exports.ValueConvertUnknownTypeError = undefined;
  var guard_1 = require_guard();
  var clone_1 = require_clone();
  var check_1 = require_check();
  var deref_1 = require_deref();
  var Types = require_typebox();

  class ValueConvertUnknownTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Unknown type");
      this.schema = schema;
    }
  }
  exports.ValueConvertUnknownTypeError = ValueConvertUnknownTypeError;
  exports.Default = Default;
  exports.Convert = Convert;
});

// node_modules/@sinclair/typebox/value/transform.js
var require_transform = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.EncodeTransform = exports.DecodeTransform = exports.HasTransform = exports.TransformEncodeError = exports.TransformDecodeError = exports.TransformEncodeCheckError = exports.TransformDecodeCheckError = undefined;
  var guard_1 = require_guard();
  var deref_1 = require_deref();
  var check_1 = require_check();
  var Types = require_typebox();

  class TransformDecodeCheckError extends Types.TypeBoxError {
    constructor(schema, value, error) {
      super(`Unable to decode due to invalid value`);
      this.schema = schema;
      this.value = value;
      this.error = error;
    }
  }
  exports.TransformDecodeCheckError = TransformDecodeCheckError;

  class TransformEncodeCheckError extends Types.TypeBoxError {
    constructor(schema, value, error) {
      super(`Unable to encode due to invalid value`);
      this.schema = schema;
      this.value = value;
      this.error = error;
    }
  }
  exports.TransformEncodeCheckError = TransformEncodeCheckError;

  class TransformDecodeError extends Types.TypeBoxError {
    constructor(schema, value, error) {
      super(`${error instanceof Error ? error.message : "Unknown error"}`);
      this.schema = schema;
      this.value = value;
    }
  }
  exports.TransformDecodeError = TransformDecodeError;

  class TransformEncodeError extends Types.TypeBoxError {
    constructor(schema, value, error) {
      super(`${error instanceof Error ? error.message : "Unknown error"}`);
      this.schema = schema;
      this.value = value;
    }
  }
  exports.TransformEncodeError = TransformEncodeError;
  var HasTransform;
  (function(HasTransform2) {
    function TArray(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Visit(schema.items, references);
    }
    function TAsyncIterator(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Visit(schema.items, references);
    }
    function TConstructor(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema2) => Visit(schema2, references));
    }
    function TFunction(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Visit(schema.returns, references) || schema.parameters.some((schema2) => Visit(schema2, references));
    }
    function TIntersect(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Types.TypeGuard.TTransform(schema.unevaluatedProperties) || schema.allOf.some((schema2) => Visit(schema2, references));
    }
    function TIterator(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Visit(schema.items, references);
    }
    function TNot(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Visit(schema.not, references);
    }
    function TObject(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Object.values(schema.properties).some((schema2) => Visit(schema2, references)) || Types.TypeGuard.TSchema(schema.additionalProperties) && Visit(schema.additionalProperties, references);
    }
    function TPromise(schema, references) {
      return Types.TypeGuard.TTransform(schema) || Visit(schema.item, references);
    }
    function TRecord(schema, references) {
      const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];
      const property = schema.patternProperties[pattern];
      return Types.TypeGuard.TTransform(schema) || Visit(property, references) || Types.TypeGuard.TSchema(schema.additionalProperties) && Types.TypeGuard.TTransform(schema.additionalProperties);
    }
    function TRef(schema, references) {
      if (Types.TypeGuard.TTransform(schema))
        return true;
      return Visit((0, deref_1.Deref)(schema, references), references);
    }
    function TThis(schema, references) {
      if (Types.TypeGuard.TTransform(schema))
        return true;
      return Visit((0, deref_1.Deref)(schema, references), references);
    }
    function TTuple(schema, references) {
      return Types.TypeGuard.TTransform(schema) || !(0, guard_1.IsUndefined)(schema.items) && schema.items.some((schema2) => Visit(schema2, references));
    }
    function TUnion(schema, references) {
      return Types.TypeGuard.TTransform(schema) || schema.anyOf.some((schema2) => Visit(schema2, references));
    }
    function Visit(schema, references) {
      const references_ = (0, guard_1.IsString)(schema.$id) ? [...references, schema] : references;
      const schema_ = schema;
      if (schema.$id && visited.has(schema.$id))
        return false;
      if (schema.$id)
        visited.add(schema.$id);
      switch (schema[Types.Kind]) {
        case "Array":
          return TArray(schema_, references_);
        case "AsyncIterator":
          return TAsyncIterator(schema_, references_);
        case "Constructor":
          return TConstructor(schema_, references_);
        case "Function":
          return TFunction(schema_, references_);
        case "Intersect":
          return TIntersect(schema_, references_);
        case "Iterator":
          return TIterator(schema_, references_);
        case "Not":
          return TNot(schema_, references_);
        case "Object":
          return TObject(schema_, references_);
        case "Promise":
          return TPromise(schema_, references_);
        case "Record":
          return TRecord(schema_, references_);
        case "Ref":
          return TRef(schema_, references_);
        case "This":
          return TThis(schema_, references_);
        case "Tuple":
          return TTuple(schema_, references_);
        case "Union":
          return TUnion(schema_, references_);
        default:
          return Types.TypeGuard.TTransform(schema);
      }
    }
    const visited = new Set;
    function Has(schema, references) {
      visited.clear();
      return Visit(schema, references);
    }
    HasTransform2.Has = Has;
  })(HasTransform || (exports.HasTransform = HasTransform = {}));
  var DecodeTransform;
  (function(DecodeTransform2) {
    function Default(schema, value) {
      try {
        return Types.TypeGuard.TTransform(schema) ? schema[Types.Transform].Decode(value) : value;
      } catch (error) {
        throw new TransformDecodeError(schema, value, error);
      }
    }
    function TArray(schema, references, value) {
      return (0, guard_1.IsArray)(value) ? Default(schema, value.map((value2) => Visit(schema.items, references, value2))) : Default(schema, value);
    }
    function TIntersect(schema, references, value) {
      if (!(0, guard_1.IsPlainObject)(value) || (0, guard_1.IsValueType)(value))
        return Default(schema, value);
      const knownKeys = Types.KeyResolver.ResolveKeys(schema, { includePatterns: false });
      const knownProperties = knownKeys.reduce((value2, key) => {
        return key in value2 ? { ...value2, [key]: Visit(Types.IndexedAccessor.Resolve(schema, [key]), references, value2[key]) } : value2;
      }, value);
      if (!Types.TypeGuard.TTransform(schema.unevaluatedProperties)) {
        return Default(schema, knownProperties);
      }
      const unknownKeys = Object.getOwnPropertyNames(knownProperties);
      const unevaluatedProperties = schema.unevaluatedProperties;
      const unknownProperties = unknownKeys.reduce((value2, key) => {
        return !knownKeys.includes(key) ? { ...value2, [key]: Default(unevaluatedProperties, value2[key]) } : value2;
      }, knownProperties);
      return Default(schema, unknownProperties);
    }
    function TNot(schema, references, value) {
      return Default(schema, Visit(schema.not, references, value));
    }
    function TObject(schema, references, value) {
      if (!(0, guard_1.IsPlainObject)(value))
        return Default(schema, value);
      const knownKeys = Types.KeyResolver.ResolveKeys(schema, { includePatterns: false });
      const knownProperties = knownKeys.reduce((value2, key) => {
        return key in value2 ? { ...value2, [key]: Visit(schema.properties[key], references, value2[key]) } : value2;
      }, value);
      if (!Types.TypeGuard.TSchema(schema.additionalProperties)) {
        return Default(schema, knownProperties);
      }
      const unknownKeys = Object.getOwnPropertyNames(knownProperties);
      const additionalProperties = schema.additionalProperties;
      const unknownProperties = unknownKeys.reduce((value2, key) => {
        return !knownKeys.includes(key) ? { ...value2, [key]: Default(additionalProperties, value2[key]) } : value2;
      }, knownProperties);
      return Default(schema, unknownProperties);
    }
    function TRecord(schema, references, value) {
      if (!(0, guard_1.IsPlainObject)(value))
        return Default(schema, value);
      const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];
      const knownKeys = new RegExp(pattern);
      const knownProperties = Object.getOwnPropertyNames(value).reduce((value2, key) => {
        return knownKeys.test(key) ? { ...value2, [key]: Visit(schema.patternProperties[pattern], references, value2[key]) } : value2;
      }, value);
      if (!Types.TypeGuard.TSchema(schema.additionalProperties)) {
        return Default(schema, knownProperties);
      }
      const unknownKeys = Object.getOwnPropertyNames(knownProperties);
      const additionalProperties = schema.additionalProperties;
      const unknownProperties = unknownKeys.reduce((value2, key) => {
        return !knownKeys.test(key) ? { ...value2, [key]: Default(additionalProperties, value2[key]) } : value2;
      }, knownProperties);
      return Default(schema, unknownProperties);
    }
    function TRef(schema, references, value) {
      const target = (0, deref_1.Deref)(schema, references);
      return Default(schema, Visit(target, references, value));
    }
    function TThis(schema, references, value) {
      const target = (0, deref_1.Deref)(schema, references);
      return Default(schema, Visit(target, references, value));
    }
    function TTuple(schema, references, value) {
      return (0, guard_1.IsArray)(value) && (0, guard_1.IsArray)(schema.items) ? Default(schema, schema.items.map((schema2, index) => Visit(schema2, references, value[index]))) : Default(schema, value);
    }
    function TUnion(schema, references, value) {
      const defaulted = Default(schema, value);
      for (const subschema of schema.anyOf) {
        if (!(0, check_1.Check)(subschema, references, defaulted))
          continue;
        return Visit(subschema, references, defaulted);
      }
      return defaulted;
    }
    function Visit(schema, references, value) {
      const references_ = typeof schema.$id === "string" ? [...references, schema] : references;
      const schema_ = schema;
      switch (schema[Types.Kind]) {
        case "Array":
          return TArray(schema_, references_, value);
        case "Intersect":
          return TIntersect(schema_, references_, value);
        case "Not":
          return TNot(schema_, references_, value);
        case "Object":
          return TObject(schema_, references_, value);
        case "Record":
          return TRecord(schema_, references_, value);
        case "Ref":
          return TRef(schema_, references_, value);
        case "Symbol":
          return Default(schema_, value);
        case "This":
          return TThis(schema_, references_, value);
        case "Tuple":
          return TTuple(schema_, references_, value);
        case "Union":
          return TUnion(schema_, references_, value);
        default:
          return Default(schema_, value);
      }
    }
    function Decode(schema, references, value) {
      return Visit(schema, references, value);
    }
    DecodeTransform2.Decode = Decode;
  })(DecodeTransform || (exports.DecodeTransform = DecodeTransform = {}));
  var EncodeTransform;
  (function(EncodeTransform2) {
    function Default(schema, value) {
      try {
        return Types.TypeGuard.TTransform(schema) ? schema[Types.Transform].Encode(value) : value;
      } catch (error) {
        throw new TransformEncodeError(schema, value, error);
      }
    }
    function TArray(schema, references, value) {
      const defaulted = Default(schema, value);
      return (0, guard_1.IsArray)(defaulted) ? defaulted.map((value2) => Visit(schema.items, references, value2)) : defaulted;
    }
    function TIntersect(schema, references, value) {
      const defaulted = Default(schema, value);
      if (!(0, guard_1.IsPlainObject)(value) || (0, guard_1.IsValueType)(value))
        return defaulted;
      const knownKeys = Types.KeyResolver.ResolveKeys(schema, { includePatterns: false });
      const knownProperties = knownKeys.reduce((value2, key) => {
        return key in defaulted ? { ...value2, [key]: Visit(Types.IndexedAccessor.Resolve(schema, [key]), references, value2[key]) } : value2;
      }, defaulted);
      if (!Types.TypeGuard.TTransform(schema.unevaluatedProperties)) {
        return Default(schema, knownProperties);
      }
      const unknownKeys = Object.getOwnPropertyNames(knownProperties);
      const unevaluatedProperties = schema.unevaluatedProperties;
      return unknownKeys.reduce((value2, key) => {
        return !knownKeys.includes(key) ? { ...value2, [key]: Default(unevaluatedProperties, value2[key]) } : value2;
      }, knownProperties);
    }
    function TNot(schema, references, value) {
      return Default(schema.not, Default(schema, value));
    }
    function TObject(schema, references, value) {
      const defaulted = Default(schema, value);
      if (!(0, guard_1.IsPlainObject)(value))
        return defaulted;
      const knownKeys = Types.KeyResolver.ResolveKeys(schema, { includePatterns: false });
      const knownProperties = knownKeys.reduce((value2, key) => {
        return key in value2 ? { ...value2, [key]: Visit(schema.properties[key], references, value2[key]) } : value2;
      }, defaulted);
      if (!Types.TypeGuard.TSchema(schema.additionalProperties)) {
        return knownProperties;
      }
      const unknownKeys = Object.getOwnPropertyNames(knownProperties);
      const additionalProperties = schema.additionalProperties;
      return unknownKeys.reduce((value2, key) => {
        return !knownKeys.includes(key) ? { ...value2, [key]: Default(additionalProperties, value2[key]) } : value2;
      }, knownProperties);
    }
    function TRecord(schema, references, value) {
      const defaulted = Default(schema, value);
      if (!(0, guard_1.IsPlainObject)(value))
        return defaulted;
      const pattern = Object.getOwnPropertyNames(schema.patternProperties)[0];
      const knownKeys = new RegExp(pattern);
      const knownProperties = Object.getOwnPropertyNames(value).reduce((value2, key) => {
        return knownKeys.test(key) ? { ...value2, [key]: Visit(schema.patternProperties[pattern], references, value2[key]) } : value2;
      }, defaulted);
      if (!Types.TypeGuard.TSchema(schema.additionalProperties)) {
        return Default(schema, knownProperties);
      }
      const unknownKeys = Object.getOwnPropertyNames(knownProperties);
      const additionalProperties = schema.additionalProperties;
      return unknownKeys.reduce((value2, key) => {
        return !knownKeys.test(key) ? { ...value2, [key]: Default(additionalProperties, value2[key]) } : value2;
      }, knownProperties);
    }
    function TRef(schema, references, value) {
      const target = (0, deref_1.Deref)(schema, references);
      const resolved = Visit(target, references, value);
      return Default(schema, resolved);
    }
    function TThis(schema, references, value) {
      const target = (0, deref_1.Deref)(schema, references);
      const resolved = Visit(target, references, value);
      return Default(schema, resolved);
    }
    function TTuple(schema, references, value) {
      const value1 = Default(schema, value);
      return (0, guard_1.IsArray)(schema.items) ? schema.items.map((schema2, index) => Visit(schema2, references, value1[index])) : [];
    }
    function TUnion(schema, references, value) {
      for (const subschema of schema.anyOf) {
        if (!(0, check_1.Check)(subschema, references, value))
          continue;
        const value1 = Visit(subschema, references, value);
        return Default(schema, value1);
      }
      for (const subschema of schema.anyOf) {
        const value1 = Visit(subschema, references, value);
        if (!(0, check_1.Check)(schema, references, value1))
          continue;
        return Default(schema, value1);
      }
      return Default(schema, value);
    }
    function Visit(schema, references, value) {
      const references_ = typeof schema.$id === "string" ? [...references, schema] : references;
      const schema_ = schema;
      switch (schema[Types.Kind]) {
        case "Array":
          return TArray(schema_, references_, value);
        case "Intersect":
          return TIntersect(schema_, references_, value);
        case "Not":
          return TNot(schema_, references_, value);
        case "Object":
          return TObject(schema_, references_, value);
        case "Record":
          return TRecord(schema_, references_, value);
        case "Ref":
          return TRef(schema_, references_, value);
        case "This":
          return TThis(schema_, references_, value);
        case "Tuple":
          return TTuple(schema_, references_, value);
        case "Union":
          return TUnion(schema_, references_, value);
        default:
          return Default(schema_, value);
      }
    }
    function Encode(schema, references, value) {
      return Visit(schema, references, value);
    }
    EncodeTransform2.Encode = Encode;
  })(EncodeTransform || (exports.EncodeTransform = EncodeTransform = {}));
});

// node_modules/@sinclair/typebox/value/value.js
var require_value = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Value = undefined;
  var ValueErrors = require_errors2();
  var ValueMutate = require_mutate();
  var ValueHash = require_hash();
  var ValueEqual = require_equal();
  var ValueCast = require_cast();
  var ValueClone = require_clone();
  var ValueConvert = require_convert();
  var ValueCreate = require_create();
  var ValueCheck = require_check();
  var ValueDelta = require_delta();
  var ValueTransform = require_transform();
  var Value;
  (function(Value2) {
    function Cast(...args) {
      return ValueCast.Cast.apply(ValueCast, args);
    }
    Value2.Cast = Cast;
    function Create(...args) {
      return ValueCreate.Create.apply(ValueCreate, args);
    }
    Value2.Create = Create;
    function Check(...args) {
      return ValueCheck.Check.apply(ValueCheck, args);
    }
    Value2.Check = Check;
    function Convert(...args) {
      return ValueConvert.Convert.apply(ValueConvert, args);
    }
    Value2.Convert = Convert;
    function Clone(value) {
      return ValueClone.Clone(value);
    }
    Value2.Clone = Clone;
    function Decode(...args) {
      const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
      if (!Check(schema, references, value))
        throw new ValueTransform.TransformDecodeCheckError(schema, value, Errors(schema, references, value).First());
      return ValueTransform.DecodeTransform.Decode(schema, references, value);
    }
    Value2.Decode = Decode;
    function Encode(...args) {
      const [schema, references, value] = args.length === 3 ? [args[0], args[1], args[2]] : [args[0], [], args[1]];
      const encoded = ValueTransform.EncodeTransform.Encode(schema, references, value);
      if (!Check(schema, references, encoded))
        throw new ValueTransform.TransformEncodeCheckError(schema, value, Errors(schema, references, value).First());
      return encoded;
    }
    Value2.Encode = Encode;
    function Errors(...args) {
      return ValueErrors.Errors.apply(ValueErrors, args);
    }
    Value2.Errors = Errors;
    function Equal(left, right) {
      return ValueEqual.Equal(left, right);
    }
    Value2.Equal = Equal;
    function Diff(current, next) {
      return ValueDelta.Diff(current, next);
    }
    Value2.Diff = Diff;
    function Hash(value) {
      return ValueHash.Hash(value);
    }
    Value2.Hash = Hash;
    function Patch(current, edits) {
      return ValueDelta.Patch(current, edits);
    }
    Value2.Patch = Patch;
    function Mutate(current, next) {
      ValueMutate.Mutate(current, next);
    }
    Value2.Mutate = Mutate;
  })(Value || (exports.Value = Value = {}));
});

// node_modules/@sinclair/typebox/value/index.js
var require_value2 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.Value = exports.ValuePointer = exports.Delete = exports.Update = exports.Insert = exports.Edit = exports.ValueErrorIterator = exports.ValueErrorType = undefined;
  var index_1 = require_errors2();
  Object.defineProperty(exports, "ValueErrorType", { enumerable: true, get: function() {
    return index_1.ValueErrorType;
  } });
  Object.defineProperty(exports, "ValueErrorIterator", { enumerable: true, get: function() {
    return index_1.ValueErrorIterator;
  } });
  var delta_1 = require_delta();
  Object.defineProperty(exports, "Edit", { enumerable: true, get: function() {
    return delta_1.Edit;
  } });
  Object.defineProperty(exports, "Insert", { enumerable: true, get: function() {
    return delta_1.Insert;
  } });
  Object.defineProperty(exports, "Update", { enumerable: true, get: function() {
    return delta_1.Update;
  } });
  Object.defineProperty(exports, "Delete", { enumerable: true, get: function() {
    return delta_1.Delete;
  } });
  var pointer_1 = require_pointer();
  Object.defineProperty(exports, "ValuePointer", { enumerable: true, get: function() {
    return pointer_1.ValuePointer;
  } });
  var value_1 = require_value();
  Object.defineProperty(exports, "Value", { enumerable: true, get: function() {
    return value_1.Value;
  } });
});

// node_modules/@sinclair/typebox/compiler/compiler.js
var require_compiler = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.TypeCompiler = exports.Policy = exports.TypeCompilerTypeGuardError = exports.TypeCompilerUnknownTypeError = exports.TypeCheck = undefined;
  var transform_1 = require_transform();
  var guard_1 = require_guard();
  var errors_1 = require_errors();
  var index_1 = require_system2();
  var deref_1 = require_deref();
  var hash_1 = require_hash();
  var Types = require_typebox();

  class TypeCheck {
    constructor(schema, references, checkFunc, code) {
      this.schema = schema;
      this.references = references;
      this.checkFunc = checkFunc;
      this.code = code;
      this.hasTransform = transform_1.HasTransform.Has(schema, references);
    }
    Code() {
      return this.code;
    }
    Errors(value2) {
      return (0, errors_1.Errors)(this.schema, this.references, value2);
    }
    Check(value2) {
      return this.checkFunc(value2);
    }
    Decode(value2) {
      if (!this.checkFunc(value2))
        throw new transform_1.TransformDecodeCheckError(this.schema, value2, this.Errors(value2).First());
      return this.hasTransform ? transform_1.DecodeTransform.Decode(this.schema, this.references, value2) : value2;
    }
    Encode(value2) {
      const encoded = this.hasTransform ? transform_1.EncodeTransform.Encode(this.schema, this.references, value2) : value2;
      if (!this.checkFunc(encoded))
        throw new transform_1.TransformEncodeCheckError(this.schema, value2, this.Errors(value2).First());
      return encoded;
    }
  }
  exports.TypeCheck = TypeCheck;
  var Character;
  (function(Character2) {
    function DollarSign(code) {
      return code === 36;
    }
    Character2.DollarSign = DollarSign;
    function IsUnderscore(code) {
      return code === 95;
    }
    Character2.IsUnderscore = IsUnderscore;
    function IsAlpha(code) {
      return code >= 65 && code <= 90 || code >= 97 && code <= 122;
    }
    Character2.IsAlpha = IsAlpha;
    function IsNumeric(code) {
      return code >= 48 && code <= 57;
    }
    Character2.IsNumeric = IsNumeric;
  })(Character || (Character = {}));
  var MemberExpression;
  (function(MemberExpression2) {
    function IsFirstCharacterNumeric(value2) {
      if (value2.length === 0)
        return false;
      return Character.IsNumeric(value2.charCodeAt(0));
    }
    function IsAccessor(value2) {
      if (IsFirstCharacterNumeric(value2))
        return false;
      for (let i = 0;i < value2.length; i++) {
        const code = value2.charCodeAt(i);
        const check = Character.IsAlpha(code) || Character.IsNumeric(code) || Character.DollarSign(code) || Character.IsUnderscore(code);
        if (!check)
          return false;
      }
      return true;
    }
    function EscapeHyphen(key) {
      return key.replace(/'/g, "\\'");
    }
    function Encode(object, key) {
      return IsAccessor(key) ? `${object}.${key}` : `${object}['${EscapeHyphen(key)}']`;
    }
    MemberExpression2.Encode = Encode;
  })(MemberExpression || (MemberExpression = {}));
  var Identifier;
  (function(Identifier2) {
    function Encode($id) {
      const buffer = [];
      for (let i = 0;i < $id.length; i++) {
        const code = $id.charCodeAt(i);
        if (Character.IsNumeric(code) || Character.IsAlpha(code)) {
          buffer.push($id.charAt(i));
        } else {
          buffer.push(`_${code}_`);
        }
      }
      return buffer.join("").replace(/__/g, "_");
    }
    Identifier2.Encode = Encode;
  })(Identifier || (Identifier = {}));
  var LiteralString;
  (function(LiteralString2) {
    function Escape(content) {
      return content.replace(/'/g, "\\'");
    }
    LiteralString2.Escape = Escape;
  })(LiteralString || (LiteralString = {}));

  class TypeCompilerUnknownTypeError extends Types.TypeBoxError {
    constructor(schema) {
      super("Unknown type");
      this.schema = schema;
    }
  }
  exports.TypeCompilerUnknownTypeError = TypeCompilerUnknownTypeError;

  class TypeCompilerTypeGuardError extends Types.TypeBoxError {
    constructor(schema) {
      super("Preflight validation check failed to guard for the given schema");
      this.schema = schema;
    }
  }
  exports.TypeCompilerTypeGuardError = TypeCompilerTypeGuardError;
  var Policy;
  (function(Policy2) {
    function IsExactOptionalProperty(value2, key, expression) {
      return index_1.TypeSystemPolicy.ExactOptionalPropertyTypes ? `('${key}' in ${value2} ? ${expression} : true)` : `(${MemberExpression.Encode(value2, key)} !== undefined ? ${expression} : true)`;
    }
    Policy2.IsExactOptionalProperty = IsExactOptionalProperty;
    function IsObjectLike(value2) {
      return !index_1.TypeSystemPolicy.AllowArrayObject ? `(typeof ${value2} === 'object' && ${value2} !== null && !Array.isArray(${value2}))` : `(typeof ${value2} === 'object' && ${value2} !== null)`;
    }
    Policy2.IsObjectLike = IsObjectLike;
    function IsRecordLike(value2) {
      return !index_1.TypeSystemPolicy.AllowArrayObject ? `(typeof ${value2} === 'object' && ${value2} !== null && !Array.isArray(${value2}) && !(${value2} instanceof Date) && !(${value2} instanceof Uint8Array))` : `(typeof ${value2} === 'object' && ${value2} !== null && !(${value2} instanceof Date) && !(${value2} instanceof Uint8Array))`;
    }
    Policy2.IsRecordLike = IsRecordLike;
    function IsNumberLike(value2) {
      return !index_1.TypeSystemPolicy.AllowNaN ? `(typeof ${value2} === 'number' && Number.isFinite(${value2}))` : `typeof ${value2} === 'number'`;
    }
    Policy2.IsNumberLike = IsNumberLike;
    function IsVoidLike(value2) {
      return index_1.TypeSystemPolicy.AllowNullVoid ? `(${value2} === undefined || ${value2} === null)` : `${value2} === undefined`;
    }
    Policy2.IsVoidLike = IsVoidLike;
  })(Policy || (exports.Policy = Policy = {}));
  var TypeCompiler;
  (function(TypeCompiler2) {
    function IsAnyOrUnknown(schema) {
      return schema[Types.Kind] === "Any" || schema[Types.Kind] === "Unknown";
    }
    function* TAny(schema, references, value2) {
      yield "true";
    }
    function* TArray(schema, references, value2) {
      yield `Array.isArray(${value2})`;
      const [parameter, accumulator] = [CreateParameter("value", "any"), CreateParameter("acc", "number")];
      if ((0, guard_1.IsNumber)(schema.maxItems))
        yield `${value2}.length <= ${schema.maxItems}`;
      if ((0, guard_1.IsNumber)(schema.minItems))
        yield `${value2}.length >= ${schema.minItems}`;
      const elementExpression = CreateExpression(schema.items, references, "value");
      yield `${value2}.every((${parameter}) => ${elementExpression})`;
      if (Types.TypeGuard.TSchema(schema.contains) || (0, guard_1.IsNumber)(schema.minContains) || (0, guard_1.IsNumber)(schema.maxContains)) {
        const containsSchema = Types.TypeGuard.TSchema(schema.contains) ? schema.contains : Types.Type.Never();
        const checkExpression = CreateExpression(containsSchema, references, "value");
        const checkMinContains = (0, guard_1.IsNumber)(schema.minContains) ? [`(count >= ${schema.minContains})`] : [];
        const checkMaxContains = (0, guard_1.IsNumber)(schema.maxContains) ? [`(count <= ${schema.maxContains})`] : [];
        const checkCount = `const count = value.reduce((${accumulator}, ${parameter}) => ${checkExpression} ? acc + 1 : acc, 0)`;
        const check = [`(count > 0)`, ...checkMinContains, ...checkMaxContains].join(" && ");
        yield `((${parameter}) => { ${checkCount}; return ${check}})(${value2})`;
      }
      if (schema.uniqueItems === true) {
        const check = `const hashed = hash(element); if(set.has(hashed)) { return false } else { set.add(hashed) } } return true`;
        const block = `const set = new Set(); for(const element of value) { ${check} }`;
        yield `((${parameter}) => { ${block} )(${value2})`;
      }
    }
    function* TAsyncIterator(schema, references, value2) {
      yield `(typeof value === 'object' && Symbol.asyncIterator in ${value2})`;
    }
    function* TBigInt(schema, references, value2) {
      yield `(typeof ${value2} === 'bigint')`;
      if ((0, guard_1.IsBigInt)(schema.exclusiveMaximum))
        yield `${value2} < BigInt(${schema.exclusiveMaximum})`;
      if ((0, guard_1.IsBigInt)(schema.exclusiveMinimum))
        yield `${value2} > BigInt(${schema.exclusiveMinimum})`;
      if ((0, guard_1.IsBigInt)(schema.maximum))
        yield `${value2} <= BigInt(${schema.maximum})`;
      if ((0, guard_1.IsBigInt)(schema.minimum))
        yield `${value2} >= BigInt(${schema.minimum})`;
      if ((0, guard_1.IsBigInt)(schema.multipleOf))
        yield `(${value2} % BigInt(${schema.multipleOf})) === 0`;
    }
    function* TBoolean(schema, references, value2) {
      yield `(typeof ${value2} === 'boolean')`;
    }
    function* TConstructor(schema, references, value2) {
      yield* Visit(schema.returns, references, `${value2}.prototype`);
    }
    function* TDate(schema, references, value2) {
      yield `(${value2} instanceof Date) && Number.isFinite(${value2}.getTime())`;
      if ((0, guard_1.IsNumber)(schema.exclusiveMaximumTimestamp))
        yield `${value2}.getTime() < ${schema.exclusiveMaximumTimestamp}`;
      if ((0, guard_1.IsNumber)(schema.exclusiveMinimumTimestamp))
        yield `${value2}.getTime() > ${schema.exclusiveMinimumTimestamp}`;
      if ((0, guard_1.IsNumber)(schema.maximumTimestamp))
        yield `${value2}.getTime() <= ${schema.maximumTimestamp}`;
      if ((0, guard_1.IsNumber)(schema.minimumTimestamp))
        yield `${value2}.getTime() >= ${schema.minimumTimestamp}`;
      if ((0, guard_1.IsNumber)(schema.multipleOfTimestamp))
        yield `(${value2}.getTime() % ${schema.multipleOfTimestamp}) === 0`;
    }
    function* TFunction(schema, references, value2) {
      yield `(typeof ${value2} === 'function')`;
    }
    function* TInteger(schema, references, value2) {
      yield `(typeof ${value2} === 'number' && Number.isInteger(${value2}))`;
      if ((0, guard_1.IsNumber)(schema.exclusiveMaximum))
        yield `${value2} < ${schema.exclusiveMaximum}`;
      if ((0, guard_1.IsNumber)(schema.exclusiveMinimum))
        yield `${value2} > ${schema.exclusiveMinimum}`;
      if ((0, guard_1.IsNumber)(schema.maximum))
        yield `${value2} <= ${schema.maximum}`;
      if ((0, guard_1.IsNumber)(schema.minimum))
        yield `${value2} >= ${schema.minimum}`;
      if ((0, guard_1.IsNumber)(schema.multipleOf))
        yield `(${value2} % ${schema.multipleOf}) === 0`;
    }
    function* TIntersect(schema, references, value2) {
      const check1 = schema.allOf.map((schema2) => CreateExpression(schema2, references, value2)).join(" && ");
      if (schema.unevaluatedProperties === false) {
        const keyCheck = CreateVariable(`${new RegExp(Types.KeyResolver.ResolvePattern(schema))};`);
        const check2 = `Object.getOwnPropertyNames(${value2}).every(key => ${keyCheck}.test(key))`;
        yield `(${check1} && ${check2})`;
      } else if (Types.TypeGuard.TSchema(schema.unevaluatedProperties)) {
        const keyCheck = CreateVariable(`${new RegExp(Types.KeyResolver.ResolvePattern(schema))};`);
        const check2 = `Object.getOwnPropertyNames(${value2}).every(key => ${keyCheck}.test(key) || ${CreateExpression(schema.unevaluatedProperties, references, `${value2}[key]`)})`;
        yield `(${check1} && ${check2})`;
      } else {
        yield `(${check1})`;
      }
    }
    function* TIterator(schema, references, value2) {
      yield `(typeof value === 'object' && Symbol.iterator in ${value2})`;
    }
    function* TLiteral(schema, references, value2) {
      if (typeof schema.const === "number" || typeof schema.const === "boolean") {
        yield `(${value2} === ${schema.const})`;
      } else {
        yield `(${value2} === '${LiteralString.Escape(schema.const)}')`;
      }
    }
    function* TNever(schema, references, value2) {
      yield `false`;
    }
    function* TNot(schema, references, value2) {
      const expression = CreateExpression(schema.not, references, value2);
      yield `(!${expression})`;
    }
    function* TNull(schema, references, value2) {
      yield `(${value2} === null)`;
    }
    function* TNumber(schema, references, value2) {
      yield Policy.IsNumberLike(value2);
      if ((0, guard_1.IsNumber)(schema.exclusiveMaximum))
        yield `${value2} < ${schema.exclusiveMaximum}`;
      if ((0, guard_1.IsNumber)(schema.exclusiveMinimum))
        yield `${value2} > ${schema.exclusiveMinimum}`;
      if ((0, guard_1.IsNumber)(schema.maximum))
        yield `${value2} <= ${schema.maximum}`;
      if ((0, guard_1.IsNumber)(schema.minimum))
        yield `${value2} >= ${schema.minimum}`;
      if ((0, guard_1.IsNumber)(schema.multipleOf))
        yield `(${value2} % ${schema.multipleOf}) === 0`;
    }
    function* TObject(schema, references, value2) {
      yield Policy.IsObjectLike(value2);
      if ((0, guard_1.IsNumber)(schema.minProperties))
        yield `Object.getOwnPropertyNames(${value2}).length >= ${schema.minProperties}`;
      if ((0, guard_1.IsNumber)(schema.maxProperties))
        yield `Object.getOwnPropertyNames(${value2}).length <= ${schema.maxProperties}`;
      const knownKeys = Object.getOwnPropertyNames(schema.properties);
      for (const knownKey of knownKeys) {
        const memberExpression = MemberExpression.Encode(value2, knownKey);
        const property = schema.properties[knownKey];
        if (schema.required && schema.required.includes(knownKey)) {
          yield* Visit(property, references, memberExpression);
          if (Types.ExtendsUndefined.Check(property) || IsAnyOrUnknown(property))
            yield `('${knownKey}' in ${value2})`;
        } else {
          const expression = CreateExpression(property, references, memberExpression);
          yield Policy.IsExactOptionalProperty(value2, knownKey, expression);
        }
      }
      if (schema.additionalProperties === false) {
        if (schema.required && schema.required.length === knownKeys.length) {
          yield `Object.getOwnPropertyNames(${value2}).length === ${knownKeys.length}`;
        } else {
          const keys = `[${knownKeys.map((key) => `'${key}'`).join(", ")}]`;
          yield `Object.getOwnPropertyNames(${value2}).every(key => ${keys}.includes(key))`;
        }
      }
      if (typeof schema.additionalProperties === "object") {
        const expression = CreateExpression(schema.additionalProperties, references, `${value2}[key]`);
        const keys = `[${knownKeys.map((key) => `'${key}'`).join(", ")}]`;
        yield `(Object.getOwnPropertyNames(${value2}).every(key => ${keys}.includes(key) || ${expression}))`;
      }
    }
    function* TPromise(schema, references, value2) {
      yield `(typeof value === 'object' && typeof ${value2}.then === 'function')`;
    }
    function* TRecord(schema, references, value2) {
      yield Policy.IsRecordLike(value2);
      if ((0, guard_1.IsNumber)(schema.minProperties))
        yield `Object.getOwnPropertyNames(${value2}).length >= ${schema.minProperties}`;
      if ((0, guard_1.IsNumber)(schema.maxProperties))
        yield `Object.getOwnPropertyNames(${value2}).length <= ${schema.maxProperties}`;
      const [patternKey, patternSchema] = Object.entries(schema.patternProperties)[0];
      const variable = CreateVariable(`${new RegExp(patternKey)}`);
      const check1 = CreateExpression(patternSchema, references, "value");
      const check2 = Types.TypeGuard.TSchema(schema.additionalProperties) ? CreateExpression(schema.additionalProperties, references, value2) : schema.additionalProperties === false ? "false" : "true";
      const expression = `(${variable}.test(key) ? ${check1} : ${check2})`;
      yield `(Object.entries(${value2}).every(([key, value]) => ${expression}))`;
    }
    function* TRef(schema, references, value2) {
      const target = (0, deref_1.Deref)(schema, references);
      if (state.functions.has(schema.$ref))
        return yield `${CreateFunctionName(schema.$ref)}(${value2})`;
      yield* Visit(target, references, value2);
    }
    function* TString(schema, references, value2) {
      yield `(typeof ${value2} === 'string')`;
      if ((0, guard_1.IsNumber)(schema.maxLength))
        yield `${value2}.length <= ${schema.maxLength}`;
      if ((0, guard_1.IsNumber)(schema.minLength))
        yield `${value2}.length >= ${schema.minLength}`;
      if (schema.pattern !== undefined) {
        const variable = CreateVariable(`${new RegExp(schema.pattern)};`);
        yield `${variable}.test(${value2})`;
      }
      if (schema.format !== undefined) {
        yield `format('${schema.format}', ${value2})`;
      }
    }
    function* TSymbol(schema, references, value2) {
      yield `(typeof ${value2} === 'symbol')`;
    }
    function* TTemplateLiteral(schema, references, value2) {
      yield `(typeof ${value2} === 'string')`;
      const variable = CreateVariable(`${new RegExp(schema.pattern)};`);
      yield `${variable}.test(${value2})`;
    }
    function* TThis(schema, references, value2) {
      yield `${CreateFunctionName(schema.$ref)}(${value2})`;
    }
    function* TTuple(schema, references, value2) {
      yield `Array.isArray(${value2})`;
      if (schema.items === undefined)
        return yield `${value2}.length === 0`;
      yield `(${value2}.length === ${schema.maxItems})`;
      for (let i = 0;i < schema.items.length; i++) {
        const expression = CreateExpression(schema.items[i], references, `${value2}[${i}]`);
        yield `${expression}`;
      }
    }
    function* TUndefined(schema, references, value2) {
      yield `${value2} === undefined`;
    }
    function* TUnion(schema, references, value2) {
      const expressions = schema.anyOf.map((schema2) => CreateExpression(schema2, references, value2));
      yield `(${expressions.join(" || ")})`;
    }
    function* TUint8Array(schema, references, value2) {
      yield `${value2} instanceof Uint8Array`;
      if ((0, guard_1.IsNumber)(schema.maxByteLength))
        yield `(${value2}.length <= ${schema.maxByteLength})`;
      if ((0, guard_1.IsNumber)(schema.minByteLength))
        yield `(${value2}.length >= ${schema.minByteLength})`;
    }
    function* TUnknown(schema, references, value2) {
      yield "true";
    }
    function* TVoid(schema, references, value2) {
      yield Policy.IsVoidLike(value2);
    }
    function* TKind(schema, references, value2) {
      const instance = state.instances.size;
      state.instances.set(instance, schema);
      yield `kind('${schema[Types.Kind]}', ${instance}, ${value2})`;
    }
    function* Visit(schema, references, value2, useHoisting = true) {
      const references_ = (0, guard_1.IsString)(schema.$id) ? [...references, schema] : references;
      const schema_ = schema;
      if (useHoisting && (0, guard_1.IsString)(schema.$id)) {
        const functionName = CreateFunctionName(schema.$id);
        if (state.functions.has(functionName)) {
          return yield `${functionName}(${value2})`;
        } else {
          const functionCode = CreateFunction(functionName, schema, references, "value", false);
          state.functions.set(functionName, functionCode);
          return yield `${functionName}(${value2})`;
        }
      }
      switch (schema_[Types.Kind]) {
        case "Any":
          return yield* TAny(schema_, references_, value2);
        case "Array":
          return yield* TArray(schema_, references_, value2);
        case "AsyncIterator":
          return yield* TAsyncIterator(schema_, references_, value2);
        case "BigInt":
          return yield* TBigInt(schema_, references_, value2);
        case "Boolean":
          return yield* TBoolean(schema_, references_, value2);
        case "Constructor":
          return yield* TConstructor(schema_, references_, value2);
        case "Date":
          return yield* TDate(schema_, references_, value2);
        case "Function":
          return yield* TFunction(schema_, references_, value2);
        case "Integer":
          return yield* TInteger(schema_, references_, value2);
        case "Intersect":
          return yield* TIntersect(schema_, references_, value2);
        case "Iterator":
          return yield* TIterator(schema_, references_, value2);
        case "Literal":
          return yield* TLiteral(schema_, references_, value2);
        case "Never":
          return yield* TNever(schema_, references_, value2);
        case "Not":
          return yield* TNot(schema_, references_, value2);
        case "Null":
          return yield* TNull(schema_, references_, value2);
        case "Number":
          return yield* TNumber(schema_, references_, value2);
        case "Object":
          return yield* TObject(schema_, references_, value2);
        case "Promise":
          return yield* TPromise(schema_, references_, value2);
        case "Record":
          return yield* TRecord(schema_, references_, value2);
        case "Ref":
          return yield* TRef(schema_, references_, value2);
        case "String":
          return yield* TString(schema_, references_, value2);
        case "Symbol":
          return yield* TSymbol(schema_, references_, value2);
        case "TemplateLiteral":
          return yield* TTemplateLiteral(schema_, references_, value2);
        case "This":
          return yield* TThis(schema_, references_, value2);
        case "Tuple":
          return yield* TTuple(schema_, references_, value2);
        case "Undefined":
          return yield* TUndefined(schema_, references_, value2);
        case "Union":
          return yield* TUnion(schema_, references_, value2);
        case "Uint8Array":
          return yield* TUint8Array(schema_, references_, value2);
        case "Unknown":
          return yield* TUnknown(schema_, references_, value2);
        case "Void":
          return yield* TVoid(schema_, references_, value2);
        default:
          if (!Types.TypeRegistry.Has(schema_[Types.Kind]))
            throw new TypeCompilerUnknownTypeError(schema);
          return yield* TKind(schema_, references_, value2);
      }
    }
    const state = {
      language: "javascript",
      functions: new Map,
      variables: new Map,
      instances: new Map
    };
    function CreateExpression(schema, references, value2, useHoisting = true) {
      return `(${[...Visit(schema, references, value2, useHoisting)].join(" && ")})`;
    }
    function CreateFunctionName($id) {
      return `check_${Identifier.Encode($id)}`;
    }
    function CreateVariable(expression) {
      const variableName = `local_${state.variables.size}`;
      state.variables.set(variableName, `const ${variableName} = ${expression}`);
      return variableName;
    }
    function CreateFunction(name, schema, references, value2, useHoisting = true) {
      const [newline, pad] = ["\n", (length) => "".padStart(length, " ")];
      const parameter = CreateParameter("value", "any");
      const returns = CreateReturns("boolean");
      const expression = [...Visit(schema, references, value2, useHoisting)].map((expression2) => `${pad(4)}${expression2}`).join(` &&${newline}`);
      return `function ${name}(${parameter})${returns} {${newline}${pad(2)}return (${newline}${expression}${newline}${pad(2)})\n}`;
    }
    function CreateParameter(name, type) {
      const annotation = state.language === "typescript" ? `: ${type}` : "";
      return `${name}${annotation}`;
    }
    function CreateReturns(type) {
      return state.language === "typescript" ? `: ${type}` : "";
    }
    function Build(schema, references, options) {
      const functionCode = CreateFunction("check", schema, references, "value");
      const parameter = CreateParameter("value", "any");
      const returns = CreateReturns("boolean");
      const functions = [...state.functions.values()];
      const variables = [...state.variables.values()];
      const checkFunction = (0, guard_1.IsString)(schema.$id) ? `return function check(${parameter})${returns} {\n  return ${CreateFunctionName(schema.$id)}(value)\n}` : `return ${functionCode}`;
      return [...variables, ...functions, checkFunction].join("\n");
    }
    function Code(...args) {
      const defaults = { language: "javascript" };
      const [schema, references, options] = args.length === 2 && (0, guard_1.IsArray)(args[1]) ? [args[0], args[1], defaults] : args.length === 2 && !(0, guard_1.IsArray)(args[1]) ? [args[0], [], args[1]] : args.length === 3 ? [args[0], args[1], args[2]] : args.length === 1 ? [args[0], [], defaults] : [null, [], defaults];
      state.language = options.language;
      state.variables.clear();
      state.functions.clear();
      state.instances.clear();
      if (!Types.TypeGuard.TSchema(schema))
        throw new TypeCompilerTypeGuardError(schema);
      for (const schema2 of references)
        if (!Types.TypeGuard.TSchema(schema2))
          throw new TypeCompilerTypeGuardError(schema2);
      return Build(schema, references, options);
    }
    TypeCompiler2.Code = Code;
    function Compile(schema, references = []) {
      const generatedCode = Code(schema, references, { language: "javascript" });
      const compiledFunction = globalThis.Function("kind", "format", "hash", generatedCode);
      const instances = new Map(state.instances);
      function typeRegistryFunction(kind, instance, value2) {
        if (!Types.TypeRegistry.Has(kind) || !instances.has(instance))
          return false;
        const checkFunc = Types.TypeRegistry.Get(kind);
        const schema2 = instances.get(instance);
        return checkFunc(schema2, value2);
      }
      function formatRegistryFunction(format, value2) {
        if (!Types.FormatRegistry.Has(format))
          return false;
        const checkFunc = Types.FormatRegistry.Get(format);
        return checkFunc(value2);
      }
      function hashFunction(value2) {
        return (0, hash_1.Hash)(value2);
      }
      const checkFunction = compiledFunction(typeRegistryFunction, formatRegistryFunction, hashFunction);
      return new TypeCheck(schema, references, checkFunction, generatedCode);
    }
    TypeCompiler2.Compile = Compile;
  })(TypeCompiler || (exports.TypeCompiler = TypeCompiler = {}));
});

// node_modules/@sinclair/typebox/compiler/index.js
var require_compiler2 = __commonJS((exports) => {
  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() {
        return m[k];
      } };
    }
    Object.defineProperty(o, k2, desc);
  } : function(o, m, k, k2) {
    if (k2 === undefined)
      k2 = k;
    o[k2] = m[k];
  });
  var __exportStar = exports && exports.__exportStar || function(m, exports2) {
    for (var p in m)
      if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
        __createBinding(exports2, m, p);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.ValueErrorIterator = exports.ValueErrorType = undefined;
  var index_1 = require_errors2();
  Object.defineProperty(exports, "ValueErrorType", { enumerable: true, get: function() {
    return index_1.ValueErrorType;
  } });
  Object.defineProperty(exports, "ValueErrorIterator", { enumerable: true, get: function() {
    return index_1.ValueErrorIterator;
  } });
  __exportStar(require_compiler(), exports);
});

// node_modules/fast-decode-uri-component/index.js
var require_fast_decode_uri_component = __commonJS((exports, module) => {
  var decodeURIComponent2 = function(uri) {
    var percentPosition = uri.indexOf("%");
    if (percentPosition === -1)
      return uri;
    var length = uri.length;
    var decoded = "";
    var last = 0;
    var codepoint = 0;
    var startOfOctets = percentPosition;
    var state = UTF8_ACCEPT;
    while (percentPosition > -1 && percentPosition < length) {
      var high = hexCodeToInt(uri[percentPosition + 1], 4);
      var low = hexCodeToInt(uri[percentPosition + 2], 0);
      var byte = high | low;
      var type = UTF8_DATA[byte];
      state = UTF8_DATA[256 + state + type];
      codepoint = codepoint << 6 | byte & UTF8_DATA[364 + type];
      if (state === UTF8_ACCEPT) {
        decoded += uri.slice(last, startOfOctets);
        decoded += codepoint <= 65535 ? String.fromCharCode(codepoint) : String.fromCharCode(55232 + (codepoint >> 10), 56320 + (codepoint & 1023));
        codepoint = 0;
        last = percentPosition + 3;
        percentPosition = startOfOctets = uri.indexOf("%", last);
      } else if (state === UTF8_REJECT) {
        return null;
      } else {
        percentPosition += 3;
        if (percentPosition < length && uri.charCodeAt(percentPosition) === 37)
          continue;
        return null;
      }
    }
    return decoded + uri.slice(last);
  };
  var hexCodeToInt = function(c, shift) {
    var i = HEX[c];
    return i === undefined ? 255 : i << shift;
  };
  var UTF8_ACCEPT = 12;
  var UTF8_REJECT = 0;
  var UTF8_DATA = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    3,
    4,
    4,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    5,
    6,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    7,
    8,
    7,
    7,
    10,
    9,
    9,
    9,
    11,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    4,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    12,
    0,
    0,
    0,
    0,
    24,
    36,
    48,
    60,
    72,
    84,
    96,
    0,
    12,
    12,
    12,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    24,
    24,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    48,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    127,
    63,
    63,
    63,
    0,
    31,
    15,
    15,
    15,
    7,
    7,
    7
  ];
  var HEX = {
    "0": 0,
    "1": 1,
    "2": 2,
    "3": 3,
    "4": 4,
    "5": 5,
    "6": 6,
    "7": 7,
    "8": 8,
    "9": 9,
    a: 10,
    A: 10,
    b: 11,
    B: 11,
    c: 12,
    C: 12,
    d: 13,
    D: 13,
    e: 14,
    E: 14,
    f: 15,
    F: 15
  };
  module.exports = decodeURIComponent2;
});

// node_modules/fast-querystring/lib/parse.js
var require_parse = __commonJS((exports, module) => {
  var parse2 = function(input) {
    const result = new Empty;
    if (typeof input !== "string") {
      return result;
    }
    let inputLength = input.length;
    let key = "";
    let value3 = "";
    let startingIndex = -1;
    let equalityIndex = -1;
    let shouldDecodeKey = false;
    let shouldDecodeValue = false;
    let keyHasPlus = false;
    let valueHasPlus = false;
    let hasBothKeyValuePair = false;
    let c = 0;
    for (let i = 0;i < inputLength + 1; i++) {
      c = i !== inputLength ? input.charCodeAt(i) : 38;
      if (c === 38) {
        hasBothKeyValuePair = equalityIndex > startingIndex;
        if (!hasBothKeyValuePair) {
          equalityIndex = i;
        }
        key = input.slice(startingIndex + 1, equalityIndex);
        if (hasBothKeyValuePair || key.length > 0) {
          if (keyHasPlus) {
            key = key.replace(plusRegex, " ");
          }
          if (shouldDecodeKey) {
            key = fastDecode(key) || key;
          }
          if (hasBothKeyValuePair) {
            value3 = input.slice(equalityIndex + 1, i);
            if (valueHasPlus) {
              value3 = value3.replace(plusRegex, " ");
            }
            if (shouldDecodeValue) {
              value3 = fastDecode(value3) || value3;
            }
          }
          const currentValue = result[key];
          if (currentValue === undefined) {
            result[key] = value3;
          } else {
            if (currentValue.pop) {
              currentValue.push(value3);
            } else {
              result[key] = [currentValue, value3];
            }
          }
        }
        value3 = "";
        startingIndex = i;
        equalityIndex = i;
        shouldDecodeKey = false;
        shouldDecodeValue = false;
        keyHasPlus = false;
        valueHasPlus = false;
      } else if (c === 61) {
        if (equalityIndex <= startingIndex) {
          equalityIndex = i;
        } else {
          shouldDecodeValue = true;
        }
      } else if (c === 43) {
        if (equalityIndex > startingIndex) {
          valueHasPlus = true;
        } else {
          keyHasPlus = true;
        }
      } else if (c === 37) {
        if (equalityIndex > startingIndex) {
          shouldDecodeValue = true;
        } else {
          shouldDecodeKey = true;
        }
      }
    }
    return result;
  };
  var fastDecode = require_fast_decode_uri_component();
  var plusRegex = /\+/g;
  var Empty = function() {
  };
  Empty.prototype = Object.create(null);
  module.exports = parse2;
});

// node_modules/fast-querystring/lib/internals/querystring.js
var require_querystring = __commonJS((exports, module) => {
  var encodeString = function(str) {
    const len = str.length;
    if (len === 0)
      return "";
    let out = "";
    let lastPos = 0;
    let i = 0;
    outer:
      for (;i < len; i++) {
        let c = str.charCodeAt(i);
        while (c < 128) {
          if (noEscape[c] !== 1) {
            if (lastPos < i)
              out += str.slice(lastPos, i);
            lastPos = i + 1;
            out += hexTable[c];
          }
          if (++i === len)
            break outer;
          c = str.charCodeAt(i);
        }
        if (lastPos < i)
          out += str.slice(lastPos, i);
        if (c < 2048) {
          lastPos = i + 1;
          out += hexTable[192 | c >> 6] + hexTable[128 | c & 63];
          continue;
        }
        if (c < 55296 || c >= 57344) {
          lastPos = i + 1;
          out += hexTable[224 | c >> 12] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
          continue;
        }
        ++i;
        if (i >= len) {
          throw new Error("URI malformed");
        }
        const c2 = str.charCodeAt(i) & 1023;
        lastPos = i + 1;
        c = 65536 + ((c & 1023) << 10 | c2);
        out += hexTable[240 | c >> 18] + hexTable[128 | c >> 12 & 63] + hexTable[128 | c >> 6 & 63] + hexTable[128 | c & 63];
      }
    if (lastPos === 0)
      return str;
    if (lastPos < len)
      return out + str.slice(lastPos);
    return out;
  };
  var hexTable = Array.from({ length: 256 }, (_, i) => "%" + ((i < 16 ? "0" : "") + i.toString(16)).toUpperCase());
  var noEscape = new Int8Array([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    0
  ]);
  module.exports = { encodeString };
});

// node_modules/fast-querystring/lib/stringify.js
var require_stringify = __commonJS((exports, module) => {
  var getAsPrimitive = function(value3) {
    const type = typeof value3;
    if (type === "string") {
      return encodeString(value3);
    } else if (type === "bigint") {
      return value3.toString();
    } else if (type === "boolean") {
      return value3 ? "true" : "false";
    } else if (type === "number" && Number.isFinite(value3)) {
      return value3 < 1000000000000000000000 ? "" + value3 : encodeString("" + value3);
    }
    return "";
  };
  var stringify = function(input) {
    let result = "";
    if (input === null || typeof input !== "object") {
      return result;
    }
    const separator = "&";
    const keys = Object.keys(input);
    const keyLength = keys.length;
    let valueLength = 0;
    for (let i = 0;i < keyLength; i++) {
      const key = keys[i];
      const value3 = input[key];
      const encodedKey = encodeString(key) + "=";
      if (i) {
        result += separator;
      }
      if (Array.isArray(value3)) {
        valueLength = value3.length;
        for (let j = 0;j < valueLength; j++) {
          if (j) {
            result += separator;
          }
          result += encodedKey;
          result += getAsPrimitive(value3[j]);
        }
      } else {
        result += encodedKey;
        result += getAsPrimitive(value3);
      }
    }
    return result;
  };
  var { encodeString } = require_querystring();
  module.exports = stringify;
});

// node_modules/fast-querystring/lib/index.js
var require_lib = __commonJS((exports, module) => {
  var parse2 = require_parse();
  var stringify = require_stringify();
  var fastQuerystring = {
    parse: parse2,
    stringify
  };
  module.exports = fastQuerystring;
  module.exports.default = fastQuerystring;
  module.exports.parse = parse2;
  module.exports.stringify = stringify;
});

// node_modules/lodash.clonedeep/index.js
var require_lodash = __commonJS((exports, module) => {
  var addMapEntry = function(map, pair) {
    map.set(pair[0], pair[1]);
    return map;
  };
  var addSetEntry = function(set, value4) {
    set.add(value4);
    return set;
  };
  var arrayEach = function(array, iteratee) {
    var index = -1, length = array ? array.length : 0;
    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  };
  var arrayPush = function(array, values) {
    var index = -1, length = values.length, offset = array.length;
    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  };
  var arrayReduce = function(array, iteratee, accumulator, initAccum) {
    var index = -1, length = array ? array.length : 0;
    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  };
  var baseTimes = function(n2, iteratee) {
    var index = -1, result = Array(n2);
    while (++index < n2) {
      result[index] = iteratee(index);
    }
    return result;
  };
  var getValue = function(object, key) {
    return object == null ? undefined : object[key];
  };
  var isHostObject = function(value4) {
    var result = false;
    if (value4 != null && typeof value4.toString != "function") {
      try {
        result = !!(value4 + "");
      } catch (e6) {
      }
    }
    return result;
  };
  var mapToArray = function(map) {
    var index = -1, result = Array(map.size);
    map.forEach(function(value4, key) {
      result[++index] = [key, value4];
    });
    return result;
  };
  var overArg = function(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  };
  var setToArray = function(set) {
    var index = -1, result = Array(set.size);
    set.forEach(function(value4) {
      result[++index] = value4;
    });
    return result;
  };
  var Hash = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var hashClear = function() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  };
  var hashDelete = function(key) {
    return this.has(key) && delete this.__data__[key];
  };
  var hashGet = function(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  };
  var hashHas = function(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  };
  var hashSet = function(key, value4) {
    var data = this.__data__;
    data[key] = nativeCreate && value4 === undefined ? HASH_UNDEFINED : value4;
    return this;
  };
  var ListCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var listCacheClear = function() {
    this.__data__ = [];
  };
  var listCacheDelete = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  };
  var listCacheGet = function(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? undefined : data[index][1];
  };
  var listCacheHas = function(key) {
    return assocIndexOf(this.__data__, key) > -1;
  };
  var listCacheSet = function(key, value4) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      data.push([key, value4]);
    } else {
      data[index][1] = value4;
    }
    return this;
  };
  var MapCache = function(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  };
  var mapCacheClear = function() {
    this.__data__ = {
      hash: new Hash,
      map: new (Map2 || ListCache),
      string: new Hash
    };
  };
  var mapCacheDelete = function(key) {
    return getMapData(this, key)["delete"](key);
  };
  var mapCacheGet = function(key) {
    return getMapData(this, key).get(key);
  };
  var mapCacheHas = function(key) {
    return getMapData(this, key).has(key);
  };
  var mapCacheSet = function(key, value4) {
    getMapData(this, key).set(key, value4);
    return this;
  };
  var Stack = function(entries) {
    this.__data__ = new ListCache(entries);
  };
  var stackClear = function() {
    this.__data__ = new ListCache;
  };
  var stackDelete = function(key) {
    return this.__data__["delete"](key);
  };
  var stackGet = function(key) {
    return this.__data__.get(key);
  };
  var stackHas = function(key) {
    return this.__data__.has(key);
  };
  var stackSet = function(key, value4) {
    var cache = this.__data__;
    if (cache instanceof ListCache) {
      var pairs = cache.__data__;
      if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
        pairs.push([key, value4]);
        return this;
      }
      cache = this.__data__ = new MapCache(pairs);
    }
    cache.set(key, value4);
    return this;
  };
  var arrayLikeKeys = function(value4, inherited) {
    var result = isArray(value4) || isArguments(value4) ? baseTimes(value4.length, String) : [];
    var length = result.length, skipIndexes = !!length;
    for (var key in value4) {
      if ((inherited || hasOwnProperty.call(value4, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  };
  var assignValue = function(object, key, value4) {
    var objValue = object[key];
    if (!(hasOwnProperty.call(object, key) && eq(objValue, value4)) || value4 === undefined && !(key in object)) {
      object[key] = value4;
    }
  };
  var assocIndexOf = function(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  };
  var baseAssign = function(object, source) {
    return object && copyObject(source, keys(source), object);
  };
  var baseClone = function(value4, isDeep, isFull, customizer, key, object, stack) {
    var result;
    if (customizer) {
      result = object ? customizer(value4, key, object, stack) : customizer(value4);
    }
    if (result !== undefined) {
      return result;
    }
    if (!isObject(value4)) {
      return value4;
    }
    var isArr = isArray(value4);
    if (isArr) {
      result = initCloneArray(value4);
      if (!isDeep) {
        return copyArray(value4, result);
      }
    } else {
      var tag = getTag(value4), isFunc = tag == funcTag || tag == genTag;
      if (isBuffer(value4)) {
        return cloneBuffer(value4, isDeep);
      }
      if (tag == objectTag || tag == argsTag || isFunc && !object) {
        if (isHostObject(value4)) {
          return object ? value4 : {};
        }
        result = initCloneObject(isFunc ? {} : value4);
        if (!isDeep) {
          return copySymbols(value4, baseAssign(result, value4));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value4 : {};
        }
        result = initCloneByTag(value4, tag, baseClone, isDeep);
      }
    }
    stack || (stack = new Stack);
    var stacked = stack.get(value4);
    if (stacked) {
      return stacked;
    }
    stack.set(value4, result);
    if (!isArr) {
      var props = isFull ? getAllKeys(value4) : keys(value4);
    }
    arrayEach(props || value4, function(subValue, key2) {
      if (props) {
        key2 = subValue;
        subValue = value4[key2];
      }
      assignValue(result, key2, baseClone(subValue, isDeep, isFull, customizer, key2, value4, stack));
    });
    return result;
  };
  var baseCreate = function(proto) {
    return isObject(proto) ? objectCreate(proto) : {};
  };
  var baseGetAllKeys = function(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  };
  var baseGetTag = function(value4) {
    return objectToString.call(value4);
  };
  var baseIsNative = function(value4) {
    if (!isObject(value4) || isMasked(value4)) {
      return false;
    }
    var pattern = isFunction(value4) || isHostObject(value4) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value4));
  };
  var baseKeys = function(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != "constructor") {
        result.push(key);
      }
    }
    return result;
  };
  var cloneBuffer = function(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var result = new buffer.constructor(buffer.length);
    buffer.copy(result);
    return result;
  };
  var cloneArrayBuffer = function(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array2(result).set(new Uint8Array2(arrayBuffer));
    return result;
  };
  var cloneDataView = function(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  };
  var cloneMap = function(map, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
    return arrayReduce(array, addMapEntry, new map.constructor);
  };
  var cloneRegExp = function(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  };
  var cloneSet = function(set, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
    return arrayReduce(array, addSetEntry, new set.constructor);
  };
  var cloneSymbol = function(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  };
  var cloneTypedArray = function(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  };
  var copyArray = function(source, array) {
    var index = -1, length = source.length;
    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  };
  var copyObject = function(source, props, object, customizer) {
    object || (object = {});
    var index = -1, length = props.length;
    while (++index < length) {
      var key = props[index];
      var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
      assignValue(object, key, newValue === undefined ? source[key] : newValue);
    }
    return object;
  };
  var copySymbols = function(source, object) {
    return copyObject(source, getSymbols(source), object);
  };
  var getAllKeys = function(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  };
  var getMapData = function(map, key) {
    var data = map.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  };
  var getNative = function(object, key) {
    var value4 = getValue(object, key);
    return baseIsNative(value4) ? value4 : undefined;
  };
  var initCloneArray = function(array) {
    var length = array.length, result = array.constructor(length);
    if (length && typeof array[0] == "string" && hasOwnProperty.call(array, "index")) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  };
  var initCloneObject = function(object) {
    return typeof object.constructor == "function" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
  };
  var initCloneByTag = function(object, tag, cloneFunc, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag:
        return cloneArrayBuffer(object);
      case boolTag:
      case dateTag:
        return new Ctor(+object);
      case dataViewTag:
        return cloneDataView(object, isDeep);
      case float32Tag:
      case float64Tag:
      case int8Tag:
      case int16Tag:
      case int32Tag:
      case uint8Tag:
      case uint8ClampedTag:
      case uint16Tag:
      case uint32Tag:
        return cloneTypedArray(object, isDeep);
      case mapTag:
        return cloneMap(object, isDeep, cloneFunc);
      case numberTag:
      case stringTag:
        return new Ctor(object);
      case regexpTag:
        return cloneRegExp(object);
      case setTag:
        return cloneSet(object, isDeep, cloneFunc);
      case symbolTag:
        return cloneSymbol(object);
    }
  };
  var isIndex = function(value4, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value4 == "number" || reIsUint.test(value4)) && (value4 > -1 && value4 % 1 == 0 && value4 < length);
  };
  var isKeyable = function(value4) {
    var type = typeof value4;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value4 !== "__proto__" : value4 === null;
  };
  var isMasked = function(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  };
  var isPrototype = function(value4) {
    var Ctor = value4 && value4.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
    return value4 === proto;
  };
  var toSource = function(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e6) {
      }
      try {
        return func + "";
      } catch (e6) {
      }
    }
    return "";
  };
  var cloneDeep = function(value4) {
    return baseClone(value4, true, true);
  };
  var eq = function(value4, other) {
    return value4 === other || value4 !== value4 && other !== other;
  };
  var isArguments = function(value4) {
    return isArrayLikeObject(value4) && hasOwnProperty.call(value4, "callee") && (!propertyIsEnumerable.call(value4, "callee") || objectToString.call(value4) == argsTag);
  };
  var isArrayLike = function(value4) {
    return value4 != null && isLength(value4.length) && !isFunction(value4);
  };
  var isArrayLikeObject = function(value4) {
    return isObjectLike(value4) && isArrayLike(value4);
  };
  var isFunction = function(value4) {
    var tag = isObject(value4) ? objectToString.call(value4) : "";
    return tag == funcTag || tag == genTag;
  };
  var isLength = function(value4) {
    return typeof value4 == "number" && value4 > -1 && value4 % 1 == 0 && value4 <= MAX_SAFE_INTEGER;
  };
  var isObject = function(value4) {
    var type = typeof value4;
    return !!value4 && (type == "object" || type == "function");
  };
  var isObjectLike = function(value4) {
    return !!value4 && typeof value4 == "object";
  };
  var keys = function(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  };
  var stubArray = function() {
    return [];
  };
  var stubFalse = function() {
    return false;
  };
  var LARGE_ARRAY_SIZE = 200;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var MAX_SAFE_INTEGER = 9007199254740991;
  var argsTag = "[object Arguments]";
  var arrayTag = "[object Array]";
  var boolTag = "[object Boolean]";
  var dateTag = "[object Date]";
  var errorTag = "[object Error]";
  var funcTag = "[object Function]";
  var genTag = "[object GeneratorFunction]";
  var mapTag = "[object Map]";
  var numberTag = "[object Number]";
  var objectTag = "[object Object]";
  var promiseTag = "[object Promise]";
  var regexpTag = "[object RegExp]";
  var setTag = "[object Set]";
  var stringTag = "[object String]";
  var symbolTag = "[object Symbol]";
  var weakMapTag = "[object WeakMap]";
  var arrayBufferTag = "[object ArrayBuffer]";
  var dataViewTag = "[object DataView]";
  var float32Tag = "[object Float32Array]";
  var float64Tag = "[object Float64Array]";
  var int8Tag = "[object Int8Array]";
  var int16Tag = "[object Int16Array]";
  var int32Tag = "[object Int32Array]";
  var uint8Tag = "[object Uint8Array]";
  var uint8ClampedTag = "[object Uint8ClampedArray]";
  var uint16Tag = "[object Uint16Array]";
  var uint32Tag = "[object Uint32Array]";
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reFlags = /\w*$/;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
  var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function("return this")();
  var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
  var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var arrayProto = Array.prototype;
  var funcProto = Function.prototype;
  var objectProto = Object.prototype;
  var coreJsData = root["__core-js_shared__"];
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto.hasOwnProperty;
  var objectToString = objectProto.toString;
  var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
  var Buffer2 = moduleExports ? root.Buffer : undefined;
  var Symbol2 = root.Symbol;
  var Uint8Array2 = root.Uint8Array;
  var getPrototype = overArg(Object.getPrototypeOf, Object);
  var objectCreate = Object.create;
  var propertyIsEnumerable = objectProto.propertyIsEnumerable;
  var splice = arrayProto.splice;
  var nativeGetSymbols = Object.getOwnPropertySymbols;
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : undefined;
  var nativeKeys = overArg(Object.keys, Object);
  var DataView2 = getNative(root, "DataView");
  var Map2 = getNative(root, "Map");
  var Promise2 = getNative(root, "Promise");
  var Set2 = getNative(root, "Set");
  var WeakMap2 = getNative(root, "WeakMap");
  var nativeCreate = getNative(Object, "create");
  var dataViewCtorString = toSource(DataView2);
  var mapCtorString = toSource(Map2);
  var promiseCtorString = toSource(Promise2);
  var setCtorString = toSource(Set2);
  var weakMapCtorString = toSource(WeakMap2);
  var symbolProto = Symbol2 ? Symbol2.prototype : undefined;
  var symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  Stack.prototype.clear = stackClear;
  Stack.prototype["delete"] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;
  var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;
  var getTag = baseGetTag;
  if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2) != setTag || WeakMap2 && getTag(new WeakMap2) != weakMapTag) {
    getTag = function(value4) {
      var result = objectToString.call(value4), Ctor = result == objectTag ? value4.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : undefined;
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }
  var isArray = Array.isArray;
  var isBuffer = nativeIsBuffer || stubFalse;
  module.exports = cloneDeep;
});

// node:crypto
var exports_crypto = {};
__export(exports_crypto, {
  webcrypto: () => {
    {
      return cw;
    }
  },
  timingSafeEqual: () => {
    {
      return x0;
    }
  },
  scryptSync: () => {
    {
      return Id;
    }
  },
  scrypt: () => {
    {
      return Td;
    }
  },
  randomUUID: () => {
    {
      return lw;
    }
  },
  getRandomValues: () => {
    {
      return uw;
    }
  },
  getCurves: () => {
    {
      return dw;
    }
  },
  default: () => {
    {
      return Wq;
    }
  },
  DEFAULT_ENCODING: () => {
    {
      return Ga;
    }
  }
});
var dw, pw, Xa, vw, bw, mw, gw, R0, T, Ja, Ya, ot, rn, ur, Nd, Dd, Ut, Te, on, Ie, ki, W0, $f, pc, Z0, sn, V0, G0, J0, hn, co, Jf, po, Qf, vo, Pc, Oc, th, ph, Qc, np, ap, bh, Ao, Bo, pn, _p, Ep, gh, qp, yh, Op, ko, Tt, Gr, No, Jt, pa, Rh, pr, Y_, Oi, Fi, Ui, k1, yn, Vo, Go, Z1, Xo, Fh, ba, Jh, Dv, Qr, fu, ou, os, eb, cu, lb, bu, vf, S7, db, yi, bf, wb, mu, wu, Mu, Eb, _u, xu, Eu, Au, Ub, Iu, Tu, ar, vs, ku, Yb, Qb, em, im, nm, yf, om, um, dm, pm, bm, Pu, Ou, Fu, ws2, Aa, Em, Wu, ju, Ba, Dm, Fm, Es, Hm, Vm, ji, Yu, Ym, Xm, As, tl, ol, rg, ag, hg, hl, pg, dl, kn, cl, bl, Ln, Ds, Lg, Dg, yl, Il, Yg, t22, i2, Ws, Ks, s22, ri, Nl, or, Oa, b2, y2, _2, Pl, Cr, Tf, Cl, N2, Fl, F2, Wl, Z2, V2, Q2, ty, e0, ny, t0, uy, dy, vy, yy, xy, Ey, Iy, o0, td, h0, u0, Kf, d0, c0, nd, Hy, od, hd, Jy, dd, r32, n3, o3, cd, d3, p3, v3, m3, Ha, bd, _3, A3, k3, N3, P3, _d, xd, w0, Ed, j3, Y3, X3, ow, qd, Xt, zq, Ga, uw, lw, Hq, x0, Id, Td, cw, Wq;
var init_crypto = __esm(() => {
  dw = function() {
    return Hq;
  };
  pw = Object.create;
  Xa = Object.defineProperty;
  vw = Object.getOwnPropertyDescriptor;
  bw = Object.getOwnPropertyNames;
  mw = Object.getPrototypeOf;
  gw = Object.prototype.hasOwnProperty;
  R0 = (t6, e6) => () => (t6 && (e6 = t6(t6 = 0)), e6);
  T = (t6, e6) => () => (e6 || t6((e6 = { exports: {} }).exports, e6), e6.exports);
  Ja = (t6, e6) => {
    for (var r6 in e6)
      Xa(t6, r6, { get: e6[r6], enumerable: true });
  };
  Ya = (t6, e6, r6, o2) => {
    if (e6 && typeof e6 == "object" || typeof e6 == "function")
      for (let f of bw(e6))
        !gw.call(t6, f) && f !== r6 && Xa(t6, f, { get: () => e6[f], enumerable: !(o2 = vw(e6, f)) || o2.enumerable });
    return t6;
  };
  ot = (t6, e6, r6) => (Ya(t6, e6, "default"), r6 && Ya(r6, e6, "default"));
  rn = (t6, e6, r6) => (r6 = t6 != null ? pw(mw(t6)) : {}, Ya(e6 || !t6 || !t6.__esModule ? Xa(r6, "default", { value: t6, enumerable: true }) : r6, t6));
  ur = (t6) => Ya(Xa({}, "__esModule", { value: true }), t6);
  Nd = T((Qa) => {
    Qa.byteLength = ww;
    Qa.toByteArray = _w;
    Qa.fromByteArray = Ew;
    var jr = [], lr = [], yw = typeof Uint8Array < "u" ? Uint8Array : Array, B0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    for (nn = 0, kd = B0.length;nn < kd; ++nn)
      jr[nn] = B0[nn], lr[B0.charCodeAt(nn)] = nn;
    var nn, kd;
    lr["-".charCodeAt(0)] = 62;
    lr["_".charCodeAt(0)] = 63;
    function Ld(t6) {
      var e6 = t6.length;
      if (e6 % 4 > 0)
        throw new Error("Invalid string. Length must be a multiple of 4");
      var r6 = t6.indexOf("=");
      r6 === -1 && (r6 = e6);
      var o2 = r6 === e6 ? 0 : 4 - r6 % 4;
      return [r6, o2];
    }
    function ww(t6) {
      var e6 = Ld(t6), r6 = e6[0], o2 = e6[1];
      return (r6 + o2) * 3 / 4 - o2;
    }
    function Mw(t6, e6, r6) {
      return (e6 + r6) * 3 / 4 - r6;
    }
    function _w(t6) {
      var e6, r6 = Ld(t6), o2 = r6[0], f = r6[1], p2 = new yw(Mw(t6, o2, f)), m2 = 0, y2 = f > 0 ? o2 - 4 : o2, M;
      for (M = 0;M < y2; M += 4)
        e6 = lr[t6.charCodeAt(M)] << 18 | lr[t6.charCodeAt(M + 1)] << 12 | lr[t6.charCodeAt(M + 2)] << 6 | lr[t6.charCodeAt(M + 3)], p2[m2++] = e6 >> 16 & 255, p2[m2++] = e6 >> 8 & 255, p2[m2++] = e6 & 255;
      return f === 2 && (e6 = lr[t6.charCodeAt(M)] << 2 | lr[t6.charCodeAt(M + 1)] >> 4, p2[m2++] = e6 & 255), f === 1 && (e6 = lr[t6.charCodeAt(M)] << 10 | lr[t6.charCodeAt(M + 1)] << 4 | lr[t6.charCodeAt(M + 2)] >> 2, p2[m2++] = e6 >> 8 & 255, p2[m2++] = e6 & 255), p2;
    }
    function xw(t6) {
      return jr[t6 >> 18 & 63] + jr[t6 >> 12 & 63] + jr[t6 >> 6 & 63] + jr[t6 & 63];
    }
    function Sw(t6, e6, r6) {
      for (var o2, f = [], p2 = e6;p2 < r6; p2 += 3)
        o2 = (t6[p2] << 16 & 16711680) + (t6[p2 + 1] << 8 & 65280) + (t6[p2 + 2] & 255), f.push(xw(o2));
      return f.join("");
    }
    function Ew(t6) {
      for (var e6, r6 = t6.length, o2 = r6 % 3, f = [], p2 = 16383, m2 = 0, y2 = r6 - o2;m2 < y2; m2 += p2)
        f.push(Sw(t6, m2, m2 + p2 > y2 ? y2 : m2 + p2));
      return o2 === 1 ? (e6 = t6[r6 - 1], f.push(jr[e6 >> 2] + jr[e6 << 4 & 63] + "==")) : o2 === 2 && (e6 = (t6[r6 - 2] << 8) + t6[r6 - 1], f.push(jr[e6 >> 10] + jr[e6 >> 4 & 63] + jr[e6 << 2 & 63] + "=")), f.join("");
    }
  });
  Dd = T((q0) => {
    q0.read = function(t6, e6, r6, o2, f) {
      var p2, m2, y2 = f * 8 - o2 - 1, M = (1 << y2) - 1, x = M >> 1, S = -7, E = r6 ? f - 1 : 0, B = r6 ? -1 : 1, q2 = t6[e6 + E];
      for (E += B, p2 = q2 & (1 << -S) - 1, q2 >>= -S, S += y2;S > 0; p2 = p2 * 256 + t6[e6 + E], E += B, S -= 8)
        ;
      for (m2 = p2 & (1 << -S) - 1, p2 >>= -S, S += o2;S > 0; m2 = m2 * 256 + t6[e6 + E], E += B, S -= 8)
        ;
      if (p2 === 0)
        p2 = 1 - x;
      else {
        if (p2 === M)
          return m2 ? NaN : (q2 ? -1 : 1) * (1 / 0);
        m2 = m2 + Math.pow(2, o2), p2 = p2 - x;
      }
      return (q2 ? -1 : 1) * m2 * Math.pow(2, p2 - o2);
    };
    q0.write = function(t6, e6, r6, o2, f, p2) {
      var m2, y2, M, x = p2 * 8 - f - 1, S = (1 << x) - 1, E = S >> 1, B = f === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, q2 = o2 ? 0 : p2 - 1, L = o2 ? 1 : -1, ge = e6 < 0 || e6 === 0 && 1 / e6 < 0 ? 1 : 0;
      for (e6 = Math.abs(e6), isNaN(e6) || e6 === 1 / 0 ? (y2 = isNaN(e6) ? 1 : 0, m2 = S) : (m2 = Math.floor(Math.log(e6) / Math.LN2), e6 * (M = Math.pow(2, -m2)) < 1 && (m2--, M *= 2), m2 + E >= 1 ? e6 += B / M : e6 += B * Math.pow(2, 1 - E), e6 * M >= 2 && (m2++, M /= 2), m2 + E >= S ? (y2 = 0, m2 = S) : m2 + E >= 1 ? (y2 = (e6 * M - 1) * Math.pow(2, f), m2 = m2 + E) : (y2 = e6 * Math.pow(2, E - 1) * Math.pow(2, f), m2 = 0));f >= 8; t6[r6 + q2] = y2 & 255, q2 += L, y2 /= 256, f -= 8)
        ;
      for (m2 = m2 << f | y2, x += f;x > 0; t6[r6 + q2] = m2 & 255, q2 += L, m2 /= 256, x -= 8)
        ;
      t6[r6 + q2 - L] |= ge * 128;
    };
  });
  Ut = T((Xn) => {
    var I0 = Nd(), Gn = Dd(), Pd = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
    Xn.Buffer = me;
    Xn.SlowBuffer = Tw;
    Xn.INSPECT_MAX_BYTES = 50;
    var eo = 2147483647;
    Xn.kMaxLength = eo;
    me.TYPED_ARRAY_SUPPORT = Aw();
    !me.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
    function Aw() {
      try {
        let t6 = new Uint8Array(1), e6 = { foo: function() {
          return 42;
        } };
        return Object.setPrototypeOf(e6, Uint8Array.prototype), Object.setPrototypeOf(t6, e6), t6.foo() === 42;
      } catch {
        return false;
      }
    }
    Object.defineProperty(me.prototype, "parent", { enumerable: true, get: function() {
      if (!!me.isBuffer(this))
        return this.buffer;
    } });
    Object.defineProperty(me.prototype, "offset", { enumerable: true, get: function() {
      if (!!me.isBuffer(this))
        return this.byteOffset;
    } });
    function li(t6) {
      if (t6 > eo)
        throw new RangeError('The value "' + t6 + '" is invalid for option "size"');
      let e6 = new Uint8Array(t6);
      return Object.setPrototypeOf(e6, me.prototype), e6;
    }
    function me(t6, e6, r6) {
      if (typeof t6 == "number") {
        if (typeof e6 == "string")
          throw new TypeError('The "string" argument must be of type string. Received type number');
        return N0(t6);
      }
      return Ud(t6, e6, r6);
    }
    me.poolSize = 8192;
    function Ud(t6, e6, r6) {
      if (typeof t6 == "string")
        return Bw(t6, e6);
      if (ArrayBuffer.isView(t6))
        return qw(t6);
      if (t6 == null)
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t6);
      if (Zr(t6, ArrayBuffer) || t6 && Zr(t6.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (Zr(t6, SharedArrayBuffer) || t6 && Zr(t6.buffer, SharedArrayBuffer)))
        return k0(t6, e6, r6);
      if (typeof t6 == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type number');
      let o2 = t6.valueOf && t6.valueOf();
      if (o2 != null && o2 !== t6)
        return me.from(o2, e6, r6);
      let f = Iw(t6);
      if (f)
        return f;
      if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof t6[Symbol.toPrimitive] == "function")
        return me.from(t6[Symbol.toPrimitive]("string"), e6, r6);
      throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t6);
    }
    me.from = function(t6, e6, r6) {
      return Ud(t6, e6, r6);
    };
    Object.setPrototypeOf(me.prototype, Uint8Array.prototype);
    Object.setPrototypeOf(me, Uint8Array);
    function zd(t6) {
      if (typeof t6 != "number")
        throw new TypeError('"size" argument must be of type number');
      if (t6 < 0)
        throw new RangeError('The value "' + t6 + '" is invalid for option "size"');
    }
    function Rw(t6, e6, r6) {
      return zd(t6), t6 <= 0 ? li(t6) : e6 !== undefined ? typeof r6 == "string" ? li(t6).fill(e6, r6) : li(t6).fill(e6) : li(t6);
    }
    me.alloc = function(t6, e6, r6) {
      return Rw(t6, e6, r6);
    };
    function N0(t6) {
      return zd(t6), li(t6 < 0 ? 0 : D0(t6) | 0);
    }
    me.allocUnsafe = function(t6) {
      return N0(t6);
    };
    me.allocUnsafeSlow = function(t6) {
      return N0(t6);
    };
    function Bw(t6, e6) {
      if ((typeof e6 != "string" || e6 === "") && (e6 = "utf8"), !me.isEncoding(e6))
        throw new TypeError("Unknown encoding: " + e6);
      let r6 = Hd(t6, e6) | 0, o2 = li(r6), f = o2.write(t6, e6);
      return f !== r6 && (o2 = o2.slice(0, f)), o2;
    }
    function T0(t6) {
      let e6 = t6.length < 0 ? 0 : D0(t6.length) | 0, r6 = li(e6);
      for (let o2 = 0;o2 < e6; o2 += 1)
        r6[o2] = t6[o2] & 255;
      return r6;
    }
    function qw(t6) {
      if (Zr(t6, Uint8Array)) {
        let e6 = new Uint8Array(t6);
        return k0(e6.buffer, e6.byteOffset, e6.byteLength);
      }
      return T0(t6);
    }
    function k0(t6, e6, r6) {
      if (e6 < 0 || t6.byteLength < e6)
        throw new RangeError('"offset" is outside of buffer bounds');
      if (t6.byteLength < e6 + (r6 || 0))
        throw new RangeError('"length" is outside of buffer bounds');
      let o2;
      return e6 === undefined && r6 === undefined ? o2 = new Uint8Array(t6) : r6 === undefined ? o2 = new Uint8Array(t6, e6) : o2 = new Uint8Array(t6, e6, r6), Object.setPrototypeOf(o2, me.prototype), o2;
    }
    function Iw(t6) {
      if (me.isBuffer(t6)) {
        let e6 = D0(t6.length) | 0, r6 = li(e6);
        return r6.length === 0 || t6.copy(r6, 0, 0, e6), r6;
      }
      if (t6.length !== undefined)
        return typeof t6.length != "number" || C0(t6.length) ? li(0) : T0(t6);
      if (t6.type === "Buffer" && Array.isArray(t6.data))
        return T0(t6.data);
    }
    function D0(t6) {
      if (t6 >= eo)
        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + eo.toString(16) + " bytes");
      return t6 | 0;
    }
    function Tw(t6) {
      return +t6 != t6 && (t6 = 0), me.alloc(+t6);
    }
    me.isBuffer = function(e6) {
      return e6 != null && e6._isBuffer === true && e6 !== me.prototype;
    };
    me.compare = function(e6, r6) {
      if (Zr(e6, Uint8Array) && (e6 = me.from(e6, e6.offset, e6.byteLength)), Zr(r6, Uint8Array) && (r6 = me.from(r6, r6.offset, r6.byteLength)), !me.isBuffer(e6) || !me.isBuffer(r6))
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
      if (e6 === r6)
        return 0;
      let o2 = e6.length, f = r6.length;
      for (let p2 = 0, m2 = Math.min(o2, f);p2 < m2; ++p2)
        if (e6[p2] !== r6[p2]) {
          o2 = e6[p2], f = r6[p2];
          break;
        }
      return o2 < f ? -1 : f < o2 ? 1 : 0;
    };
    me.isEncoding = function(e6) {
      switch (String(e6).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
          return true;
        default:
          return false;
      }
    };
    me.concat = function(e6, r6) {
      if (!Array.isArray(e6))
        throw new TypeError('"list" argument must be an Array of Buffers');
      if (e6.length === 0)
        return me.alloc(0);
      let o2;
      if (r6 === undefined)
        for (r6 = 0, o2 = 0;o2 < e6.length; ++o2)
          r6 += e6[o2].length;
      let f = me.allocUnsafe(r6), p2 = 0;
      for (o2 = 0;o2 < e6.length; ++o2) {
        let m2 = e6[o2];
        if (Zr(m2, Uint8Array))
          p2 + m2.length > f.length ? (me.isBuffer(m2) || (m2 = me.from(m2)), m2.copy(f, p2)) : Uint8Array.prototype.set.call(f, m2, p2);
        else if (me.isBuffer(m2))
          m2.copy(f, p2);
        else
          throw new TypeError('"list" argument must be an Array of Buffers');
        p2 += m2.length;
      }
      return f;
    };
    function Hd(t6, e6) {
      if (me.isBuffer(t6))
        return t6.length;
      if (ArrayBuffer.isView(t6) || Zr(t6, ArrayBuffer))
        return t6.byteLength;
      if (typeof t6 != "string")
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t6);
      let r6 = t6.length, o2 = arguments.length > 2 && arguments[2] === true;
      if (!o2 && r6 === 0)
        return 0;
      let f = false;
      for (;; )
        switch (e6) {
          case "ascii":
          case "latin1":
          case "binary":
            return r6;
          case "utf8":
          case "utf-8":
            return L0(t6).length;
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return r6 * 2;
          case "hex":
            return r6 >>> 1;
          case "base64":
            return Xd(t6).length;
          default:
            if (f)
              return o2 ? -1 : L0(t6).length;
            e6 = ("" + e6).toLowerCase(), f = true;
        }
    }
    me.byteLength = Hd;
    function kw(t6, e6, r6) {
      let o2 = false;
      if ((e6 === undefined || e6 < 0) && (e6 = 0), e6 > this.length || ((r6 === undefined || r6 > this.length) && (r6 = this.length), r6 <= 0) || (r6 >>>= 0, e6 >>>= 0, r6 <= e6))
        return "";
      for (t6 || (t6 = "utf8");; )
        switch (t6) {
          case "hex":
            return Hw(this, e6, r6);
          case "utf8":
          case "utf-8":
            return Kd(this, e6, r6);
          case "ascii":
            return Uw(this, e6, r6);
          case "latin1":
          case "binary":
            return zw(this, e6, r6);
          case "base64":
            return Ow(this, e6, r6);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Ww(this, e6, r6);
          default:
            if (o2)
              throw new TypeError("Unknown encoding: " + t6);
            t6 = (t6 + "").toLowerCase(), o2 = true;
        }
    }
    me.prototype._isBuffer = true;
    function fn(t6, e6, r6) {
      let o2 = t6[e6];
      t6[e6] = t6[r6], t6[r6] = o2;
    }
    me.prototype.swap16 = function() {
      let e6 = this.length;
      if (e6 % 2 !== 0)
        throw new RangeError("Buffer size must be a multiple of 16-bits");
      for (let r6 = 0;r6 < e6; r6 += 2)
        fn(this, r6, r6 + 1);
      return this;
    };
    me.prototype.swap32 = function() {
      let e6 = this.length;
      if (e6 % 4 !== 0)
        throw new RangeError("Buffer size must be a multiple of 32-bits");
      for (let r6 = 0;r6 < e6; r6 += 4)
        fn(this, r6, r6 + 3), fn(this, r6 + 1, r6 + 2);
      return this;
    };
    me.prototype.swap64 = function() {
      let e6 = this.length;
      if (e6 % 8 !== 0)
        throw new RangeError("Buffer size must be a multiple of 64-bits");
      for (let r6 = 0;r6 < e6; r6 += 8)
        fn(this, r6, r6 + 7), fn(this, r6 + 1, r6 + 6), fn(this, r6 + 2, r6 + 5), fn(this, r6 + 3, r6 + 4);
      return this;
    };
    me.prototype.toString = function() {
      let e6 = this.length;
      return e6 === 0 ? "" : arguments.length === 0 ? Kd(this, 0, e6) : kw.apply(this, arguments);
    };
    me.prototype.toLocaleString = me.prototype.toString;
    me.prototype.equals = function(e6) {
      if (!me.isBuffer(e6))
        throw new TypeError("Argument must be a Buffer");
      return this === e6 ? true : me.compare(this, e6) === 0;
    };
    me.prototype.inspect = function() {
      let e6 = "", r6 = Xn.INSPECT_MAX_BYTES;
      return e6 = this.toString("hex", 0, r6).replace(/(.{2})/g, "$1 ").trim(), this.length > r6 && (e6 += " ... "), "<Buffer " + e6 + ">";
    };
    Pd && (me.prototype[Pd] = me.prototype.inspect);
    me.prototype.compare = function(e6, r6, o2, f, p2) {
      if (Zr(e6, Uint8Array) && (e6 = me.from(e6, e6.offset, e6.byteLength)), !me.isBuffer(e6))
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e6);
      if (r6 === undefined && (r6 = 0), o2 === undefined && (o2 = e6 ? e6.length : 0), f === undefined && (f = 0), p2 === undefined && (p2 = this.length), r6 < 0 || o2 > e6.length || f < 0 || p2 > this.length)
        throw new RangeError("out of range index");
      if (f >= p2 && r6 >= o2)
        return 0;
      if (f >= p2)
        return -1;
      if (r6 >= o2)
        return 1;
      if (r6 >>>= 0, o2 >>>= 0, f >>>= 0, p2 >>>= 0, this === e6)
        return 0;
      let m2 = p2 - f, y2 = o2 - r6, M = Math.min(m2, y2), x = this.slice(f, p2), S = e6.slice(r6, o2);
      for (let E = 0;E < M; ++E)
        if (x[E] !== S[E]) {
          m2 = x[E], y2 = S[E];
          break;
        }
      return m2 < y2 ? -1 : y2 < m2 ? 1 : 0;
    };
    function Wd(t6, e6, r6, o2, f) {
      if (t6.length === 0)
        return -1;
      if (typeof r6 == "string" ? (o2 = r6, r6 = 0) : r6 > 2147483647 ? r6 = 2147483647 : r6 < -2147483648 && (r6 = -2147483648), r6 = +r6, C0(r6) && (r6 = f ? 0 : t6.length - 1), r6 < 0 && (r6 = t6.length + r6), r6 >= t6.length) {
        if (f)
          return -1;
        r6 = t6.length - 1;
      } else if (r6 < 0)
        if (f)
          r6 = 0;
        else
          return -1;
      if (typeof e6 == "string" && (e6 = me.from(e6, o2)), me.isBuffer(e6))
        return e6.length === 0 ? -1 : Cd(t6, e6, r6, o2, f);
      if (typeof e6 == "number")
        return e6 = e6 & 255, typeof Uint8Array.prototype.indexOf == "function" ? f ? Uint8Array.prototype.indexOf.call(t6, e6, r6) : Uint8Array.prototype.lastIndexOf.call(t6, e6, r6) : Cd(t6, [e6], r6, o2, f);
      throw new TypeError("val must be string, number or Buffer");
    }
    function Cd(t6, e6, r6, o2, f) {
      let p2 = 1, m2 = t6.length, y2 = e6.length;
      if (o2 !== undefined && (o2 = String(o2).toLowerCase(), o2 === "ucs2" || o2 === "ucs-2" || o2 === "utf16le" || o2 === "utf-16le")) {
        if (t6.length < 2 || e6.length < 2)
          return -1;
        p2 = 2, m2 /= 2, y2 /= 2, r6 /= 2;
      }
      function M(S, E) {
        return p2 === 1 ? S[E] : S.readUInt16BE(E * p2);
      }
      let x;
      if (f) {
        let S = -1;
        for (x = r6;x < m2; x++)
          if (M(t6, x) === M(e6, S === -1 ? 0 : x - S)) {
            if (S === -1 && (S = x), x - S + 1 === y2)
              return S * p2;
          } else
            S !== -1 && (x -= x - S), S = -1;
      } else
        for (r6 + y2 > m2 && (r6 = m2 - y2), x = r6;x >= 0; x--) {
          let S = true;
          for (let E = 0;E < y2; E++)
            if (M(t6, x + E) !== M(e6, E)) {
              S = false;
              break;
            }
          if (S)
            return x;
        }
      return -1;
    }
    me.prototype.includes = function(e6, r6, o2) {
      return this.indexOf(e6, r6, o2) !== -1;
    };
    me.prototype.indexOf = function(e6, r6, o2) {
      return Wd(this, e6, r6, o2, true);
    };
    me.prototype.lastIndexOf = function(e6, r6, o2) {
      return Wd(this, e6, r6, o2, false);
    };
    function Lw(t6, e6, r6, o2) {
      r6 = Number(r6) || 0;
      let f = t6.length - r6;
      o2 ? (o2 = Number(o2), o2 > f && (o2 = f)) : o2 = f;
      let p2 = e6.length;
      o2 > p2 / 2 && (o2 = p2 / 2);
      let m2;
      for (m2 = 0;m2 < o2; ++m2) {
        let y2 = parseInt(e6.substr(m2 * 2, 2), 16);
        if (C0(y2))
          return m2;
        t6[r6 + m2] = y2;
      }
      return m2;
    }
    function Nw(t6, e6, r6, o2) {
      return to(L0(e6, t6.length - r6), t6, r6, o2);
    }
    function Dw(t6, e6, r6, o2) {
      return to(Vw(e6), t6, r6, o2);
    }
    function Pw(t6, e6, r6, o2) {
      return to(Xd(e6), t6, r6, o2);
    }
    function Cw(t6, e6, r6, o2) {
      return to($w(e6, t6.length - r6), t6, r6, o2);
    }
    me.prototype.write = function(e6, r6, o2, f) {
      if (r6 === undefined)
        f = "utf8", o2 = this.length, r6 = 0;
      else if (o2 === undefined && typeof r6 == "string")
        f = r6, o2 = this.length, r6 = 0;
      else if (isFinite(r6))
        r6 = r6 >>> 0, isFinite(o2) ? (o2 = o2 >>> 0, f === undefined && (f = "utf8")) : (f = o2, o2 = undefined);
      else
        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
      let p2 = this.length - r6;
      if ((o2 === undefined || o2 > p2) && (o2 = p2), e6.length > 0 && (o2 < 0 || r6 < 0) || r6 > this.length)
        throw new RangeError("Attempt to write outside buffer bounds");
      f || (f = "utf8");
      let m2 = false;
      for (;; )
        switch (f) {
          case "hex":
            return Lw(this, e6, r6, o2);
          case "utf8":
          case "utf-8":
            return Nw(this, e6, r6, o2);
          case "ascii":
          case "latin1":
          case "binary":
            return Dw(this, e6, r6, o2);
          case "base64":
            return Pw(this, e6, r6, o2);
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return Cw(this, e6, r6, o2);
          default:
            if (m2)
              throw new TypeError("Unknown encoding: " + f);
            f = ("" + f).toLowerCase(), m2 = true;
        }
    };
    me.prototype.toJSON = function() {
      return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
    };
    function Ow(t6, e6, r6) {
      return e6 === 0 && r6 === t6.length ? I0.fromByteArray(t6) : I0.fromByteArray(t6.slice(e6, r6));
    }
    function Kd(t6, e6, r6) {
      r6 = Math.min(t6.length, r6);
      let o2 = [], f = e6;
      for (;f < r6; ) {
        let p2 = t6[f], m2 = null, y2 = p2 > 239 ? 4 : p2 > 223 ? 3 : p2 > 191 ? 2 : 1;
        if (f + y2 <= r6) {
          let M, x, S, E;
          switch (y2) {
            case 1:
              p2 < 128 && (m2 = p2);
              break;
            case 2:
              M = t6[f + 1], (M & 192) === 128 && (E = (p2 & 31) << 6 | M & 63, E > 127 && (m2 = E));
              break;
            case 3:
              M = t6[f + 1], x = t6[f + 2], (M & 192) === 128 && (x & 192) === 128 && (E = (p2 & 15) << 12 | (M & 63) << 6 | x & 63, E > 2047 && (E < 55296 || E > 57343) && (m2 = E));
              break;
            case 4:
              M = t6[f + 1], x = t6[f + 2], S = t6[f + 3], (M & 192) === 128 && (x & 192) === 128 && (S & 192) === 128 && (E = (p2 & 15) << 18 | (M & 63) << 12 | (x & 63) << 6 | S & 63, E > 65535 && E < 1114112 && (m2 = E));
          }
        }
        m2 === null ? (m2 = 65533, y2 = 1) : m2 > 65535 && (m2 -= 65536, o2.push(m2 >>> 10 & 1023 | 55296), m2 = 56320 | m2 & 1023), o2.push(m2), f += y2;
      }
      return Fw(o2);
    }
    var Od = 4096;
    function Fw(t6) {
      let e6 = t6.length;
      if (e6 <= Od)
        return String.fromCharCode.apply(String, t6);
      let r6 = "", o2 = 0;
      for (;o2 < e6; )
        r6 += String.fromCharCode.apply(String, t6.slice(o2, o2 += Od));
      return r6;
    }
    function Uw(t6, e6, r6) {
      let o2 = "";
      r6 = Math.min(t6.length, r6);
      for (let f = e6;f < r6; ++f)
        o2 += String.fromCharCode(t6[f] & 127);
      return o2;
    }
    function zw(t6, e6, r6) {
      let o2 = "";
      r6 = Math.min(t6.length, r6);
      for (let f = e6;f < r6; ++f)
        o2 += String.fromCharCode(t6[f]);
      return o2;
    }
    function Hw(t6, e6, r6) {
      let o2 = t6.length;
      (!e6 || e6 < 0) && (e6 = 0), (!r6 || r6 < 0 || r6 > o2) && (r6 = o2);
      let f = "";
      for (let p2 = e6;p2 < r6; ++p2)
        f += Gw[t6[p2]];
      return f;
    }
    function Ww(t6, e6, r6) {
      let o2 = t6.slice(e6, r6), f = "";
      for (let p2 = 0;p2 < o2.length - 1; p2 += 2)
        f += String.fromCharCode(o2[p2] + o2[p2 + 1] * 256);
      return f;
    }
    me.prototype.slice = function(e6, r6) {
      let o2 = this.length;
      e6 = ~~e6, r6 = r6 === undefined ? o2 : ~~r6, e6 < 0 ? (e6 += o2, e6 < 0 && (e6 = 0)) : e6 > o2 && (e6 = o2), r6 < 0 ? (r6 += o2, r6 < 0 && (r6 = 0)) : r6 > o2 && (r6 = o2), r6 < e6 && (r6 = e6);
      let f = this.subarray(e6, r6);
      return Object.setPrototypeOf(f, me.prototype), f;
    };
    function Dt(t6, e6, r6) {
      if (t6 % 1 !== 0 || t6 < 0)
        throw new RangeError("offset is not uint");
      if (t6 + e6 > r6)
        throw new RangeError("Trying to access beyond buffer length");
    }
    me.prototype.readUintLE = me.prototype.readUIntLE = function(e6, r6, o2) {
      e6 = e6 >>> 0, r6 = r6 >>> 0, o2 || Dt(e6, r6, this.length);
      let f = this[e6], p2 = 1, m2 = 0;
      for (;++m2 < r6 && (p2 *= 256); )
        f += this[e6 + m2] * p2;
      return f;
    };
    me.prototype.readUintBE = me.prototype.readUIntBE = function(e6, r6, o2) {
      e6 = e6 >>> 0, r6 = r6 >>> 0, o2 || Dt(e6, r6, this.length);
      let f = this[e6 + --r6], p2 = 1;
      for (;r6 > 0 && (p2 *= 256); )
        f += this[e6 + --r6] * p2;
      return f;
    };
    me.prototype.readUint8 = me.prototype.readUInt8 = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 1, this.length), this[e6];
    };
    me.prototype.readUint16LE = me.prototype.readUInt16LE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 2, this.length), this[e6] | this[e6 + 1] << 8;
    };
    me.prototype.readUint16BE = me.prototype.readUInt16BE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 2, this.length), this[e6] << 8 | this[e6 + 1];
    };
    me.prototype.readUint32LE = me.prototype.readUInt32LE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 4, this.length), (this[e6] | this[e6 + 1] << 8 | this[e6 + 2] << 16) + this[e6 + 3] * 16777216;
    };
    me.prototype.readUint32BE = me.prototype.readUInt32BE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 4, this.length), this[e6] * 16777216 + (this[e6 + 1] << 16 | this[e6 + 2] << 8 | this[e6 + 3]);
    };
    me.prototype.readBigUInt64LE = Ti(function(e6) {
      e6 = e6 >>> 0, Yn(e6, "offset");
      let r6 = this[e6], o2 = this[e6 + 7];
      (r6 === undefined || o2 === undefined) && Vf(e6, this.length - 8);
      let f = r6 + this[++e6] * 2 ** 8 + this[++e6] * 2 ** 16 + this[++e6] * 2 ** 24, p2 = this[++e6] + this[++e6] * 2 ** 8 + this[++e6] * 2 ** 16 + o2 * 2 ** 24;
      return BigInt(f) + (BigInt(p2) << BigInt(32));
    });
    me.prototype.readBigUInt64BE = Ti(function(e6) {
      e6 = e6 >>> 0, Yn(e6, "offset");
      let r6 = this[e6], o2 = this[e6 + 7];
      (r6 === undefined || o2 === undefined) && Vf(e6, this.length - 8);
      let f = r6 * 2 ** 24 + this[++e6] * 2 ** 16 + this[++e6] * 2 ** 8 + this[++e6], p2 = this[++e6] * 2 ** 24 + this[++e6] * 2 ** 16 + this[++e6] * 2 ** 8 + o2;
      return (BigInt(f) << BigInt(32)) + BigInt(p2);
    });
    me.prototype.readIntLE = function(e6, r6, o2) {
      e6 = e6 >>> 0, r6 = r6 >>> 0, o2 || Dt(e6, r6, this.length);
      let f = this[e6], p2 = 1, m2 = 0;
      for (;++m2 < r6 && (p2 *= 256); )
        f += this[e6 + m2] * p2;
      return p2 *= 128, f >= p2 && (f -= Math.pow(2, 8 * r6)), f;
    };
    me.prototype.readIntBE = function(e6, r6, o2) {
      e6 = e6 >>> 0, r6 = r6 >>> 0, o2 || Dt(e6, r6, this.length);
      let f = r6, p2 = 1, m2 = this[e6 + --f];
      for (;f > 0 && (p2 *= 256); )
        m2 += this[e6 + --f] * p2;
      return p2 *= 128, m2 >= p2 && (m2 -= Math.pow(2, 8 * r6)), m2;
    };
    me.prototype.readInt8 = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 1, this.length), this[e6] & 128 ? (255 - this[e6] + 1) * -1 : this[e6];
    };
    me.prototype.readInt16LE = function(e6, r6) {
      e6 = e6 >>> 0, r6 || Dt(e6, 2, this.length);
      let o2 = this[e6] | this[e6 + 1] << 8;
      return o2 & 32768 ? o2 | 4294901760 : o2;
    };
    me.prototype.readInt16BE = function(e6, r6) {
      e6 = e6 >>> 0, r6 || Dt(e6, 2, this.length);
      let o2 = this[e6 + 1] | this[e6] << 8;
      return o2 & 32768 ? o2 | 4294901760 : o2;
    };
    me.prototype.readInt32LE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 4, this.length), this[e6] | this[e6 + 1] << 8 | this[e6 + 2] << 16 | this[e6 + 3] << 24;
    };
    me.prototype.readInt32BE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 4, this.length), this[e6] << 24 | this[e6 + 1] << 16 | this[e6 + 2] << 8 | this[e6 + 3];
    };
    me.prototype.readBigInt64LE = Ti(function(e6) {
      e6 = e6 >>> 0, Yn(e6, "offset");
      let r6 = this[e6], o2 = this[e6 + 7];
      (r6 === undefined || o2 === undefined) && Vf(e6, this.length - 8);
      let f = this[e6 + 4] + this[e6 + 5] * 2 ** 8 + this[e6 + 6] * 2 ** 16 + (o2 << 24);
      return (BigInt(f) << BigInt(32)) + BigInt(r6 + this[++e6] * 2 ** 8 + this[++e6] * 2 ** 16 + this[++e6] * 2 ** 24);
    });
    me.prototype.readBigInt64BE = Ti(function(e6) {
      e6 = e6 >>> 0, Yn(e6, "offset");
      let r6 = this[e6], o2 = this[e6 + 7];
      (r6 === undefined || o2 === undefined) && Vf(e6, this.length - 8);
      let f = (r6 << 24) + this[++e6] * 2 ** 16 + this[++e6] * 2 ** 8 + this[++e6];
      return (BigInt(f) << BigInt(32)) + BigInt(this[++e6] * 2 ** 24 + this[++e6] * 2 ** 16 + this[++e6] * 2 ** 8 + o2);
    });
    me.prototype.readFloatLE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 4, this.length), Gn.read(this, e6, true, 23, 4);
    };
    me.prototype.readFloatBE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 4, this.length), Gn.read(this, e6, false, 23, 4);
    };
    me.prototype.readDoubleLE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 8, this.length), Gn.read(this, e6, true, 52, 8);
    };
    me.prototype.readDoubleBE = function(e6, r6) {
      return e6 = e6 >>> 0, r6 || Dt(e6, 8, this.length), Gn.read(this, e6, false, 52, 8);
    };
    function er(t6, e6, r6, o2, f, p2) {
      if (!me.isBuffer(t6))
        throw new TypeError('"buffer" argument must be a Buffer instance');
      if (e6 > f || e6 < p2)
        throw new RangeError('"value" argument is out of bounds');
      if (r6 + o2 > t6.length)
        throw new RangeError("Index out of range");
    }
    me.prototype.writeUintLE = me.prototype.writeUIntLE = function(e6, r6, o2, f) {
      if (e6 = +e6, r6 = r6 >>> 0, o2 = o2 >>> 0, !f) {
        let y2 = Math.pow(2, 8 * o2) - 1;
        er(this, e6, r6, o2, y2, 0);
      }
      let p2 = 1, m2 = 0;
      for (this[r6] = e6 & 255;++m2 < o2 && (p2 *= 256); )
        this[r6 + m2] = e6 / p2 & 255;
      return r6 + o2;
    };
    me.prototype.writeUintBE = me.prototype.writeUIntBE = function(e6, r6, o2, f) {
      if (e6 = +e6, r6 = r6 >>> 0, o2 = o2 >>> 0, !f) {
        let y2 = Math.pow(2, 8 * o2) - 1;
        er(this, e6, r6, o2, y2, 0);
      }
      let p2 = o2 - 1, m2 = 1;
      for (this[r6 + p2] = e6 & 255;--p2 >= 0 && (m2 *= 256); )
        this[r6 + p2] = e6 / m2 & 255;
      return r6 + o2;
    };
    me.prototype.writeUint8 = me.prototype.writeUInt8 = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 1, 255, 0), this[r6] = e6 & 255, r6 + 1;
    };
    me.prototype.writeUint16LE = me.prototype.writeUInt16LE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 2, 65535, 0), this[r6] = e6 & 255, this[r6 + 1] = e6 >>> 8, r6 + 2;
    };
    me.prototype.writeUint16BE = me.prototype.writeUInt16BE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 2, 65535, 0), this[r6] = e6 >>> 8, this[r6 + 1] = e6 & 255, r6 + 2;
    };
    me.prototype.writeUint32LE = me.prototype.writeUInt32LE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 4, 4294967295, 0), this[r6 + 3] = e6 >>> 24, this[r6 + 2] = e6 >>> 16, this[r6 + 1] = e6 >>> 8, this[r6] = e6 & 255, r6 + 4;
    };
    me.prototype.writeUint32BE = me.prototype.writeUInt32BE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 4, 4294967295, 0), this[r6] = e6 >>> 24, this[r6 + 1] = e6 >>> 16, this[r6 + 2] = e6 >>> 8, this[r6 + 3] = e6 & 255, r6 + 4;
    };
    function jd(t6, e6, r6, o2, f) {
      Yd(e6, o2, f, t6, r6, 7);
      let p2 = Number(e6 & BigInt(4294967295));
      t6[r6++] = p2, p2 = p2 >> 8, t6[r6++] = p2, p2 = p2 >> 8, t6[r6++] = p2, p2 = p2 >> 8, t6[r6++] = p2;
      let m2 = Number(e6 >> BigInt(32) & BigInt(4294967295));
      return t6[r6++] = m2, m2 = m2 >> 8, t6[r6++] = m2, m2 = m2 >> 8, t6[r6++] = m2, m2 = m2 >> 8, t6[r6++] = m2, r6;
    }
    function Zd(t6, e6, r6, o2, f) {
      Yd(e6, o2, f, t6, r6, 7);
      let p2 = Number(e6 & BigInt(4294967295));
      t6[r6 + 7] = p2, p2 = p2 >> 8, t6[r6 + 6] = p2, p2 = p2 >> 8, t6[r6 + 5] = p2, p2 = p2 >> 8, t6[r6 + 4] = p2;
      let m2 = Number(e6 >> BigInt(32) & BigInt(4294967295));
      return t6[r6 + 3] = m2, m2 = m2 >> 8, t6[r6 + 2] = m2, m2 = m2 >> 8, t6[r6 + 1] = m2, m2 = m2 >> 8, t6[r6] = m2, r6 + 8;
    }
    me.prototype.writeBigUInt64LE = Ti(function(e6, r6 = 0) {
      return jd(this, e6, r6, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    me.prototype.writeBigUInt64BE = Ti(function(e6, r6 = 0) {
      return Zd(this, e6, r6, BigInt(0), BigInt("0xffffffffffffffff"));
    });
    me.prototype.writeIntLE = function(e6, r6, o2, f) {
      if (e6 = +e6, r6 = r6 >>> 0, !f) {
        let M = Math.pow(2, 8 * o2 - 1);
        er(this, e6, r6, o2, M - 1, -M);
      }
      let p2 = 0, m2 = 1, y2 = 0;
      for (this[r6] = e6 & 255;++p2 < o2 && (m2 *= 256); )
        e6 < 0 && y2 === 0 && this[r6 + p2 - 1] !== 0 && (y2 = 1), this[r6 + p2] = (e6 / m2 >> 0) - y2 & 255;
      return r6 + o2;
    };
    me.prototype.writeIntBE = function(e6, r6, o2, f) {
      if (e6 = +e6, r6 = r6 >>> 0, !f) {
        let M = Math.pow(2, 8 * o2 - 1);
        er(this, e6, r6, o2, M - 1, -M);
      }
      let p2 = o2 - 1, m2 = 1, y2 = 0;
      for (this[r6 + p2] = e6 & 255;--p2 >= 0 && (m2 *= 256); )
        e6 < 0 && y2 === 0 && this[r6 + p2 + 1] !== 0 && (y2 = 1), this[r6 + p2] = (e6 / m2 >> 0) - y2 & 255;
      return r6 + o2;
    };
    me.prototype.writeInt8 = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 1, 127, -128), e6 < 0 && (e6 = 255 + e6 + 1), this[r6] = e6 & 255, r6 + 1;
    };
    me.prototype.writeInt16LE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 2, 32767, -32768), this[r6] = e6 & 255, this[r6 + 1] = e6 >>> 8, r6 + 2;
    };
    me.prototype.writeInt16BE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 2, 32767, -32768), this[r6] = e6 >>> 8, this[r6 + 1] = e6 & 255, r6 + 2;
    };
    me.prototype.writeInt32LE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 4, 2147483647, -2147483648), this[r6] = e6 & 255, this[r6 + 1] = e6 >>> 8, this[r6 + 2] = e6 >>> 16, this[r6 + 3] = e6 >>> 24, r6 + 4;
    };
    me.prototype.writeInt32BE = function(e6, r6, o2) {
      return e6 = +e6, r6 = r6 >>> 0, o2 || er(this, e6, r6, 4, 2147483647, -2147483648), e6 < 0 && (e6 = 4294967295 + e6 + 1), this[r6] = e6 >>> 24, this[r6 + 1] = e6 >>> 16, this[r6 + 2] = e6 >>> 8, this[r6 + 3] = e6 & 255, r6 + 4;
    };
    me.prototype.writeBigInt64LE = Ti(function(e6, r6 = 0) {
      return jd(this, e6, r6, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    me.prototype.writeBigInt64BE = Ti(function(e6, r6 = 0) {
      return Zd(this, e6, r6, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
    });
    function Vd(t6, e6, r6, o2, f, p2) {
      if (r6 + o2 > t6.length)
        throw new RangeError("Index out of range");
      if (r6 < 0)
        throw new RangeError("Index out of range");
    }
    function $d(t6, e6, r6, o2, f) {
      return e6 = +e6, r6 = r6 >>> 0, f || Vd(t6, e6, r6, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000), Gn.write(t6, e6, r6, o2, 23, 4), r6 + 4;
    }
    me.prototype.writeFloatLE = function(e6, r6, o2) {
      return $d(this, e6, r6, true, o2);
    };
    me.prototype.writeFloatBE = function(e6, r6, o2) {
      return $d(this, e6, r6, false, o2);
    };
    function Gd(t6, e6, r6, o2, f) {
      return e6 = +e6, r6 = r6 >>> 0, f || Vd(t6, e6, rn.write(t6, e6, r6, o2, 52, 8), r6 + 8;
    }
    me.prototype.writeDoubleLE = function(e6, r6, o2) {
      return Gd(this, e6, r6, true, o2);
    };
    me.prototype.writeDoubleBE = function(e6, r6, o2) {
      return Gd(this, e6, r6, false, o2);
    };
    me.prototype.copy = function(e6, r6, o2, f) {
      if (!me.isBuffer(e6))
        throw new TypeError("argument should be a Buffer");
      if (o2 || (o2 = 0), !f && f !== 0 && (f = this.length), r6 >= e6.length && (r6 = e6.length), r6 || (r6 = 0), f > 0 && f < o2 && (f = o2), f === o2 || e6.length === 0 || this.length === 0)
        return 0;
      if (r6 < 0)
        throw new RangeError("targetStart out of bounds");
      if (o2 < 0 || o2 >= this.length)
        throw new RangeError("Index out of range");
      if (f < 0)
        throw new RangeError("sourceEnd out of bounds");
      f > this.length && (f = this.length), e6.length - r6 < f - o2 && (f = e6.length - r6 + o2);
      let p2 = f - o2;
      return this === e6 && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(r6, o2, f) : Uint8Array.prototype.set.call(e6, this.subarray(o2, f), r6), p2;
    };
    me.prototype.fill = function(e6, r6, o2, f) {
      if (typeof e6 == "string") {
        if (typeof r6 == "string" ? (f = r6, r6 = 0, o2 = this.length) : typeof o2 == "string" && (f = o2, o2 = this.length), f !== undefined && typeof f != "string")
          throw new TypeError("encoding must be a string");
        if (typeof f == "string" && !me.isEncoding(f))
          throw new TypeError("Unknown encoding: " + f);
        if (e6.length === 1) {
          let m2 = e6.charCodeAt(0);
          (f === "utf8" && m2 < 128 || f === "latin1") && (e6 = m2);
        }
      } else
        typeof e6 == "number" ? e6 = e6 & 255 : typeof e6 == "boolean" && (e6 = Number(e6));
      if (r6 < 0 || this.length < r6 || this.length < o2)
        throw new RangeError("Out of range index");
      if (o2 <= r6)
        return this;
      r6 = r6 >>> 0, o2 = o2 === undefined ? this.length : o2 >>> 0, e6 || (e6 = 0);
      let p2;
      if (typeof e6 == "number")
        for (p2 = r6;p2 < o2; ++p2)
          this[p2] = e6;
      else {
        let m2 = me.isBuffer(e6) ? e6 : me.from(e6, f), y2 = m2.length;
        if (y2 === 0)
          throw new TypeError('The value "' + e6 + '" is invalid for argument "value"');
        for (p2 = 0;p2 < o2 - r6; ++p2)
          this[p2 + r6] = m2[p2 % y2];
      }
      return this;
    };
    var $n = {};
    function P0(t6, e6, r6) {
      $n[t6] = class extends r6 {
        constructor() {
          super(), Object.defineProperty(this, "message", { value: e6.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${t6}]`, this.stack, delete this.name;
        }
        get code() {
          return t6;
        }
        set code(f) {
          Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: f, writable: true });
        }
        toString() {
          return `${this.name} [${t6}]: ${this.message}`;
        }
      };
    }
    P0("ERR_BUFFER_OUT_OF_BOUNDS", function(t6) {
      return t6 ? `${t6} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
    }, RangeError);
    P0("ERR_INVALID_ARG_TYPE", function(t6, e6) {
      return `The "${t6}" argument must be of type number. Received type ${typeof e6}`;
    }, TypeError);
    P0("ERR_OUT_OF_RANGE", function(t6, e6, r6) {
      let o2 = `The value of "${t6}" is out of range.`, f = r6;
      return Number.isInteger(r6) && Math.abs(r6) > 2 ** 32 ? f = Fd(String(r6)) : typeof r6 == "bigint" && (f = String(r6), (r6 > BigInt(2) ** BigInt(32) || r6 < -(BigInt(2) ** BigInt(32))) && (f = Fd(f)), f += "n"), o2 += ` It must be ${e6}. Received ${f}`, o2;
    }, RangeError);
    function Fd(t6) {
      let e6 = "", r6 = t6.length, o2 = t6[0] === "-" ? 1 : 0;
      for (;r6 >= o2 + 4; r6 -= 3)
        e6 = `_${t6.slice(r6 - 3, r6)}${e6}`;
      return `${t6.slice(0, r6)}${e6}`;
    }
    function Kw(t6, e6, r6) {
      Yn(e6, "offset"), (t6[e6] === undefined || t6[e6 + r6] === undefined) && Vf(e6, t6.length - (r6 + 1));
    }
    function Yd(t6, e6, r6, o2, f, p2) {
      if (t6 > r6 || t6 < e6) {
        let m2 = typeof e6 == "bigint" ? "n" : "", y2;
        throw p2 > 3 ? e6 === 0 || e6 === BigInt(0) ? y2 = `>= 0${m2} and < 2${m2} ** ${(p2 + 1) * 8}${m2}` : y2 = `>= -(2${m2} ** ${(p2 + 1) * 8 - 1}${m2}) and < 2 ** ${(p2 + 1) * 8 - 1}${m2}` : y2 = `>= ${e6}${m2} and <= ${r6}${m2}`, new $n.ERR_OUT_OF_RANGE("value", y2, t6);
      }
      Kw(o2, f, p2);
    }
    function Yn(t6, e6) {
      if (typeof t6 != "number")
        throw new $n.ERR_INVALID_ARG_TYPE(e6, "number", t6);
    }
    function Vf(t6, e6, r6) {
      throw Math.floor(t6) !== t6 ? (Yn(t6, r6), new $n.ERR_OUT_OF_RANGE(r6 || "offset", "an integer", t6)) : e6 < 0 ? new $n.ERR_BUFFER_OUT_OF_BOUNDS : new $n.ERR_OUT_OF_RANGE(r6 || "offset", `>= ${r6 ? 1 : 0} and <= ${e6}`, t6);
    }
    var jw = /[^+/0-9A-Za-z-_]/g;
    function Zw(t6) {
      if (t6 = t6.split("=")[0], t6 = t6.trim().replace(jw, ""), t6.length < 2)
        return "";
      for (;t6.length % 4 !== 0; )
        t6 = t6 + "=";
      return t6;
    }
    function L0(t6, e6) {
      e6 = e6 || 1 / 0;
      let r6, o2 = t6.length, f = null, p2 = [];
      for (let m2 = 0;m2 < o2; ++m2) {
        if (r6 = t6.charCodeAt(m2), r6 > 55295 && r6 < 57344) {
          if (!f) {
            if (r6 > 56319) {
              (e6 -= 3) > -1 && p2.push(239, 191, 189);
              continue;
            } else if (m2 + 1 === o2) {
              (e6 -= 3) > -1 && p2.push(239, 191, 189);
              continue;
            }
            f = r6;
            continue;
          }
          if (r6 < 56320) {
            (e6 -= 3) > -1 && p2.push(239, 191, 189), f = r6;
            continue;
          }
          r6 = (f - 55296 << 10 | r6 - 56320) + 65536;
        } else
          f && (e6 -= 3) > -1 && p2.push(239, 191, 189);
        if (f = null, r6 < 128) {
          if ((e6 -= 1) < 0)
            break;
          p2.push(r6);
        } else if (r6 < 2048) {
          if ((e6 -= 2) < 0)
            break;
          p2.push(r6 >> 6 | 192, r6 & 63 | 128);
        } else if (r6 < 65536) {
          if ((e6 -= 3) < 0)
            break;
          p2.push(r6 >> 12 | 224, r6 >> 6 & 63 | 128, r6 & 63 | 128);
        } else if (r6 < 1114112) {
          if ((e6 -= 4) < 0)
            break;
          p2.push(r6 >> 18 | 240, r6 >> 12 & 63 | 128, r6 >> 6 & 63 | 128, r6 & 63 | 128);
        } else
          throw new Error("Invalid code point");
      }
      return p2;
    }
    function Vw(t6) {
      let e6 = [];
      for (let r6 = 0;r6 < t6.length; ++r6)
        e6.push(t6.charCodeAt(r6) & 255);
      return e6;
    }
    function $w(t6, e6) {
      let r6, o2, f, p2 = [];
      for (let m2 = 0;m2 < t6.length && !((e6 -= 2) < 0); ++m2)
        r6 = t6.charCodeAt(m2), o2 = r6 >> 8, f = r6 % 256, p2.push(f), p2.push(o2);
      return p2;
    }
    function Xd(t6) {
      return I0.toByteArray(Zw(t6));
    }
    function to(t6, e6, r6, o2) {
      let f;
      for (f = 0;f < o2 && !(f + r6 >= e6.length || f >= t6.length); ++f)
        e6[f + r6] = t6[f];
      return f;
    }
    function Zr(t6, e6) {
      return t6 instanceof e6 || t6 != null && t6.constructor != null && t6.constructor.name != null && t6.constructor.name === e6.name;
    }
    function C0(t6) {
      return t6 !== t6;
    }
    var Gw = function() {
      let t6 = "0123456789abcdef", e6 = new Array(256);
      for (let r6 = 0;r6 < 16; ++r6) {
        let o2 = r6 * 16;
        for (let f = 0;f < 16; ++f)
          e6[o2 + f] = t6[r6] + t6[f];
      }
      return e6;
    }();
    function Ti(t6) {
      return typeof BigInt > "u" ? Yw : t6;
    }
    function Yw() {
      throw new Error("BigInt not supported");
    }
  });
  Te = T((O0, Qd) => {
    var ro = Ut(), Vr = ro.Buffer;
    function Jd(t6, e6) {
      for (var r6 in t6)
        e6[r6] = t6[r6];
    }
    Vr.from && Vr.alloc && Vr.allocUnsafe && Vr.allocUnsafeSlow ? Qd.exports = ro : (Jd(ro, O0), O0.Buffer = an);
    function an(t6, e6, r6) {
      return Vr(t6, e6, r6);
    }
    an.prototype = Object.create(Vr.prototype);
    Jd(Vr, an);
    an.from = function(t6, e6, r6) {
      if (typeof t6 == "number")
        throw new TypeError("Argument must not be a number");
      return Vr(t6, e6, r6);
    };
    an.alloc = function(t6, e6, r6) {
      if (typeof t6 != "number")
        throw new TypeError("Argument must be a number");
      var o2 = Vr(t6);
      return e6 !== undefined ? typeof r6 == "string" ? o2.fill(e6, r6) : o2.fill(e6) : o2.fill(0), o2;
    };
    an.allocUnsafe = function(t6) {
      if (typeof t6 != "number")
        throw new TypeError("Argument must be a number");
      return Vr(t6);
    };
    an.allocUnsafeSlow = function(t6) {
      if (typeof t6 != "number")
        throw new TypeError("Argument must be a number");
      return ro.SlowBuffer(t6);
    };
  });
  on = T((Gq, U0) => {
    var F0 = 65536, Xw = 4294967295;
    function Jw() {
      throw new Error(`Secure random number generation is not supported by this browser.
Use Chrome, Firefox or Internet Explorer 11`);
    }
    var Qw = Te().Buffer, io = global.crypto || global.msCrypto;
    io && io.getRandomValues ? U0.exports = e6 : U0.exports = Jw;
    function e6(t6, e7) {
      if (t6 > Xw)
        throw new RangeError("requested too many random bytes");
      var r6 = Qw.allocUnsafe(t6);
      if (t6 > 0)
        if (t6 > F0)
          for (var o2 = 0;o2 < t6; o2 += F0)
            io.getRandomValues(r6.slice(o2, o2 + F0));
        else
          io.getRandomValues(r6);
      return typeof e7 == "function" ? process.nextTick(function() {
        e7(null, r6);
      }) : r6;
    }
  });
  Ie = T((Yq, z0) => {
    typeof Object.create == "function" ? z0.exports = function(e6, r6) {
      r6 && (e6.super_ = r6, e6.prototype = Object.create(r6.prototype, { constructor: { value: e6, enumerable: false, writable: true, configurable: true } }));
    } : z0.exports = function(e6, r6) {
      if (r6) {
        e6.super_ = r6;
        var o2 = function() {
        };
        o2.prototype = r6.prototype, e6.prototype = new o2, e6.prototype.constructor = e6;
      }
    };
  });
  ki = T((Xq, H0) => {
    var Jn = typeof Reflect == "object" ? Reflect : null, ec = Jn && typeof Jn.apply == "function" ? Jn.apply : function(e6, r7, o2) {
      return Function.prototype.apply.call(e6, r7, o2);
    }, no;
    Jn && typeof Jn.ownKeys == "function" ? no = Jn.ownKeys : Object.getOwnPropertySymbols ? no = function(e6) {
      return Object.getOwnPropertyNames(e6).concat(Object.getOwnPropertySymbols(e6));
    } : no = function(e6) {
      return Object.getOwnPropertyNames(e6);
    };
    function t6(t7) {
      console && console.warn && console.warn(t7);
    }
    var rc = Number.isNaN || function(e6) {
      return e6 !== e6;
    };
    function Fe() {
      Fe.init.call(this);
    }
    H0.exports = Fe;
    H0.exports.once = f6;
    Fe.EventEmitter = Fe;
    Fe.prototype._events = undefined;
    Fe.prototype._eventsCount = 0;
    Fe.prototype._maxListeners = undefined;
    var tc = 10;
    function fo(t7) {
      if (typeof t7 != "function")
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof t7);
    }
    Object.defineProperty(Fe, "defaultMaxListeners", { enumerable: true, get: function() {
      return tc;
    }, set: function(t7) {
      if (typeof t7 != "number" || t7 < 0 || rc(t7))
        throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + t7 + ".");
      tc = t7;
    } });
    Fe.init = function() {
      (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) && (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || undefined;
    };
    Fe.prototype.setMaxListeners = function(e6) {
      if (typeof e6 != "number" || e6 < 0 || rc(e6))
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + e6 + ".");
      return this._maxListeners = e6, this;
    };
    function ic(t7) {
      return t7._maxListeners === undefined ? Fe.defaultMaxListeners : t7._maxListeners;
    }
    Fe.prototype.getMaxListeners = function() {
      return ic(this);
    };
    Fe.prototype.emit = function(e6) {
      for (var r7 = [], o2 = 1;o2 < arguments.length; o2++)
        r7.push(arguments[o2]);
      var f = e6 === "error", p2 = this._events;
      if (p2 !== undefined)
        f = f && p2.error === undefined;
      else if (!f)
        return false;
      if (f) {
        var m2;
        if (r7.length > 0 && (m2 = r7[0]), m2 instanceof Error)
          throw m2;
        var y2 = new Error("Unhandled error." + (m2 ? " (" + m2.message + ")" : ""));
        throw y2.context = m2, y2;
      }
      var M = p2[e6];
      if (M === undefined)
        return false;
      if (typeof M == "function")
        ec(M, this, r7);
      else
        for (var x = M.length, S = sc(M, x), o2 = 0;o2 < x; ++o2)
          ec(S[o2], this, r7);
      return true;
    };
    function nc(t7, e6, r7, o2) {
      var f, p2, m2;
      if (fo(r7), p2 = t7._events, p2 === undefined ? (p2 = t7._events = Object.create(null), t7._eventsCount = 0) : (p2.newListener !== undefined && (t7.emit("newListener", e6, r7.listener ? r7.listener : r7), p2 = t7._events), m2 = p2[e6]), m2 === undefined)
        m2 = p2[e6] = r7, ++t7._eventsCount;
      else if (typeof m2 == "function" ? m2 = p2[e6] = o2 ? [r7, m2] : [m2, r7] : o2 ? m2.unshift(r7) : m2.push(r7), f = ic(t7), f > 0 && m2.length > f && !m2.warned) {
        m2.warned = true;
        var y2 = new Error("Possible EventEmitter memory leak detected. " + m2.length + " " + String(e6) + " listeners added. Use emitter.setMaxListeners() to increase limit");
        y2.name = "MaxListenersExceededWarning", y2.emitter = t7, y2.type = e6, y2.count = m2.length, t6(y2);
      }
      return t7;
    }
    Fe.prototype.addListener = function(e6, r7) {
      return nc(this, e6, r7, false);
    };
    Fe.prototype.on = Fe.prototype.addListener;
    Fe.prototype.prependListener = function(e6, r7) {
      return nc(this, e6, r7, true);
    };
    function r6() {
      if (!this.fired)
        return this.target.removeListener(this.type, this.wrapFn), this.fired = true, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
    }
    function fc(t7, e6, r7) {
      var o2 = { fired: false, wrapFn: undefined, target: t7, type: e6, listener: r7 }, f = r6.bind(o2);
      return f.listener = r7, o2.wrapFn = f, f;
    }
    Fe.prototype.once = function(e6, r7) {
      return fo(r7), this.on(e6, fc(this, e6, r7)), this;
    };
    Fe.prototype.prependOnceListener = function(e6, r7) {
      return fo(r7), this.prependListener(e6, fc(this, e6, r7)), this;
    };
    Fe.prototype.removeListener = function(e6, r7) {
      var o2, f, p2, m2, y2;
      if (fo(r7), f = this._events, f === undefined)
        return this;
      if (o2 = f[e6], o2 === undefined)
        return this;
      if (o2 === r7 || o2.listener === r7)
        --this._eventsCount === 0 ? this._events = Object.create(null) : (delete f[e6], f.removeListener && this.emit("removeListener", e6, o2.listener || r7));
      else if (typeof o2 != "function") {
        for (p2 = -1, m2 = o2.length - 1;m2 >= 0; m2--)
          if (o2[m2] === r7 || o2[m2].listener === r7) {
            y2 = o2[m2].listener, p2 = m2;
            break;
          }
        if (p2 < 0)
          return this;
        p2 === 0 ? o2.shift() : i6(o2, p2), o2.length === 1 && (f[e6] = o2[0]), f.removeListener !== undefined && this.emit("removeListener", e6, y2 || r7);
      }
      return this;
    };
    Fe.prototype.off = Fe.prototype.removeListener;
    Fe.prototype.removeAllListeners = function(e6) {
      var r7, o2, f;
      if (o2 = this._events, o2 === undefined)
        return this;
      if (o2.removeListener === undefined)
        return arguments.length === 0 ? (this._events = Object.create(null), this._eventsCount = 0) : o2[e6] !== undefined && (--this._eventsCount === 0 ? this._events = Object.create(null) : delete o2[e6]), this;
      if (arguments.length === 0) {
        var p2 = Object.keys(o2), m2;
        for (f = 0;f < p2.length; ++f)
          m2 = p2[f], m2 !== "removeListener" && this.removeAllListeners(m2);
        return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this;
      }
      if (r7 = o2[e6], typeof r7 == "function")
        this.removeListener(e6, r7);
      else if (r7 !== undefined)
        for (f = r7.length - 1;f >= 0; f--)
          this.removeListener(e6, r7[f]);
      return this;
    };
    function ac(t7, e6, r7) {
      var o2 = t7._events;
      if (o2 === undefined)
        return [];
      var f = o2[e6];
      return f === undefined ? [] : typeof f == "function" ? r7 ? [f.listener || f] : [f] : r7 ? n6(f) : sc(f, f.length);
    }
    Fe.prototype.listeners = function(e6) {
      return ac(this, e6, true);
    };
    Fe.prototype.rawListeners = function(e6) {
      return ac(this, e6, false);
    };
    Fe.listenerCount = function(t7, e6) {
      return typeof t7.listenerCount == "function" ? t7.listenerCount(e6) : oc.call(t7, e6);
    };
    Fe.prototype.listenerCount = oc;
    function oc(t7) {
      var e6 = this._events;
      if (e6 !== undefined) {
        var r7 = e6[t7];
        if (typeof r7 == "function")
          return 1;
        if (r7 !== undefined)
          return r7.length;
      }
      return 0;
    }
    Fe.prototype.eventNames = function() {
      return this._eventsCount > 0 ? no(this._events) : [];
    };
    function sc(t7, e6) {
      for (var r7 = new Array(e6), o2 = 0;o2 < e6; ++o2)
        r7[o2] = t7[o2];
      return r7;
    }
    function i6(t7, e6) {
      for (;e6 + 1 < t7.length; e6++)
        t7[e6] = t7[e6 + 1];
      t7.pop();
    }
    function n6(t7) {
      for (var e6 = new Array(t7.length), r7 = 0;r7 < e6.length; ++r7)
        e6[r7] = t7[r7].listener || t7[r7];
      return e6;
    }
    function f6(t7, e6) {
      return new Promise(function(r7, o2) {
        function f(m2) {
          t7.removeListener(e6, p2), o2(m2);
        }
        function p2() {
          typeof t7.removeListener == "function" && t7.removeListener("error", f), r7([].slice.call(arguments));
        }
        hc(t7, e6, p2, { once: true }), e6 !== "error" && a6(t7, f, { once: true });
      });
    }
    function a6(t7, e6, r7) {
      typeof t7.on == "function" && hc(t7, "error", e6, r7);
    }
    function hc(t7, e6, r7, o2) {
      if (typeof t7.on == "function")
        o2.once ? t7.once(e6, r7) : t7.on(e6, r7);
      else if (typeof t7.addEventListener == "function")
        t7.addEventListener(e6, function f(p2) {
          o2.once && t7.removeEventListener(e6, f), r7(p2);
        });
      else
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof t7);
    }
  });
  W0 = T((Jq, uc) => {
    uc.exports = ki().EventEmitter;
  });
  $f = T(() => {
  });
  pc = T((tI, cc) => {
    function lc(t6, e6) {
      var r6 = Object.keys(t6);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(t6);
        e6 && (o2 = o2.filter(function(f) {
          return Object.getOwnPropertyDescriptor(t6, f).enumerable;
        })), r6.push.apply(r6, o2);
      }
      return r6;
    }
    function o6(t6) {
      for (var e6 = 1;e6 < arguments.length; e6++) {
        var r6 = arguments[e6] != null ? arguments[e6] : {};
        e6 % 2 ? lc(Object(r6), true).forEach(function(o2) {
          s6(t6, o2, r6[o2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t6, Object.getOwnPropertyDescriptors(r6)) : lc(Object(r6)).forEach(function(o2) {
          Object.defineProperty(t6, o2, Object.getOwnPropertyDescriptor(r6, o2));
        });
      }
      return t6;
    }
    function s6(t6, e6, r6) {
      return (e6 in t6) ? Object.defineProperty(t6, e6, { value: r6, enumerable: true, configurable: true, writable: true }) : t6[e6] = r6, t6;
    }
    function h6(t6, e6) {
      if (!(t6 instanceof e6))
        throw new TypeError("Cannot call a class as a function");
    }
    function dc(t6, e6) {
      for (var r6 = 0;r6 < e6.length; r6++) {
        var o2 = e6[r6];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, ("value" in o2) && (o2.writable = true), Object.defineProperty(t6, o2.key, o2);
      }
    }
    function u6(t6, e6, r6) {
      return e6 && dc(t6.prototype, e6), r6 && dc(t6, r6), t6;
    }
    var l6 = Ut(), ao = l6.Buffer, d6 = $f(), K0 = d6.inspect, c6 = K0 && K0.custom || "inspect";
    function p6(t6, e6, r6) {
      ao.prototype.copy.call(t6, e6, r6);
    }
    cc.exports = function() {
      function t6() {
        h6(this, t6), this.head = null, this.tail = null, this.length = 0;
      }
      return u6(t6, [{ key: "push", value: function(r6) {
        var o2 = { data: r6, next: null };
        this.length > 0 ? this.tail.next = o2 : this.head = o2, this.tail = o2, ++this.length;
      } }, { key: "unshift", value: function(r6) {
        var o2 = { data: r6, next: this.head };
        this.length === 0 && (this.tail = o2), this.head = o2, ++this.length;
      } }, { key: "shift", value: function() {
        if (this.length !== 0) {
          var r6 = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r6;
        }
      } }, { key: "clear", value: function() {
        this.head = this.tail = null, this.length = 0;
      } }, { key: "join", value: function(r6) {
        if (this.length === 0)
          return "";
        for (var o2 = this.head, f = "" + o2.data;o2 = o2.next; )
          f += r6 + o2.data;
        return f;
      } }, { key: "concat", value: function(r6) {
        if (this.length === 0)
          return ao.alloc(0);
        for (var o2 = ao.allocUnsafe(r6 >>> 0), f = this.head, p2 = 0;f; )
          p6(f.data, o2, p2), p2 += f.data.length, f = f.next;
        return o2;
      } }, { key: "consume", value: function(r6, o2) {
        var f;
        return r6 < this.head.data.length ? (f = this.head.data.slice(0, r6), this.head.data = this.head.data.slice(r6)) : r6 === this.head.data.length ? f = this.shift() : f = o2 ? this._getString(r6) : this._getBuffer(r6), f;
      } }, { key: "first", value: function() {
        return this.head.data;
      } }, { key: "_getString", value: function(r6) {
        var o2 = this.head, f = 1, p2 = o2.data;
        for (r6 -= p2.length;o2 = o2.next; ) {
          var m2 = o2.data, y2 = r6 > m2.length ? m2.length : r6;
          if (y2 === m2.length ? p2 += m2 : p2 += m2.slice(0, r6), r6 -= y2, r6 === 0) {
            y2 === m2.length ? (++f, o2.next ? this.head = o2.next : this.head = this.tail = null) : (this.head = o2, o2.data = m2.slice(y2));
            break;
          }
          ++f;
        }
        return this.length -= f, p2;
      } }, { key: "_getBuffer", value: function(r6) {
        var o2 = ao.allocUnsafe(r6), f = this.head, p2 = 1;
        for (f.data.copy(o2), r6 -= f.data.length;f = f.next; ) {
          var m2 = f.data, y2 = r6 > m2.length ? m2.length : r6;
          if (m2.copy(o2, o2.length - r6, 0, y2), r6 -= y2, r6 === 0) {
            y2 === m2.length ? (++p2, f.next ? this.head = f.next : this.head = this.tail = null) : (this.head = f, f.data = m2.slice(y2));
            break;
          }
          ++p2;
        }
        return this.length -= p2, o2;
      } }, { key: c6, value: function(r6, o2) {
        return K0(this, o6({}, o2, { depth: 0, customInspect: false }));
      } }]), t6;
    }();
  });
  Z0 = T((rI, bc) => {
    function v6(t6, e6) {
      var r6 = this, o2 = this._readableState && this._readableState.destroyed, f = this._writableState && this._writableState.destroyed;
      return o2 || f ? (e6 ? e6(t6) : t6 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(j0, this, t6)) : process.nextTick(j0, this, t6)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t6 || null, function(p2) {
        !e6 && p2 ? r6._writableState ? r6._writableState.errorEmitted ? process.nextTick(oo, r6) : (r6._writableState.errorEmitted = true, process.nextTick(vc, r6, p2)) : process.nextTick(vc, r6, p2) : e6 ? (process.nextTick(oo, r6), e6(p2)) : process.nextTick(oo, r6);
      }), this);
    }
    function vc(t6, e6) {
      j0(t6, e6), oo(t6);
    }
    function oo(t6) {
      t6._writableState && !t6._writableState.emitClose || t6._readableState && !t6._readableState.emitClose || t6.emit("close");
    }
    function b6() {
      this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
    }
    function j0(t6, e6) {
      t6.emit("error", e6);
    }
    function m6(t6, e6) {
      var { _readableState: r6, _writableState: o2 } = t6;
      r6 && r6.autoDestroy || o2 && o2.autoDestroy ? t6.destroy(e6) : t6.emit("error", e6);
    }
    bc.exports = { destroy: v6, undestroy: b6, errorOrDestroy: m6 };
  });
  sn = T((iI, yc) => {
    function g6(t6, e6) {
      t6.prototype = Object.create(e6.prototype), t6.prototype.constructor = t6, t6.__proto__ = e6;
    }
    var gc = {};
    function dr(t6, e6, r6) {
      r6 || (r6 = Error);
      function o2(p2, m2, y2) {
        return typeof e6 == "string" ? e6 : e6(p2, m2, y2);
      }
      var f = function(p2) {
        g6(m2, p2);
        function m2(y2, M, x) {
          return p2.call(this, o2(y2, M, x)) || this;
        }
        return m2;
      }(r6);
      f.prototype.name = r6.name, f.prototype.code = t6, gc[t6] = f;
    }
    function mc(t6, e6) {
      if (Array.isArray(t6)) {
        var r6 = t6.length;
        return t6 = t6.map(function(o2) {
          return String(o2);
        }), r6 > 2 ? "one of ".concat(e6, " ").concat(t6.slice(0, r6 - 1).join(", "), ", or ") + t6[r6 - 1] : r6 === 2 ? "one of ".concat(e6, " ").concat(t6[0], " or ").concat(t6[1]) : "of ".concat(e6, " ").concat(t6[0]);
      } else
        return "of ".concat(e6, " ").concat(String(t6));
    }
    function y6(t6, e6, r6) {
      return t6.substr(!r6 || r6 < 0 ? 0 : +r6, e6.length) === e6;
    }
    function w6(t6, e6, r6) {
      return (r6 === undefined || r6 > t6.length) && (r6 = t6.length), t6.substring(r6 - e6.length, r6) === e6;
    }
    function M6(t6, e6, r6) {
      return typeof r6 != "number" && (r6 = 0), r6 + e6.length > t6.length ? false : t6.indexOf(e6, r6) !== -1;
    }
    dr("ERR_INVALID_OPT_VALUE", function(t6, e6) {
      return 'The value "' + e6 + '" is invalid for option "' + t6 + '"';
    }, TypeError);
    dr("ERR_INVALID_ARG_TYPE", function(t6, e6, r6) {
      var o2;
      typeof e6 == "string" && y6(e6, "not ") ? (o2 = "must not be", e6 = e6.replace(/^not /, "")) : o2 = "must be";
      var f;
      if (w6(t6, " argument"))
        f = "The ".concat(t6, " ").concat(o2, " ").concat(mc(e6, "type"));
      else {
        var p2 = M6(t6, ".") ? "property" : "argument";
        f = 'The "'.concat(t6, '" ').concat(p2, " ").concat(o2, " ").concat(mc(e6, "type"));
      }
      return f += ". Received type ".concat(typeof r6), f;
    }, TypeError);
    dr("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    dr("ERR_METHOD_NOT_IMPLEMENTED", function(t6) {
      return "The " + t6 + " method is not implemented";
    });
    dr("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    dr("ERR_STREAM_DESTROYED", function(t6) {
      return "Cannot call " + t6 + " after a stream was destroyed";
    });
    dr("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    dr("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    dr("ERR_STREAM_WRITE_AFTER_END", "write after end");
    dr("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    dr("ERR_UNKNOWN_ENCODING", function(t6) {
      return "Unknown encoding: " + t6;
    }, TypeError);
    dr("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    yc.exports.codes = gc;
  });
  V0 = T((nI, wc) => {
    var _6 = sn().codes.ERR_INVALID_OPT_VALUE;
    function x6(t6, e6, r6) {
      return t6.highWaterMark != null ? t6.highWaterMark : e6 ? t6[r6] : null;
    }
    function S6(t6, e6, r6, o2) {
      var f = x6(e6, o2, r6);
      if (f != null) {
        if (!(isFinite(f) && Math.floor(f) === f) || f < 0) {
          var p2 = o2 ? r6 : "highWaterMark";
          throw new _6(p2, f);
        }
        return Math.floor(f);
      }
      return t6.objectMode ? 16 : 16 * 1024;
    }
    wc.exports = { getHighWaterMark: S6 };
  });
  G0 = T((fI, Mc) => {
    Mc.exports = E6;
    function E6(t6, e6) {
      if ($0("noDeprecation"))
        return t6;
      var r6 = false;
      function o2() {
        if (!r6) {
          if ($0("throwDeprecation"))
            throw new Error(e6);
          $0("traceDeprecation") ? console.trace(e6) : console.warn(e6), r6 = true;
        }
        return t6.apply(this, arguments);
      }
      return o2;
    }
    function $0(t6) {
      try {
        if (!global.localStorage)
          return false;
      } catch {
        return false;
      }
      var e6 = global.localStorage[t6];
      return e6 == null ? false : String(e6).toLowerCase() === "true";
    }
  });
  J0 = T((aI, Rc) => {
    Rc.exports = ht;
    function xc(t6) {
      var e6 = this;
      this.next = null, this.entry = null, this.finish = function() {
        J6(e6, t6);
      };
    }
    var Qn;
    ht.WritableState = Yf;
    var A6 = { deprecate: G0() }, Sc = W0(), ho = Ut().Buffer, R6 = global.Uint8Array || function() {
    };
    function B6(t6) {
      return ho.from(t6);
    }
    function q6(t6) {
      return ho.isBuffer(t6) || t6 instanceof R6;
    }
    var X0 = Z0(), I6 = V0(), T6 = I6.getHighWaterMark, Li = sn().codes, k6 = Li.ERR_INVALID_ARG_TYPE, L6 = Li.ERR_METHOD_NOT_IMPLEMENTED, N6 = Li.ERR_MULTIPLE_CALLBACK, D6 = Li.ERR_STREAM_CANNOT_PIPE, P6 = Li.ERR_STREAM_DESTROYED, C6 = Li.ERR_STREAM_NULL_VALUES, O6 = Li.ERR_STREAM_WRITE_AFTER_END, F6 = Li.ERR_UNKNOWN_ENCODING, ef = X0.errorOrDestroy;
    Ie()(ht, Sc);
    function U6() {
    }
    function Yf(t6, e6, r6) {
      Qn = Qn || hn(), t6 = t6 || {}, typeof r6 != "boolean" && (r6 = e6 instanceof Qn), this.objectMode = !!t6.objectMode, r6 && (this.objectMode = this.objectMode || !!t6.writableObjectMode), this.highWaterMark = T6(this, t6, "writableHighWaterMark", r6), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      var o2 = t6.decodeStrings === false;
      this.decodeStrings = !o2, this.defaultEncoding = t6.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(f) {
        V6(e6, f);
      }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = t6.emitClose !== false, this.autoDestroy = !!t6.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new xc(this);
    }
    Yf.prototype.getBuffer = function() {
      for (var e6 = this.bufferedRequest, r6 = [];e6; )
        r6.push(e6), e6 = e6.next;
      return r6;
    };
    (function() {
      try {
        Object.defineProperty(Yf.prototype, "buffer", { get: A6.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
      } catch {
      }
    })();
    var so;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (so = Function.prototype[Symbol.hasInstance], Object.defineProperty(ht, Symbol.hasInstance, { value: function(e6) {
      return so.call(this, e6) ? true : this !== ht ? false : e6 && e6._writableState instanceof Yf;
    } })) : so = function(e6) {
      return e6 instanceof this;
    };
    function ht(t6) {
      Qn = Qn || hn();
      var e6 = this instanceof Qn;
      if (!e6 && !so.call(ht, this))
        return new ht(t6);
      this._writableState = new Yf(t6, this, e6), this.writable = true, t6 && (typeof t6.write == "function" && (this._write = t6.write), typeof t6.writev == "function" && (this._writev = t6.writev), typeof t6.destroy == "function" && (this._destroy = t6.destroy), typeof t6.final == "function" && (this._final = t6.final)), Sc.call(this);
    }
    ht.prototype.pipe = function() {
      ef(this, new D6);
    };
    function z6(t6, e6) {
      var r6 = new O6;
      ef(t6, r6), process.nextTick(e6, r6);
    }
    function H6(t6, e6, r6, o2) {
      var f;
      return r6 === null ? f = new C6 : typeof r6 != "string" && !e6.objectMode && (f = new k6("chunk", ["string", "Buffer"], r6)), f ? (ef(t6, f), process.nextTick(o2, f), false) : true;
    }
    ht.prototype.write = function(t6, e6, r6) {
      var o2 = this._writableState, f = false, p2 = !o2.objectMode && q6(t6);
      return p2 && !ho.isBuffer(t6) && (t6 = B6(t6)), typeof e6 == "function" && (r6 = e6, e6 = null), p2 ? e6 = "buffer" : e6 || (e6 = o2.defaultEncoding), typeof r6 != "function" && (r6 = U6), o2.ending ? z6(this, r6) : (p2 || H6(this, o2, t6, r6)) && (o2.pendingcb++, f = K6(this, o2, p2, t6, e6, r6)), f;
    };
    ht.prototype.cork = function() {
      this._writableState.corked++;
    };
    ht.prototype.uncork = function() {
      var t6 = this._writableState;
      t6.corked && (t6.corked--, !t6.writing && !t6.corked && !t6.bufferProcessing && t6.bufferedRequest && Ec(this, t6));
    };
    ht.prototype.setDefaultEncoding = function(e6) {
      if (typeof e6 == "string" && (e6 = e6.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e6 + "").toLowerCase()) > -1))
        throw new F6(e6);
      return this._writableState.defaultEncoding = e6, this;
    };
    Object.defineProperty(ht.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    function W6(t6, e6, r6) {
      return !t6.objectMode && t6.decodeStrings !== false && typeof e6 == "string" && (e6 = ho.from(e6, r6)), e6;
    }
    Object.defineProperty(ht.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    function K6(t6, e6, r6, o2, f, p2) {
      if (!r6) {
        var m2 = W6(e6, o2, f);
        o2 !== m2 && (r6 = true, f = "buffer", o2 = m2);
      }
      var y2 = e6.objectMode ? 1 : o2.length;
      e6.length += y2;
      var M = e6.length < e6.highWaterMark;
      if (M || (e6.needDrain = true), e6.writing || e6.corked) {
        var x = e6.lastBufferedRequest;
        e6.lastBufferedRequest = { chunk: o2, encoding: f, isBuf: r6, callback: p2, next: null }, x ? x.next = e6.lastBufferedRequest : e6.bufferedRequest = e6.lastBufferedRequest, e6.bufferedRequestCount += 1;
      } else
        Y0(t6, e6, false, y2, o2, f, p2);
      return M;
    }
    function Y0(t6, e6, r6, o2, f, p2, m2) {
      e6.writelen = o2, e6.writecb = m2, e6.writing = true, e6.sync = true, e6.destroyed ? e6.onwrite(new P6("write")) : r6 ? t6._writev(f, e6.onwrite) : t6._write(f, p2, e6.onwrite), e6.sync = false;
    }
    function j6(t6, e6, r6, o2, f) {
      --e6.pendingcb, r6 ? (process.nextTick(f, o2), process.nextTick(Gf, t6, e6), t6._writableState.errorEmitted = true, ef(t6, o2)) : (f(o2), t6._writableState.errorEmitted = true, ef(t6, o2), Gf(t6, e6));
    }
    function Z6(t6) {
      t6.writing = false, t6.writecb = null, t6.length -= t6.writelen, t6.writelen = 0;
    }
    function V6(t6, e6) {
      var r6 = t6._writableState, o2 = r6.sync, f = r6.writecb;
      if (typeof f != "function")
        throw new N6;
      if (Z6(r6), e6)
        j6(t6, r6, o2, e6, f);
      else {
        var p2 = Ac(r6) || t6.destroyed;
        !p2 && !r6.corked && !r6.bufferProcessing && r6.bufferedRequest && Ec(t6, r6), o2 ? process.nextTick(_c, t6, r6, p2, f) : _c(t6, r6, p2, f);
      }
    }
    function _c(t6, e6, r6, o2) {
      r6 || $6(t6, e6), e6.pendingcb--, o2(), Gf(t6, e6);
    }
    function $6(t6, e6) {
      e6.length === 0 && e6.needDrain && (e6.needDrain = false, t6.emit("drain"));
    }
    function Ec(t6, e6) {
      e6.bufferProcessing = true;
      var r6 = e6.bufferedRequest;
      if (t6._writev && r6 && r6.next) {
        var o2 = e6.bufferedRequestCount, f = new Array(o2), p2 = e6.corkedRequestsFree;
        p2.entry = r6;
        for (var m2 = 0, y2 = true;r6; )
          f[m2] = r6, r6.isBuf || (y2 = false), r6 = r6.next, m2 += 1;
        f.allBuffers = y2, Y0(t6, e6, true, e6.length, f, "", p2.finish), e6.pendingcb++, e6.lastBufferedRequest = null, p2.next ? (e6.corkedRequestsFree = p2.next, p2.next = null) : e6.corkedRequestsFree = new xc(e6), e6.bufferedRequestCount = 0;
      } else {
        for (;r6; ) {
          var { chunk: M, encoding: x, callback: S } = r6, E = e6.objectMode ? 1 : M.length;
          if (Y0(t6, e6, false, E, M, x, S), r6 = r6.next, e6.bufferedRequestCount--, e6.writing)
            break;
        }
        r6 === null && (e6.lastBufferedRequest = null);
      }
      e6.bufferedRequest = r6, e6.bufferProcessing = false;
    }
    ht.prototype._write = function(t6, e6, r6) {
      r6(new L6("_write()"));
    };
    ht.prototype._writev = null;
    ht.prototype.end = function(t6, e6, r6) {
      var o2 = this._writableState;
      return typeof t6 == "function" ? (r6 = t6, t6 = null, e6 = null) : typeof e6 == "function" && (r6 = e6, e6 = null), t6 != null && this.write(t6, e6), o2.corked && (o2.corked = 1, this.uncork()), o2.ending || X6(this, o2, r6), this;
    };
    Object.defineProperty(ht.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function Ac(t6) {
      return t6.ending && t6.length === 0 && t6.bufferedRequest === null && !t6.finished && !t6.writing;
    }
    function G6(t6, e6) {
      t6._final(function(r6) {
        e6.pendingcb--, r6 && ef(t6, r6), e6.prefinished = true, t6.emit("prefinish"), Gf(t6, e6);
      });
    }
    function Y6(t6, e6) {
      !e6.prefinished && !e6.finalCalled && (typeof t6._final == "function" && !e6.destroyed ? (e6.pendingcb++, e6.finalCalled = true, process.nextTick(G6, t6, e6)) : (e6.prefinished = true, t6.emit("prefinish")));
    }
    function Gf(t6, e6) {
      var r6 = Ac(e6);
      if (r6 && (Y6(t6, e6), e6.pendingcb === 0 && (e6.finished = true, t6.emit("finish"), e6.autoDestroy))) {
        var o2 = t6._readableState;
        (!o2 || o2.autoDestroy && o2.endEmitted) && t6.destroy();
      }
      return r6;
    }
    function X6(t6, e6, r6) {
      e6.ending = true, Gf(t6, e6), r6 && (e6.finished ? process.nextTick(r6) : t6.once("finish", r6)), e6.ended = true, t6.writable = false;
    }
    function J6(t6, e6, r6) {
      var o2 = t6.entry;
      for (t6.entry = null;o2; ) {
        var f = o2.callback;
        e6.pendingcb--, f(r6), o2 = o2.next;
      }
      e6.corkedRequestsFree.next = t6;
    }
    Object.defineProperty(ht.prototype, "destroyed", { enumerable: false, get: function() {
      return this._writableState === undefined ? false : this._writableState.destroyed;
    }, set: function(e6) {
      !this._writableState || (this._writableState.destroyed = e6);
    } });
    ht.prototype.destroy = X0.destroy;
    ht.prototype._undestroy = X0.undestroy;
    ht.prototype._destroy = function(t6, e6) {
      e6(t6);
    };
  });
  hn = T((oI, qc) => {
    var Q6 = Object.keys || function(t6) {
      var e6 = [];
      for (var r6 in t6)
        e6.push(r6);
      return e6;
    };
    qc.exports = $r;
    var Bc = th(), eh = J0();
    Ie()($r, Bc);
    for (Q0 = Q6(eh.prototype), uo = 0;uo < Q0.length; uo++)
      lo = Q0[uo], $r.prototype[lo] || ($r.prototype[lo] = eh.prototype[lo]);
    var Q0, lo, uo;
    function $r(t6) {
      if (!(this instanceof $r))
        return new $r(t6);
      Bc.call(this, t6), eh.call(this, t6), this.allowHalfOpen = true, t6 && (t6.readable === false && (this.readable = false), t6.writable === false && (this.writable = false), t6.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", eM)));
    }
    Object.defineProperty($r.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    Object.defineProperty($r.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    Object.defineProperty($r.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function eM() {
      this._writableState.ended || process.nextTick(tM, this);
    }
    function tM(t6) {
      t6.end();
    }
    Object.defineProperty($r.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set: function(e6) {
      this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = e6, this._writableState.destroyed = e6);
    } });
  });
  co = T((Tc) => {
    var ih = Te().Buffer, Ic = ih.isEncoding || function(t6) {
      switch (t6 = "" + t6, t6 && t6.toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
        case "raw":
          return true;
        default:
          return false;
      }
    };
    function rM(t6) {
      if (!t6)
        return "utf8";
      for (var e6;; )
        switch (t6) {
          case "utf8":
          case "utf-8":
            return "utf8";
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return "utf16le";
          case "latin1":
          case "binary":
            return "latin1";
          case "base64":
          case "ascii":
          case "hex":
            return t6;
          default:
            if (e6)
              return;
            t6 = ("" + t6).toLowerCase(), e6 = true;
        }
    }
    function iM(t6) {
      var e6 = rM(t6);
      if (typeof e6 != "string" && (ih.isEncoding === Ic || !Ic(t6)))
        throw new Error("Unknown encoding: " + t6);
      return e6 || t6;
    }
    Tc.StringDecoder = Xf;
    function Xf(t6) {
      this.encoding = iM(t6);
      var e6;
      switch (this.encoding) {
        case "utf16le":
          this.text = hM, this.end = uM, e6 = 4;
          break;
        case "utf8":
          this.fillLast = aM, e6 = 4;
          break;
        case "base64":
          this.text = lM, this.end = dM, e6 = 3;
          break;
        default:
          this.write = cM, this.end = pM;
          return;
      }
      this.lastNeed = 0, this.lastTotal = 0, this.lastChar = ih.allocUnsafe(e6);
    }
    Xf.prototype.write = function(t6) {
      if (t6.length === 0)
        return "";
      var e6, r6;
      if (this.lastNeed) {
        if (e6 = this.fillLast(t6), e6 === undefined)
          return "";
        r6 = this.lastNeed, this.lastNeed = 0;
      } else
        r6 = 0;
      return r6 < t6.length ? e6 ? e6 + this.text(t6, r6) : this.text(t6, r6) : e6 || "";
    };
    Xf.prototype.end = sM;
    Xf.prototype.text = oM;
    Xf.prototype.fillLast = function(t6) {
      if (this.lastNeed <= t6.length)
        return t6.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      t6.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t6.length), this.lastNeed -= t6.length;
    };
    function rh(t6) {
      return t6 <= 127 ? 0 : t6 >> 5 === 6 ? 2 : t6 >> 4 === 14 ? 3 : t6 >> 3 === 30 ? 4 : t6 >> 6 === 2 ? -1 : -2;
    }
    function nM(t6, e6, r6) {
      var o2 = e6.length - 1;
      if (o2 < r6)
        return 0;
      var f = rh(e6[o2]);
      return f >= 0 ? (f > 0 && (t6.lastNeed = f - 1), f) : --o2 < r6 || f === -2 ? 0 : (f = rh(e6[o2]), f >= 0 ? (f > 0 && (t6.lastNeed = f - 2), f) : --o2 < r6 || f === -2 ? 0 : (f = rh(e6[o2]), f >= 0 ? (f > 0 && (f === 2 ? f = 0 : t6.lastNeed = f - 3), f) : 0));
    }
    function fM(t6, e6, r6) {
      if ((e6[0] & 192) !== 128)
        return t6.lastNeed = 0, "\uFFFD";
      if (t6.lastNeed > 1 && e6.length > 1) {
        if ((e6[1] & 192) !== 128)
          return t6.lastNeed = 1, "\uFFFD";
        if (t6.lastNeed > 2 && e6.length > 2 && (e6[2] & 192) !== 128)
          return t6.lastNeed = 2, "\uFFFD";
      }
    }
    function aM(t6) {
      var e6 = this.lastTotal - this.lastNeed, r6 = fM(this, t6, e6);
      if (r6 !== undefined)
        return r6;
      if (this.lastNeed <= t6.length)
        return t6.copy(this.lastChar, e6, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
      t6.copy(this.lastChar, e6, 0, t6.length), this.lastNeed -= t6.length;
    }
    function oM(t6, e6) {
      var r6 = nM(this, t6, e6);
      if (!this.lastNeed)
        return t6.toString("utf8", e6);
      this.lastTotal = r6;
      var o2 = t6.length - (r6 - this.lastNeed);
      return t6.copy(this.lastChar, 0, o2), t6.toString("utf8", e6, o2);
    }
    function sM(t6) {
      var e6 = t6 && t6.length ? this.write(t6) : "";
      return this.lastNeed ? e6 + "\uFFFD" : e6;
    }
    function hM(t6, e6) {
      if ((t6.length - e6) % 2 === 0) {
        var r6 = t6.toString("utf16le", e6);
        if (r6) {
          var o2 = r6.charCodeAt(r6.length - 1);
          if (o2 >= 55296 && o2 <= 56319)
            return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = t6[t6.length - 2], this.lastChar[1] = t6[t6.length - 1], r6.slice(0, -1);
        }
        return r6;
      }
      return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = t6[t6.length - 1], t6.toString("utf16le", e6, t6.length - 1);
    }
    function uM(t6) {
      var e6 = t6 && t6.length ? this.write(t6) : "";
      if (this.lastNeed) {
        var r6 = this.lastTotal - this.lastNeed;
        return e6 + this.lastChar.toString("utf16le", 0, r6);
      }
      return e6;
    }
    function lM(t6, e6) {
      var r6 = (t6.length - e6) % 3;
      return r6 === 0 ? t6.toString("base64", e6) : (this.lastNeed = 3 - r6, this.lastTotal = 3, r6 === 1 ? this.lastChar[0] = t6[t6.length - 1] : (this.lastChar[0] = t6[t6.length - 2], this.lastChar[1] = t6[t6.length - 1]), t6.toString("base64", e6, t6.length - r6));
    }
    function dM(t6) {
      var e6 = t6 && t6.length ? this.write(t6) : "";
      return this.lastNeed ? e6 + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : e6;
    }
    function cM(t6) {
      return t6.toString(this.encoding);
    }
    function pM(t6) {
      return t6 && t6.length ? this.write(t6) : "";
    }
  });
  Jf = {};
  Ja(Jf, { StringDecoder: () => po.StringDecoder, default: () => po.StringDecoder });
  Qf = R0(() => {
    po = rn(co());
  });
  vo = T((hI, Nc) => {
    var kc = sn().codes.ERR_STREAM_PREMATURE_CLOSE;
    function vM(t6) {
      var e6 = false;
      return function() {
        if (!e6) {
          e6 = true;
          for (var r6 = arguments.length, o2 = new Array(r6), f = 0;f < r6; f++)
            o2[f] = arguments[f];
          t6.apply(this, o2);
        }
      };
    }
    function bM() {
    }
    function mM(t6) {
      return t6.setHeader && typeof t6.abort == "function";
    }
    function Lc(t6, e6, r6) {
      if (typeof e6 == "function")
        return Lc(t6, null, e6);
      e6 || (e6 = {}), r6 = vM(r6 || bM);
      var o2 = e6.readable || e6.readable !== false && t6.readable, f = e6.writable || e6.writable !== false && t6.writable, p2 = function() {
        t6.writable || y2();
      }, m2 = t6._writableState && t6._writableState.finished, y2 = function() {
        f = false, m2 = true, o2 || r6.call(t6);
      }, M = t6._readableState && t6._readableState.endEmitted, x = function() {
        o2 = false, M = true, f || r6.call(t6);
      }, S = function(L) {
        r6.call(t6, L);
      }, E = function() {
        var L;
        if (o2 && !M)
          return (!t6._readableState || !t6._readableState.ended) && (L = new kc), r6.call(t6, L);
        if (f && !m2)
          return (!t6._writableState || !t6._writableState.ended) && (L = new kc), r6.call(t6, L);
      }, B = function() {
        t6.req.on("finish", y2);
      };
      return mM(t6) ? (t6.on("complete", y2), t6.on("abort", E), t6.req ? B() : t6.on("request", B)) : f && !t6._writableState && (t6.on("end", p2), t6.on("close", p2)), t6.on("end", x), t6.on("finish", y2), e6.error !== false && t6.on("error", S), t6.on("close", E), function() {
        t6.removeListener("complete", y2), t6.removeListener("abort", E), t6.removeListener("request", B), t6.req && t6.req.removeListener("finish", y2), t6.removeListener("end", p2), t6.removeListener("close", p2), t6.removeListener("finish", y2), t6.removeListener("end", x), t6.removeListener("error", S), t6.removeListener("close", E);
      };
    }
    Nc.exports = Lc;
  });
  Pc = T((uI, Dc) => {
    var bo;
    function Ni(t6, e6, r6) {
      return (e6 in t6) ? Object.defineProperty(t6, e6, { value: r6, enumerable: true, configurable: true, writable: true }) : t6[e6] = r6, t6;
    }
    var gM = vo(), Di = Symbol("lastResolve"), un = Symbol("lastReject"), ea = Symbol("error"), mo = Symbol("ended"), ln = Symbol("lastPromise"), nh = Symbol("handlePromise"), dn = Symbol("stream");
    function Pi(t6, e6) {
      return { value: t6, done: e6 };
    }
    function yM(t6) {
      var e6 = t6[Di];
      if (e6 !== null) {
        var r6 = t6[dn].read();
        r6 !== null && (t6[ln] = null, t6[Di] = null, t6[un] = null, e6(Pi(r6, false)));
      }
    }
    function wM(t6) {
      process.nextTick(yM, t6);
    }
    function MM(t6, e6) {
      return function(r6, o2) {
        t6.then(function() {
          if (e6[mo]) {
            r6(Pi(undefined, true));
            return;
          }
          e6[nh](r6, o2);
        }, o2);
      };
    }
    var _M = Object.getPrototypeOf(function() {
    }), xM = Object.setPrototypeOf((bo = { get stream() {
      return this[dn];
    }, next: function() {
      var e6 = this, r6 = this[ea];
      if (r6 !== null)
        return Promise.reject(r6);
      if (this[mo])
        return Promise.resolve(Pi(undefined, true));
      if (this[dn].destroyed)
        return new Promise(function(m2, y2) {
          process.nextTick(function() {
            e6[ea] ? y2(e6[ea]) : m2(Pi(undefined, true));
          });
        });
      var o2 = this[ln], f;
      if (o2)
        f = new Promise(MM(o2, this));
      else {
        var p2 = this[dn].read();
        if (p2 !== null)
          return Promise.resolve(Pi(p2, false));
        f = new Promise(this[nh]);
      }
      return this[ln] = f, f;
    } }, Ni(bo, Symbol.asyncIterator, function() {
      return this;
    }), Ni(bo, "return", function() {
      var e6 = this;
      return new Promise(function(r6, o2) {
        e6[dn].destroy(null, function(f) {
          if (f) {
            o2(f);
            return;
          }
          r6(Pi(undefined, true));
        });
      });
    }), bo), _M), SM = function(e6) {
      var r6, o2 = Object.create(xM, (r6 = {}, Ni(r6, dn, { value: e6, writable: true }), Ni(r6, Di, { value: null, writable: true }), Ni(r6, un, { value: null, writable: true }), Ni(r6, ea, { value: null, writable: true }), Ni(r6, mo, { value: e6._readableState.endEmitted, writable: true }), Ni(r6, nh, { value: function(p2, m2) {
        var y2 = o2[dn].read();
        y2 ? (o2[ln] = null, o2[Di] = null, o2[un] = null, p2(Pi(y2, false))) : (o2[Di] = p2, o2[un] = m2);
      }, writable: true }), r6));
      return o2[ln] = null, gM(e6, function(f) {
        if (f && f.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var p2 = o2[un];
          p2 !== null && (o2[ln] = null, o2[Di] = null, o2[un] = null, p2(f)), o2[ea] = f;
          return;
        }
        var m2 = o2[Di];
        m2 !== null && (o2[ln] = null, o2[Di] = null, o2[un] = null, m2(Pi(undefined, true))), o2[mo] = true;
      }), e6.on("readable", wM.bind(null, o2)), o2;
    };
    Dc.exports = SM;
  });
  Oc = T((lI, Cc) => {
    Cc.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  });
  th = T((cI, $c) => {
    $c.exports = Ce;
    var tf;
    Ce.ReadableState = Hc;
    var dI = ki().EventEmitter, zc = function(e6, r6) {
      return e6.listeners(r6).length;
    }, ra = W0(), go = Ut().Buffer, EM = global.Uint8Array || function() {
    };
    function AM(t6) {
      return go.from(t6);
    }
    function RM(t6) {
      return go.isBuffer(t6) || t6 instanceof EM;
    }
    var fh = $f(), Ne;
    fh && fh.debuglog ? Ne = fh.debuglog("stream") : Ne = function() {
    };
    var BM = pc(), dh = Z0(), qM = V0(), IM = qM.getHighWaterMark, yo = sn().codes, TM = yo.ERR_INVALID_ARG_TYPE, kM = yo.ERR_STREAM_PUSH_AFTER_EOF, LM = yo.ERR_METHOD_NOT_IMPLEMENTED, NM = yo.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, rf, ah, oh;
    Ie()(Ce, ra);
    var ta = dh.errorOrDestroy, sh = ["error", "close", "destroy", "pause", "resume"];
    function DM(t6, e6, r6) {
      if (typeof t6.prependListener == "function")
        return t6.prependListener(e6, r6);
      !t6._events || !t6._events[e6] ? t6.on(e6, r6) : Array.isArray(t6._events[e6]) ? t6._events[e6].unshift(r6) : t6._events[e6] = [r6, t6._events[e6]];
    }
    function Hc(t6, e6, r6) {
      tf = tf || hn(), t6 = t6 || {}, typeof r6 != "boolean" && (r6 = e6 instanceof tf), this.objectMode = !!t6.objectMode, r6 && (this.objectMode = this.objectMode || !!t6.readableObjectMode), this.highWaterMark = IM(this, t6, "readableHighWaterMark", r6), this.buffer = new BM, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = t6.emitClose !== false, this.autoDestroy = !!t6.autoDestroy, this.destroyed = false, this.defaultEncoding = t6.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t6.encoding && (rf || (rf = (Qf(), ur(Jf)).StringDecoder), this.decoder = new rf(t6.encoding), this.encoding = t6.encoding);
    }
    function Ce(t6) {
      if (tf = tf || hn(), !(this instanceof Ce))
        return new Ce(t6);
      var e6 = this instanceof tf;
      this._readableState = new Hc(t6, this, e6), this.readable = true, t6 && (typeof t6.read == "function" && (this._read = t6.read), typeof t6.destroy == "function" && (this._destroy = t6.destroy)), ra.call(this);
    }
    Object.defineProperty(Ce.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined ? false : this._readableState.destroyed;
    }, set: function(e6) {
      !this._readableState || (this._readableState.destroyed = e6);
    } });
    Ce.prototype.destroy = dh.destroy;
    Ce.prototype._undestroy = dh.undestroy;
    Ce.prototype._destroy = function(t6, e6) {
      e6(t6);
    };
    Ce.prototype.push = function(t6, e6) {
      var r6 = this._readableState, o2;
      return r6.objectMode ? o2 = true : typeof t6 == "string" && (e6 = e6 || r6.defaultEncoding, e6 !== r6.encoding && (t6 = go.from(t6, e6), e6 = ""), o2 = true), Wc(this, t6, e6, false, o2);
    };
    Ce.prototype.unshift = function(t6) {
      return Wc(this, t6, null, true, false);
    };
    function Wc(t6, e6, r6, o2, f) {
      Ne("readableAddChunk", e6);
      var p2 = t6._readableState;
      if (e6 === null)
        p2.reading = false, OM(t6, p2);
      else {
        var m2;
        if (f || (m2 = PM(p2, e6)), m2)
          ta(t6, m2);
        else if (p2.objectMode || e6 && e6.length > 0)
          if (typeof e6 != "string" && !p2.objectMode && Object.getPrototypeOf(e6) !== go.prototype && (e6 = AM(e6)), o2)
            p2.endEmitted ? ta(t6, new NM) : hh(t6, p2, e6, true);
          else if (p2.ended)
            ta(t6, new kM);
          else {
            if (p2.destroyed)
              return false;
            p2.reading = false, p2.decoder && !r6 ? (e6 = p2.decoder.write(e6), p2.objectMode || e6.length !== 0 ? hh(t6, p2, e6, false) : lh(t6, p2)) : hh(t6, p2, e6, false);
          }
        else
          o2 || (p2.reading = false, lh(t6, p2));
      }
      return !p2.ended && (p2.length < p2.highWaterMark || p2.length === 0);
    }
    function hh(t6, e6, r6, o2) {
      e6.flowing && e6.length === 0 && !e6.sync ? (e6.awaitDrain = 0, t6.emit("data", r6)) : (e6.length += e6.objectMode ? 1 : r6.length, o2 ? e6.buffer.unshift(r6) : e6.buffer.push(r6), e6.needReadable && wo(t6)), lh(t6, e6);
    }
    function PM(t6, e6) {
      var r6;
      return !RM(e6) && typeof e6 != "string" && e6 !== undefined && !t6.objectMode && (r6 = new TM("chunk", ["string", "Buffer", "Uint8Array"], e6)), r6;
    }
    Ce.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Ce.prototype.setEncoding = function(t6) {
      rf || (rf = (Qf(), ur(Jf)).StringDecoder);
      var e6 = new rf(t6);
      this._readableState.decoder = e6, this._readableState.encoding = this._readableState.decoder.encoding;
      for (var r6 = this._readableState.buffer.head, o2 = "";r6 !== null; )
        o2 += e6.write(r6.data), r6 = r6.next;
      return this._readableState.buffer.clear(), o2 !== "" && this._readableState.buffer.push(o2), this._readableState.length = o2.length, this;
    };
    var Fc = 1073741824;
    function CM(t6) {
      return t6 >= Fc ? t6 = Fc : (t6--, t6 |= t6 >>> 1, t6 |= t6 >>> 2, t6 |= t6 >>> 4, t6 |= t6 >>> 8, t6 |= t6 >>> 16, t6++), t6;
    }
    function Uc(t6, e6) {
      return t6 <= 0 || e6.length === 0 && e6.ended ? 0 : e6.objectMode ? 1 : t6 !== t6 ? e6.flowing && e6.length ? e6.buffer.head.data.length : e6.length : (t6 > e6.highWaterMark && (e6.highWaterMark = CM(t6)), t6 <= e6.length ? t6 : e6.ended ? e6.length : (e6.needReadable = true, 0));
    }
    Ce.prototype.read = function(t6) {
      Ne("read", t6), t6 = parseInt(t6, 10);
      var e6 = this._readableState, r6 = t6;
      if (t6 !== 0 && (e6.emittedReadable = false), t6 === 0 && e6.needReadable && ((e6.highWaterMark !== 0 ? e6.length >= e6.highWaterMark : e6.length > 0) || e6.ended))
        return Ne("read: emitReadable", e6.length, e6.ended), e6.length === 0 && e6.ended ? uh(this) : wo(this), null;
      if (t6 = Uc(t6, e6), t6 === 0 && e6.ended)
        return e6.length === 0 && uh(this), null;
      var o2 = e6.needReadable;
      Ne("need readable", o2), (e6.length === 0 || e6.length - t6 < e6.highWaterMark) && (o2 = true, Ne("length less than watermark", o2)), e6.ended || e6.reading ? (o2 = false, Ne("reading or ended", o2)) : o2 && (Ne("do read"), e6.reading = true, e6.sync = true, e6.length === 0 && (e6.needReadable = true), this._read(e6.highWaterMark), e6.sync = false, e6.reading || (t6 = Uc(r6, e6)));
      var f;
      return t6 > 0 ? f = Zc(t6, e6) : f = null, f === null ? (e6.needReadable = e6.length <= e6.highWaterMark, t6 = 0) : (e6.length -= t6, e6.awaitDrain = 0), e6.length === 0 && (e6.ended || (e6.needReadable = true), r6 !== t6 && e6.ended && uh(this)), f !== null && this.emit("data", f), f;
    };
    function OM(t6, e6) {
      if (Ne("onEofChunk"), !e6.ended) {
        if (e6.decoder) {
          var r6 = e6.decoder.end();
          r6 && r6.length && (e6.buffer.push(r6), e6.length += e6.objectMode ? 1 : r6.length);
        }
        e6.ended = true, e6.sync ? wo(t6) : (e6.needReadable = false, e6.emittedReadable || (e6.emittedReadable = true, Kc(t6)));
      }
    }
    function wo(t6) {
      var e6 = t6._readableState;
      Ne("emitReadable", e6.needReadable, e6.emittedReadable), e6.needReadable = false, e6.emittedReadable || (Ne("emitReadable", e6.flowing), e6.emittedReadable = true, process.nextTick(Kc, t6));
    }
    function Kc(t6) {
      var e6 = t6._readableState;
      Ne("emitReadable_", e6.destroyed, e6.length, e6.ended), !e6.destroyed && (e6.length || e6.ended) && (t6.emit("readable"), e6.emittedReadable = false), e6.needReadable = !e6.flowing && !e6.ended && e6.length <= e6.highWaterMark, ch(t6);
    }
    function lh(t6, e6) {
      e6.readingMore || (e6.readingMore = true, process.nextTick(FM, t6, e6));
    }
    function FM(t6, e6) {
      for (;!e6.reading && !e6.ended && (e6.length < e6.highWaterMark || e6.flowing && e6.length === 0); ) {
        var r6 = e6.length;
        if (Ne("maybeReadMore read 0"), t6.read(0), r6 === e6.length)
          break;
      }
      e6.readingMore = false;
    }
    Ce.prototype._read = function(t6) {
      ta(this, new LM("_read()"));
    };
    Ce.prototype.pipe = function(t6, e6) {
      var r6 = this, o2 = this._readableState;
      switch (o2.pipesCount) {
        case 0:
          o2.pipes = t6;
          break;
        case 1:
          o2.pipes = [o2.pipes, t6];
          break;
        default:
          o2.pipes.push(t6);
          break;
      }
      o2.pipesCount += 1, Ne("pipe count=%d opts=%j", o2.pipesCount, e6);
      var f = (!e6 || e6.end !== false) && t6 !== process.stdout && t6 !== process.stderr, p2 = f ? y2 : ge;
      o2.endEmitted ? process.nextTick(p2) : r6.once("end", p2), t6.on("unpipe", m2);
      function m2(_e, N) {
        Ne("onunpipe"), _e === r6 && N && N.hasUnpiped === false && (N.hasUnpiped = true, S());
      }
      function y2() {
        Ne("onend"), t6.end();
      }
      var M = UM(r6);
      t6.on("drain", M);
      var x = false;
      function S() {
        Ne("cleanup"), t6.removeListener("close", q2), t6.removeListener("finish", L), t6.removeListener("drain", M), t6.removeListener("error", B), t6.removeListener("unpipe", m2), r6.removeListener("end", y2), r6.removeListener("end", ge), r6.removeListener("data", E), x = true, o2.awaitDrain && (!t6._writableState || t6._writableState.needDrain) && M();
      }
      r6.on("data", E);
      function E(_e) {
        Ne("ondata");
        var N = t6.write(_e);
        Ne("dest.write", N), N === false && ((o2.pipesCount === 1 && o2.pipes === t6 || o2.pipesCount > 1 && Vc(o2.pipes, t6) !== -1) && !x && (Ne("false write response, pause", o2.awaitDrain), o2.awaitDrain++), r6.pause());
      }
      function B(_e) {
        Ne("onerror", _e), ge(), t6.removeListener("error", B), zc(t6, "error") === 0 && ta(t6, _e);
      }
      DM(t6, "error", B);
      function q2() {
        t6.removeListener("finish", L), ge();
      }
      t6.once("close", q2);
      function L() {
        Ne("onfinish"), t6.removeListener("close", q2), ge();
      }
      t6.once("finish", L);
      function ge() {
        Ne("unpipe"), r6.unpipe(t6);
      }
      return t6.emit("pipe", r6), o2.flowing || (Ne("pipe resume"), r6.resume()), t6;
    };
    function UM(t6) {
      return function() {
        var r6 = t6._readableState;
        Ne("pipeOnDrain", r6.awaitDrain), r6.awaitDrain && r6.awaitDrain--, r6.awaitDrain === 0 && zc(t6, "data") && (r6.flowing = true, ch(t6));
      };
    }
    Ce.prototype.unpipe = function(t6) {
      var e6 = this._readableState, r6 = { hasUnpiped: false };
      if (e6.pipesCount === 0)
        return this;
      if (e6.pipesCount === 1)
        return t6 && t6 !== e6.pipes ? this : (t6 || (t6 = e6.pipes), e6.pipes = null, e6.pipesCount = 0, e6.flowing = false, t6 && t6.emit("unpipe", this, r6), this);
      if (!t6) {
        var { pipes: o2, pipesCount: f } = e6;
        e6.pipes = null, e6.pipesCount = 0, e6.flowing = false;
        for (var p2 = 0;p2 < f; p2++)
          o2[p2].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      var m2 = Vc(e6.pipes, t6);
      return m2 === -1 ? this : (e6.pipes.splice(m2, 1), e6.pipesCount -= 1, e6.pipesCount === 1 && (e6.pipes = e6.pipes[0]), t6.emit("unpipe", this, r6), this);
    };
    Ce.prototype.on = function(t6, e6) {
      var r6 = ra.prototype.on.call(this, t6, e6), o2 = this._readableState;
      return t6 === "data" ? (o2.readableListening = this.listenerCount("readable") > 0, o2.flowing !== false && this.resume()) : t6 === "readable" && !o2.endEmitted && !o2.readableListening && (o2.readableListening = o2.needReadable = true, o2.flowing = false, o2.emittedReadable = false, Ne("on readable", o2.length, o2.reading), o2.length ? wo(this) : o2.reading || process.nextTick(zM, this)), r6;
    };
    Ce.prototype.addListener = Ce.prototype.on;
    Ce.prototype.removeListener = function(t6, e6) {
      var r6 = ra.prototype.removeListener.call(this, t6, e6);
      return t6 === "readable" && process.nextTick(jc, this), r6;
    };
    Ce.prototype.removeAllListeners = function(t6) {
      var e6 = ra.prototype.removeAllListeners.apply(this, arguments);
      return (t6 === "readable" || t6 === undefined) && process.nextTick(jc, this), e6;
    };
    function jc(t6) {
      var e6 = t6._readableState;
      e6.readableListening = t6.listenerCount("readable") > 0, e6.resumeScheduled && !e6.paused ? e6.flowing = true : t6.listenerCount("data") > 0 && t6.resume();
    }
    function zM(t6) {
      Ne("readable nexttick read 0"), t6.read(0);
    }
    Ce.prototype.resume = function() {
      var t6 = this._readableState;
      return t6.flowing || (Ne("resume"), t6.flowing = !t6.readableListening, HM(this, t6)), t6.paused = false, this;
    };
    function HM(t6, e6) {
      e6.resumeScheduled || (e6.resumeScheduled = true, process.nextTick(WM, t6, e6));
    }
    function WM(t6, e6) {
      Ne("resume", e6.reading), e6.reading || t6.read(0), e6.resumeScheduled = false, t6.emit("resume"), ch(t6), e6.flowing && !e6.reading && t6.read(0);
    }
    Ce.prototype.pause = function() {
      return Ne("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (Ne("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
    };
    function ch(t6) {
      var e6 = t6._readableState;
      for (Ne("flow", e6.flowing);e6.flowing && t6.read() !== null; )
        ;
    }
    Ce.prototype.wrap = function(t6) {
      var e6 = this, r6 = this._readableState, o2 = false;
      t6.on("end", function() {
        if (Ne("wrapped end"), r6.decoder && !r6.ended) {
          var m2 = r6.decoder.end();
          m2 && m2.length && e6.push(m2);
        }
        e6.push(null);
      }), t6.on("data", function(m2) {
        if (Ne("wrapped data"), r6.decoder && (m2 = r6.decoder.write(m2)), !(r6.objectMode && m2 == null) && !(!r6.objectMode && (!m2 || !m2.length))) {
          var y2 = e6.push(m2);
          y2 || (o2 = true, t6.pause());
        }
      });
      for (var f in t6)
        this[f] === undefined && typeof t6[f] == "function" && (this[f] = function(y2) {
          return function() {
            return t6[y2].apply(t6, arguments);
          };
        }(f));
      for (var p2 = 0;p2 < sh.length; p2++)
        t6.on(sh[p2], this.emit.bind(this, sh[p2]));
      return this._read = function(m2) {
        Ne("wrapped _read", m2), o2 && (o2 = false, t6.resume());
      }, this;
    };
    typeof Symbol == "function" && (Ce.prototype[Symbol.asyncIterator] = function() {
      return ah === undefined && (ah = Pc()), ah(this);
    });
    Object.defineProperty(Ce.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } });
    Object.defineProperty(Ce.prototype, "readableBuffer", { enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } });
    Object.defineProperty(Ce.prototype, "readableFlowing", { enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(e6) {
      this._readableState && (this._readableState.flowing = e6);
    } });
    Ce._fromList = Zc;
    Object.defineProperty(Ce.prototype, "readableLength", { enumerable: false, get: function() {
      return this._readableState.length;
    } });
    function Zc(t6, e6) {
      if (e6.length === 0)
        return null;
      var r6;
      return e6.objectMode ? r6 = e6.buffer.shift() : !t6 || t6 >= e6.length ? (e6.decoder ? r6 = e6.buffer.join("") : e6.buffer.length === 1 ? r6 = e6.buffer.first() : r6 = e6.buffer.concat(e6.length), e6.buffer.clear()) : r6 = e6.buffer.consume(t6, e6.decoder), r6;
    }
    function uh(t6) {
      var e6 = t6._readableState;
      Ne("endReadable", e6.endEmitted), e6.endEmitted || (e6.ended = true, process.nextTick(KM, e6, t6));
    }
    function KM(t6, e6) {
      if (Ne("endReadableNT", t6.endEmitted, t6.length), !t6.endEmitted && t6.length === 0 && (t6.endEmitted = true, e6.readable = false, e6.emit("end"), t6.autoDestroy)) {
        var r6 = e6._writableState;
        (!r6 || r6.autoDestroy && r6.finished) && e6.destroy();
      }
    }
    typeof Symbol == "function" && (Ce.from = function(t6, e6) {
      return oh === undefined && (oh = Oc()), oh(Ce, t6, e6);
    });
    function Vc(t6, e6) {
      for (var r6 = 0, o2 = t6.length;r6 < o2; r6++)
        if (t6[r6] === e6)
          return r6;
      return -1;
    }
  });
  ph = T((pI, Yc) => {
    Yc.exports = di;
    var Mo = sn().codes, jM = Mo.ERR_METHOD_NOT_IMPLEMENTED, ZM = Mo.ERR_MULTIPLE_CALLBACK, VM = Mo.ERR_TRANSFORM_ALREADY_TRANSFORMING, $M = Mo.ERR_TRANSFORM_WITH_LENGTH_0, _o = hn();
    Ie()(di, _o);
    function GM(t6, e6) {
      var r6 = this._transformState;
      r6.transforming = false;
      var o2 = r6.writecb;
      if (o2 === null)
        return this.emit("error", new ZM);
      r6.writechunk = null, r6.writecb = null, e6 != null && this.push(e6), o2(t6);
      var f = this._readableState;
      f.reading = false, (f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
    }
    function di(t6) {
      if (!(this instanceof di))
        return new di(t6);
      _o.call(this, t6), this._transformState = { afterTransform: GM.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t6 && (typeof t6.transform == "function" && (this._transform = t6.transform), typeof t6.flush == "function" && (this._flush = t6.flush)), this.on("prefinish", YM);
    }
    function YM() {
      var t6 = this;
      typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(e6, r6) {
        Gc(t6, e6, r6);
      }) : Gc(this, null, null);
    }
    di.prototype.push = function(t6, e6) {
      return this._transformState.needTransform = false, _o.prototype.push.call(this, t6, e6);
    };
    di.prototype._transform = function(t6, e6, r6) {
      r6(new jM("_transform()"));
    };
    di.prototype._write = function(t6, e6, r6) {
      var o2 = this._transformState;
      if (o2.writecb = r6, o2.writechunk = t6, o2.writeencoding = e6, !o2.transforming) {
        var f = this._readableState;
        (o2.needTransform || f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
      }
    };
    di.prototype._read = function(t6) {
      var e6 = this._transformState;
      e6.writechunk !== null && !e6.transforming ? (e6.transforming = true, this._transform(e6.writechunk, e6.writeencoding, e6.afterTransform)) : e6.needTransform = true;
    };
    di.prototype._destroy = function(t6, e6) {
      _o.prototype._destroy.call(this, t6, function(r6) {
        e6(r6);
      });
    };
    function Gc(t6, e6, r6) {
      if (e6)
        return t6.emit("error", e6);
      if (r6 != null && t6.push(r6), t6._writableState.length)
        throw new $M;
      if (t6._transformState.transforming)
        throw new VM;
      return t6.push(null);
    }
  });
  Qc = T((vI, Jc) => {
    Jc.exports = ia;
    var Xc = ph();
    Ie()(ia, Xc);
    function ia(t6) {
      if (!(this instanceof ia))
        return new ia(t6);
      Xc.call(this, t6);
    }
    ia.prototype._transform = function(t6, e6, r6) {
      r6(null, t6);
    };
  });
  np = T((bI, ip) => {
    var vh;
    function XM(t6) {
      var e6 = false;
      return function() {
        e6 || (e6 = true, t6.apply(undefined, arguments));
      };
    }
    var rp = sn().codes, JM = rp.ERR_MISSING_ARGS, QM = rp.ERR_STREAM_DESTROYED;
    function ep(t6) {
      if (t6)
        throw t6;
    }
    function e42(t6) {
      return t6.setHeader && typeof t6.abort == "function";
    }
    function t42(t6, e6, r6, o2) {
      o2 = XM(o2);
      var f = false;
      t6.on("close", function() {
        f = true;
      }), vh === undefined && (vh = vo()), vh(t6, { readable: e6, writable: r6 }, function(m2) {
        if (m2)
          return o2(m2);
        f = true, o2();
      });
      var p2 = false;
      return function(m2) {
        if (!f && !p2) {
          if (p2 = true, e42(t6))
            return t6.abort();
          if (typeof t6.destroy == "function")
            return t6.destroy();
          o2(m2 || new QM("pipe"));
        }
      };
    }
    function tp(t6) {
      t6();
    }
    function r42(t6, e6) {
      return t6.pipe(e6);
    }
    function i4(t6) {
      return !t6.length || typeof t6[t6.length - 1] != "function" ? ep : t6.pop();
    }
    function n4() {
      for (var t6 = arguments.length, e6 = new Array(t6), r6 = 0;r6 < t6; r6++)
        e6[r6] = arguments[r6];
      var o2 = i4(e6);
      if (Array.isArray(e6[0]) && (e6 = e6[0]), e6.length < 2)
        throw new JM("streams");
      var f, p2 = e6.map(function(m2, y2) {
        var M = y2 < e6.length - 1, x = y2 > 0;
        return t42(m2, M, x, function(S) {
          f || (f = S), S && p2.forEach(tp), !M && (p2.forEach(tp), o2(f));
        });
      });
      return e6.reduce(r42);
    }
    ip.exports = n4;
  });
  ap = T((cr, fp) => {
    cr = fp.exports = th();
    cr.Stream = cr;
    cr.Readable = cr;
    cr.Writable = J0();
    cr.Duplex = hn();
    cr.Transform = ph();
    cr.PassThrough = Qc();
    cr.finished = vo();
    cr.pipeline = np();
  });
  bh = T((mI, sp) => {
    var xo = Te().Buffer, op = ap().Transform, f4 = Ie();
    function a4(t6, e6) {
      if (!xo.isBuffer(t6) && typeof t6 != "string")
        throw new TypeError(e6 + " must be a string or a buffer");
    }
    function Ci(t6) {
      op.call(this), this._block = xo.allocUnsafe(t6), this._blockSize = t6, this._blockOffset = 0, this._length = [0, 0, 0, 0], this._finalized = false;
    }
    f4(Ci, op);
    Ci.prototype._transform = function(t6, e6, r6) {
      var o2 = null;
      try {
        this.update(t6, e6);
      } catch (f) {
        o2 = f;
      }
      r6(o2);
    };
    Ci.prototype._flush = function(t6) {
      var e6 = null;
      try {
        this.push(this.digest());
      } catch (r6) {
        e6 = r6;
      }
      t6(e6);
    };
    Ci.prototype.update = function(t6, e6) {
      if (a4(t6, "Data"), this._finalized)
        throw new Error("Digest already called");
      xo.isBuffer(t6) || (t6 = xo.from(t6, e6));
      for (var r6 = this._block, o2 = 0;this._blockOffset + t6.length - o2 >= this._blockSize; ) {
        for (var f = this._blockOffset;f < this._blockSize; )
          r6[f++] = t6[o2++];
        this._update(), this._blockOffset = 0;
      }
      for (;o2 < t6.length; )
        r6[this._blockOffset++] = t6[o2++];
      for (var p2 = 0, m2 = t6.length * 8;m2 > 0; ++p2)
        this._length[p2] += m2, m2 = this._length[p2] / 4294967296 | 0, m2 > 0 && (this._length[p2] -= 4294967296 * m2);
      return this;
    };
    Ci.prototype._update = function() {
      throw new Error("_update is not implemented");
    };
    Ci.prototype.digest = function(t6) {
      if (this._finalized)
        throw new Error("Digest already called");
      this._finalized = true;
      var e6 = this._digest();
      t6 !== undefined && (e6 = e6.toString(t6)), this._block.fill(0), this._blockOffset = 0;
      for (var r6 = 0;r6 < 4; ++r6)
        this._length[r6] = 0;
      return e6;
    };
    Ci.prototype._digest = function() {
      throw new Error("_digest is not implemented");
    };
    sp.exports = Ci;
  });
  Ao = T((gI, up) => {
    var o4 = Ie(), hp = bh(), s42 = Te().Buffer, h4 = new Array(16);
    function So() {
      hp.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878;
    }
    o4(So, hp);
    So.prototype._update = function() {
      for (var t6 = h4, e6 = 0;e6 < 16; ++e6)
        t6[e6] = this._block.readInt32LE(e6 * 4);
      var r6 = this._a, o2 = this._b, f = this._c, p2 = this._d;
      r6 = jt(r6, o2, f, p2, t6[0], 3614090360, 7), p2 = jt(p2, r6, o2, f, t6[1], 3905402710, 12), f = jt(f, p2, r6, o2, t6[2], 606105819, 17), o2 = jt(o2, f, p2, r6, t6[3], 3250441966, 22), r6 = jt(r6, o2, f, p2, t6[4], 4118548399, 7), p2 = jt(p2, r6, o2, f, t6[5], 1200080426, 12), f = jt(f, p2, r6, o2, t6[6], 2821735955, 17), o2 = jt(o2, f, p2, r6, t6[7], 4249261313, 22), r6 = jt(r6, o2, f, p2, t6[8], 1770035416, 7), p2 = jt(p2, r6, o2, f, t6[9], 2336552879, 12), f = jt(f, p2, r6, o2, t6[10], 4294925233, 17), o2 = jt(o2, f, p2, r6, t6[11], 2304563134, 22), r6 = jt(r6, o2, f, p2, t6[12], 1804603682, 7), p2 = jt(p2, r6, o2, f, t6[13], 4254626195, 12), f = jt(f, p2, r6, o2, t6[14], 2792965006, 17), o2 = jt(o2, f, p2, r6, t6[15], 1236535329, 22), r6 = Zt(r6, o2, f, p2, t6[1], 4129170786, 5), p2 = Zt(p2, r6, o2, f, t6[6], 3225465664, 9), f = Zt(f, p2, r6, o2, t6[11], 643717713, 14), o2 = Zt(o2, f, p2, r6, t6[0], 3921069994, 20), r6 = Zt(r6, o2, f, p2, t6[5], 3593408605, 5), p2 = Zt(p2, r6, o2, f, t6[10], 38016083, 9), f = Zt(f, p2, r6, o2, t6[15], 3634488961, 14), o2 = Zt(o2, f, p2, r6, t6[4], 3889429448, 20), r6 = Zt(r6, o2, f, p2, t6[9], 568446438, 5), p2 = Zt(p2, r6, o2, f, t6[14], 3275163606, 9), f = Zt(f, p2, r6, o2, t6[3], 4107603335, 14), o2 = Zt(o2, f, p2, r6, t6[8], 1163531501, 20), r6 = Zt(r6, o2, f, p2, t6[13], 2850285829, 5), p2 = Zt(p2, r6, o2, f, t6[2], 4243563512, 9), f = Zt(f, p2, r6, o2, t6[7], 1735328473, 14), o2 = Zt(o2, f, p2, r6, t6[12], 2368359562, 20), r6 = Vt(r6, o2, f, p2, t6[5], 4294588738, 4), p2 = Vt(p2, r6, o2, f, t6[8], 2272392833, 11), f = Vt(f, p2, r6, o2, t6[11], 1839030562, 16), o2 = Vt(o2, f, p2, r6, t6[14], 4259657740, 23), r6 = Vt(r6, o2, f, p2, t6[1], 2763975236, 4), p2 = Vt(p2, r6, o2, f, t6[4], 1272893353, 11), f = Vt(f, p2, r6, o2, t6[7], 4139469664, 16), o2 = Vt(o2, f, p2, r6, t6[10], 3200236656, 23), r6 = Vt(r6, o2, f, p2, t6[13], 681279174, 4), p2 = Vt(p2, r6, o2, f, t6[0], 3936430074, 11), f = Vt(f, p2, r6, o2, t6[3], 3572445317, 16), o2 = Vt(o2, f, p2, r6, t6[6], 76029189, 23), r6 = Vt(r6, o2, f, p2, t6[9], 3654602809, 4), p2 = Vt(p2, r6, o2, f, t6[12], 3873151461, 11), f = Vt(f, p2, r6, o2, t6[15], 530742520, 16), o2 = Vt(o2, f, p2, r6, t6[2], 3299628645, 23), r6 = $t(r6, o2, f, p2, t6[0], 4096336452, 6), p2 = $t(p2, r6, o2, f, t6[7], 1126891415, 10), f = $t(f, p2, r6, o2, t6[14], 2878612391, 15), o2 = $t(o2, f, p2, r6, t6[5], 4237533241, 21), r6 = $t(r6, o2, f, p2, t6[12], 1700485571, 6), p2 = $t(p2, r6, o2, f, t6[3], 2399980690, 10), f = $t(f, p2, r6, o2, t6[10], 4293915773, 15), o2 = $t(o2, f, p2, r6, t6[1], 2240044497, 21), r6 = $t(r6, o2, f, p2, t6[8], 1873313359, 6), p2 = $t(p2, r6, o2, f, t6[15], 4264355552, 10), f = $t(f, p2, r6, o2, t6[6], 2734768916, 15), o2 = $t(o2, f, p2, r6, t6[13], 1309151649, 21), r6 = $t(r6, o2, f, p2, t6[4], 4149444226, 6), p2 = $t(p2, r6, o2, f, t6[11], 3174756917, 10), f = $t(f, p2, r6, o2, t6[2], 718787259, 15), o2 = $t(o2, f, p2, r6, t6[9], 3951481745, 21), this._a = this._a + r6 | 0, this._b = this._b + o2 | 0, this._c = this._c + f | 0, this._d = this._d + p2 | 0;
    };
    So.prototype._digest = function() {
      this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
      var t6 = s42.allocUnsafe(16);
      return t6.writeInt32LE(this._a, 0), t6.writeInt32LE(this._b, 4), t6.writeInt32LE(this._c, 8), t6.writeInt32LE(this._d, 12), t6;
    };
    function Eo(t6, e6) {
      return t6 << e6 | t6 >>> 32 - e6;
    }
    function jt(t6, e6, r6, o2, f, p2, m2) {
      return Eo(t6 + (e6 & r6 | ~e6 & o2) + f + p2 | 0, m2) + e6 | 0;
    }
    function Zt(t6, e6, r6, o2, f, p2, m2) {
      return Eo(t6 + (e6 & o2 | r6 & ~o2) + f + p2 | 0, m2) + e6 | 0;
    }
    function Vt(t6, e6, r6, o2, f, p2, m2) {
      return Eo(t6 + (e6 ^ r6 ^ o2) + f + p2 | 0, m2) + e6 | 0;
    }
    function $t(t6, e6, r6, o2, f, p2, m2) {
      return Eo(t6 + (r6 ^ (e6 | ~o2)) + f + p2 | 0, m2) + e6 | 0;
    }
    up.exports = So;
  });
  Bo = T((yI, mp) => {
    var mh = Ut().Buffer, u4 = Ie(), bp = bh(), l4 = new Array(16), na = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], fa = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], aa = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], oa = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11], sa = [0, 1518500249, 1859775393, 2400959708, 2840853838], ha = [1352829926, 1548603684, 1836072691, 2053994217, 0];
    function Ro() {
      bp.call(this, 64), this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520;
    }
    u4(Ro, bp);
    Ro.prototype._update = function() {
      for (var t6 = l4, e6 = 0;e6 < 16; ++e6)
        t6[e6] = this._block.readInt32LE(e6 * 4);
      for (var r6 = this._a | 0, o2 = this._b | 0, f = this._c | 0, p2 = this._d | 0, m2 = this._e | 0, y2 = this._a | 0, M = this._b | 0, x = this._c | 0, S = this._d | 0, E = this._e | 0, B = 0;B < 80; B += 1) {
        var q2, L;
        B < 16 ? (q2 = lp(r6, o2, f, p2, m2, t6[na[B]], sa[0], aa[B]), L = vp(y2, M, x, S, E, t6[fa[B]], ha[0], oa[B])) : B < 32 ? (q2 = dp(r6, o2, f, p2, m2, t6[na[B]], sa[1], aa[B]), L = pp(y2, M, x, S, E, t6[fa[B]], ha[1], oa[B])) : B < 48 ? (q2 = cp(r6, o2, f, p2, m2, t6[na[B]], sa[2], aa[B]), L = cp(y2, M, x, S, E, t6[fa[B]], ha[2], oa[B])) : B < 64 ? (q2 = pp(r6, o2, f, p2, m2, t6[na[B]], sa[3], aa[B]), L = dp(y2, M, x, S, E, t6[fa[B]], ha[3], oa[B])) : (q2 = vp(r6, o2, f, p2, m2, t6[na[B]], sa[4], aa[B]), L = lp(y2, M, x, S, E, t6[fa[B]], ha[4], oa[B])), r6 = m2, m2 = p2, p2 = cn(f, 10), f = o2, o2 = q2, y2 = E, E = S, S = cn(x, 10), x = M, M = L;
      }
      var ge = this._b + f + S | 0;
      this._b = this._c + p2 + E | 0, this._c = this._d + m2 + y2 | 0, this._d = this._e + r6 + M | 0, this._e = this._a + o2 + x | 0, this._a = ge;
    };
    Ro.prototype._digest = function() {
      this._block[this._blockOffset++] = 128, this._blockOffset > 56 && (this._block.fill(0, this._blockOffset, 64), this._update(), this._blockOffset = 0), this._block.fill(0, this._blockOffset, 56), this._block.writeUInt32LE(this._length[0], 56), this._block.writeUInt32LE(this._length[1], 60), this._update();
      var t6 = mh.alloc ? mh.alloc(20) : new mh(20);
      return t6.writeInt32LE(this._a, 0), t6.writeInt32LE(this._b, 4), t6.writeInt32LE(this._c, 8), t6.writeInt32LE(this._d, 12), t6.writeInt32LE(this._e, 16), t6;
    };
    function cn(t6, e6) {
      return t6 << e6 | t6 >>> 32 - e6;
    }
    function lp(t6, e6, r6, o2, f, p2, m2, y2) {
      return cn(t6 + (e6 ^ r6 ^ o2) + p2 + m2 | 0, y2) + f | 0;
    }
    function dp(t6, e6, r6, o2, f, p2, m2, y2) {
      return cn(t6 + (e6 & r6 | ~e6 & o2) + p2 + m2 | 0, y2) + f | 0;
    }
    function cp(t6, e6, r6, o2, f, p2, m2, y2) {
      return cn(t6 + ((e6 | ~r6) ^ o2) + p2 + m2 | 0, y2) + f | 0;
    }
    function pp(t6, e6, r6, o2, f, p2, m2, y2) {
      return cn(t6 + (e6 & o2 | r6 & ~o2) + p2 + m2 | 0, y2) + f | 0;
    }
    function vp(t6, e6, r6, o2, f, p2, m2, y2) {
      return cn(t6 + (e6 ^ (r6 | ~o2)) + p2 + m2 | 0, y2) + f | 0;
    }
    mp.exports = Ro;
  });
  pn = T((wI, yp) => {
    var gp = Te().Buffer;
    function qo(t6, e6) {
      this._block = gp.alloc(t6), this._finalSize = e6, this._blockSize = t6, this._len = 0;
    }
    qo.prototype.update = function(t6, e6) {
      typeof t6 == "string" && (e6 = e6 || "utf8", t6 = gp.from(t6, e6));
      for (var r6 = this._block, o2 = this._blockSize, f = t6.length, p2 = this._len, m2 = 0;m2 < f; ) {
        for (var y2 = p2 % o2, M = Math.min(f - m2, o2 - y2), x = 0;x < M; x++)
          r6[y2 + x] = t6[m2 + x];
        p2 += M, m2 += M, p2 % o2 === 0 && this._update(r6);
      }
      return this._len += f, this;
    };
    qo.prototype.digest = function(t6) {
      var e6 = this._len % this._blockSize;
      this._block[e6] = 128, this._block.fill(0, e6 + 1), e6 >= this._finalSize && (this._update(this._block), this._block.fill(0));
      var r6 = this._len * 8;
      if (r6 <= 4294967295)
        this._block.writeUInt32BE(r6, this._blockSize - 4);
      else {
        var o2 = (r6 & 4294967295) >>> 0, f = (r6 - o2) / 4294967296;
        this._block.writeUInt32BE(f, this._blockSize - 8), this._block.writeUInt32BE(o2, this._blockSize - 4);
      }
      this._update(this._block);
      var p2 = this._hash();
      return t6 ? p2.toString(t6) : p2;
    };
    qo.prototype._update = function() {
      throw new Error("_update must be implemented by subclass");
    };
    yp.exports = qo;
  });
  _p = T((MI, Mp) => {
    var d4 = Ie(), wp = pn(), c4 = Te().Buffer, p4 = [1518500249, 1859775393, -1894007588, -899497514], v4 = new Array(80);
    function ua() {
      this.init(), this._w = v4, wp.call(this, 64, 56);
    }
    d4(ua, wp);
    ua.prototype.init = function() {
      return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
    };
    function b4(t6) {
      return t6 << 5 | t6 >>> 27;
    }
    function m4(t6) {
      return t6 << 30 | t6 >>> 2;
    }
    function g4(t6, e6, r6, o2) {
      return t6 === 0 ? e6 & r6 | ~e6 & o2 : t6 === 2 ? e6 & r6 | e6 & o2 | r6 & o2 : e6 ^ r6 ^ o2;
    }
    ua.prototype._update = function(t6) {
      for (var e6 = this._w, r6 = this._a | 0, o2 = this._b | 0, f = this._c | 0, p2 = this._d | 0, m2 = this._e | 0, y2 = 0;y2 < 16; ++y2)
        e6[y2] = t6.readInt32BE(y2 * 4);
      for (;y2 < 80; ++y2)
        e6[y2] = e6[y2 - 3] ^ e6[y2 - 8] ^ e6[y2 - 14] ^ e6[y2 - 16];
      for (var M = 0;M < 80; ++M) {
        var x = ~~(M / 20), S = b4(r6) + g4(x, o2, f, p2) + m2 + e6[M] + p4[x] | 0;
        m2 = p2, p2 = f, f = m4(o2), o2 = r6, r6 = S;
      }
      this._a = r6 + this._a | 0, this._b = o2 + this._b | 0, this._c = f + this._c | 0, this._d = p2 + this._d | 0, this._e = m2 + this._e | 0;
    };
    ua.prototype._hash = function() {
      var t6 = c4.allocUnsafe(20);
      return t6.writeInt32BE(this._a | 0, 0), t6.writeInt32BE(this._b | 0, 4), t6.writeInt32BE(this._c | 0, 8), t6.writeInt32BE(this._d | 0, 12), t6.writeInt32BE(this._e | 0, 16), t6;
    };
    Mp.exports = ua;
  });
  Ep = T((_I, Sp) => {
    var y4 = Ie(), xp = pn(), w4 = Te().Buffer, M4 = [1518500249, 1859775393, -1894007588, -899497514], _4 = new Array(80);
    function la() {
      this.init(), this._w = _4, xp.call(this, 64, 56);
    }
    y4(la, xp);
    la.prototype.init = function() {
      return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this;
    };
    function x4(t6) {
      return t6 << 1 | t6 >>> 31;
    }
    function S4(t6) {
      return t6 << 5 | t6 >>> 27;
    }
    function E4(t6) {
      return t6 << 30 | t6 >>> 2;
    }
    function A4(t6, e6, r6, o2) {
      return t6 === 0 ? e6 & r6 | ~e6 & o2 : t6 === 2 ? e6 & r6 | e6 & o2 | r6 & o2 : e6 ^ r6 ^ o2;
    }
    la.prototype._update = function(t6) {
      for (var e6 = this._w, r6 = this._a | 0, o2 = this._b | 0, f = this._c | 0, p2 = this._d | 0, m2 = this._e | 0, y2 = 0;y2 < 16; ++y2)
        e6[y2] = t6.readInt32BE(y2 * 4);
      for (;y2 < 80; ++y2)
        e6[y2] = x4(e6[y2 - 3] ^ e6[y2 - 8] ^ e6[y2 - 14] ^ e6[y2 - 16]);
      for (var M = 0;M < 80; ++M) {
        var x = ~~(M / 20), S = S4(r6) + A4(x, o2, f, p2) + m2 + e6[M] + M4[x] | 0;
        m2 = p2, p2 = f, f = E4(o2), o2 = r6, r6 = S;
      }
      this._a = r6 + this._a | 0, this._b = o2 + this._b | 0, this._c = f + this._c | 0, this._d = p2 + this._d | 0, this._e = m2 + this._e | 0;
    };
    la.prototype._hash = function() {
      var t6 = w4.allocUnsafe(20);
      return t6.writeInt32BE(this._a | 0, 0), t6.writeInt32BE(this._b | 0, 4), t6.writeInt32BE(this._c | 0, 8), t6.writeInt32BE(this._d | 0, 12), t6.writeInt32BE(this._e | 0, 16), t6;
    };
    Sp.exports = la;
  });
  gh = T((xI, Rp) => {
    var R4 = Ie(), Ap = pn(), B4 = Te().Buffer, q4 = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], I4 = new Array(64);
    function da() {
      this.init(), this._w = I4, Ap.call(this, 64, 56);
    }
    R4(da, Ap);
    da.prototype.init = function() {
      return this._a = 1779033703, this._b = 3144134277, this._c = 1013904242, this._d = 2773480762, this._e = 1359893119, this._f = 2600822924, this._g = 528734635, this._h = 1541459225, this;
    };
    function T4(t6, e6, r6) {
      return r6 ^ t6 & (e6 ^ r6);
    }
    function k4(t6, e6, r6) {
      return t6 & e6 | r6 & (t6 | e6);
    }
    function L4(t6) {
      return (t6 >>> 2 | t6 << 30) ^ (t6 >>> 13 | t6 << 19) ^ (t6 >>> 22 | t6 << 10);
    }
    function N4(t6) {
      return (t6 >>> 6 | t6 << 26) ^ (t6 >>> 11 | t6 << 21) ^ (t6 >>> 25 | t6 << 7);
    }
    function D4(t6) {
      return (t6 >>> 7 | t6 << 25) ^ (t6 >>> 18 | t6 << 14) ^ t6 >>> 3;
    }
    function P4(t6) {
      return (t6 >>> 17 | t6 << 15) ^ (t6 >>> 19 | t6 << 13) ^ t6 >>> 10;
    }
    da.prototype._update = function(t6) {
      for (var e6 = this._w, r6 = this._a | 0, o2 = this._b | 0, f = this._c | 0, p2 = this._d | 0, m2 = this._e | 0, y2 = this._f | 0, M = this._g | 0, x = this._h | 0, S = 0;S < 16; ++S)
        e6[S] = t6.readInt32BE(S * 4);
      for (;S < 64; ++S)
        e6[S] = P4(e6[S - 2]) + e6[S - 7] + D4(e6[S - 15]) + e6[S - 16] | 0;
      for (var E = 0;E < 64; ++E) {
        var B = x + N4(m2) + T4(m2, y2, M) + q4[E] + e6[E] | 0, q2 = L4(r6) + k4(r6, o2, f) | 0;
        x = M, M = y2, y2 = m2, m2 = p2 + B | 0, p2 = f, f = o2, o2 = r6, r6 = B + q2 | 0;
      }
      this._a = r6 + this._a | 0, this._b = o2 + this._b | 0, this._c = f + this._c | 0, this._d = p2 + this._d | 0, this._e = m2 + this._e | 0, this._f = y2 + this._f | 0, this._g = M + this._g | 0, this._h = x + this._h | 0;
    };
    da.prototype._hash = function() {
      var t6 = B4.allocUnsafe(32);
      return t6.writeInt32BE(this._a, 0), t6.writeInt32BE(this._b, 4), t6.writeInt32BE(this._c, 8), t6.writeInt32BE(this._d, 12), t6.writeInt32BE(this._e, 16), t6.writeInt32BE(this._f, 20), t6.writeInt32BE(this._g, 24), t6.writeInt32BE(this._h, 28), t6;
    };
    Rp.exports = da;
  });
  qp = T((SI, Bp) => {
    var C4 = Ie(), O4 = gh(), F4 = pn(), U4 = Te().Buffer, z4 = new Array(64);
    function Io() {
      this.init(), this._w = z4, F4.call(this, 64, 56);
    }
    C4(Io, O4);
    Io.prototype.init = function() {
      return this._a = 3238371032, this._b = 914150663, this._c = 812702999, this._d = 4144912697, this._e = 4290775857, this._f = 1750603025, this._g = 1694076839, this._h = 3204075428, this;
    };
    Io.prototype._hash = function() {
      var t6 = U4.allocUnsafe(28);
      return t6.writeInt32BE(this._a, 0), t6.writeInt32BE(this._b, 4), t6.writeInt32BE(this._c, 8), t6.writeInt32BE(this._d, 12), t6.writeInt32BE(this._e, 16), t6.writeInt32BE(this._f, 20), t6.writeInt32BE(this._g, 24), t6;
    };
    Bp.exports = Io;
  });
  yh = T((EI, Pp) => {
    var H4 = Ie(), Dp = pn(), W4 = Te().Buffer, Ip = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591], K4 = new Array(160);
    function ca() {
      this.init(), this._w = K4, Dp.call(this, 128, 112);
    }
    H4(ca, Dp);
    ca.prototype.init = function() {
      return this._ah = 1779033703, this._bh = 3144134277, this._ch = 1013904242, this._dh = 2773480762, this._eh = 1359893119, this._fh = 2600822924, this._gh = 528734635, this._hh = 1541459225, this._al = 4089235720, this._bl = 2227873595, this._cl = 4271175723, this._dl = 1595750129, this._el = 2917565137, this._fl = 725511199, this._gl = 4215389547, this._hl = 327033209, this;
    };
    function Tp(t6, e6, r6) {
      return r6 ^ t6 & (e6 ^ r6);
    }
    function kp(t6, e6, r6) {
      return t6 & e6 | r6 & (t6 | e6);
    }
    function Lp(t6, e6) {
      return (t6 >>> 28 | e6 << 4) ^ (e6 >>> 2 | t6 << 30) ^ (e6 >>> 7 | t6 << 25);
    }
    function Np(t6, e6) {
      return (t6 >>> 14 | e6 << 18) ^ (t6 >>> 18 | e6 << 14) ^ (e6 >>> 9 | t6 << 23);
    }
    function j4(t6, e6) {
      return (t6 >>> 1 | e6 << 31) ^ (t6 >>> 8 | e6 << 24) ^ t6 >>> 7;
    }
    function Z4(t6, e6) {
      return (t6 >>> 1 | e6 << 31) ^ (t6 >>> 8 | e6 << 24) ^ (t6 >>> 7 | e6 << 25);
    }
    function V4(t6, e6) {
      return (t6 >>> 19 | e6 << 13) ^ (e6 >>> 29 | t6 << 3) ^ t6 >>> 6;
    }
    function $4(t6, e6) {
      return (t6 >>> 19 | e6 << 13) ^ (e6 >>> 29 | t6 << 3) ^ (t6 >>> 6 | e6 << 26);
    }
    function Pt(t6, e6) {
      return t6 >>> 0 < e6 >>> 0 ? 1 : 0;
    }
    ca.prototype._update = function(t6) {
      for (var e6 = this._w, r6 = this._ah | 0, o2 = this._bh | 0, f = this._ch | 0, p2 = this._dh | 0, m2 = this._eh | 0, y2 = this._fh | 0, M = this._gh | 0, x = this._hh | 0, S = this._al | 0, E = this._bl | 0, B = this._cl | 0, q2 = this._dl | 0, L = this._el | 0, ge = this._fl | 0, _e = this._gl | 0, N = this._hl | 0, we = 0;we < 32; we += 2)
        e6[we] = t6.readInt32BE(we * 4), e6[we + 1] = t6.readInt32BE(we * 4 + 4);
      for (;we < 160; we += 2) {
        var ye = e6[we - 30], xe = e6[we - 15 * 2 + 1], Re = j4(ye, xe), Ee = Z4(xe, ye);
        ye = e6[we - 2 * 2], xe = e6[we - 2 * 2 + 1];
        var Ae = V4(ye, xe), P = $4(xe, ye), Se = e6[we - 7 * 2], v = e6[we - 7 * 2 + 1], i2 = e6[we - 16 * 2], a4 = e6[we - 16 * 2 + 1], h2 = Ee + v | 0, s5 = Re + Se + Pt(h2, Ee) | 0;
        h2 = h2 + P | 0, s5 = s5 + Ae + Pt(h2, P) | 0, h2 = h2 + a4 | 0, s5 = s5 + i2 + Pt(h2, a4) | 0, e6[we] = s5, e6[we + 1] = h2;
      }
      for (var u2 = 0;u2 < 160; u2 += 2) {
        s5 = e6[u2], h2 = e6[u2 + 1];
        var c = kp(r6, o2, f), b2 = kp(S, E, B), l = Lp(r6, S), n2 = Lp(S, r6), d2 = Np(m2, L), w = Np(L, m2), g2 = Ip[u2], _ = Ip[u2 + 1], A = Tp(m2, y2, M), R = Tp(L, ge, _e), I = N + w | 0, Me = x + d2 + Pt(I, N) | 0;
        I = I + R | 0, Me = Me + A + Pt(I, R) | 0, I = I + _ | 0, Me = Me + g2 + Pt(I, _) | 0, I = I + h2 | 0, Me = Me + s5 + Pt(I, h2) | 0;
        var k2 = n2 + b2 | 0, D = l + c + Pt(k2, n2) | 0;
        x = M, N = _e, M = y2, _e = ge, y2 = m2, ge = L, L = q2 + I | 0, m2 = p2 + Me + Pt(L, q2) | 0, p2 = f, q2 = B, f = o2, B = E, o2 = r6, E = S, S = I + k2 | 0, r6 = Me + D + Pt(S, I) | 0;
      }
      this._al = this._al + S | 0, this._bl = this._bl + E | 0, this._cl = this._cl + B | 0, this._dl = this._dl + q2 | 0, this._el = this._el + L | 0, this._fl = this._fl + ge | 0, this._gl = this._gl + _e | 0, this._hl = this._hl + N | 0, this._ah = this._ah + r6 + Pt(this._al, S) | 0, this._bh = this._bh + o2 + Pt(this._bl, E) | 0, this._ch = this._ch + f + Pt(this._cl, B) | 0, this._dh = this._dh + p2 + Pt(this._dl, q2) | 0, this._eh = this._eh + m2 + Pt(this._el, L) | 0, this._fh = this._fh + y2 + Pt(this._fl, ge) | 0, this._gh = this._gh + M + Pt(this._gl, _e) | 0, this._hh = this._hh + x + Pt(this._hl, N) | 0;
    };
    ca.prototype._hash = function() {
      var t6 = W4.allocUnsafe(64);
      function e6(r6, o2, f) {
        t6.writeInt32BE(r6, f), t6.writeInt32BE(o2, f + 4);
      }
      return e6(this._ah, this._al, 0), e6(this._bh, this._bl, 8), e6(this._ch, this._cl, 16), e6(this._dh, this._dl, 24), e6(this._eh, this._el, 32), e6(this._fh, this._fl, 40), e6(this._gh, this._gl, 48), e6(this._hh, this._hl, 56), t6;
    };
    Pp.exports = ca;
  });
  Op = T((AI, Cp) => {
    var G4 = Ie(), Y4 = yh(), X4 = pn(), J4 = Te().Buffer, Q4 = new Array(160);
    function To() {
      this.init(), this._w = Q4, X4.call(this, 128, 112);
    }
    G4(To, Y4);
    To.prototype.init = function() {
      return this._ah = 3418070365, this._bh = 1654270250, this._ch = 2438529370, this._dh = 355462360, this._eh = 1731405415, this._fh = 2394180231, this._gh = 3675008525, this._hh = 1203062813, this._al = 3238371032, this._bl = 914150663, this._cl = 812702999, this._dl = 4144912697, this._el = 4290775857, this._fl = 1750603025, this._gl = 1694076839, this._hl = 3204075428, this;
    };
    To.prototype._hash = function() {
      var t6 = J4.allocUnsafe(48);
      function e6(r6, o2, f) {
        t6.writeInt32BE(r6, f), t6.writeInt32BE(o2, f + 4);
      }
      return e6(this._ah, this._al, 0), e6(this._bh, this._bl, 8), e6(this._ch, this._cl, 16), e6(this._dh, this._dl, 24), e6(this._eh, this._el, 32), e6(this._fh, this._fl, 40), t6;
    };
    Cp.exports = To;
  });
  ko = T((ci, Fp) => {
    var ci = Fp.exports = function(e6) {
      e6 = e6.toLowerCase();
      var r6 = ci[e6];
      if (!r6)
        throw new Error(e6 + " is not supported (we accept pull requests)");
      return new r6;
    };
    ci.sha = _p();
    ci.sha1 = Ep();
    ci.sha224 = qp();
    ci.sha256 = gh();
    ci.sha384 = Op();
    ci.sha512 = yh();
  });
  Tt = T((RI, Up) => {
    Up.exports = { ArrayIsArray(t6) {
      return Array.isArray(t6);
    }, ArrayPrototypeIncludes(t6, e6) {
      return t6.includes(e6);
    }, ArrayPrototypeIndexOf(t6, e6) {
      return t6.indexOf(e6);
    }, ArrayPrototypeJoin(t6, e6) {
      return t6.join(e6);
    }, ArrayPrototypeMap(t6, e6) {
      return t6.map(e6);
    }, ArrayPrototypePop(t6, e6) {
      return t6.pop(e6);
    }, ArrayPrototypePush(t6, e6) {
      return t6.push(e6);
    }, ArrayPrototypeSlice(t6, e6, r6) {
      return t6.slice(e6, r6);
    }, Error, FunctionPrototypeCall(t6, e6, ...r6) {
      return t6.call(e6, ...r6);
    }, FunctionPrototypeSymbolHasInstance(t6, e6) {
      return Function.prototype[Symbol.hasInstance].call(t6, e6);
    }, MathFloor: Math.floor, Number, NumberIsInteger: Number.isInteger, NumberIsNaN: Number.isNaN, NumberMAX_SAFE_INTEGER: Number.MAX_SAFE_INTEGER, NumberMIN_SAFE_INTEGER: Number.MIN_SAFE_INTEGER, NumberParseInt: Number.parseInt, ObjectDefineProperties(t6, e6) {
      return Object.defineProperties(t6, e6);
    }, ObjectDefineProperty(t6, e6, r6) {
      return Object.defineProperty(t6, e6, r6);
    }, ObjectGetOwnPropertyDescriptor(t6, e6) {
      return Object.getOwnPropertyDescriptor(t6, e6);
    }, ObjectKeys(t6) {
      return Object.keys(t6);
    }, ObjectSetPrototypeOf(t6, e6) {
      return Object.setPrototypeOf(t6, e6);
    }, Promise, PromisePrototypeCatch(t6, e6) {
      return t6.catch(e6);
    }, PromisePrototypeThen(t6, e6, r6) {
      return t6.then(e6, r6);
    }, PromiseReject(t6) {
      return Promise.reject(t6);
    }, ReflectApply: Reflect.apply, RegExpPrototypeTest(t6, e6) {
      return t6.test(e6);
    }, SafeSet: Set, String, StringPrototypeSlice(t6, e6, r6) {
      return t6.slice(e6, r6);
    }, StringPrototypeToLowerCase(t6) {
      return t6.toLowerCase();
    }, StringPrototypeToUpperCase(t6) {
      return t6.toUpperCase();
    }, StringPrototypeTrim(t6) {
      return t6.trim();
    }, Symbol, SymbolAsyncIterator: Symbol.asyncIterator, SymbolHasInstance: Symbol.hasInstance, SymbolIterator: Symbol.iterator, TypedArrayPrototypeSet(t6, e6, r6) {
      return t6.set(e6, r6);
    }, Uint8Array };
  });
  Gr = T((BI, Mh) => {
    var e_ = Ut(), t_ = Object.getPrototypeOf(async function() {
    }).constructor, zp = globalThis.Blob || e_.Blob, r_ = typeof zp < "u" ? function(e6) {
      return e6 instanceof zp;
    } : function(e6) {
      return false;
    }, wh = class extends Error {
      constructor(e6) {
        if (!Array.isArray(e6))
          throw new TypeError(`Expected input to be an Array, got ${typeof e6}`);
        let r6 = "";
        for (let o2 = 0;o2 < e6.length; o2++)
          r6 += `    ${e6[o2].stack}
`;
        super(r6), this.name = "AggregateError", this.errors = e6;
      }
    };
    Mh.exports = { AggregateError: wh, kEmptyObject: Object.freeze({}), once(t6) {
      let e6 = false;
      return function(...r6) {
        e6 || (e6 = true, t6.apply(this, r6));
      };
    }, createDeferredPromise: function() {
      let t6, e6;
      return { promise: new Promise((o2, f) => {
        t6 = o2, e6 = f;
      }), resolve: t6, reject: e6 };
    }, promisify(t6) {
      return new Promise((e6, r6) => {
        t6((o2, ...f) => o2 ? r6(o2) : e6(...f));
      });
    }, debuglog() {
      return function() {
      };
    }, format(t6, ...e6) {
      return t6.replace(/%([sdifj])/g, function(...[r6, o2]) {
        let f = e6.shift();
        return o2 === "f" ? f.toFixed(6) : o2 === "j" ? JSON.stringify(f) : o2 === "s" && typeof f == "object" ? `${f.constructor !== Object ? f.constructor.name : ""} {}`.trim() : f.toString();
      });
    }, inspect(t6) {
      switch (typeof t6) {
        case "string":
          if (t6.includes("'"))
            if (t6.includes('"')) {
              if (!t6.includes("`") && !t6.includes("${"))
                return `\`${t6}\``;
            } else
              return `"${t6}"`;
          return `'${t6}'`;
        case "number":
          return isNaN(t6) ? "NaN" : Object.is(t6, -0) ? String(t6) : t6;
        case "bigint":
          return `${String(t6)}n`;
        case "boolean":
        case "undefined":
          return String(t6);
        case "object":
          return "{}";
      }
    }, types: { isAsyncFunction(t6) {
      return t6 instanceof t_;
    }, isArrayBufferView(t6) {
      return ArrayBuffer.isView(t6);
    } }, isBlob: r_ };
    Mh.exports.promisify.custom = Symbol.for("nodejs.util.promisify.custom");
  });
  No = T((qI, Lo) => {
    var { AbortController: Hp, AbortSignal: i_ } = typeof self < "u" ? self : typeof window < "u" ? window : undefined;
    Lo.exports = Hp;
    Lo.exports.AbortSignal = i_;
    Lo.exports.default = Hp;
  });
  Jt = T((II, jp) => {
    var { format: n_, inspect: Do, AggregateError: f_ } = Gr(), a_ = globalThis.AggregateError || f_, o_ = Symbol("kIsNodeError"), s_ = ["string", "function", "number", "object", "Function", "Object", "boolean", "bigint", "symbol"], h_ = /^([A-Z][a-z0-9]*)+$/, u_ = "__node_internal_", Po = {};
    function vn(t6, e6) {
      if (!t6)
        throw new Po.ERR_INTERNAL_ASSERTION(e6);
    }
    function Wp(t6) {
      let e6 = "", r6 = t6.length, o2 = t6[0] === "-" ? 1 : 0;
      for (;r6 >= o2 + 4; r6 -= 3)
        e6 = `_${t6.slice(r6 - 3, r6)}${e6}`;
      return `${t6.slice(0, r6)}${e6}`;
    }
    function l_(t6, e6, r6) {
      if (typeof e6 == "function")
        return vn(e6.length <= r6.length, `Code: ${t6}; The provided arguments length (${r6.length}) does not match the required ones (${e6.length}).`), e6(...r6);
      let o2 = (e6.match(/%[dfijoOs]/g) || []).length;
      return vn(o2 === r6.length, `Code: ${t6}; The provided arguments length (${r6.length}) does not match the required ones (${o2}).`), r6.length === 0 ? e6 : n_(e6, ...r6);
    }
    function zt(t6, e6, r6) {
      r6 || (r6 = Error);

      class o2 extends r6 {
        constructor(...p2) {
          super(l_(t6, e6, p2));
        }
        toString() {
          return `${this.name} [${t6}]: ${this.message}`;
        }
      }
      Object.defineProperties(o2.prototype, { name: { value: r6.name, writable: true, enumerable: false, configurable: true }, toString: { value() {
        return `${this.name} [${t6}]: ${this.message}`;
      }, writable: true, enumerable: false, configurable: true } }), o2.prototype.code = t6, o2.prototype[o_] = true, Po[t6] = o2;
    }
    function Kp(t6) {
      let e6 = u_ + t6.name;
      return Object.defineProperty(t6, "name", { value: e6 }), t6;
    }
    function d_(t6, e6) {
      if (t6 && e6 && t6 !== e6) {
        if (Array.isArray(e6.errors))
          return e6.errors.push(t6), e6;
        let r6 = new a_([e6, t6], e6.message);
        return r6.code = e6.code, r6;
      }
      return t6 || e6;
    }
    var _h = class extends Error {
      constructor(e6 = "The operation was aborted", r6 = undefined) {
        if (r6 !== undefined && typeof r6 != "object")
          throw new Po.ERR_INVALID_ARG_TYPE("options", "Object", r6);
        super(e6, r6), this.code = "ABORT_ERR", this.name = "AbortError";
      }
    };
    zt("ERR_ASSERTION", "%s", Error);
    zt("ERR_INVALID_ARG_TYPE", (t6, e6, r6) => {
      vn(typeof t6 == "string", "'name' must be a string"), Array.isArray(e6) || (e6 = [e6]);
      let o2 = "The ";
      t6.endsWith(" argument") ? o2 += `${t6} ` : o2 += `"${t6}" ${t6.includes(".") ? "property" : "argument"} `, o2 += "must be ";
      let f = [], p2 = [], m2 = [];
      for (let M of e6)
        vn(typeof M == "string", "All expected entries have to be of type string"), s_.includes(M) ? f.push(M.toLowerCase()) : h_.test(M) ? p2.push(M) : (vn(M !== "object", 'The value "object" should be written as "Object"'), m2.push(M));
      if (p2.length > 0) {
        let M = f.indexOf("object");
        M !== -1 && (f.splice(f, M, 1), p2.push("Object"));
      }
      if (f.length > 0) {
        switch (f.length) {
          case 1:
            o2 += `of type ${f[0]}`;
            break;
          case 2:
            o2 += `one of type ${f[0]} or ${f[1]}`;
            break;
          default: {
            let M = f.pop();
            o2 += `one of type ${f.join(", ")}, or ${M}`;
          }
        }
        (p2.length > 0 || m2.length > 0) && (o2 += " or ");
      }
      if (p2.length > 0) {
        switch (p2.length) {
          case 1:
            o2 += `an instance of ${p2[0]}`;
            break;
          case 2:
            o2 += `an instance of ${p2[0]} or ${p2[1]}`;
            break;
          default: {
            let M = p2.pop();
            o2 += `an instance of ${p2.join(", ")}, or ${M}`;
          }
        }
        m2.length > 0 && (o2 += " or ");
      }
      switch (m2.length) {
        case 0:
          break;
        case 1:
          m2[0].toLowerCase() !== m2[0] && (o2 += "an "), o2 += `${m2[0]}`;
          break;
        case 2:
          o2 += `one of ${m2[0]} or ${m2[1]}`;
          break;
        default: {
          let M = m2.pop();
          o2 += `one of ${m2.join(", ")}, or ${M}`;
        }
      }
      if (r6 == null)
        o2 += `. Received ${r6}`;
      else if (typeof r6 == "function" && r6.name)
        o2 += `. Received function ${r6.name}`;
      else if (typeof r6 == "object") {
        var y2;
        (y2 = r6.constructor) !== null && y2 !== undefined && y2.name ? o2 += `. Received an instance of ${r6.constructor.name}` : o2 += `. Received ${Do(r6, { depth: -1 })}`;
      } else {
        let M = Do(r6, { colors: false });
        M.length > 25 && (M = `${M.slice(0, 25)}...`), o2 += `. Received type ${typeof r6} (${M})`;
      }
      return o2;
    }, TypeError);
    zt("ERR_INVALID_ARG_VALUE", (t6, e6, r6 = "is invalid") => {
      let o2 = Do(e6);
      return o2.length > 128 && (o2 = o2.slice(0, 128) + "..."), `The ${t6.includes(".") ? "property" : "argument"} '${t6}' ${r6}. Received ${o2}`;
    }, TypeError);
    zt("ERR_INVALID_RETURN_VALUE", (t6, e6, r6) => {
      var o2;
      let f = r6 != null && (o2 = r6.constructor) !== null && o2 !== undefined && o2.name ? `instance of ${r6.constructor.name}` : `type ${typeof r6}`;
      return `Expected ${t6} to be returned from the "${e6}" function but got ${f}.`;
    }, TypeError);
    zt("ERR_MISSING_ARGS", (...t6) => {
      vn(t6.length > 0, "At least one arg needs to be specified");
      let e6, r6 = t6.length;
      switch (t6 = (Array.isArray(t6) ? t6 : [t6]).map((o2) => `"${o2}"`).join(" or "), r6) {
        case 1:
          e6 += `The ${t6[0]} argument`;
          break;
        case 2:
          e6 += `The ${t6[0]} and ${t6[1]} arguments`;
          break;
        default:
          {
            let o2 = t6.pop();
            e6 += `The ${t6.join(", ")}, and ${o2} arguments`;
          }
          break;
      }
      return `${e6} must be specified`;
    }, TypeError);
    zt("ERR_OUT_OF_RANGE", (t6, e6, r6) => {
      vn(e6, 'Missing "range" argument');
      let o2;
      return Number.isInteger(r6) && Math.abs(r6) > 2 ** 32 ? o2 = Wp(String(r6)) : typeof r6 == "bigint" ? (o2 = String(r6), (r6 > 2n ** 32n || r6 < -(2n ** 32n)) && (o2 = Wp(o2)), o2 += "n") : o2 = Do(r6), `The value of "${t6}" is out of range. It must be ${e6}. Received ${o2}`;
    }, RangeError);
    zt("ERR_MULTIPLE_CALLBACK", "Callback called multiple times", Error);
    zt("ERR_METHOD_NOT_IMPLEMENTED", "The %s method is not implemented", Error);
    zt("ERR_STREAM_ALREADY_FINISHED", "Cannot call %s after a stream was finished", Error);
    zt("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable", Error);
    zt("ERR_STREAM_DESTROYED", "Cannot call %s after a stream was destroyed", Error);
    zt("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    zt("ERR_STREAM_PREMATURE_CLOSE", "Premature close", Error);
    zt("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF", Error);
    zt("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event", Error);
    zt("ERR_STREAM_WRITE_AFTER_END", "write after end", Error);
    zt("ERR_UNKNOWN_ENCODING", "Unknown encoding: %s", TypeError);
    jp.exports = { AbortError: _h, aggregateTwoErrors: Kp(d_), hideStackFrames: Kp, codes: Po };
  });
  pa = T((TI, Qp) => {
    var { ArrayIsArray: $p, ArrayPrototypeIncludes: Gp, ArrayPrototypeJoin: Yp, ArrayPrototypeMap: c_, NumberIsInteger: Sh, NumberIsNaN: p_, NumberMAX_SAFE_INTEGER: v_, NumberMIN_SAFE_INTEGER: b_, NumberParseInt: m_, ObjectPrototypeHasOwnProperty: g_, RegExpPrototypeExec: y_, String: w_, StringPrototypeToUpperCase: M_, StringPrototypeTrim: __ } = Tt(), { hideStackFrames: Ir, codes: { ERR_SOCKET_BAD_PORT: x_, ERR_INVALID_ARG_TYPE: tr, ERR_INVALID_ARG_VALUE: Co, ERR_OUT_OF_RANGE: bn, ERR_UNKNOWN_SIGNAL: Zp } } = Jt(), { normalizeEncoding: S_ } = Gr(), { isAsyncFunction: E_, isArrayBufferView: A_ } = Gr().types, Vp = {};
    function R_(t6) {
      return t6 === (t6 | 0);
    }
    function B_(t6) {
      return t6 === t6 >>> 0;
    }
    var q_ = /^[0-7]+$/, I_ = "must be a 32-bit unsigned integer or an octal string";
    function T_(t6, e6, r6) {
      if (typeof t6 > "u" && (t6 = r6), typeof t6 == "string") {
        if (y_(q_, t6) === null)
          throw new Co(e6, t6, I_);
        t6 = m_(t6, 8);
      }
      return Xp(t6, e6), t6;
    }
    var k_ = Ir((t6, e6, r6 = b_, o2 = v_) => {
      if (typeof t6 != "number")
        throw new tr(e6, "number", t6);
      if (!Sh(t6))
        throw new bn(e6, "an integer", t6);
      if (t6 < r6 || t6 > o2)
        throw new bn(e6, `>= ${r6} && <= ${o2}`, t6);
    }), L_ = Ir((t6, e6, r6 = -2147483648, o2 = 2147483647) => {
      if (typeof t6 != "number")
        throw new tr(e6, "number", t6);
      if (!Sh(t6))
        throw new bn(e6, "an integer", t6);
      if (t6 < r6 || t6 > o2)
        throw new bn(e6, `>= ${r6} && <= ${o2}`, t6);
    }), Xp = Ir((t6, e6, r6 = false) => {
      if (typeof t6 != "number")
        throw new tr(e6, "number", t6);
      if (!Sh(t6))
        throw new bn(e6, "an integer", t6);
      let o2 = r6 ? 1 : 0, f = 4294967295;
      if (t6 < o2 || t6 > f)
        throw new bn(e6, `>= ${o2} && <= ${f}`, t6);
    });
    function Jp(t6, e6) {
      if (typeof t6 != "string")
        throw new tr(e6, "string", t6);
    }
    function N_(t6, e6, r6 = undefined, o2) {
      if (typeof t6 != "number")
        throw new tr(e6, "number", t6);
      if (r6 != null && t6 < r6 || o2 != null && t6 > o2 || (r6 != null || o2 != null) && p_(t6))
        throw new bn(e6, `${r6 != null ? `>= ${r6}` : ""}${r6 != null && o2 != null ? " && " : ""}${o2 != null ? `<= ${o2}` : ""}`, t6);
    }
    var D_ = Ir((t6, e6, r6) => {
      if (!Gp(r6, t6)) {
        let o2 = Yp(c_(r6, (p2) => typeof p2 == "string" ? `'${p2}'` : w_(p2)), ", "), f = "must be one of: " + o2;
        throw new Co(e6, t6, f);
      }
    });
    function P_(t6, e6) {
      if (typeof t6 != "boolean")
        throw new tr(e6, "boolean", t6);
    }
    function xh(t6, e6, r6) {
      return t6 == null || !g_(t6, e6) ? r6 : t6[e6];
    }
    var C_ = Ir((t6, e6, r6 = null) => {
      let o2 = xh(r6, "allowArray", false), f = xh(r6, "allowFunction", false);
      if (!xh(r6, "nullable", false) && t6 === null || !o2 && $p(t6) || typeof t6 != "object" && (!f || typeof t6 != "function"))
        throw new tr(e6, "Object", t6);
    }), O_ = Ir((t6, e6, r6 = 0) => {
      if (!$p(t6))
        throw new tr(e6, "Array", t6);
      if (t6.length < r6) {
        let o2 = `must be longer than ${r6}`;
        throw new Co(e6, t6, o2);
      }
    });
    function F_(t6, e6 = "signal") {
      if (Jp(t6, e6), Vp[t6] === undefined)
        throw Vp[M_(t6)] !== undefined ? new Zp(t6 + " (signals must use all capital letters)") : new Zp(t6);
    }
    var U_ = Ir((t6, e6 = "buffer") => {
      if (!A_(t6))
        throw new tr(e6, ["Buffer", "TypedArray", "DataView"], t6);
    });
    function z_(t6, e6) {
      let r6 = S_(e6), o2 = t6.length;
      if (r6 === "hex" && o2 % 2 !== 0)
        throw new Co("encoding", e6, `is invalid for data of length ${o2}`);
    }
    function H_(t6, e6 = "Port", r6 = true) {
      if (typeof t6 != "number" && typeof t6 != "string" || typeof t6 == "string" && __(t6).length === 0 || +t6 !== +t6 >>> 0 || t6 > 65535 || t6 === 0 && !r6)
        throw new x_(e6, t6, r6);
      return t6 | 0;
    }
    var W_ = Ir((t6, e6) => {
      if (t6 !== undefined && (t6 === null || typeof t6 != "object" || !("aborted" in t6)))
        throw new tr(e6, "AbortSignal", t6);
    }), K_ = Ir((t6, e6) => {
      if (typeof t6 != "function")
        throw new tr(e6, "Function", t6);
    }), j_ = Ir((t6, e6) => {
      if (typeof t6 != "function" || E_(t6))
        throw new tr(e6, "Function", t6);
    }), Z_ = Ir((t6, e6) => {
      if (t6 !== undefined)
        throw new tr(e6, "undefined", t6);
    });
    function V_(t6, e6, r6) {
      if (!Gp(r6, t6))
        throw new tr(e6, `('${Yp(r6, "|")}')`, t6);
    }
    Qp.exports = { isInt32: R_, isUint32: B_, parseFileMode: T_, validateArray: O_, validateBoolean: P_, validateBuffer: U_, validateEncoding: z_, validateFunction: K_, validateInt32: L_, validateInteger: k_, validateNumber: N_, validateObject: C_, validateOneOf: D_, validatePlainFunction: j_, validatePort: H_, validateSignalName: F_, validateString: Jp, validateUint32: Xp, validateUndefined: Z_, validateUnion: V_, validateAbortSignal: W_ };
  });
  Rh = T((kI, i1) => {
    var dt = i1.exports = {}, Yr, Xr;
    function Eh() {
      throw new Error("setTimeout has not been defined");
    }
    function Ah() {
      throw new Error("clearTimeout has not been defined");
    }
    (function() {
      try {
        typeof setTimeout == "function" ? Yr = setTimeout : Yr = Eh;
      } catch {
        Yr = Eh;
      }
      try {
        typeof clearTimeout == "function" ? Xr = clearTimeout : Xr = Ah;
      } catch {
        Xr = Ah;
      }
    })();
    function e1(t6) {
      if (Yr === setTimeout)
        return setTimeout(t6, 0);
      if ((Yr === Eh || !Yr) && setTimeout)
        return Yr = setTimeout, setTimeout(t6, 0);
      try {
        return Yr(t6, 0);
      } catch {
        try {
          return Yr.call(null, t6, 0);
        } catch {
          return Yr.call(this, t6, 0);
        }
      }
    }
    function $_(t6) {
      if (Xr === clearTimeout)
        return clearTimeout(t6);
      if ((Xr === Ah || !Xr) && clearTimeout)
        return Xr = clearTimeout, clearTimeout(t6);
      try {
        return Xr(t6);
      } catch {
        try {
          return Xr.call(null, t6);
        } catch {
          return Xr.call(this, t6);
        }
      }
    }
    var pi = [], nf = false, mn, Oo = -1;
    function G_() {
      !nf || !mn || (nf = false, mn.length ? pi = mn.concat(pi) : Oo = -1, pi.length && t1());
    }
    function t1() {
      if (!nf) {
        var t6 = e1(G_);
        nf = true;
        for (var e6 = pi.length;e6; ) {
          for (mn = pi, pi = [];++Oo < e6; )
            mn && mn[Oo].run();
          Oo = -1, e6 = pi.length;
        }
        mn = null, nf = false, $_(t6);
      }
    }
    dt.nextTick = function(t6) {
      var e6 = new Array(arguments.length - 1);
      if (arguments.length > 1)
        for (var r6 = 1;r6 < arguments.length; r6++)
          e6[r6 - 1] = arguments[r6];
      pi.push(new r1(t6, e6)), pi.length === 1 && !nf && e1(t1);
    };
    function r1(t6, e6) {
      this.fun = t6, this.array = e6;
    }
    r1.prototype.run = function() {
      this.fun.apply(null, this.array);
    };
    dt.title = "browser";
    dt.browser = true;
    dt.env = {};
    dt.argv = [];
    dt.version = "";
    dt.versions = {};
    function vi() {
    }
    dt.on = vi;
    dt.addListener = vi;
    dt.once = vi;
    dt.off = vi;
    dt.removeListener = vi;
    dt.removeAllListeners = vi;
    dt.emit = vi;
    dt.prependListener = vi;
    dt.prependOnceListener = vi;
    dt.listeners = function(t6) {
      return [];
    };
    dt.binding = function(t6) {
      throw new Error("process.binding is not supported");
    };
    dt.cwd = function() {
      return "/";
    };
    dt.chdir = function(t6) {
      throw new Error("process.chdir is not supported");
    };
    dt.umask = function() {
      return 0;
    };
  });
  pr = {};
  Ja(pr, { default: () => Y_ });
  Oi = R0(() => {
    ot(pr, rn(Rh()));
    Y_ = rn(Rh());
  });
  Fi = T((NI, v1) => {
    var { Symbol: Fo, SymbolAsyncIterator: n1, SymbolIterator: f1 } = Tt(), a1 = Fo("kDestroyed"), o1 = Fo("kIsErrored"), Bh = Fo("kIsReadable"), s1 = Fo("kIsDisturbed");
    function Uo(t6, e6 = false) {
      var r6;
      return !!(t6 && typeof t6.pipe == "function" && typeof t6.on == "function" && (!e6 || typeof t6.pause == "function" && typeof t6.resume == "function") && (!t6._writableState || ((r6 = t6._readableState) === null || r6 === undefined ? undefined : r6.readable) !== false) && (!t6._writableState || t6._readableState));
    }
    function zo(t6) {
      var e6;
      return !!(t6 && typeof t6.write == "function" && typeof t6.on == "function" && (!t6._readableState || ((e6 = t6._writableState) === null || e6 === undefined ? undefined : e6.writable) !== false));
    }
    function X_(t6) {
      return !!(t6 && typeof t6.pipe == "function" && t6._readableState && typeof t6.on == "function" && typeof t6.write == "function");
    }
    function gn(t6) {
      return t6 && (t6._readableState || t6._writableState || typeof t6.write == "function" && typeof t6.on == "function" || typeof t6.pipe == "function" && typeof t6.on == "function");
    }
    function J_(t6, e6) {
      return t6 == null ? false : e6 === true ? typeof t6[n1] == "function" : e6 === false ? typeof t6[f1] == "function" : typeof t6[n1] == "function" || typeof t6[f1] == "function";
    }
    function Ho(t6) {
      if (!gn(t6))
        return null;
      let { _writableState: e6, _readableState: r6 } = t6, o2 = e6 || r6;
      return !!(t6.destroyed || t6[a1] || o2 != null && o2.destroyed);
    }
    function h1(t6) {
      if (!zo(t6))
        return null;
      if (t6.writableEnded === true)
        return true;
      let e6 = t6._writableState;
      return e6 != null && e6.errored ? false : typeof e6?.ended != "boolean" ? null : e6.ended;
    }
    function Q_(t6, e6) {
      if (!zo(t6))
        return null;
      if (t6.writableFinished === true)
        return true;
      let r6 = t6._writableState;
      return r6 != null && r6.errored ? false : typeof r6?.finished != "boolean" ? null : !!(r6.finished || e6 === false && r6.ended === true && r6.length === 0);
    }
    function e8(t6) {
      if (!Uo(t6))
        return null;
      if (t6.readableEnded === true)
        return true;
      let e6 = t6._readableState;
      return !e6 || e6.errored ? false : typeof e6?.ended != "boolean" ? null : e6.ended;
    }
    function u1(t6, e6) {
      if (!Uo(t6))
        return null;
      let r6 = t6._readableState;
      return r6 != null && r6.errored ? false : typeof r6?.endEmitted != "boolean" ? null : !!(r6.endEmitted || e6 === false && r6.ended === true && r6.length === 0);
    }
    function l1(t6) {
      return t6 && t6[Bh] != null ? t6[Bh] : typeof t6?.readable != "boolean" ? null : Ho(t6) ? false : Uo(t6) && t6.readable && !u1(t6);
    }
    function d1(t6) {
      return typeof t6?.writable != "boolean" ? null : Ho(t6) ? false : zo(t6) && t6.writable && !h1(t6);
    }
    function t8(t6, e6) {
      return gn(t6) ? Ho(t6) ? true : !(e6?.readable !== false && l1(t6) || e6?.writable !== false && d1(t6)) : null;
    }
    function r8(t6) {
      var e6, r6;
      return gn(t6) ? t6.writableErrored ? t6.writableErrored : (e6 = (r6 = t6._writableState) === null || r6 === undefined ? undefined : r6.errored) !== null && e6 !== undefined ? e6 : null : null;
    }
    function i8(t6) {
      var e6, r6;
      return gn(t6) ? t6.readableErrored ? t6.readableErrored : (e6 = (r6 = t6._readableState) === null || r6 === undefined ? undefined : r6.errored) !== null && e6 !== undefined ? e6 : null : null;
    }
    function n8(t6) {
      if (!gn(t6))
        return null;
      if (typeof t6.closed == "boolean")
        return t6.closed;
      let { _writableState: e6, _readableState: r6 } = t6;
      return typeof e6?.closed == "boolean" || typeof r6?.closed == "boolean" ? e6?.closed || r6?.closed : typeof t6._closed == "boolean" && c1(t6) ? t6._closed : null;
    }
    function c1(t6) {
      return typeof t6._closed == "boolean" && typeof t6._defaultKeepAlive == "boolean" && typeof t6._removedConnection == "boolean" && typeof t6._removedContLen == "boolean";
    }
    function p1(t6) {
      return typeof t6._sent100 == "boolean" && c1(t6);
    }
    function f8(t6) {
      var e6;
      return typeof t6._consuming == "boolean" && typeof t6._dumped == "boolean" && ((e6 = t6.req) === null || e6 === undefined ? undefined : e6.upgradeOrConnect) === undefined;
    }
    function a8(t6) {
      if (!gn(t6))
        return null;
      let { _writableState: e6, _readableState: r6 } = t6, o2 = e6 || r6;
      return !o2 && p1(t6) || !!(o2 && o2.autoDestroy && o2.emitClose && o2.closed === false);
    }
    function o8(t6) {
      var e6;
      return !!(t6 && ((e6 = t6[s1]) !== null && e6 !== undefined ? e6 : t6.readableDidRead || t6.readableAborted));
    }
    function s8(t6) {
      var e6, r6, o2, f, p2, m2, y2, M, x, S;
      return !!(t6 && ((e6 = (r6 = (o2 = (f = (p2 = (m2 = t6[o1]) !== null && m2 !== undefined ? m2 : t6.readableErrored) !== null && p2 !== undefined ? p2 : t6.writableErrored) !== null && f !== undefined ? f : (y2 = t6._readableState) === null || y2 === undefined ? undefined : y2.errorEmitted) !== null && o2 !== undefined ? o2 : (M = t6._writableState) === null || M === undefined ? undefined : M.errorEmitted) !== null && r6 !== undefined ? r6 : (x = t6._readableState) === null || x === undefined ? undefined : x.errored) !== null && e6 !== undefined ? e6 : (S = t6._writableState) === null || S === undefined ? undefined : S.errored));
    }
    v1.exports = { kDestroyed: a1, isDisturbed: o8, kIsDisturbed: s1, isErrored: s8, kIsErrored: o1, isReadable: l1, kIsReadable: Bh, isClosed: n8, isDestroyed: Ho, isDuplexNodeStream: X_, isFinished: t8, isIterable: J_, isReadableNodeStream: Uo, isReadableEnded: e8, isReadableFinished: u1, isReadableErrored: i8, isNodeStream: gn, isWritable: d1, isWritableNodeStream: zo, isWritableEnded: h1, isWritableFinished: Q_, isWritableErrored: r8, isServerRequest: f8, isServerResponse: p1, willEmitClose: a8 };
  });
  Ui = T((DI, Ih) => {
    var ff = (Oi(), ur(pr)), { AbortError: h8, codes: u8 } = Jt(), { ERR_INVALID_ARG_TYPE: l8, ERR_STREAM_PREMATURE_CLOSE: b1 } = u8, { kEmptyObject: m1, once: g1 } = Gr(), { validateAbortSignal: d8, validateFunction: c8, validateObject: p8 } = pa(), { Promise: v8 } = Tt(), { isClosed: b8, isReadable: y1, isReadableNodeStream: qh, isReadableFinished: w1, isReadableErrored: m8, isWritable: M1, isWritableNodeStream: _1, isWritableFinished: x1, isWritableErrored: g8, isNodeStream: y8, willEmitClose: w8 } = Fi();
    function M8(t6) {
      return t6.setHeader && typeof t6.abort == "function";
    }
    var _8 = () => {
    };
    function S1(t6, e6, r6) {
      var o2, f;
      arguments.length === 2 ? (r6 = e6, e6 = m1) : e6 == null ? e6 = m1 : p8(e6, "options"), c8(r6, "callback"), d8(e6.signal, "options.signal"), r6 = g1(r6);
      let p2 = (o2 = e6.readable) !== null && o2 !== undefined ? o2 : qh(t6), m2 = (f = e6.writable) !== null && f !== undefined ? f : _1(t6);
      if (!y8(t6))
        throw new l8("stream", "Stream", t6);
      let { _writableState: y2, _readableState: M } = t6, x = () => {
        t6.writable || B();
      }, S = w8(t6) && qh(t6) === p2 && _1(t6) === m2, E = x1(t6, false), B = () => {
        E = true, t6.destroyed && (S = false), !(S && (!t6.readable || p2)) && (!p2 || q2) && r6.call(t6);
      }, q2 = w1(t6, false), L = () => {
        q2 = true, t6.destroyed && (S = false), !(S && (!t6.writable || m2)) && (!m2 || E) && r6.call(t6);
      }, ge = (xe) => {
        r6.call(t6, xe);
      }, _e = b8(t6), N = () => {
        _e = true;
        let xe = g8(t6) || m8(t6);
        if (xe && typeof xe != "boolean")
          return r6.call(t6, xe);
        if (p2 && !q2 && qh(t6, true) && !w1(t6, false))
          return r6.call(t6, new b1);
        if (m2 && !E && !x1(t6, false))
          return r6.call(t6, new b1);
        r6.call(t6);
      }, we = () => {
        t6.req.on("finish", B);
      };
      M8(t6) ? (t6.on("complete", B), S || t6.on("abort", N), t6.req ? we() : t6.on("request", we)) : m2 && !y2 && (t6.on("end", x), t6.on("close", x)), !S && typeof t6.aborted == "boolean" && t6.on("aborted", N), t6.on("end", L), t6.on("finish", B), e6.error !== false && t6.on("error", ge), t6.on("close", N), _e ? ff.nextTick(N) : y2 != null && y2.errorEmitted || M != null && M.errorEmitted ? S || ff.nextTick(N) : (!p2 && (!S || y1(t6)) && (E || M1(t6) === false) || !m2 && (!S || M1(t6)) && (q2 || y1(t6) === false) || M && t6.req && t6.aborted) && ff.nextTick(N);
      let ye = () => {
        r6 = _8, t6.removeListener("aborted", N), t6.removeListener("complete", B), t6.removeListener("abort", N), t6.removeListener("request", we), t6.req && t6.req.removeListener("finish", B), t6.removeListener("end", x), t6.removeListener("close", x), t6.removeListener("finish", B), t6.removeListener("end", L), t6.removeListener("error", ge), t6.removeListener("close", N);
      };
      if (e6.signal && !_e) {
        let xe = () => {
          let Re = r6;
          ye(), Re.call(t6, new h8(undefined, { cause: e6.signal.reason }));
        };
        if (e6.signal.aborted)
          ff.nextTick(xe);
        else {
          let Re = r6;
          r6 = g1((...Ee) => {
            e6.signal.removeEventListener("abort", xe), Re.apply(t6, Ee);
          }), e6.signal.addEventListener("abort", xe);
        }
      }
      return ye;
    }
    function x8(t6, e6) {
      return new v8((r6, o2) => {
        S1(t6, e6, (f) => {
          f ? o2(f) : r6();
        });
      });
    }
    Ih.exports = S1;
    Ih.exports.finished = x8;
  });
  k1 = T((PI, Lh) => {
    var B1 = globalThis.AbortController || No().AbortController, { codes: { ERR_INVALID_ARG_TYPE: va, ERR_MISSING_ARGS: S8, ERR_OUT_OF_RANGE: E8 }, AbortError: Jr } = Jt(), { validateAbortSignal: af, validateInteger: A8, validateObject: of } = pa(), R8 = Tt().Symbol("kWeak"), { finished: B8 } = Ui(), { ArrayPrototypePush: q8, MathFloor: I8, Number: T8, NumberIsNaN: k8, Promise: E1, PromiseReject: A1, PromisePrototypeThen: L8, Symbol: q1 } = Tt(), Wo = q1("kEmpty"), R1 = q1("kEof");
    function Ko(t6, e6) {
      if (typeof t6 != "function")
        throw new va("fn", ["Function", "AsyncFunction"], t6);
      e6 != null && of(e6, "options"), e6?.signal != null && af(e6.signal, "options.signal");
      let r6 = 1;
      return e6?.concurrency != null && (r6 = I8(e6.concurrency)), A8(r6, "concurrency", 1), async function* () {
        var f, p2;
        let m2 = new B1, y2 = this, M = [], x = m2.signal, S = { signal: x }, E = () => m2.abort();
        e6 != null && (f = e6.signal) !== null && f !== undefined && f.aborted && E(), e6 == null || (p2 = e6.signal) === null || p2 === undefined || p2.addEventListener("abort", E);
        let B, q2, L = false;
        function ge() {
          L = true;
        }
        async function _e() {
          try {
            for await (let ye of y2) {
              var N;
              if (L)
                return;
              if (x.aborted)
                throw new Jr;
              try {
                ye = t6(ye, S);
              } catch (xe) {
                ye = A1(xe);
              }
              ye !== Wo && (typeof ((N = ye) === null || N === undefined ? undefined : N.catch) == "function" && ye.catch(ge), M.push(ye), B && (B(), B = null), !L && M.length && M.length >= r6 && await new E1((xe) => {
                q2 = xe;
              }));
            }
            M.push(R1);
          } catch (ye) {
            let xe = A1(ye);
            L8(xe, undefined, ge), M.push(xe);
          } finally {
            var we;
            L = true, B && (B(), B = null), e6 == null || (we = e6.signal) === null || we === undefined || we.removeEventListener("abort", E);
          }
        }
        _e();
        try {
          for (;; ) {
            for (;M.length > 0; ) {
              let N = await M[0];
              if (N === R1)
                return;
              if (x.aborted)
                throw new Jr;
              N !== Wo && (yield N), M.shift(), q2 && (q2(), q2 = null);
            }
            await new E1((N) => {
              B = N;
            });
          }
        } finally {
          m2.abort(), L = true, q2 && (q2(), q2 = null);
        }
      }.call(this);
    }
    function N8(t6 = undefined) {
      return t6 != null && of(t6, "options"), t6?.signal != null && af(t6.signal, "options.signal"), async function* () {
        let r6 = 0;
        for await (let f of this) {
          var o2;
          if (t6 != null && (o2 = t6.signal) !== null && o2 !== undefined && o2.aborted)
            throw new Jr({ cause: t6.signal.reason });
          yield [r6++, f];
        }
      }.call(this);
    }
    async function I1(t6, e6 = undefined) {
      for await (let r6 of kh.call(this, t6, e6))
        return true;
      return false;
    }
    async function D8(t6, e6 = undefined) {
      if (typeof t6 != "function")
        throw new va("fn", ["Function", "AsyncFunction"], t6);
      return !await I1.call(this, async (...r6) => !await t6(...r6), e6);
    }
    async function P8(t6, e6) {
      for await (let r6 of kh.call(this, t6, e6))
        return r6;
    }
    async function C8(t6, e6) {
      if (typeof t6 != "function")
        throw new va("fn", ["Function", "AsyncFunction"], t6);
      async function r6(o2, f) {
        return await t6(o2, f), Wo;
      }
      for await (let o2 of Ko.call(this, r6, e6))
        ;
    }
    function kh(t6, e6) {
      if (typeof t6 != "function")
        throw new va("fn", ["Function", "AsyncFunction"], t6);
      async function r6(o2, f) {
        return await t6(o2, f) ? o2 : Wo;
      }
      return Ko.call(this, r6, e6);
    }
    var Th = class extends S8 {
      constructor() {
        super("reduce"), this.message = "Reduce of an empty stream requires an initial value";
      }
    };
    async function O8(t6, e6, r6) {
      var o2;
      if (typeof t6 != "function")
        throw new va("reducer", ["Function", "AsyncFunction"], t6);
      r6 != null && of(r6, "options"), r6?.signal != null && af(r6.signal, "options.signal");
      let f = arguments.length > 1;
      if (r6 != null && (o2 = r6.signal) !== null && o2 !== undefined && o2.aborted) {
        let x = new Jr(undefined, { cause: r6.signal.reason });
        throw this.once("error", () => {
        }), await B8(this.destroy(x)), x;
      }
      let p2 = new B1, m2 = p2.signal;
      if (r6 != null && r6.signal) {
        let x = { once: true, [R8]: this };
        r6.signal.addEventListener("abort", () => p2.abort(), x);
      }
      let y2 = false;
      try {
        for await (let x of this) {
          var M;
          if (y2 = true, r6 != null && (M = r6.signal) !== null && M !== undefined && M.aborted)
            throw new Jr;
          f ? e6 = await t6(e6, x, { signal: m2 }) : (e6 = x, f = true);
        }
        if (!y2 && !f)
          throw new Th;
      } finally {
        p2.abort();
      }
      return e6;
    }
    async function F8(t6) {
      t6 != null && of(t6, "options"), t6?.signal != null && af(t6.signal, "options.signal");
      let e6 = [];
      for await (let o2 of this) {
        var r6;
        if (t6 != null && (r6 = t6.signal) !== null && r6 !== undefined && r6.aborted)
          throw new Jr(undefined, { cause: t6.signal.reason });
        q8(e6, o2);
      }
      return e6;
    }
    function U8(t6, e6) {
      let r6 = Ko.call(this, t6, e6);
      return async function* () {
        for await (let f of r6)
          yield* f;
      }.call(this);
    }
    function T1(t6) {
      if (t6 = T8(t6), k8(t6))
        return 0;
      if (t6 < 0)
        throw new E8("number", ">= 0", t6);
      return t6;
    }
    function z8(t6, e6 = undefined) {
      return e6 != null && of(e6, "options"), e6?.signal != null && af(e6.signal, "options.signal"), t6 = T1(t6), async function* () {
        var o2;
        if (e6 != null && (o2 = e6.signal) !== null && o2 !== undefined && o2.aborted)
          throw new Jr;
        for await (let p2 of this) {
          var f;
          if (e6 != null && (f = e6.signal) !== null && f !== undefined && f.aborted)
            throw new Jr;
          t6-- <= 0 && (yield p2);
        }
      }.call(this);
    }
    function H8(t6, e6 = undefined) {
      return e6 != null && of(e6, "options"), e6?.signal != null && af(e6.signal, "options.signal"), t6 = T1(t6), async function* () {
        var o2;
        if (e6 != null && (o2 = e6.signal) !== null && o2 !== undefined && o2.aborted)
          throw new Jr;
        for await (let p2 of this) {
          var f;
          if (e6 != null && (f = e6.signal) !== null && f !== undefined && f.aborted)
            throw new Jr;
          if (t6-- > 0)
            yield p2;
          else
            return;
        }
      }.call(this);
    }
    Lh.exports.streamReturningOperators = { asIndexedPairs: N8, drop: z8, filter: kh, flatMap: U8, map: Ko, take: H8 };
    Lh.exports.promiseReturningOperators = { every: D8, forEach: C8, reduce: O8, toArray: F8, some: I1, find: P8 };
  });
  yn = T((CI, U1) => {
    var zi = (Oi(), ur(pr)), { aggregateTwoErrors: W8, codes: { ERR_MULTIPLE_CALLBACK: K8 }, AbortError: j8 } = Jt(), { Symbol: D1 } = Tt(), { kDestroyed: Z8, isDestroyed: V8, isFinished: $8, isServerRequest: G8 } = Fi(), P1 = D1("kDestroy"), Nh = D1("kConstruct");
    function C1(t6, e6, r6) {
      t6 && (t6.stack, e6 && !e6.errored && (e6.errored = t6), r6 && !r6.errored && (r6.errored = t6));
    }
    function Y8(t6, e6) {
      let r6 = this._readableState, o2 = this._writableState, f = o2 || r6;
      return o2 && o2.destroyed || r6 && r6.destroyed ? (typeof e6 == "function" && e6(), this) : (C1(t6, o2, r6), o2 && (o2.destroyed = true), r6 && (r6.destroyed = true), f.constructed ? L1(this, t6, e6) : this.once(P1, function(p2) {
        L1(this, W8(p2, t6), e6);
      }), this);
    }
    function L1(t6, e6, r6) {
      let o2 = false;
      function f(p2) {
        if (o2)
          return;
        o2 = true;
        let { _readableState: m2, _writableState: y2 } = t6;
        C1(p2, y2, m2), y2 && (y2.closed = true), m2 && (m2.closed = true), typeof r6 == "function" && r6(p2), p2 ? zi.nextTick(X8, t6, p2) : zi.nextTick(O1, t6);
      }
      try {
        t6._destroy(e6 || null, f);
      } catch (p2) {
        f(p2);
      }
    }
    function X8(t6, e6) {
      Dh(t6, e6), O1(t6);
    }
    function O1(t6) {
      let { _readableState: e6, _writableState: r6 } = t6;
      r6 && (r6.closeEmitted = true), e6 && (e6.closeEmitted = true), (r6 && r6.emitClose || e6 && e6.emitClose) && t6.emit("close");
    }
    function Dh(t6, e6) {
      let { _readableState: r6, _writableState: o2 } = t6;
      o2 && o2.errorEmitted || r6 && r6.errorEmitted || (o2 && (o2.errorEmitted = true), r6 && (r6.errorEmitted = true), t6.emit("error", e6));
    }
    function J8() {
      let t6 = this._readableState, e6 = this._writableState;
      t6 && (t6.constructed = true, t6.closed = false, t6.closeEmitted = false, t6.destroyed = false, t6.errored = null, t6.errorEmitted = false, t6.reading = false, t6.ended = t6.readable === false, t6.endEmitted = t6.readable === false), e6 && (e6.constructed = true, e6.destroyed = false, e6.closed = false, e6.closeEmitted = false, e6.errored = null, e6.errorEmitted = false, e6.finalCalled = false, e6.prefinished = false, e6.ended = e6.writable === false, e6.ending = e6.writable === false, e6.finished = e6.writable === false);
    }
    function Ph(t6, e6, r6) {
      let { _readableState: o2, _writableState: f } = t6;
      if (f && f.destroyed || o2 && o2.destroyed)
        return this;
      o2 && o2.autoDestroy || f && f.autoDestroy ? t6.destroy(e6) : e6 && (e6.stack, f && !f.errored && (f.errored = e6), o2 && !o2.errored && (o2.errored = e6), r6 ? zi.nextTick(Dh, t6, e6) : Dh(t6, e6));
    }
    function Q8(t6, e6) {
      if (typeof t6._construct != "function")
        return;
      let { _readableState: r6, _writableState: o2 } = t6;
      r6 && (r6.constructed = false), o2 && (o2.constructed = false), t6.once(Nh, e6), !(t6.listenerCount(Nh) > 1) && zi.nextTick(e52, t6);
    }
    function e52(t6) {
      let e6 = false;
      function r6(o2) {
        if (e6) {
          Ph(t6, o2 ?? new K8);
          return;
        }
        e6 = true;
        let { _readableState: f, _writableState: p2 } = t6, m2 = p2 || f;
        f && (f.constructed = true), p2 && (p2.constructed = true), m2.destroyed ? t6.emit(P1, o2) : o2 ? Ph(t6, o2, true) : zi.nextTick(t52, t6);
      }
      try {
        t6._construct(r6);
      } catch (o2) {
        r6(o2);
      }
    }
    function t52(t6) {
      t6.emit(Nh);
    }
    function N1(t6) {
      return t6 && t6.setHeader && typeof t6.abort == "function";
    }
    function F1(t6) {
      t6.emit("close");
    }
    function r52(t6, e6) {
      t6.emit("error", e6), zi.nextTick(F1, t6);
    }
    function i5(t6, e6) {
      !t6 || V8(t6) || (!e6 && !$8(t6) && (e6 = new j8), G8(t6) ? (t6.socket = null, t6.destroy(e6)) : N1(t6) ? t6.abort() : N1(t6.req) ? t6.req.abort() : typeof t6.destroy == "function" ? t6.destroy(e6) : typeof t6.close == "function" ? t6.close() : e6 ? zi.nextTick(r52, t6, e6) : zi.nextTick(F1, t6), t6.destroyed || (t6[Z8] = true));
    }
    U1.exports = { construct: Q8, destroyer: i5, destroy: Y8, undestroy: J8, errorOrDestroy: Ph };
  });
  Vo = T((OI, H1) => {
    var { ArrayIsArray: n5, ObjectSetPrototypeOf: z1 } = Tt(), { EventEmitter: jo } = ki();
    function Zo(t6) {
      jo.call(this, t6);
    }
    z1(Zo.prototype, jo.prototype);
    z1(Zo, jo);
    Zo.prototype.pipe = function(t6, e6) {
      let r6 = this;
      function o2(S) {
        t6.writable && t6.write(S) === false && r6.pause && r6.pause();
      }
      r6.on("data", o2);
      function f() {
        r6.readable && r6.resume && r6.resume();
      }
      t6.on("drain", f), !t6._isStdio && (!e6 || e6.end !== false) && (r6.on("end", m2), r6.on("close", y2));
      let p2 = false;
      function m2() {
        p2 || (p2 = true, t6.end());
      }
      function y2() {
        p2 || (p2 = true, typeof t6.destroy == "function" && t6.destroy());
      }
      function M(S) {
        x(), jo.listenerCount(this, "error") === 0 && this.emit("error", S);
      }
      Ch(r6, "error", M), Ch(t6, "error", M);
      function x() {
        r6.removeListener("data", o2), t6.removeListener("drain", f), r6.removeListener("end", m2), r6.removeListener("close", y2), r6.removeListener("error", M), t6.removeListener("error", M), r6.removeListener("end", x), r6.removeListener("close", x), t6.removeListener("close", x);
      }
      return r6.on("end", x), r6.on("close", x), t6.on("close", x), t6.emit("pipe", r6), t6;
    };
    function Ch(t6, e6, r6) {
      if (typeof t6.prependListener == "function")
        return t6.prependListener(e6, r6);
      !t6._events || !t6._events[e6] ? t6.on(e6, r6) : n5(t6._events[e6]) ? t6._events[e6].unshift(r6) : t6._events[e6] = [r6, t6._events[e6]];
    }
    H1.exports = { Stream: Zo, prependListener: Ch };
  });
  Go = T((FI, $o) => {
    var { AbortError: f5, codes: a5 } = Jt(), o5 = Ui(), { ERR_INVALID_ARG_TYPE: W1 } = a5, s5 = (t6, e6) => {
      if (typeof t6 != "object" || !("aborted" in t6))
        throw new W1(e6, "AbortSignal", t6);
    };
    function h5(t6) {
      return !!(t6 && typeof t6.pipe == "function");
    }
    $o.exports.addAbortSignal = function(e6, r6) {
      if (s5(e6, "signal"), !h5(r6))
        throw new W1("stream", "stream.Stream", r6);
      return $o.exports.addAbortSignalNoValidate(e6, r6);
    };
    $o.exports.addAbortSignalNoValidate = function(t6, e6) {
      if (typeof t6 != "object" || !("aborted" in t6))
        return e6;
      let r6 = () => {
        e6.destroy(new f5(undefined, { cause: t6.reason }));
      };
      return t6.aborted ? r6() : (t6.addEventListener("abort", r6), o5(e6, () => t6.removeEventListener("abort", r6))), e6;
    };
  });
  Z1 = T((zI, j1) => {
    var { StringPrototypeSlice: K1, SymbolIterator: u5, TypedArrayPrototypeSet: Yo, Uint8Array: l5 } = Tt(), { Buffer: Oh } = Ut(), { inspect: d5 } = Gr();
    j1.exports = class {
      constructor() {
        this.head = null, this.tail = null, this.length = 0;
      }
      push(e6) {
        let r6 = { data: e6, next: null };
        this.length > 0 ? this.tail.next = r6 : this.head = r6, this.tail = r6, ++this.length;
      }
      unshift(e6) {
        let r6 = { data: e6, next: this.head };
        this.length === 0 && (this.tail = r6), this.head = r6, ++this.length;
      }
      shift() {
        if (this.length === 0)
          return;
        let e6 = this.head.data;
        return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, e6;
      }
      clear() {
        this.head = this.tail = null, this.length = 0;
      }
      join(e6) {
        if (this.length === 0)
          return "";
        let r6 = this.head, o2 = "" + r6.data;
        for (;(r6 = r6.next) !== null; )
          o2 += e6 + r6.data;
        return o2;
      }
      concat(e6) {
        if (this.length === 0)
          return Oh.alloc(0);
        let r6 = Oh.allocUnsafe(e6 >>> 0), o2 = this.head, f = 0;
        for (;o2; )
          Yo(r6, o2.data, f), f += o2.data.length, o2 = o2.next;
        return r6;
      }
      consume(e6, r6) {
        let o2 = this.head.data;
        if (e6 < o2.length) {
          let f = o2.slice(0, e6);
          return this.head.data = o2.slice(e6), f;
        }
        return e6 === o2.length ? this.shift() : r6 ? this._getString(e6) : this._getBuffer(e6);
      }
      first() {
        return this.head.data;
      }
      *[u5]() {
        for (let e6 = this.head;e6; e6 = e6.next)
          yield e6.data;
      }
      _getString(e6) {
        let r6 = "", o2 = this.head, f = 0;
        do {
          let p2 = o2.data;
          if (e6 > p2.length)
            r6 += p2, e6 -= p2.length;
          else {
            e6 === p2.length ? (r6 += p2, ++f, o2.next ? this.head = o2.next : this.head = this.tail = null) : (r6 += K1(p2, 0, e6), this.head = o2, o2.data = K1(p2, e6));
            break;
          }
          ++f;
        } while ((o2 = o2.next) !== null);
        return this.length -= f, r6;
      }
      _getBuffer(e6) {
        let r6 = Oh.allocUnsafe(e6), o2 = e6, f = this.head, p2 = 0;
        do {
          let m2 = f.data;
          if (e6 > m2.length)
            Yo(r6, m2, o2 - e6), e6 -= m2.length;
          else {
            e6 === m2.length ? (Yo(r6, m2, o2 - e6), ++p2, f.next ? this.head = f.next : this.head = this.tail = null) : (Yo(r6, new l5(m2.buffer, m2.byteOffset, e6), o2 - e6), this.head = f, f.data = m2.slice(e6));
            break;
          }
          ++p2;
        } while ((f = f.next) !== null);
        return this.length -= p2, r6;
      }
      [Symbol.for("nodejs.util.inspect.custom")](e6, r6) {
        return d5(this, { ...r6, depth: 0, customInspect: false });
      }
    };
  });
  Xo = T((HI, $1) => {
    var { MathFloor: c5, NumberIsInteger: p5 } = Tt(), { ERR_INVALID_ARG_VALUE: v5 } = Jt().codes;
    function b5(t6, e6, r6) {
      return t6.highWaterMark != null ? t6.highWaterMark : e6 ? t6[r6] : null;
    }
    function V1(t6) {
      return t6 ? 16 : 16 * 1024;
    }
    function m5(t6, e6, r6, o2) {
      let f = b5(e6, o2, r6);
      if (f != null) {
        if (!p5(f) || f < 0) {
          let p2 = o2 ? `options.${r6}` : "options.highWaterMark";
          throw new v5(p2, f);
        }
        return c5(f);
      }
      return V1(t6.objectMode);
    }
    $1.exports = { getHighWaterMark: m5, getDefaultHighWaterMark: V1 };
  });
  Fh = T((WI, J1) => {
    var G1 = (Oi(), ur(pr)), { PromisePrototypeThen: g5, SymbolAsyncIterator: Y1, SymbolIterator: X1 } = Tt(), { Buffer: y5 } = Ut(), { ERR_INVALID_ARG_TYPE: w5, ERR_STREAM_NULL_VALUES: M5 } = Jt().codes;
    function _5(t6, e6, r6) {
      let o2;
      if (typeof e6 == "string" || e6 instanceof y5)
        return new t6({ objectMode: true, ...r6, read() {
          this.push(e6), this.push(null);
        } });
      let f;
      if (e6 && e6[Y1])
        f = true, o2 = e6[Y1]();
      else if (e6 && e6[X1])
        f = false, o2 = e6[X1]();
      else
        throw new w5("iterable", ["Iterable"], e6);
      let p2 = new t6({ objectMode: true, highWaterMark: 1, ...r6 }), m2 = false;
      p2._read = function() {
        m2 || (m2 = true, M());
      }, p2._destroy = function(x, S) {
        g5(y2(x), () => G1.nextTick(S, x), (E) => G1.nextTick(S, E || x));
      };
      async function y2(x) {
        let S = x != null, E = typeof o2.throw == "function";
        if (S && E) {
          let { value: B, done: q2 } = await o2.throw(x);
          if (await B, q2)
            return;
        }
        if (typeof o2.return == "function") {
          let { value: B } = await o2.return();
          await B;
        }
      }
      async function M() {
        for (;; ) {
          try {
            let { value: x, done: S } = f ? await o2.next() : o2.next();
            if (S)
              p2.push(null);
            else {
              let E = x && typeof x.then == "function" ? await x : x;
              if (E === null)
                throw m2 = false, new M5;
              if (p2.push(E))
                continue;
              m2 = false;
            }
          } catch (x) {
            p2.destroy(x);
          }
          break;
        }
      }
      return p2;
    }
    J1.exports = _5;
  });
  ba = T((KI, lv) => {
    var Tr = (Oi(), ur(pr)), { ArrayPrototypeIndexOf: x5, NumberIsInteger: S5, NumberIsNaN: E5, NumberParseInt: A5, ObjectDefineProperties: tv, ObjectKeys: R5, ObjectSetPrototypeOf: rv, Promise: B5, SafeSet: q5, SymbolAsyncIterator: I5, Symbol: T5 } = Tt();
    lv.exports = Le;
    Le.ReadableState = jh;
    var { EventEmitter: k5 } = ki(), { Stream: Hi, prependListener: L5 } = Vo(), { Buffer: Uh } = Ut(), { addAbortSignal: N5 } = Go(), D5 = Ui(), Pe = Gr().debuglog("stream", (t6) => {
      Pe = t6;
    }), P5 = Z1(), hf = yn(), { getHighWaterMark: C5, getDefaultHighWaterMark: O5 } = Xo(), { aggregateTwoErrors: Q1, codes: { ERR_INVALID_ARG_TYPE: F5, ERR_METHOD_NOT_IMPLEMENTED: U5, ERR_OUT_OF_RANGE: z5, ERR_STREAM_PUSH_AFTER_EOF: H5, ERR_STREAM_UNSHIFT_AFTER_END_EVENT: W5 } } = Jt(), { validateObject: K5 } = pa(), wn = T5("kPaused"), { StringDecoder: iv } = co(), j5 = Fh();
    rv(Le.prototype, Hi.prototype);
    rv(Le, Hi);
    var zh = () => {
    }, { errorOrDestroy: sf } = hf;
    function jh(t6, e6, r6) {
      typeof r6 != "boolean" && (r6 = e6 instanceof Qr()), this.objectMode = !!(t6 && t6.objectMode), r6 && (this.objectMode = this.objectMode || !!(t6 && t6.readableObjectMode)), this.highWaterMark = t6 ? C5(this, t6, "readableHighWaterMark", r6) : O5(false), this.buffer = new P5, this.length = 0, this.pipes = [], this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.constructed = true, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this[wn] = null, this.errorEmitted = false, this.emitClose = !t6 || t6.emitClose !== false, this.autoDestroy = !t6 || t6.autoDestroy !== false, this.destroyed = false, this.errored = null, this.closed = false, this.closeEmitted = false, this.defaultEncoding = t6 && t6.defaultEncoding || "utf8", this.awaitDrainWriters = null, this.multiAwaitDrain = false, this.readingMore = false, this.dataEmitted = false, this.decoder = null, this.encoding = null, t6 && t6.encoding && (this.decoder = new iv(t6.encoding), this.encoding = t6.encoding);
    }
    function Le(t6) {
      if (!(this instanceof Le))
        return new Le(t6);
      let e6 = this instanceof Qr();
      this._readableState = new jh(t6, this, e6), t6 && (typeof t6.read == "function" && (this._read = t6.read), typeof t6.destroy == "function" && (this._destroy = t6.destroy), typeof t6.construct == "function" && (this._construct = t6.construct), t6.signal && !e6 && N5(t6.signal, this)), Hi.call(this, t6), hf.construct(this, () => {
        this._readableState.needReadable && Jo(this, this._readableState);
      });
    }
    Le.prototype.destroy = hf.destroy;
    Le.prototype._undestroy = hf.undestroy;
    Le.prototype._destroy = function(t6, e6) {
      e6(t6);
    };
    Le.prototype[k5.captureRejectionSymbol] = function(t6) {
      this.destroy(t6);
    };
    Le.prototype.push = function(t6, e6) {
      return nv(this, t6, e6, false);
    };
    Le.prototype.unshift = function(t6, e6) {
      return nv(this, t6, e6, true);
    };
    function nv(t6, e6, r6, o2) {
      Pe("readableAddChunk", e6);
      let f = t6._readableState, p2;
      if (f.objectMode || (typeof e6 == "string" ? (r6 = r6 || f.defaultEncoding, f.encoding !== r6 && (o2 && f.encoding ? e6 = Uh.from(e6, r6).toString(f.encoding) : (e6 = Uh.from(e6, r6), r6 = ""))) : e6 instanceof Uh ? r6 = "" : Hi._isUint8Array(e6) ? (e6 = Hi._uint8ArrayToBuffer(e6), r6 = "") : e6 != null && (p2 = new F5("chunk", ["string", "Buffer", "Uint8Array"], e6))), p2)
        sf(t6, p2);
      else if (e6 === null)
        f.reading = false, $5(t6, f);
      else if (f.objectMode || e6 && e6.length > 0)
        if (o2)
          if (f.endEmitted)
            sf(t6, new W5);
          else {
            if (f.destroyed || f.errored)
              return false;
            Hh(t6, f, e6, true);
          }
        else if (f.ended)
          sf(t6, new H5);
        else {
          if (f.destroyed || f.errored)
            return false;
          f.reading = false, f.decoder && !r6 ? (e6 = f.decoder.write(e6), f.objectMode || e6.length !== 0 ? Hh(t6, f, e6, false) : Jo(t6, f)) : Hh(t6, f, e6, false);
        }
      else
        o2 || (f.reading = false, Jo(t6, f));
      return !f.ended && (f.length < f.highWaterMark || f.length === 0);
    }
    function Hh(t6, e6, r6, o2) {
      e6.flowing && e6.length === 0 && !e6.sync && t6.listenerCount("data") > 0 ? (e6.multiAwaitDrain ? e6.awaitDrainWriters.clear() : e6.awaitDrainWriters = null, e6.dataEmitted = true, t6.emit("data", r6)) : (e6.length += e6.objectMode ? 1 : r6.length, o2 ? e6.buffer.unshift(r6) : e6.buffer.push(r6), e6.needReadable && Qo(t6)), Jo(t6, e6);
    }
    Le.prototype.isPaused = function() {
      let t6 = this._readableState;
      return t6[wn] === true || t6.flowing === false;
    };
    Le.prototype.setEncoding = function(t6) {
      let e6 = new iv(t6);
      this._readableState.decoder = e6, this._readableState.encoding = this._readableState.decoder.encoding;
      let r6 = this._readableState.buffer, o2 = "";
      for (let f of r6)
        o2 += e6.write(f);
      return r6.clear(), o2 !== "" && r6.push(o2), this._readableState.length = o2.length, this;
    };
    var Z5 = 1073741824;
    function V5(t6) {
      if (t6 > Z5)
        throw new z5("size", "<= 1GiB", t6);
      return t6--, t6 |= t6 >>> 1, t6 |= t6 >>> 2, t6 |= t6 >>> 4, t6 |= t6 >>> 8, t6 |= t6 >>> 16, t6++, t6;
    }
    function ev(t6, e6) {
      return t6 <= 0 || e6.length === 0 && e6.ended ? 0 : e6.objectMode ? 1 : E5(t6) ? e6.flowing && e6.length ? e6.buffer.first().length : e6.length : t6 <= e6.length ? t6 : e6.ended ? e6.length : 0;
    }
    Le.prototype.read = function(t6) {
      Pe("read", t6), t6 === undefined ? t6 = NaN : S5(t6) || (t6 = A5(t6, 10));
      let e6 = this._readableState, r6 = t6;
      if (t6 > e6.highWaterMark && (e6.highWaterMark = V5(t6)), t6 !== 0 && (e6.emittedReadable = false), t6 === 0 && e6.needReadable && ((e6.highWaterMark !== 0 ? e6.length >= e6.highWaterMark : e6.length > 0) || e6.ended))
        return Pe("read: emitReadable", e6.length, e6.ended), e6.length === 0 && e6.ended ? Wh(this) : Qo(this), null;
      if (t6 = ev(t6, e6), t6 === 0 && e6.ended)
        return e6.length === 0 && Wh(this), null;
      let o2 = e6.needReadable;
      if (Pe("need readable", o2), (e6.length === 0 || e6.length - t6 < e6.highWaterMark) && (o2 = true, Pe("length less than watermark", o2)), e6.ended || e6.reading || e6.destroyed || e6.errored || !e6.constructed)
        o2 = false, Pe("reading, ended or constructing", o2);
      else if (o2) {
        Pe("do read"), e6.reading = true, e6.sync = true, e6.length === 0 && (e6.needReadable = true);
        try {
          this._read(e6.highWaterMark);
        } catch (p2) {
          sf(this, p2);
        }
        e6.sync = false, e6.reading || (t6 = ev(r6, e6));
      }
      let f;
      return t6 > 0 ? f = hv(t6, e6) : f = null, f === null ? (e6.needReadable = e6.length <= e6.highWaterMark, t6 = 0) : (e6.length -= t6, e6.multiAwaitDrain ? e6.awaitDrainWriters.clear() : e6.awaitDrainWriters = null), e6.length === 0 && (e6.ended || (e6.needReadable = true), r6 !== t6 && e6.ended && Wh(this)), f !== null && !e6.errorEmitted && !e6.closeEmitted && (e6.dataEmitted = true, this.emit("data", f)), f;
    };
    function $5(t6, e6) {
      if (Pe("onEofChunk"), !e6.ended) {
        if (e6.decoder) {
          let r6 = e6.decoder.end();
          r6 && r6.length && (e6.buffer.push(r6), e6.length += e6.objectMode ? 1 : r6.length);
        }
        e6.ended = true, e6.sync ? Qo(t6) : (e6.needReadable = false, e6.emittedReadable = true, fv(t6));
      }
    }
    function Qo(t6) {
      let e6 = t6._readableState;
      Pe("emitReadable", e6.needReadable, e6.emittedReadable), e6.needReadable = false, e6.emittedReadable || (Pe("emitReadable", e6.flowing), e6.emittedReadable = true, Tr.nextTick(fv, t6));
    }
    function fv(t6) {
      let e6 = t6._readableState;
      Pe("emitReadable_", e6.destroyed, e6.length, e6.ended), !e6.destroyed && !e6.errored && (e6.length || e6.ended) && (t6.emit("readable"), e6.emittedReadable = false), e6.needReadable = !e6.flowing && !e6.ended && e6.length <= e6.highWaterMark, ov(t6);
    }
    function Jo(t6, e6) {
      !e6.readingMore && e6.constructed && (e6.readingMore = true, Tr.nextTick(G5, t6, e6));
    }
    function G5(t6, e6) {
      for (;!e6.reading && !e6.ended && (e6.length < e6.highWaterMark || e6.flowing && e6.length === 0); ) {
        let r6 = e6.length;
        if (Pe("maybeReadMore read 0"), t6.read(0), r6 === e6.length)
          break;
      }
      e6.readingMore = false;
    }
    Le.prototype._read = function(t6) {
      throw new U5("_read()");
    };
    Le.prototype.pipe = function(t6, e6) {
      let r6 = this, o2 = this._readableState;
      o2.pipes.length === 1 && (o2.multiAwaitDrain || (o2.multiAwaitDrain = true, o2.awaitDrainWriters = new q5(o2.awaitDrainWriters ? [o2.awaitDrainWriters] : []))), o2.pipes.push(t6), Pe("pipe count=%d opts=%j", o2.pipes.length, e6);
      let p2 = (!e6 || e6.end !== false) && t6 !== Tr.stdout && t6 !== Tr.stderr ? y2 : _e;
      o2.endEmitted ? Tr.nextTick(p2) : r6.once("end", p2), t6.on("unpipe", m2);
      function m2(N, we) {
        Pe("onunpipe"), N === r6 && we && we.hasUnpiped === false && (we.hasUnpiped = true, S());
      }
      function y2() {
        Pe("onend"), t6.end();
      }
      let M, x = false;
      function S() {
        Pe("cleanup"), t6.removeListener("close", L), t6.removeListener("finish", ge), M && t6.removeListener("drain", M), t6.removeListener("error", q2), t6.removeListener("unpipe", m2), r6.removeListener("end", y2), r6.removeListener("end", _e), r6.removeListener("data", B), x = true, M && o2.awaitDrainWriters && (!t6._writableState || t6._writableState.needDrain) && M();
      }
      function E() {
        x || (o2.pipes.length === 1 && o2.pipes[0] === t6 ? (Pe("false write response, pause", 0), o2.awaitDrainWriters = t6, o2.multiAwaitDrain = false) : o2.pipes.length > 1 && o2.pipes.includes(t6) && (Pe("false write response, pause", o2.awaitDrainWriters.size), o2.awaitDrainWriters.add(t6)), r6.pause()), M || (M = Y5(r6, t6), t6.on("drain", M));
      }
      r6.on("data", B);
      function B(N) {
        Pe("ondata");
        let we = t6.write(N);
        Pe("dest.write", we), we === false && E();
      }
      function q2(N) {
        if (Pe("onerror", N), _e(), t6.removeListener("error", q2), t6.listenerCount("error") === 0) {
          let we = t6._writableState || t6._readableState;
          we && !we.errorEmitted ? sf(t6, N) : t6.emit("error", N);
        }
      }
      L5(t6, "error", q2);
      function L() {
        t6.removeListener("finish", ge), _e();
      }
      t6.once("close", L);
      function ge() {
        Pe("onfinish"), t6.removeListener("close", L), _e();
      }
      t6.once("finish", ge);
      function _e() {
        Pe("unpipe"), r6.unpipe(t6);
      }
      return t6.emit("pipe", r6), t6.writableNeedDrain === true ? o2.flowing && E() : o2.flowing || (Pe("pipe resume"), r6.resume()), t6;
    };
    function Y5(t6, e6) {
      return function() {
        let o2 = t6._readableState;
        o2.awaitDrainWriters === e6 ? (Pe("pipeOnDrain", 1), o2.awaitDrainWriters = null) : o2.multiAwaitDrain && (Pe("pipeOnDrain", o2.awaitDrainWriters.size), o2.awaitDrainWriters.delete(e6)), (!o2.awaitDrainWriters || o2.awaitDrainWriters.size === 0) && t6.listenerCount("data") && t6.resume();
      };
    }
    Le.prototype.unpipe = function(t6) {
      let e6 = this._readableState, r6 = { hasUnpiped: false };
      if (e6.pipes.length === 0)
        return this;
      if (!t6) {
        let f = e6.pipes;
        e6.pipes = [], this.pause();
        for (let p2 = 0;p2 < f.length; p2++)
          f[p2].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      let o2 = x5(e6.pipes, t6);
      return o2 === -1 ? this : (e6.pipes.splice(o2, 1), e6.pipes.length === 0 && this.pause(), t6.emit("unpipe", this, r6), this);
    };
    Le.prototype.on = function(t6, e6) {
      let r6 = Hi.prototype.on.call(this, t6, e6), o2 = this._readableState;
      return t6 === "data" ? (o2.readableListening = this.listenerCount("readable") > 0, o2.flowing !== false && this.resume()) : t6 === "readable" && !o2.endEmitted && !o2.readableListening && (o2.readableListening = o2.needReadable = true, o2.flowing = false, o2.emittedReadable = false, Pe("on readable", o2.length, o2.reading), o2.length ? Qo(this) : o2.reading || Tr.nextTick(X5, this)), r6;
    };
    Le.prototype.addListener = Le.prototype.on;
    Le.prototype.removeListener = function(t6, e6) {
      let r6 = Hi.prototype.removeListener.call(this, t6, e6);
      return t6 === "readable" && Tr.nextTick(av, this), r6;
    };
    Le.prototype.off = Le.prototype.removeListener;
    Le.prototype.removeAllListeners = function(t6) {
      let e6 = Hi.prototype.removeAllListeners.apply(this, arguments);
      return (t6 === "readable" || t6 === undefined) && Tr.nextTick(av, this), e6;
    };
    function av(t6) {
      let e6 = t6._readableState;
      e6.readableListening = t6.listenerCount("readable") > 0, e6.resumeScheduled && e6[wn] === false ? e6.flowing = true : t6.listenerCount("data") > 0 ? t6.resume() : e6.readableListening || (e6.flowing = null);
    }
    function X5(t6) {
      Pe("readable nexttick read 0"), t6.read(0);
    }
    Le.prototype.resume = function() {
      let t6 = this._readableState;
      return t6.flowing || (Pe("resume"), t6.flowing = !t6.readableListening, J5(this, t6)), t6[wn] = false, this;
    };
    function J5(t6, e6) {
      e6.resumeScheduled || (e6.resumeScheduled = true, Tr.nextTick(Q5, t6, e6));
    }
    function Q5(t6, e6) {
      Pe("resume", e6.reading), e6.reading || t6.read(0), e6.resumeScheduled = false, t6.emit("resume"), ov(t6), e6.flowing && !e6.reading && t6.read(0);
    }
    Le.prototype.pause = function() {
      return Pe("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (Pe("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState[wn] = true, this;
    };
    function ov(t6) {
      let e6 = t6._readableState;
      for (Pe("flow", e6.flowing);e6.flowing && t6.read() !== null; )
        ;
    }
    Le.prototype.wrap = function(t6) {
      let e6 = false;
      t6.on("data", (o2) => {
        !this.push(o2) && t6.pause && (e6 = true, t6.pause());
      }), t6.on("end", () => {
        this.push(null);
      }), t6.on("error", (o2) => {
        sf(this, o2);
      }), t6.on("close", () => {
        this.destroy();
      }), t6.on("destroy", () => {
        this.destroy();
      }), this._read = () => {
        e6 && t6.resume && (e6 = false, t6.resume());
      };
      let r6 = R5(t6);
      for (let o2 = 1;o2 < r6.length; o2++) {
        let f = r6[o2];
        this[f] === undefined && typeof t6[f] == "function" && (this[f] = t6[f].bind(t6));
      }
      return this;
    };
    Le.prototype[I5] = function() {
      return sv(this);
    };
    Le.prototype.iterator = function(t6) {
      return t6 !== undefined && K5(t6, "options"), sv(this, t6);
    };
    function sv(t6, e6) {
      typeof t6.read != "function" && (t6 = Le.wrap(t6, { objectMode: true }));
      let r6 = ex(t6, e6);
      return r6.stream = t6, r6;
    }
    async function* ex(t6, e6) {
      let r6 = zh;
      function o2(m2) {
        this === t6 ? (r6(), r6 = zh) : r6 = m2;
      }
      t6.on("readable", o2);
      let f, p2 = D5(t6, { writable: false }, (m2) => {
        f = m2 ? Q1(f, m2) : null, r6(), r6 = zh;
      });
      try {
        for (;; ) {
          let m2 = t6.destroyed ? null : t6.read();
          if (m2 !== null)
            yield m2;
          else {
            if (f)
              throw f;
            if (f === null)
              return;
            await new B5(o2);
          }
        }
      } catch (m2) {
        throw f = Q1(f, m2), f;
      } finally {
        (f || e6?.destroyOnReturn !== false) && (f === undefined || t6._readableState.autoDestroy) ? hf.destroyer(t6, null) : (t6.off("readable", o2), p2());
      }
    }
    tv(Le.prototype, { readable: { __proto__: null, get() {
      let t6 = this._readableState;
      return !!t6 && t6.readable !== false && !t6.destroyed && !t6.errorEmitted && !t6.endEmitted;
    }, set(t6) {
      this._readableState && (this._readableState.readable = !!t6);
    } }, readableDidRead: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.dataEmitted;
    } }, readableAborted: { __proto__: null, enumerable: false, get: function() {
      return !!(this._readableState.readable !== false && (this._readableState.destroyed || this._readableState.errored) && !this._readableState.endEmitted);
    } }, readableHighWaterMark: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } }, readableBuffer: { __proto__: null, enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } }, readableFlowing: { __proto__: null, enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(t6) {
      this._readableState && (this._readableState.flowing = t6);
    } }, readableLength: { __proto__: null, enumerable: false, get() {
      return this._readableState.length;
    } }, readableObjectMode: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.objectMode : false;
    } }, readableEncoding: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.encoding : null;
    } }, errored: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.errored : null;
    } }, closed: { __proto__: null, get() {
      return this._readableState ? this._readableState.closed : false;
    } }, destroyed: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.destroyed : false;
    }, set(t6) {
      !this._readableState || (this._readableState.destroyed = t6);
    } }, readableEnded: { __proto__: null, enumerable: false, get() {
      return this._readableState ? this._readableState.endEmitted : false;
    } } });
    tv(jh.prototype, { pipesCount: { __proto__: null, get() {
      return this.pipes.length;
    } }, paused: { __proto__: null, get() {
      return this[wn] !== false;
    }, set(t6) {
      this[wn] = !!t6;
    } } });
    Le._fromList = hv;
    function hv(t6, e6) {
      if (e6.length === 0)
        return null;
      let r6;
      return e6.objectMode ? r6 = e6.buffer.shift() : !t6 || t6 >= e6.length ? (e6.decoder ? r6 = e6.buffer.join("") : e6.buffer.length === 1 ? r6 = e6.buffer.first() : r6 = e6.buffer.concat(e6.length), e6.buffer.clear()) : r6 = e6.buffer.consume(t6, e6.decoder), r6;
    }
    function Wh(t6) {
      let e6 = t6._readableState;
      Pe("endReadable", e6.endEmitted), e6.endEmitted || (e6.ended = true, Tr.nextTick(tx, e6, t6));
    }
    function tx(t6, e6) {
      if (Pe("endReadableNT", t6.endEmitted, t6.length), !t6.errored && !t6.closeEmitted && !t6.endEmitted && t6.length === 0) {
        if (t6.endEmitted = true, e6.emit("end"), e6.writable && e6.allowHalfOpen === false)
          Tr.nextTick(rx, e6);
        else if (t6.autoDestroy) {
          let r6 = e6._writableState;
          (!r6 || r6.autoDestroy && (r6.finished || r6.writable === false)) && e6.destroy();
        }
      }
    }
    function rx(t6) {
      t6.writable && !t6.writableEnded && !t6.destroyed && t6.end();
    }
    Le.from = function(t6, e6) {
      return j5(Le, t6, e6);
    };
    var Kh;
    function uv() {
      return Kh === undefined && (Kh = {}), Kh;
    }
    Le.fromWeb = function(t6, e6) {
      return uv().newStreamReadableFromReadableStream(t6, e6);
    };
    Le.toWeb = function(t6, e6) {
      return uv().newReadableStreamFromStreamReadable(t6, e6);
    };
    Le.wrap = function(t6, e6) {
      var r6, o2;
      return new Le({ objectMode: (r6 = (o2 = t6.readableObjectMode) !== null && o2 !== undefined ? o2 : t6.objectMode) !== null && r6 !== undefined ? r6 : true, ...e6, destroy(f, p2) {
        hf.destroyer(t6, f), p2(f);
      } }).wrap(t6);
    };
  });
  Jh = T((jI, xv) => {
    var Mn = (Oi(), ur(pr)), { ArrayPrototypeSlice: pv, Error: ix, FunctionPrototypeSymbolHasInstance: vv, ObjectDefineProperty: bv, ObjectDefineProperties: nx, ObjectSetPrototypeOf: mv, StringPrototypeToLowerCase: fx, Symbol: ax, SymbolHasInstance: ox } = Tt();
    xv.exports = st;
    st.WritableState = ya;
    var { EventEmitter: sx } = ki(), ma = Vo().Stream, { Buffer: es } = Ut(), is = yn(), { addAbortSignal: hx } = Go(), { getHighWaterMark: ux, getDefaultHighWaterMark: lx } = Xo(), { ERR_INVALID_ARG_TYPE: dx, ERR_METHOD_NOT_IMPLEMENTED: cx, ERR_MULTIPLE_CALLBACK: gv, ERR_STREAM_CANNOT_PIPE: px, ERR_STREAM_DESTROYED: ga, ERR_STREAM_ALREADY_FINISHED: vx, ERR_STREAM_NULL_VALUES: bx, ERR_STREAM_WRITE_AFTER_END: mx, ERR_UNKNOWN_ENCODING: yv } = Jt().codes, { errorOrDestroy: uf } = is;
    mv(st.prototype, ma.prototype);
    mv(st, ma);
    function $h() {
    }
    var lf = ax("kOnFinished");
    function ya(t6, e6, r6) {
      typeof r6 != "boolean" && (r6 = e6 instanceof Qr()), this.objectMode = !!(t6 && t6.objectMode), r6 && (this.objectMode = this.objectMode || !!(t6 && t6.writableObjectMode)), this.highWaterMark = t6 ? ux(this, t6, "writableHighWaterMark", r6) : lx(false), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      let o2 = !!(t6 && t6.decodeStrings === false);
      this.decodeStrings = !o2, this.defaultEncoding = t6 && t6.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = yx.bind(undefined, e6), this.writecb = null, this.writelen = 0, this.afterWriteTickInfo = null, rs(this), this.pendingcb = 0, this.constructed = true, this.prefinished = false, this.errorEmitted = false, this.emitClose = !t6 || t6.emitClose !== false, this.autoDestroy = !t6 || t6.autoDestroy !== false, this.errored = null, this.closed = false, this.closeEmitted = false, this[lf] = [];
    }
    function rs(t6) {
      t6.buffered = [], t6.bufferedIndex = 0, t6.allBuffers = true, t6.allNoop = true;
    }
    ya.prototype.getBuffer = function() {
      return pv(this.buffered, this.bufferedIndex);
    };
    bv(ya.prototype, "bufferedRequestCount", { __proto__: null, get() {
      return this.buffered.length - this.bufferedIndex;
    } });
    function st(t6) {
      let e6 = this instanceof Qr();
      if (!e6 && !vv(st, this))
        return new st(t6);
      this._writableState = new ya(t6, this, e6), t6 && (typeof t6.write == "function" && (this._write = t6.write), typeof t6.writev == "function" && (this._writev = t6.writev), typeof t6.destroy == "function" && (this._destroy = t6.destroy), typeof t6.final == "function" && (this._final = t6.final), typeof t6.construct == "function" && (this._construct = t6.construct), t6.signal && hx(t6.signal, this)), ma.call(this, t6), is.construct(this, () => {
        let r6 = this._writableState;
        r6.writing || Yh(this, r6), Xh(this, r6);
      });
    }
    bv(st, ox, { __proto__: null, value: function(t6) {
      return vv(this, t6) ? true : this !== st ? false : t6 && t6._writableState instanceof ya;
    } });
    st.prototype.pipe = function() {
      uf(this, new px);
    };
    function wv(t6, e6, r6, o2) {
      let f = t6._writableState;
      if (typeof r6 == "function")
        o2 = r6, r6 = f.defaultEncoding;
      else {
        if (!r6)
          r6 = f.defaultEncoding;
        else if (r6 !== "buffer" && !es.isEncoding(r6))
          throw new yv(r6);
        typeof o2 != "function" && (o2 = $h);
      }
      if (e6 === null)
        throw new bx;
      if (!f.objectMode)
        if (typeof e6 == "string")
          f.decodeStrings !== false && (e6 = es.from(e6, r6), r6 = "buffer");
        else if (e6 instanceof es)
          r6 = "buffer";
        else if (ma._isUint8Array(e6))
          e6 = ma._uint8ArrayToBuffer(e6), r6 = "buffer";
        else
          throw new dx("chunk", ["string", "Buffer", "Uint8Array"], e6);
      let p2;
      return f.ending ? p2 = new mx : f.destroyed && (p2 = new ga("write")), p2 ? (Mn.nextTick(o2, p2), uf(t6, p2, true), p2) : (f.pendingcb++, gx(t6, f, e6, r6, o2));
    }
    st.prototype.write = function(t6, e6, r6) {
      return wv(this, t6, e6, r6) === true;
    };
    st.prototype.cork = function() {
      this._writableState.corked++;
    };
    st.prototype.uncork = function() {
      let t6 = this._writableState;
      t6.corked && (t6.corked--, t6.writing || Yh(this, t6));
    };
    st.prototype.setDefaultEncoding = function(e6) {
      if (typeof e6 == "string" && (e6 = fx(e6)), !es.isEncoding(e6))
        throw new yv(e6);
      return this._writableState.defaultEncoding = e6, this;
    };
    function gx(t6, e6, r6, o2, f) {
      let p2 = e6.objectMode ? 1 : r6.length;
      e6.length += p2;
      let m2 = e6.length < e6.highWaterMark;
      return m2 || (e6.needDrain = true), e6.writing || e6.corked || e6.errored || !e6.constructed ? (e6.buffered.push({ chunk: r6, encoding: o2, callback: f }), e6.allBuffers && o2 !== "buffer" && (e6.allBuffers = false), e6.allNoop && f !== $h && (e6.allNoop = false)) : (e6.writelen = p2, e6.writecb = f, e6.writing = true, e6.sync = true, t6._write(r6, o2, e6.onwrite), e6.sync = false), m2 && !e6.errored && !e6.destroyed;
    }
    function dv(t6, e6, r6, o2, f, p2, m2) {
      e6.writelen = o2, e6.writecb = m2, e6.writing = true, e6.sync = true, e6.destroyed ? e6.onwrite(new ga("write")) : r6 ? t6._writev(f, e6.onwrite) : t6._write(f, p2, e6.onwrite), e6.sync = false;
    }
    function cv(t6, e6, r6, o2) {
      --e6.pendingcb, o2(r6), Gh(e6), uf(t6, r6);
    }
    function yx(t6, e6) {
      let r6 = t6._writableState, o2 = r6.sync, f = r6.writecb;
      if (typeof f != "function") {
        uf(t6, new gv);
        return;
      }
      r6.writing = false, r6.writecb = null, r6.length -= r6.writelen, r6.writelen = 0, e6 ? (e6.stack, r6.errored || (r6.errored = e6), t6._readableState && !t6._readableState.errored && (t6._readableState.errored = e6), o2 ? Mn.nextTick(cv, t6, r6, e6, f) : cv(t6, r6, e6, f)) : (r6.buffered.length > r6.bufferedIndex && Yh(t6, r6), o2 ? r6.afterWriteTickInfo !== null && r6.afterWriteTickInfo.cb === f ? r6.afterWriteTickInfo.count++ : (r6.afterWriteTickInfo = { count: 1, cb: f, stream: t6, state: r6 }, Mn.nextTick(wx, r6.afterWriteTickInfo)) : Mv(t6, r6, 1, f));
    }
    function wx({ stream: t6, state: e6, count: r6, cb: o2 }) {
      return e6.afterWriteTickInfo = null, Mv(t6, e6, r6, o2);
    }
    function Mv(t6, e6, r6, o2) {
      for (!e6.ending && !t6.destroyed && e6.length === 0 && e6.needDrain && (e6.needDrain = false, t6.emit("drain"));r6-- > 0; )
        e6.pendingcb--, o2();
      e6.destroyed && Gh(e6), Xh(t6, e6);
    }
    function Gh(t6) {
      if (t6.writing)
        return;
      for (let f = t6.bufferedIndex;f < t6.buffered.length; ++f) {
        var e6;
        let { chunk: p2, callback: m2 } = t6.buffered[f], y2 = t6.objectMode ? 1 : p2.length;
        t6.length -= y2, m2((e6 = t6.errored) !== null && e6 !== undefined ? e6 : new ga("write"));
      }
      let r6 = t6[lf].splice(0);
      for (let f = 0;f < r6.length; f++) {
        var o2;
        r6[f]((o2 = t6.errored) !== null && o2 !== undefined ? o2 : new ga("end"));
      }
      rs(t6);
    }
    function Yh(t6, e6) {
      if (e6.corked || e6.bufferProcessing || e6.destroyed || !e6.constructed)
        return;
      let { buffered: r6, bufferedIndex: o2, objectMode: f } = e6, p2 = r6.length - o2;
      if (!p2)
        return;
      let m2 = o2;
      if (e6.bufferProcessing = true, p2 > 1 && t6._writev) {
        e6.pendingcb -= p2 - 1;
        let y2 = e6.allNoop ? $h : (x) => {
          for (let S = m2;S < r6.length; ++S)
            r6[S].callback(x);
        }, M = e6.allNoop && m2 === 0 ? r6 : pv(r6, m2);
        M.allBuffers = e6.allBuffers, dv(t6, e6, true, e6.length, M, "", y2), rs(e6);
      } else {
        do {
          let { chunk: y2, encoding: M, callback: x } = r6[m2];
          r6[m2++] = null;
          let S = f ? 1 : y2.length;
          dv(t6, e6, false, S, y2, M, x);
        } while (m2 < r6.length && !e6.writing);
        m2 === r6.length ? rs(e6) : m2 > 256 ? (r6.splice(0, m2), e6.bufferedIndex = 0) : e6.bufferedIndex = m2;
      }
      e6.bufferProcessing = false;
    }
    st.prototype._write = function(t6, e6, r6) {
      if (this._writev)
        this._writev([{ chunk: t6, encoding: e6 }], r6);
      else
        throw new cx("_write()");
    };
    st.prototype._writev = null;
    st.prototype.end = function(t6, e6, r6) {
      let o2 = this._writableState;
      typeof t6 == "function" ? (r6 = t6, t6 = null, e6 = null) : typeof e6 == "function" && (r6 = e6, e6 = null);
      let f;
      if (t6 != null) {
        let p2 = wv(this, t6, e6);
        p2 instanceof ix && (f = p2);
      }
      return o2.corked && (o2.corked = 1, this.uncork()), f || (!o2.errored && !o2.ending ? (o2.ending = true, Xh(this, o2, true), o2.ended = true) : o2.finished ? f = new vx("end") : o2.destroyed && (f = new ga("end"))), typeof r6 == "function" && (f || o2.finished ? Mn.nextTick(r6, f) : o2[lf].push(r6)), this;
    };
    function ts(t6) {
      return t6.ending && !t6.destroyed && t6.constructed && t6.length === 0 && !t6.errored && t6.buffered.length === 0 && !t6.finished && !t6.writing && !t6.errorEmitted && !t6.closeEmitted;
    }
    function Mx(t6, e6) {
      let r6 = false;
      function o2(f) {
        if (r6) {
          uf(t6, f ?? gv());
          return;
        }
        if (r6 = true, e6.pendingcb--, f) {
          let p2 = e6[lf].splice(0);
          for (let m2 = 0;m2 < p2.length; m2++)
            p2[m2](f);
          uf(t6, f, e6.sync);
        } else
          ts(e6) && (e6.prefinished = true, t6.emit("prefinish"), e6.pendingcb++, Mn.nextTick(Vh, t6, e6));
      }
      e6.sync = true, e6.pendingcb++;
      try {
        t6._final(o2);
      } catch (f) {
        o2(f);
      }
      e6.sync = false;
    }
    function _x(t6, e6) {
      !e6.prefinished && !e6.finalCalled && (typeof t6._final == "function" && !e6.destroyed ? (e6.finalCalled = true, Mx(t6, e6)) : (e6.prefinished = true, t6.emit("prefinish")));
    }
    function Xh(t6, e6, r6) {
      ts(e6) && (_x(t6, e6), e6.pendingcb === 0 && (r6 ? (e6.pendingcb++, Mn.nextTick((o2, f) => {
        ts(f) ? Vh(o2, f) : f.pendingcb--;
      }, t6, e6)) : ts(e6) && (e6.pendingcb++, Vh(t6, e6))));
    }
    function Vh(t6, e6) {
      e6.pendingcb--, e6.finished = true;
      let r6 = e6[lf].splice(0);
      for (let o2 = 0;o2 < r6.length; o2++)
        r6[o2]();
      if (t6.emit("finish"), e6.autoDestroy) {
        let o2 = t6._readableState;
        (!o2 || o2.autoDestroy && (o2.endEmitted || o2.readable === false)) && t6.destroy();
      }
    }
    nx(st.prototype, { closed: { __proto__: null, get() {
      return this._writableState ? this._writableState.closed : false;
    } }, destroyed: { __proto__: null, get() {
      return this._writableState ? this._writableState.destroyed : false;
    }, set(t6) {
      this._writableState && (this._writableState.destroyed = t6);
    } }, writable: { __proto__: null, get() {
      let t6 = this._writableState;
      return !!t6 && t6.writable !== false && !t6.destroyed && !t6.errored && !t6.ending && !t6.ended;
    }, set(t6) {
      this._writableState && (this._writableState.writable = !!t6);
    } }, writableFinished: { __proto__: null, get() {
      return this._writableState ? this._writableState.finished : false;
    } }, writableObjectMode: { __proto__: null, get() {
      return this._writableState ? this._writableState.objectMode : false;
    } }, writableBuffer: { __proto__: null, get() {
      return this._writableState && this._writableState.getBuffer();
    } }, writableEnded: { __proto__: null, get() {
      return this._writableState ? this._writableState.ending : false;
    } }, writableNeedDrain: { __proto__: null, get() {
      let t6 = this._writableState;
      return t6 ? !t6.destroyed && !t6.ending && t6.needDrain : false;
    } }, writableHighWaterMark: { __proto__: null, get() {
      return this._writableState && this._writableState.highWaterMark;
    } }, writableCorked: { __proto__: null, get() {
      return this._writableState ? this._writableState.corked : 0;
    } }, writableLength: { __proto__: null, get() {
      return this._writableState && this._writableState.length;
    } }, errored: { __proto__: null, enumerable: false, get() {
      return this._writableState ? this._writableState.errored : null;
    } }, writableAborted: { __proto__: null, enumerable: false, get: function() {
      return !!(this._writableState.writable !== false && (this._writableState.destroyed || this._writableState.errored) && !this._writableState.finished);
    } } });
    var xx = is.destroy;
    st.prototype.destroy = function(t6, e6) {
      let r6 = this._writableState;
      return !r6.destroyed && (r6.bufferedIndex < r6.buffered.length || r6[lf].length) && Mn.nextTick(Gh, r6), xx.call(this, t6, e6), this;
    };
    st.prototype._undestroy = is.undestroy;
    st.prototype._destroy = function(t6, e6) {
      e6(t6);
    };
    st.prototype[sx.captureRejectionSymbol] = function(t6) {
      this.destroy(t6);
    };
    var Zh;
    function _v() {
      return Zh === undefined && (Zh = {}), Zh;
    }
    st.fromWeb = function(t6, e6) {
      return _v().newStreamWritableFromWritableStream(t6, e6);
    };
    st.toWeb = function(t6) {
      return _v().newWritableStreamFromStreamWritable(t6);
    };
  });
  Dv = T((ZI, Nv) => {
    var Qh = (Oi(), ur(pr)), Sx = Ut(), { isReadable: Ex, isWritable: Ax, isIterable: Sv, isNodeStream: Rx, isReadableNodeStream: Ev, isWritableNodeStream: Av, isDuplexNodeStream: Bx } = Fi(), Rv = Ui(), { AbortError: Lv, codes: { ERR_INVALID_ARG_TYPE: qx, ERR_INVALID_RETURN_VALUE: Bv } } = Jt(), { destroyer: df } = yn(), Ix = Qr(), Tx = ba(), { createDeferredPromise: qv } = Gr(), Iv = Fh(), Tv = globalThis.Blob || Sx.Blob, kx = typeof Tv < "u" ? function(e6) {
      return e6 instanceof Tv;
    } : function(e6) {
      return false;
    }, Lx = globalThis.AbortController || No().AbortController, { FunctionPrototypeCall: kv } = Tt(), _n = class extends Ix {
      constructor(e6) {
        super(e6), e6?.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), e6?.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true);
      }
    };
    Nv.exports = function t(e6, r6) {
      if (Bx(e6))
        return e6;
      if (Ev(e6))
        return ns({ readable: e6 });
      if (Av(e6))
        return ns({ writable: e6 });
      if (Rx(e6))
        return ns({ writable: false, readable: false });
      if (typeof e6 == "function") {
        let { value: f, write: p2, final: m2, destroy: y2 } = Nx(e6);
        if (Sv(f))
          return Iv(_n, f, { objectMode: true, write: p2, final: m2, destroy: y2 });
        let M = f?.then;
        if (typeof M == "function") {
          let x, S = kv(M, f, (E) => {
            if (E != null)
              throw new Bv("nully", "body", E);
          }, (E) => {
            df(x, E);
          });
          return x = new _n({ objectMode: true, readable: false, write: p2, final(E) {
            m2(async () => {
              try {
                await S, Qh.nextTick(E, null);
              } catch (B) {
                Qh.nextTick(E, B);
              }
            });
          }, destroy: y2 });
        }
        throw new Bv("Iterable, AsyncIterable or AsyncFunction", r6, f);
      }
      if (kx(e6))
        return t(e6.arrayBuffer());
      if (Sv(e6))
        return Iv(_n, e6, { objectMode: true, writable: false });
      if (typeof e6?.writable == "object" || typeof e6?.readable == "object") {
        let f = e6 != null && e6.readable ? Ev(e6?.readable) ? e6?.readable : t(e6.readable) : undefined, p2 = e6 != null && e6.writable ? Av(e6?.writable) ? e6?.writable : t(e6.writable) : undefined;
        return ns({ readable: f, writable: p2 });
      }
      let o2 = e6?.then;
      if (typeof o2 == "function") {
        let f;
        return kv(o2, e6, (p2) => {
          p2 != null && f.push(p2), f.push(null);
        }, (p2) => {
          df(f, p2);
        }), f = new _n({ objectMode: true, writable: false, read() {
        } });
      }
      throw new qx(r6, ["Blob", "ReadableStream", "WritableStream", "Stream", "Iterable", "AsyncIterable", "Function", "{ readable, writable } pair", "Promise"], e6);
    };
    function Nx(t6) {
      let { promise: e6, resolve: r6 } = qv(), o2 = new Lx, f = o2.signal;
      return { value: t6(async function* () {
        for (;; ) {
          let m2 = e6;
          e6 = null;
          let { chunk: y2, done: M, cb: x } = await m2;
          if (Qh.nextTick(x), M)
            return;
          if (f.aborted)
            throw new Lv(undefined, { cause: f.reason });
          ({ promise: e6, resolve: r6 } = qv()), yield y2;
        }
      }(), { signal: f }), write(m2, y2, M) {
        let x = r6;
        r6 = null, x({ chunk: m2, done: false, cb: M });
      }, final(m2) {
        let y2 = r6;
        r6 = null, y2({ done: true, cb: m2 });
      }, destroy(m2, y2) {
        o2.abort(), y2(m2);
      } };
    }
    function ns(t6) {
      let e6 = t6.readable && typeof t6.readable.read != "function" ? Tx.wrap(t6.readable) : t6.readable, r6 = t6.writable, o2 = !!Ex(e6), f = !!Ax(r6), p2, m2, y2, M, x;
      function S(E) {
        let B = M;
        M = null, B ? B(E) : E ? x.destroy(E) : !o2 && !f && x.destroy();
      }
      return x = new _n({ readableObjectMode: !!(e6 != null && e6.readableObjectMode), writableObjectMode: !!(r6 != null && r6.writableObjectMode), readable: o2, writable: f }), f && (Rv(r6, (E) => {
        f = false, E && df(e6, E), S(E);
      }), x._write = function(E, B, q2) {
        r6.write(E, B) ? q2() : p2 = q2;
      }, x._final = function(E) {
        r6.end(), m2 = E;
      }, r6.on("drain", function() {
        if (p2) {
          let E = p2;
          p2 = null, E();
        }
      }), r6.on("finish", function() {
        if (m2) {
          let E = m2;
          m2 = null, E();
        }
      })), o2 && (Rv(e6, (E) => {
        o2 = false, E && df(e6, E), S(E);
      }), e6.on("readable", function() {
        if (y2) {
          let E = y2;
          y2 = null, E();
        }
      }), e6.on("end", function() {
        x.push(null);
      }), x._read = function() {
        for (;; ) {
          let E = e6.read();
          if (E === null) {
            y2 = x._read;
            return;
          }
          if (!x.push(E))
            return;
        }
      }), x._destroy = function(E, B) {
        !E && M !== null && (E = new Lv), y2 = null, p2 = null, m2 = null, M === null ? B(E) : (M = B, df(r6, E), df(e6, E));
      }, x;
    }
  });
  Qr = T((VI, Ov) => {
    var { ObjectDefineProperties: Dx, ObjectGetOwnPropertyDescriptor: bi, ObjectKeys: Px, ObjectSetPrototypeOf: Pv } = Tt();
    Ov.exports = kr;
    var ru = ba(), vr = Jh();
    Pv(kr.prototype, ru.prototype);
    Pv(kr, ru);
    {
      let t6 = Px(vr.prototype);
      for (let e6 = 0;e6 < t6.length; e6++) {
        let r6 = t6[e6];
        kr.prototype[r6] || (kr.prototype[r6] = vr.prototype[r6]);
      }
    }
    function kr(t6) {
      if (!(this instanceof kr))
        return new kr(t6);
      ru.call(this, t6), vr.call(this, t6), t6 ? (this.allowHalfOpen = t6.allowHalfOpen !== false, t6.readable === false && (this._readableState.readable = false, this._readableState.ended = true, this._readableState.endEmitted = true), t6.writable === false && (this._writableState.writable = false, this._writableState.ending = true, this._writableState.ended = true, this._writableState.finished = true)) : this.allowHalfOpen = true;
    }
    Dx(kr.prototype, { writable: { __proto__: null, ...bi(vr.prototype, "writable") }, writableHighWaterMark: { __proto__: null, ...bi(vr.prototype, "writableHighWaterMark") }, writableObjectMode: { __proto__: null, ...bi(vr.prototype, "writableObjectMode") }, writableBuffer: { __proto__: null, ...bi(vr.prototype, "writableBuffer") }, writableLength: { __proto__: null, ...bi(vr.prototype, "writableLength") }, writableFinished: { __proto__: null, ...bi(vr.prototype, "writableFinished") }, writableCorked: { __proto__: null, ...bi(vr.prototype, "writableCorked") }, writableEnded: { __proto__: null, ...bi(vr.prototype, "writableEnded") }, writableNeedDrain: { __proto__: null, ...bi(vr.prototype, "writableNeedDrain") }, destroyed: { __proto__: null, get() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set(t6) {
      this._readableState && this._writableState && (this._readableState.destroyed = t6, this._writableState.destroyed = t6);
    } } });
    var eu;
    function Cv() {
      return eu === undefined && (eu = {}), eu;
    }
    kr.fromWeb = function(t6, e6) {
      return Cv().newStreamDuplexFromReadableWritablePair(t6, e6);
    };
    kr.toWeb = function(t6) {
      return Cv().newReadableWritablePairFromDuplex(t6);
    };
    var tu;
    kr.from = function(t6) {
      return tu || (tu = Dv()), tu(t6, "body");
    };
  });
  fu = T(($I, Uv) => {
    var { ObjectSetPrototypeOf: Fv, Symbol: Cx } = Tt();
    Uv.exports = mi;
    var { ERR_METHOD_NOT_IMPLEMENTED: Ox } = Jt().codes, nu = Qr(), { getHighWaterMark: Fx } = Xo();
    Fv(mi.prototype, nu.prototype);
    Fv(mi, nu);
    var wa = Cx("kCallback");
    function mi(t6) {
      if (!(this instanceof mi))
        return new mi(t6);
      let e6 = t6 ? Fx(this, t6, "readableHighWaterMark", true) : null;
      e6 === 0 && (t6 = { ...t6, highWaterMark: null, readableHighWaterMark: e6, writableHighWaterMark: t6.writableHighWaterMark || 0 }), nu.call(this, t6), this._readableState.sync = false, this[wa] = null, t6 && (typeof t6.transform == "function" && (this._transform = t6.transform), typeof t6.flush == "function" && (this._flush = t6.flush)), this.on("prefinish", Ux);
    }
    function iu(t6) {
      typeof this._flush == "function" && !this.destroyed ? this._flush((e6, r6) => {
        if (e6) {
          t6 ? t6(e6) : this.destroy(e6);
          return;
        }
        r6 != null && this.push(r6), this.push(null), t6 && t6();
      }) : (this.push(null), t6 && t6());
    }
    function Ux() {
      this._final !== iu && iu.call(this);
    }
    mi.prototype._final = iu;
    mi.prototype._transform = function(t6, e6, r6) {
      throw new Ox("_transform()");
    };
    mi.prototype._write = function(t6, e6, r6) {
      let o2 = this._readableState, f = this._writableState, p2 = o2.length;
      this._transform(t6, e6, (m2, y2) => {
        if (m2) {
          r6(m2);
          return;
        }
        y2 != null && this.push(y2), f.ended || p2 === o2.length || o2.length < o2.highWaterMark ? r6() : this[wa] = r6;
      });
    };
    mi.prototype._read = function() {
      if (this[wa]) {
        let t6 = this[wa];
        this[wa] = null, t6();
      }
    };
  });
  ou = T((GI, Hv) => {
    var { ObjectSetPrototypeOf: zv } = Tt();
    Hv.exports = cf;
    var au = fu();
    zv(cf.prototype, au.prototype);
    zv(cf, au);
    function cf(t6) {
      if (!(this instanceof cf))
        return new cf(t6);
      au.call(this, t6);
    }
    cf.prototype._transform = function(t6, e6, r6) {
      r6(null, t6);
    };
  });
  os = T((YI, Gv) => {
    var fs = (Oi(), ur(pr)), { ArrayIsArray: zx, Promise: Hx, SymbolAsyncIterator: Wx } = Tt(), as = Ui(), { once: Kx } = Gr(), jx = yn(), Wv = Qr(), { aggregateTwoErrors: Zx, codes: { ERR_INVALID_ARG_TYPE: Vv, ERR_INVALID_RETURN_VALUE: su, ERR_MISSING_ARGS: Vx, ERR_STREAM_DESTROYED: $x, ERR_STREAM_PREMATURE_CLOSE: Gx }, AbortError: Yx } = Jt(), { validateFunction: Xx, validateAbortSignal: Jx } = pa(), { isIterable: pf, isReadable: hu, isReadableNodeStream: du, isNodeStream: Kv } = Fi(), Qx = globalThis.AbortController || No().AbortController, uu, lu;
    function jv(t6, e6, r6) {
      let o2 = false;
      t6.on("close", () => {
        o2 = true;
      });
      let f = as(t6, { readable: e6, writable: r6 }, (p2) => {
        o2 = !p2;
      });
      return { destroy: (p2) => {
        o2 || (o2 = true, jx.destroyer(t6, p2 || new $x("pipe")));
      }, cleanup: f };
    }
    function e7(t6) {
      return Xx(t6[t6.length - 1], "streams[stream.length - 1]"), t6.pop();
    }
    function t7(t6) {
      if (pf(t6))
        return t6;
      if (du(t6))
        return r7(t6);
      throw new Vv("val", ["Readable", "Iterable", "AsyncIterable"], t6);
    }
    async function* r7(t6) {
      lu || (lu = ba()), yield* lu.prototype[Wx].call(t6);
    }
    async function Zv(t6, e6, r6, { end: o2 }) {
      let f, p2 = null, m2 = (x) => {
        if (x && (f = x), p2) {
          let S = p2;
          p2 = null, S();
        }
      }, y2 = () => new Hx((x, S) => {
        f ? S(f) : p2 = () => {
          f ? S(f) : x();
        };
      });
      e6.on("drain", m2);
      let M = as(e6, { readable: false }, m2);
      try {
        e6.writableNeedDrain && await y2();
        for await (let x of t6)
          e6.write(x) || await y2();
        o2 && e6.end(), await y2(), r6();
      } catch (x) {
        r6(f !== x ? Zx(f, x) : x);
      } finally {
        M(), e6.off("drain", m2);
      }
    }
    function i7(...t6) {
      return $v(t6, Kx(e7(t6)));
    }
    function $v(t6, e6, r6) {
      if (t6.length === 1 && zx(t6[0]) && (t6 = t6[0]), t6.length < 2)
        throw new Vx("streams");
      let o2 = new Qx, f = o2.signal, p2 = r6?.signal, m2 = [];
      Jx(p2, "options.signal");
      function y2() {
        q2(new Yx);
      }
      p2?.addEventListener("abort", y2);
      let M, x, S = [], E = 0;
      function B(N) {
        q2(N, --E === 0);
      }
      function q2(N, we) {
        if (N && (!M || M.code === "ERR_STREAM_PREMATURE_CLOSE") && (M = N), !(!M && !we)) {
          for (;S.length; )
            S.shift()(M);
          p2?.removeEventListener("abort", y2), o2.abort(), we && (M || m2.forEach((ye) => ye()), fs.nextTick(e6, M, x));
        }
      }
      let L;
      for (let N = 0;N < t6.length; N++) {
        let we = t6[N], ye = N < t6.length - 1, xe = N > 0, Re = ye || r6?.end !== false, Ee = N === t6.length - 1;
        if (Kv(we)) {
          let Ae = function(P) {
            P && P.name !== "AbortError" && P.code !== "ERR_STREAM_PREMATURE_CLOSE" && B(P);
          };
          var _e = Ae;
          if (Re) {
            let { destroy: P, cleanup: Se } = jv(we, ye, xe);
            S.push(P), hu(we) && Ee && m2.push(Se);
          }
          we.on("error", Ae), hu(we) && Ee && m2.push(() => {
            we.removeListener("error", Ae);
          });
        }
        if (N === 0)
          if (typeof we == "function") {
            if (L = we({ signal: f }), !pf(L))
              throw new su("Iterable, AsyncIterable or Stream", "source", L);
          } else
            pf(we) || du(we) ? L = we : L = Wv.from(we);
        else if (typeof we == "function")
          if (L = t7(L), L = we(L, { signal: f }), ye) {
            if (!pf(L, true))
              throw new su("AsyncIterable", `transform[${N - 1}]`, L);
          } else {
            var ge;
            uu || (uu = ou());
            let Ae = new uu({ objectMode: true }), P = (ge = L) === null || ge === undefined ? undefined : ge.then;
            if (typeof P == "function")
              E++, P.call(L, (i2) => {
                x = i2, i2 != null && Ae.write(i2), Re && Ae.end(), fs.nextTick(B);
              }, (i2) => {
                Ae.destroy(i2), fs.nextTick(B, i2);
              });
            else if (pf(L, true))
              E++, Zv(L, Ae, B, { end: Re });
            else
              throw new su("AsyncIterable or Promise", "destination", L);
            L = Ae;
            let { destroy: Se, cleanup: v } = jv(L, false, true);
            S.push(Se), Ee && m2.push(v);
          }
        else if (Kv(we)) {
          if (du(L)) {
            E += 2;
            let Ae = n7(L, we, B, { end: Re });
            hu(we) && Ee && m2.push(Ae);
          } else if (pf(L))
            E++, Zv(L, we, B, { end: Re });
          else
            throw new Vv("val", ["Readable", "Iterable", "AsyncIterable"], L);
          L = we;
        } else
          L = Wv.from(we);
      }
      return (f != null && f.aborted || p2 != null && p2.aborted) && fs.nextTick(y2), L;
    }
    function n7(t6, e6, r6, { end: o2 }) {
      let f = false;
      return e6.on("close", () => {
        f || r6(new Gx);
      }), t6.pipe(e6, { end: o2 }), o2 ? t6.once("end", () => {
        f = true, e6.end();
      }) : r6(), as(t6, { readable: true, writable: false }, (p2) => {
        let m2 = t6._readableState;
        p2 && p2.code === "ERR_STREAM_PREMATURE_CLOSE" && m2 && m2.ended && !m2.errored && !m2.errorEmitted ? t6.once("end", r6).once("error", r6) : r6(p2);
      }), as(e6, { readable: false, writable: true }, r6);
    }
    Gv.exports = { pipelineImpl: $v, pipeline: i7 };
  });
  eb = T((XI, Qv) => {
    var { pipeline: f7 } = os(), ss = Qr(), { destroyer: a7 } = yn(), { isNodeStream: o7, isReadable: Yv, isWritable: Xv } = Fi(), { AbortError: s7, codes: { ERR_INVALID_ARG_VALUE: Jv, ERR_MISSING_ARGS: h7 } } = Jt();
    Qv.exports = function(...e6) {
      if (e6.length === 0)
        throw new h7("streams");
      if (e6.length === 1)
        return ss.from(e6[0]);
      let r6 = [...e6];
      if (typeof e6[0] == "function" && (e6[0] = ss.from(e6[0])), typeof e6[e6.length - 1] == "function") {
        let q2 = e6.length - 1;
        e6[q2] = ss.from(e6[q2]);
      }
      for (let q2 = 0;q2 < e6.length; ++q2)
        if (!!o7(e6[q2])) {
          if (q2 < e6.length - 1 && !Yv(e6[q2]))
            throw new Jv(`streams[${q2}]`, r6[q2], "must be readable");
          if (q2 > 0 && !Xv(e6[q2]))
            throw new Jv(`streams[${q2}]`, r6[q2], "must be writable");
        }
      let o2, f, p2, m2, y2;
      function M(q2) {
        let L = m2;
        m2 = null, L ? L(q2) : q2 ? y2.destroy(q2) : !B && !E && y2.destroy();
      }
      let x = e6[0], S = f7(e6, M), E = !!Xv(x), B = !!Yv(S);
      return y2 = new ss({ writableObjectMode: !!(x != null && x.writableObjectMode), readableObjectMode: !!(S != null && S.writableObjectMode), writable: E, readable: B }), E && (y2._write = function(q2, L, ge) {
        x.write(q2, L) ? ge() : o2 = ge;
      }, y2._final = function(q2) {
        x.end(), f = q2;
      }, x.on("drain", function() {
        if (o2) {
          let q2 = o2;
          o2 = null, q2();
        }
      }), S.on("finish", function() {
        if (f) {
          let q2 = f;
          f = null, q2();
        }
      })), B && (S.on("readable", function() {
        if (p2) {
          let q2 = p2;
          p2 = null, q2();
        }
      }), S.on("end", function() {
        y2.push(null);
      }), y2._read = function() {
        for (;; ) {
          let q2 = S.read();
          if (q2 === null) {
            p2 = y2._read;
            return;
          }
          if (!y2.push(q2))
            return;
        }
      }), y2._destroy = function(q2, L) {
        !q2 && m2 !== null && (q2 = new s7), p2 = null, o2 = null, f = null, m2 === null ? L(q2) : (m2 = L, a7(S, q2));
      }, y2;
    };
  });
  cu = T((JI, tb) => {
    var { ArrayPrototypePop: u7, Promise: l7 } = Tt(), { isIterable: d7, isNodeStream: c7 } = Fi(), { pipelineImpl: p7 } = os(), { finished: v7 } = Ui();
    function b7(...t6) {
      return new l7((e6, r6) => {
        let o2, f, p2 = t6[t6.length - 1];
        if (p2 && typeof p2 == "object" && !c7(p2) && !d7(p2)) {
          let m2 = u7(t6);
          o2 = m2.signal, f = m2.end;
        }
        p7(t6, (m2, y2) => {
          m2 ? r6(m2) : e6(y2);
        }, { signal: o2, end: f });
      });
    }
    tb.exports = { finished: v7, pipeline: b7 };
  });
  lb = T((QI, ub) => {
    var { Buffer: m7 } = Ut(), { ObjectDefineProperty: gi, ObjectKeys: nb, ReflectApply: fb } = Tt(), { promisify: { custom: ab } } = Gr(), { streamReturningOperators: rb, promiseReturningOperators: ib } = k1(), { codes: { ERR_ILLEGAL_CONSTRUCTOR: ob } } = Jt(), g7 = eb(), { pipeline: sb } = os(), { destroyer: y7 } = yn(), hb = Ui(), pu = cu(), vu = Fi(), ct = ub.exports = Vo().Stream;
    ct.isDisturbed = vu.isDisturbed;
    ct.isErrored = vu.isErrored;
    ct.isReadable = vu.isReadable;
    ct.Readable = ba();
    for (let t6 of nb(rb)) {
      let r6 = function(...o2) {
        if (new.target)
          throw ob();
        return ct.Readable.from(fb(e6, this, o2));
      };
      M7 = r6;
      let e6 = rb[t6];
      gi(r6, "name", { __proto__: null, value: e6.name }), gi(r6, "length", { __proto__: null, value: e6.length }), gi(ct.Readable.prototype, t6, { __proto__: null, value: r6, enumerable: false, configurable: true, writable: true });
    }
    var M7;
    for (let t6 of nb(ib)) {
      let r6 = function(...f) {
        if (new.target)
          throw ob();
        return fb(e6, this, f);
      };
      M7 = r6;
      let e6 = ib[t6];
      gi(r6, "name", { __proto__: null, value: e6.name }), gi(r6, "length", { __proto__: null, value: e6.length }), gi(ct.Readable.prototype, t6, { __proto__: null, value: r6, enumerable: false, configurable: true, writable: true });
    }
    var M7;
    ct.Writable = Jh();
    ct.Duplex = Qr();
    ct.Transform = fu();
    ct.PassThrough = ou();
    ct.pipeline = sb;
    var { addAbortSignal: w7 } = Go();
    ct.addAbortSignal = w7;
    ct.finished = hb;
    ct.destroy = y7;
    ct.compose = g7;
    gi(ct, "promises", { __proto__: null, configurable: true, enumerable: true, get() {
      return pu;
    } });
    gi(sb, ab, { __proto__: null, enumerable: true, get() {
      return pu.pipeline;
    } });
    gi(hb, ab, { __proto__: null, enumerable: true, get() {
      return pu.finished;
    } });
    ct.Stream = ct;
    ct._isUint8Array = function(e6) {
      return e6 instanceof Uint8Array;
    };
    ct._uint8ArrayToBuffer = function(e6) {
      return m7.from(e6.buffer, e6.byteOffset, e6.byteLength);
    };
  });
  bu = T((eT, pt) => {
    var Lt = lb(), _7 = cu(), x7 = Lt.Readable.destroy;
    pt.exports = Lt.Readable;
    pt.exports._uint8ArrayToBuffer = Lt._uint8ArrayToBuffer;
    pt.exports._isUint8Array = Lt._isUint8Array;
    pt.exports.isDisturbed = Lt.isDisturbed;
    pt.exports.isErrored = Lt.isErrored;
    pt.exports.isReadable = Lt.isReadable;
    pt.exports.Readable = Lt.Readable;
    pt.exports.Writable = Lt.Writable;
    pt.exports.Duplex = Lt.Duplex;
    pt.exports.Transform = Lt.Transform;
    pt.exports.PassThrough = Lt.PassThrough;
    pt.exports.addAbortSignal = Lt.addAbortSignal;
    pt.exports.finished = Lt.finished;
    pt.exports.destroy = Lt.destroy;
    pt.exports.destroy = x7;
    pt.exports.pipeline = Lt.pipeline;
    pt.exports.compose = Lt.compose;
    Object.defineProperty(Lt, "promises", { configurable: true, enumerable: true, get() {
      return _7;
    } });
    pt.exports.Stream = Lt.Stream;
    pt.exports.default = pt.exports;
  });
  vf = {};
  Ja(vf, { default: () => S7 });
  db = R0(() => {
    ot(vf, rn(bu()));
    S7 = rn(bu());
  });
  yi = T((rT, vb) => {
    var cb = Te().Buffer, pb = (db(), ur(vf)).Transform, E7 = co().StringDecoder, A7 = Ie();
    function Lr(t6) {
      pb.call(this), this.hashMode = typeof t6 == "string", this.hashMode ? this[t6] = this._finalOrDigest : this.final = this._finalOrDigest, this._final && (this.__final = this._final, this._final = null), this._decoder = null, this._encoding = null;
    }
    A7(Lr, pb);
    Lr.prototype.update = function(t6, e6, r6) {
      typeof t6 == "string" && (t6 = cb.from(t6, e6));
      var o2 = this._update(t6);
      return this.hashMode ? this : (r6 && (o2 = this._toString(o2, r6)), o2);
    };
    Lr.prototype.setAutoPadding = function() {
    };
    Lr.prototype.getAuthTag = function() {
      throw new Error("trying to get auth tag in unsupported state");
    };
    Lr.prototype.setAuthTag = function() {
      throw new Error("trying to set auth tag in unsupported state");
    };
    Lr.prototype.setAAD = function() {
      throw new Error("trying to set aad in unsupported state");
    };
    Lr.prototype._transform = function(t6, e6, r6) {
      var o2;
      try {
        this.hashMode ? this._update(t6) : this.push(this._update(t6));
      } catch (f) {
        o2 = f;
      } finally {
        r6(o2);
      }
    };
    Lr.prototype._flush = function(t6) {
      var e6;
      try {
        this.push(this.__final());
      } catch (r6) {
        e6 = r6;
      }
      t6(e6);
    };
    Lr.prototype._finalOrDigest = function(t6) {
      var e6 = this.__final() || cb.alloc(0);
      return t6 && (e6 = this._toString(e6, t6, true)), e6;
    };
    Lr.prototype._toString = function(t6, e6, r6) {
      if (this._decoder || (this._decoder = new E7(e6), this._encoding = e6), this._encoding !== e6)
        throw new Error("can't switch encodings");
      var o2 = this._decoder.write(t6);
      return r6 && (o2 += this._decoder.end()), o2;
    };
    vb.exports = Lr;
  });
  bf = T((iT, mb) => {
    var R7 = Ie(), B7 = Ao(), q7 = Bo(), I7 = ko(), bb = yi();
    function hs(t6) {
      bb.call(this, "digest"), this._hash = t6;
    }
    R7(hs, bb);
    hs.prototype._update = function(t6) {
      this._hash.update(t6);
    };
    hs.prototype._final = function() {
      return this._hash.digest();
    };
    mb.exports = function(e6) {
      return e6 = e6.toLowerCase(), e6 === "md5" ? new B7 : e6 === "rmd160" || e6 === "ripemd160" ? new q7 : new hs(I7(e6));
    };
  });
  wb = T((nT, yb) => {
    var T7 = Ie(), xn = Te().Buffer, gb = yi(), k7 = xn.alloc(128), mf = 64;
    function us(t6, e6) {
      gb.call(this, "digest"), typeof e6 == "string" && (e6 = xn.from(e6)), this._alg = t6, this._key = e6, e6.length > mf ? e6 = t6(e6) : e6.length < mf && (e6 = xn.concat([e6, k7], mf));
      for (var r6 = this._ipad = xn.allocUnsafe(mf), o2 = this._opad = xn.allocUnsafe(mf), f = 0;f < mf; f++)
        r6[f] = e6[f] ^ 54, o2[f] = e6[f] ^ 92;
      this._hash = [r6];
    }
    T7(us, gb);
    us.prototype._update = function(t6) {
      this._hash.push(t6);
    };
    us.prototype._final = function() {
      var t6 = this._alg(xn.concat(this._hash));
      return this._alg(xn.concat([this._opad, t6]));
    };
    yb.exports = us;
  });
  mu = T((fT, Mb) => {
    var L7 = Ao();
    Mb.exports = function(t6) {
      return new L7().update(t6).digest();
    };
  });
  wu = T((aT, xb) => {
    var N7 = Ie(), D7 = wb(), _b = yi(), Ma = Te().Buffer, P7 = mu(), gu = Bo(), yu = ko(), C7 = Ma.alloc(128);
    function _a(t6, e6) {
      _b.call(this, "digest"), typeof e6 == "string" && (e6 = Ma.from(e6));
      var r6 = t6 === "sha512" || t6 === "sha384" ? 128 : 64;
      if (this._alg = t6, this._key = e6, e6.length > r6) {
        var o2 = t6 === "rmd160" ? new gu : yu(t6);
        e6 = o2.update(e6).digest();
      } else
        e6.length < r6 && (e6 = Ma.concat([e6, C7], r6));
      for (var f = this._ipad = Ma.allocUnsafe(r6), p2 = this._opad = Ma.allocUnsafe(r6), m2 = 0;m2 < r6; m2++)
        f[m2] = e6[m2] ^ 54, p2[m2] = e6[m2] ^ 92;
      this._hash = t6 === "rmd160" ? new gu : yu(t6), this._hash.update(f);
    }
    N7(_a, _b);
    _a.prototype._update = function(t6) {
      this._hash.update(t6);
    };
    _a.prototype._final = function() {
      var t6 = this._hash.digest(), e6 = this._alg === "rmd160" ? new gu : yu(this._alg);
      return e6.update(this._opad).update(t6).digest();
    };
    xb.exports = function(e6, r6) {
      return e6 = e6.toLowerCase(), e6 === "rmd160" || e6 === "ripemd160" ? new _a("rmd160", r6) : e6 === "md5" ? new D7(P7, r6) : new _a(e6, r6);
    };
  });
  Mu = T((oT, O7) => {
    O7.exports = { sha224WithRSAEncryption: { sign: "rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, "RSA-SHA224": { sign: "ecdsa/rsa", hash: "sha224", id: "302d300d06096086480165030402040500041c" }, sha256WithRSAEncryption: { sign: "rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, "RSA-SHA256": { sign: "ecdsa/rsa", hash: "sha256", id: "3031300d060960864801650304020105000420" }, sha384WithRSAEncryption: { sign: "rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, "RSA-SHA384": { sign: "ecdsa/rsa", hash: "sha384", id: "3041300d060960864801650304020205000430" }, sha512WithRSAEncryption: { sign: "rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, "RSA-SHA512": { sign: "ecdsa/rsa", hash: "sha512", id: "3051300d060960864801650304020305000440" }, "RSA-SHA1": { sign: "rsa", hash: "sha1", id: "3021300906052b0e03021a05000414" }, "ecdsa-with-SHA1": { sign: "ecdsa", hash: "sha1", id: "" }, sha256: { sign: "ecdsa", hash: "sha256", id: "" }, sha224: { sign: "ecdsa", hash: "sha224", id: "" }, sha384: { sign: "ecdsa", hash: "sha384", id: "" }, sha512: { sign: "ecdsa", hash: "sha512", id: "" }, "DSA-SHA": { sign: "dsa", hash: "sha1", id: "" }, "DSA-SHA1": { sign: "dsa", hash: "sha1", id: "" }, DSA: { sign: "dsa", hash: "sha1", id: "" }, "DSA-WITH-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-SHA224": { sign: "dsa", hash: "sha224", id: "" }, "DSA-WITH-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-SHA256": { sign: "dsa", hash: "sha256", id: "" }, "DSA-WITH-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-SHA384": { sign: "dsa", hash: "sha384", id: "" }, "DSA-WITH-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-SHA512": { sign: "dsa", hash: "sha512", id: "" }, "DSA-RIPEMD160": { sign: "dsa", hash: "rmd160", id: "" }, ripemd160WithRSA: { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, "RSA-RIPEMD160": { sign: "rsa", hash: "rmd160", id: "3021300906052b2403020105000414" }, md5WithRSAEncryption: { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" }, "RSA-MD5": { sign: "rsa", hash: "md5", id: "3020300c06082a864886f70d020505000410" } };
  });
  Eb = T((sT, Sb) => {
    Sb.exports = Mu();
  });
  _u = T((hT, Ab) => {
    var F7 = Math.pow(2, 30) - 1;
    Ab.exports = function(t6, e6) {
      if (typeof t6 != "number")
        throw new TypeError("Iterations not a number");
      if (t6 < 0)
        throw new TypeError("Bad iterations");
      if (typeof e6 != "number")
        throw new TypeError("Key length not a number");
      if (e6 < 0 || e6 > F7 || e6 !== e6)
        throw new TypeError("Bad key length");
    };
  });
  xu = T((uT, Bb) => {
    var ls;
    global.process && global.process.browser ? ls = "utf-8" : global.process && global.process.version ? (Rb = parseInt(process.version.split(".")[0].slice(1), 10), ls = Rb >= 6 ? "utf-8" : "binary") : ls = "utf-8";
    var Rb;
    Bb.exports = ls;
  });
  Eu = T((lT, qb) => {
    var Su = Te().Buffer;
    qb.exports = function(t6, e6, r6) {
      if (Su.isBuffer(t6))
        return t6;
      if (typeof t6 == "string")
        return Su.from(t6, e6);
      if (ArrayBuffer.isView(t6))
        return Su.from(t6.buffer);
      throw new TypeError(r6 + " must be a string, a Buffer, a typed array or a DataView");
    };
  });
  Au = T((dT, Lb) => {
    var U7 = mu(), z7 = Bo(), H7 = ko(), Sn = Te().Buffer, W7 = _u(), Ib = xu(), Tb = Eu(), K7 = Sn.alloc(128), ds = { md5: 16, sha1: 20, sha224: 28, sha256: 32, sha384: 48, sha512: 64, rmd160: 20, ripemd160: 20 };
    function kb(t6, e6, r6) {
      var o2 = j7(t6), f = t6 === "sha512" || t6 === "sha384" ? 128 : 64;
      e6.length > f ? e6 = o2(e6) : e6.length < f && (e6 = Sn.concat([e6, K7], f));
      for (var p2 = Sn.allocUnsafe(f + ds[t6]), m2 = Sn.allocUnsafe(f + ds[t6]), y2 = 0;y2 < f; y2++)
        p2[y2] = e6[y2] ^ 54, m2[y2] = e6[y2] ^ 92;
      var M = Sn.allocUnsafe(f + r6 + 4);
      p2.copy(M, 0, 0, f), this.ipad1 = M, this.ipad2 = p2, this.opad = m2, this.alg = t6, this.blocksize = f, this.hash = o2, this.size = ds[t6];
    }
    kb.prototype.run = function(t6, e6) {
      t6.copy(e6, this.blocksize);
      var r6 = this.hash(e6);
      return r6.copy(this.opad, this.blocksize), this.hash(this.opad);
    };
    function j7(t6) {
      function e6(o2) {
        return H7(t6).update(o2).digest();
      }
      function r6(o2) {
        return new z7().update(o2).digest();
      }
      return t6 === "rmd160" || t6 === "ripemd160" ? r6 : t6 === "md5" ? U7 : e6;
    }
    function Z7(t6, e6, r6, o2, f) {
      W7(r6, o2), t6 = Tb(t6, Ib, "Password"), e6 = Tb(e6, Ib, "Salt"), f = f || "sha1";
      var p2 = new kb(f, t6, e6.length), m2 = Sn.allocUnsafe(o2), y2 = Sn.allocUnsafe(e6.length + 4);
      e6.copy(y2, 0, 0, e6.length);
      for (var M = 0, x = ds[f], S = Math.ceil(o2 / x), E = 1;E <= S; E++) {
        y2.writeUInt32BE(E, e6.length);
        for (var B = p2.run(y2, p2.ipad1), q2 = B, L = 1;L < r6; L++) {
          q2 = p2.run(q2, p2.ipad2);
          for (var ge = 0;ge < x; ge++)
            B[ge] ^= q2[ge];
        }
        B.copy(m2, M), M += x;
      }
      return m2;
    }
    Lb.exports = Z7;
  });
  Ub = T((cT, Fb) => {
    var Cb = Te().Buffer, V7 = _u(), Nb = xu(), Db = Au(), Pb = Eu(), cs, xa = global.crypto && global.crypto.subtle, $7 = { sha: "SHA-1", "sha-1": "SHA-1", sha1: "SHA-1", sha256: "SHA-256", "sha-256": "SHA-256", sha384: "SHA-384", "sha-384": "SHA-384", "sha-512": "SHA-512", sha512: "SHA-512" }, Ru = [];
    function G7(t6) {
      if (global.process && !global.process.browser || !xa || !xa.importKey || !xa.deriveBits)
        return Promise.resolve(false);
      if (Ru[t6] !== undefined)
        return Ru[t6];
      cs = cs || Cb.alloc(8);
      var e6 = Ob(cs, cs, 10, 128, t6).then(function() {
        return true;
      }).catch(function() {
        return false;
      });
      return Ru[t6] = e6, e6;
    }
    var En;
    function Bu() {
      return En || (global.process && global.process.nextTick ? En = global.process.nextTick : global.queueMicrotask ? En = global.queueMicrotask : global.setImmediate ? En = global.setImmediate : En = global.setTimeout, En);
    }
    function Ob(t6, e6, r6, o2, f) {
      return xa.importKey("raw", t6, { name: "PBKDF2" }, false, ["deriveBits"]).then(function(p2) {
        return xa.deriveBits({ name: "PBKDF2", salt: e6, iterations: r6, hash: { name: f } }, p2, o2 << 3);
      }).then(function(p2) {
        return Cb.from(p2);
      });
    }
    function Y7(t6, e6) {
      t6.then(function(r6) {
        Bu()(function() {
          e6(null, r6);
        });
      }, function(r6) {
        Bu()(function() {
          e6(r6);
        });
      });
    }
    Fb.exports = function(t6, e6, r6, o2, f, p2) {
      typeof f == "function" && (p2 = f, f = undefined), f = f || "sha1";
      var m2 = $7[f.toLowerCase()];
      if (!m2 || typeof global.Promise != "function") {
        Bu()(function() {
          var y2;
          try {
            y2 = Db(t6, e6, r6, o2, f);
          } catch (M) {
            return p2(M);
          }
          p2(null, y2);
        });
        return;
      }
      if (V7(r6, o2), t6 = Pb(t6, Nb, "Password"), e6 = Pb(e6, Nb, "Salt"), typeof p2 != "function")
        throw new Error("No callback provided to pbkdf2");
      Y7(G7(m2).then(function(y2) {
        return y2 ? Ob(t6, e6, r6, o2, m2) : Db(t6, e6, r6, o2, f);
      }), p2);
    };
  });
  Iu = T((qu) => {
    qu.pbkdf2 = Ub();
    qu.pbkdf2Sync = Au();
  });
  Tu = T((br) => {
    br.readUInt32BE = function(e6, r6) {
      var o2 = e6[0 + r6] << 24 | e6[1 + r6] << 16 | e6[2 + r6] << 8 | e6[3 + r6];
      return o2 >>> 0;
    };
    br.writeUInt32BE = function(e6, r6, o2) {
      e6[0 + o2] = r6 >>> 24, e6[1 + o2] = r6 >>> 16 & 255, e6[2 + o2] = r6 >>> 8 & 255, e6[3 + o2] = r6 & 255;
    };
    br.ip = function(e6, r6, o2, f) {
      for (var p2 = 0, m2 = 0, y2 = 6;y2 >= 0; y2 -= 2) {
        for (var M = 0;M <= 24; M += 8)
          p2 <<= 1, p2 |= r6 >>> M + y2 & 1;
        for (var M = 0;M <= 24; M += 8)
          p2 <<= 1, p2 |= e6 >>> M + y2 & 1;
      }
      for (var y2 = 6;y2 >= 0; y2 -= 2) {
        for (var M = 1;M <= 25; M += 8)
          m2 <<= 1, m2 |= r6 >>> M + y2 & 1;
        for (var M = 1;M <= 25; M += 8)
          m2 <<= 1, m2 |= e6 >>> M + y2 & 1;
      }
      o2[f + 0] = p2 >>> 0, o2[f + 1] = m2 >>> 0;
    };
    br.rip = function(e6, r6, o2, f) {
      for (var p2 = 0, m2 = 0, y2 = 0;y2 < 4; y2++)
        for (var M = 24;M >= 0; M -= 8)
          p2 <<= 1, p2 |= r6 >>> M + y2 & 1, p2 <<= 1, p2 |= e6 >>> M + y2 & 1;
      for (var y2 = 4;y2 < 8; y2++)
        for (var M = 24;M >= 0; M -= 8)
          m2 <<= 1, m2 |= r6 >>> M + y2 & 1, m2 <<= 1, m2 |= e6 >>> M + y2 & 1;
      o2[f + 0] = p2 >>> 0, o2[f + 1] = m2 >>> 0;
    };
    br.pc1 = function(e6, r6, o2, f) {
      for (var p2 = 0, m2 = 0, y2 = 7;y2 >= 5; y2--) {
        for (var M = 0;M <= 24; M += 8)
          p2 <<= 1, p2 |= r6 >> M + y2 & 1;
        for (var M = 0;M <= 24; M += 8)
          p2 <<= 1, p2 |= e6 >> M + y2 & 1;
      }
      for (var M = 0;M <= 24; M += 8)
        p2 <<= 1, p2 |= r6 >> M + y2 & 1;
      for (var y2 = 1;y2 <= 3; y2++) {
        for (var M = 0;M <= 24; M += 8)
          m2 <<= 1, m2 |= r6 >> M + y2 & 1;
        for (var M = 0;M <= 24; M += 8)
          m2 <<= 1, m2 |= e6 >> M + y2 & 1;
      }
      for (var M = 0;M <= 24; M += 8)
        m2 <<= 1, m2 |= e6 >> M + y2 & 1;
      o2[f + 0] = p2 >>> 0, o2[f + 1] = m2 >>> 0;
    };
    br.r28shl = function(e6, r6) {
      return e6 << r6 & 268435455 | e6 >>> 28 - r6;
    };
    var ps = [14, 11, 17, 4, 27, 23, 25, 0, 13, 22, 7, 18, 5, 9, 16, 24, 2, 20, 12, 21, 1, 8, 15, 26, 15, 4, 25, 19, 9, 1, 26, 16, 5, 11, 23, 8, 12, 7, 17, 0, 22, 3, 10, 14, 6, 20, 27, 24];
    br.pc2 = function(e6, r6, o2, f) {
      for (var p2 = 0, m2 = 0, y2 = ps.length >>> 1, M = 0;M < y2; M++)
        p2 <<= 1, p2 |= e6 >>> ps[M] & 1;
      for (var M = y2;M < ps.length; M++)
        m2 <<= 1, m2 |= r6 >>> ps[M] & 1;
      o2[f + 0] = p2 >>> 0, o2[f + 1] = m2 >>> 0;
    };
    br.expand = function(e6, r6, o2) {
      var f = 0, p2 = 0;
      f = (e6 & 1) << 5 | e6 >>> 27;
      for (var m2 = 23;m2 >= 15; m2 -= 4)
        f <<= 6, f |= e6 >>> m2 & 63;
      for (var m2 = 11;m2 >= 3; m2 -= 4)
        p2 |= e6 >>> m2 & 63, p2 <<= 6;
      p2 |= (e6 & 31) << 1 | e6 >>> 31, r6[o2 + 0] = f >>> 0, r6[o2 + 1] = p2 >>> 0;
    };
    var zb = [14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1, 3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8, 4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7, 15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13, 15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14, 9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5, 0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2, 5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9, 10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10, 1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1, 13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7, 11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12, 7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3, 1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9, 10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8, 15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14, 2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1, 8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6, 4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13, 15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3, 12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5, 0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8, 9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10, 7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13, 4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10, 3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6, 1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7, 10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12, 13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4, 10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2, 7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13, 0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11];
    br.substitute = function(e6, r6) {
      for (var o2 = 0, f = 0;f < 4; f++) {
        var p2 = e6 >>> 18 - f * 6 & 63, m2 = zb[f * 64 + p2];
        o2 <<= 4, o2 |= m2;
      }
      for (var f = 0;f < 4; f++) {
        var p2 = r6 >>> 18 - f * 6 & 63, m2 = zb[4 * 64 + f * 64 + p2];
        o2 <<= 4, o2 |= m2;
      }
      return o2 >>> 0;
    };
    var Hb = [16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22, 30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7];
    br.permute = function(e6) {
      for (var r6 = 0, o2 = 0;o2 < Hb.length; o2++)
        r6 <<= 1, r6 |= e6 >>> Hb[o2] & 1;
      return r6 >>> 0;
    };
    br.padSplit = function(e6, r6, o2) {
      for (var f = e6.toString(2);f.length < r6; )
        f = "0" + f;
      for (var p2 = [], m2 = 0;m2 < r6; m2 += o2)
        p2.push(f.slice(m2, m2 + o2));
      return p2.join(" ");
    };
  });
  ar = T((bT, Kb) => {
    Kb.exports = Wb;
    function Wb(t6, e6) {
      if (!t6)
        throw new Error(e6 || "Assertion failed");
    }
    Wb.equal = function(e6, r6, o2) {
      if (e6 != r6)
        throw new Error(o2 || "Assertion failed: " + e6 + " != " + r6);
    };
  });
  vs = T((mT, jb) => {
    var X7 = ar();
    function mr(t6) {
      this.options = t6, this.type = this.options.type, this.blockSize = 8, this._init(), this.buffer = new Array(this.blockSize), this.bufferOff = 0;
    }
    jb.exports = mr;
    mr.prototype._init = function() {
    };
    mr.prototype.update = function(e6) {
      return e6.length === 0 ? [] : this.type === "decrypt" ? this._updateDecrypt(e6) : this._updateEncrypt(e6);
    };
    mr.prototype._buffer = function(e6, r6) {
      for (var o2 = Math.min(this.buffer.length - this.bufferOff, e6.length - r6), f = 0;f < o2; f++)
        this.buffer[this.bufferOff + f] = e6[r6 + f];
      return this.bufferOff += o2, o2;
    };
    mr.prototype._flushBuffer = function(e6, r6) {
      return this._update(this.buffer, 0, e6, r6), this.bufferOff = 0, this.blockSize;
    };
    mr.prototype._updateEncrypt = function(e6) {
      var r6 = 0, o2 = 0, f = (this.bufferOff + e6.length) / this.blockSize | 0, p2 = new Array(f * this.blockSize);
      this.bufferOff !== 0 && (r6 += this._buffer(e6, r6), this.bufferOff === this.buffer.length && (o2 += this._flushBuffer(p2, o2)));
      for (var m2 = e6.length - (e6.length - r6) % this.blockSize;r6 < m2; r6 += this.blockSize)
        this._update(e6, r6, p2, o2), o2 += this.blockSize;
      for (;r6 < e6.length; r6++, this.bufferOff++)
        this.buffer[this.bufferOff] = e6[r6];
      return p2;
    };
    mr.prototype._updateDecrypt = function(e6) {
      for (var r6 = 0, o2 = 0, f = Math.ceil((this.bufferOff + e6.length) / this.blockSize) - 1, p2 = new Array(f * this.blockSize);f > 0; f--)
        r6 += this._buffer(e6, r6), o2 += this._flushBuffer(p2, o2);
      return r6 += this._buffer(e6, r6), p2;
    };
    mr.prototype.final = function(e6) {
      var r6;
      e6 && (r6 = this.update(e6));
      var o2;
      return this.type === "encrypt" ? o2 = this._finalEncrypt() : o2 = this._finalDecrypt(), r6 ? r6.concat(o2) : o2;
    };
    mr.prototype._pad = function(e6, r6) {
      if (r6 === 0)
        return false;
      for (;r6 < e6.length; )
        e6[r6++] = 0;
      return true;
    };
    mr.prototype._finalEncrypt = function() {
      if (!this._pad(this.buffer, this.bufferOff))
        return [];
      var e6 = new Array(this.blockSize);
      return this._update(this.buffer, 0, e6, 0), e6;
    };
    mr.prototype._unpad = function(e6) {
      return e6;
    };
    mr.prototype._finalDecrypt = function() {
      X7.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
      var e6 = new Array(this.blockSize);
      return this._flushBuffer(e6, 0), this._unpad(e6);
    };
  });
  ku = T((gT, $b) => {
    var Zb = ar(), J7 = Ie(), Nt = Tu(), Vb = vs();
    function Q7() {
      this.tmp = new Array(2), this.keys = null;
    }
    function ei(t6) {
      Vb.call(this, t6);
      var e6 = new Q7;
      this._desState = e6, this.deriveKeys(e6, t6.key);
    }
    J7(ei, Vb);
    $b.exports = ei;
    ei.create = function(e6) {
      return new ei(e6);
    };
    var e9 = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
    ei.prototype.deriveKeys = function(e6, r6) {
      e6.keys = new Array(16 * 2), Zb.equal(r6.length, this.blockSize, "Invalid key length");
      var o2 = Nt.readUInt32BE(r6, 0), f = Nt.readUInt32BE(r6, 4);
      Nt.pc1(o2, f, e6.tmp, 0), o2 = e6.tmp[0], f = e6.tmp[1];
      for (var p2 = 0;p2 < e6.keys.length; p2 += 2) {
        var m2 = e9[p2 >>> 1];
        o2 = Nt.r28shl(o2, m2), f = Nt.r28shl(f, m2), Nt.pc2(o2, f, e6.keys, p2);
      }
    };
    ei.prototype._update = function(e6, r6, o2, f) {
      var p2 = this._desState, m2 = Nt.readUInt32BE(e6, r6), y2 = Nt.readUInt32BE(e6, r6 + 4);
      Nt.ip(m2, y2, p2.tmp, 0), m2 = p2.tmp[0], y2 = p2.tmp[1], this.type === "encrypt" ? this._encrypt(p2, m2, y2, p2.tmp, 0) : this._decrypt(p2, m2, y2, p2.tmp, 0), m2 = p2.tmp[0], y2 = p2.tmp[1], Nt.writeUInt32BE(o2, m2, f), Nt.writeUInt32BE(o2, y2, f + 4);
    };
    ei.prototype._pad = function(e6, r6) {
      for (var o2 = e6.length - r6, f = r6;f < e6.length; f++)
        e6[f] = o2;
      return true;
    };
    ei.prototype._unpad = function(e6) {
      for (var r6 = e6[e6.length - 1], o2 = e6.length - r6;o2 < e6.length; o2++)
        Zb.equal(e6[o2], r6);
      return e6.slice(0, e6.length - r6);
    };
    ei.prototype._encrypt = function(e6, r6, o2, f, p2) {
      for (var m2 = r6, y2 = o2, M = 0;M < e6.keys.length; M += 2) {
        var x = e6.keys[M], S = e6.keys[M + 1];
        Nt.expand(y2, e6.tmp, 0), x ^= e6.tmp[0], S ^= e6.tmp[1];
        var E = Nt.substitute(x, S), B = Nt.permute(E), q2 = y2;
        y2 = (m2 ^ B) >>> 0, m2 = q2;
      }
      Nt.rip(y2, m2, f, p2);
    };
    ei.prototype._decrypt = function(e6, r6, o2, f, p2) {
      for (var m2 = o2, y2 = r6, M = e6.keys.length - 2;M >= 0; M -= 2) {
        var x = e6.keys[M], S = e6.keys[M + 1];
        Nt.expand(m2, e6.tmp, 0), x ^= e6.tmp[0], S ^= e6.tmp[1];
        var E = Nt.substitute(x, S), B = Nt.permute(E), q2 = m2;
        m2 = (y2 ^ B) >>> 0, y2 = q2;
      }
      Nt.rip(m2, y2, f, p2);
    };
  });
  Yb = T((Gb) => {
    var t9 = ar(), r9 = Ie(), bs = {};
    function i9(t6) {
      t9.equal(t6.length, 8, "Invalid IV length"), this.iv = new Array(8);
      for (var e6 = 0;e6 < this.iv.length; e6++)
        this.iv[e6] = t6[e6];
    }
    function n9(t6) {
      function e6(p2) {
        t6.call(this, p2), this._cbcInit();
      }
      r9(e6, t6);
      for (var r6 = Object.keys(bs), o2 = 0;o2 < r6.length; o2++) {
        var f = r6[o2];
        e6.prototype[f] = bs[f];
      }
      return e6.create = function(m2) {
        return new e6(m2);
      }, e6;
    }
    Gb.instantiate = n9;
    bs._cbcInit = function() {
      var e6 = new i9(this.options.iv);
      this._cbcState = e6;
    };
    bs._update = function(e6, r6, o2, f) {
      var p2 = this._cbcState, m2 = this.constructor.super_.prototype, y2 = p2.iv;
      if (this.type === "encrypt") {
        for (var M = 0;M < this.blockSize; M++)
          y2[M] ^= e6[r6 + M];
        m2._update.call(this, y2, 0, o2, f);
        for (var M = 0;M < this.blockSize; M++)
          y2[M] = o2[f + M];
      } else {
        m2._update.call(this, e6, r6, o2, f);
        for (var M = 0;M < this.blockSize; M++)
          o2[f + M] ^= y2[M];
        for (var M = 0;M < this.blockSize; M++)
          y2[M] = e6[r6 + M];
      }
    };
  });
  Qb = T((wT, Jb) => {
    var f9 = ar(), a9 = Ie(), Xb = vs(), Wi = ku();
    function o9(t6, e6) {
      f9.equal(e6.length, 24, "Invalid key length");
      var r6 = e6.slice(0, 8), o2 = e6.slice(8, 16), f = e6.slice(16, 24);
      t6 === "encrypt" ? this.ciphers = [Wi.create({ type: "encrypt", key: r6 }), Wi.create({ type: "decrypt", key: o2 }), Wi.create({ type: "encrypt", key: f })] : this.ciphers = [Wi.create({ type: "decrypt", key: f }), Wi.create({ type: "encrypt", key: o2 }), Wi.create({ type: "decrypt", key: r6 })];
    }
    function An(t6) {
      Xb.call(this, t6);
      var e6 = new o9(this.type, this.options.key);
      this._edeState = e6;
    }
    a9(An, Xb);
    Jb.exports = An;
    An.create = function(e6) {
      return new An(e6);
    };
    An.prototype._update = function(e6, r6, o2, f) {
      var p2 = this._edeState;
      p2.ciphers[0]._update(e6, r6, o2, f), p2.ciphers[1]._update(o2, f, o2, f), p2.ciphers[2]._update(o2, f, o2, f);
    };
    An.prototype._pad = Wi.prototype._pad;
    An.prototype._unpad = Wi.prototype._unpad;
  });
  em = T((gf) => {
    gf.utils = Tu();
    gf.Cipher = vs();
    gf.DES = ku();
    gf.CBC = Yb();
    gf.EDE = Qb();
  });
  im = T((_T, rm) => {
    var tm = yi(), wi = em(), s9 = Ie(), Rn = Te().Buffer, Sa = { "des-ede3-cbc": wi.CBC.instantiate(wi.EDE), "des-ede3": wi.EDE, "des-ede-cbc": wi.CBC.instantiate(wi.EDE), "des-ede": wi.EDE, "des-cbc": wi.CBC.instantiate(wi.DES), "des-ecb": wi.DES };
    Sa.des = Sa["des-cbc"];
    Sa.des3 = Sa["des-ede3-cbc"];
    rm.exports = ms;
    s9(ms, tm);
    function ms(t6) {
      tm.call(this);
      var e6 = t6.mode.toLowerCase(), r6 = Sa[e6], o2;
      t6.decrypt ? o2 = "decrypt" : o2 = "encrypt";
      var f = t6.key;
      Rn.isBuffer(f) || (f = Rn.from(f)), (e6 === "des-ede" || e6 === "des-ede-cbc") && (f = Rn.concat([f, f.slice(0, 8)]));
      var p2 = t6.iv;
      Rn.isBuffer(p2) || (p2 = Rn.from(p2)), this._des = r6.create({ key: f, iv: p2, type: o2 });
    }
    ms.prototype._update = function(t6) {
      return Rn.from(this._des.update(t6));
    };
    ms.prototype._final = function() {
      return Rn.from(this._des.final());
    };
  });
  nm = T((Lu) => {
    Lu.encrypt = function(t6, e6) {
      return t6._cipher.encryptBlock(e6);
    };
    Lu.decrypt = function(t6, e6) {
      return t6._cipher.decryptBlock(e6);
    };
  });
  yf = T((ST, fm) => {
    fm.exports = function(e6, r6) {
      for (var o2 = Math.min(e6.length, r6.length), f = new Buffer(o2), p2 = 0;p2 < o2; ++p2)
        f[p2] = e6[p2] ^ r6[p2];
      return f;
    };
  });
  om = T((Nu) => {
    var am = yf();
    Nu.encrypt = function(t6, e6) {
      var r6 = am(e6, t6._prev);
      return t6._prev = t6._cipher.encryptBlock(r6), t6._prev;
    };
    Nu.decrypt = function(t6, e6) {
      var r6 = t6._prev;
      t6._prev = e6;
      var o2 = t6._cipher.decryptBlock(e6);
      return am(o2, r6);
    };
  });
  um = T((hm) => {
    var Ea = Te().Buffer, h9 = yf();
    function sm(t6, e6, r6) {
      var o2 = e6.length, f = h9(e6, t6._cache);
      return t6._cache = t6._cache.slice(o2), t6._prev = Ea.concat([t6._prev, r6 ? e6 : f]), f;
    }
    hm.encrypt = function(t6, e6, r6) {
      for (var o2 = Ea.allocUnsafe(0), f;e6.length; )
        if (t6._cache.length === 0 && (t6._cache = t6._cipher.encryptBlock(t6._prev), t6._prev = Ea.allocUnsafe(0)), t6._cache.length <= e6.length)
          f = t6._cache.length, o2 = Ea.concat([o2, sm(t6, e6.slice(0, f), r6)]), e6 = e6.slice(f);
        else {
          o2 = Ea.concat([o2, sm(t6, e6, r6)]);
          break;
        }
      return o2;
    };
  });
  dm = T((lm) => {
    var Du = Te().Buffer;
    function u9(t6, e6, r6) {
      var o2 = t6._cipher.encryptBlock(t6._prev), f = o2[0] ^ e6;
      return t6._prev = Du.concat([t6._prev.slice(1), Du.from([r6 ? e6 : f])]), f;
    }
    lm.encrypt = function(t6, e6, r6) {
      for (var o2 = e6.length, f = Du.allocUnsafe(o2), p2 = -1;++p2 < o2; )
        f[p2] = u9(t6, e6[p2], r6);
      return f;
    };
  });
  pm = T((cm) => {
    var gs = Te().Buffer;
    function l9(t6, e6, r6) {
      for (var o2, f = -1, p2 = 8, m2 = 0, y2, M;++f < p2; )
        o2 = t6._cipher.encryptBlock(t6._prev), y2 = e6 & 1 << 7 - f ? 128 : 0, M = o2[0] ^ y2, m2 += (M & 128) >> f % 8, t6._prev = d9(t6._prev, r6 ? y2 : M);
      return m2;
    }
    function d9(t6, e6) {
      var r6 = t6.length, o2 = -1, f = gs.allocUnsafe(t6.length);
      for (t6 = gs.concat([t6, gs.from([e6])]);++o2 < r6; )
        f[o2] = t6[o2] << 1 | t6[o2 + 1] >> 7;
      return f;
    }
    cm.encrypt = function(t6, e6, r6) {
      for (var o2 = e6.length, f = gs.allocUnsafe(o2), p2 = -1;++p2 < o2; )
        f[p2] = l9(t6, e6[p2], r6);
      return f;
    };
  });
  bm = T((vm) => {
    var c9 = yf();
    function p9(t6) {
      return t6._prev = t6._cipher.encryptBlock(t6._prev), t6._prev;
    }
    vm.encrypt = function(t6, e6) {
      for (;t6._cache.length < e6.length; )
        t6._cache = Buffer.concat([t6._cache, p9(t6)]);
      var r6 = t6._cache.slice(0, e6.length);
      return t6._cache = t6._cache.slice(e6.length), c9(e6, r6);
    };
  });
  Pu = T((IT, mm) => {
    function v9(t6) {
      for (var e6 = t6.length, r6;e6--; )
        if (r6 = t6.readUInt8(e6), r6 === 255)
          t6.writeUInt8(0, e6);
        else {
          r6++, t6.writeUInt8(r6, e6);
          break;
        }
    }
    mm.exports = v9;
  });
  Ou = T((ym) => {
    var b9 = yf(), gm = Te().Buffer, m9 = Pu();
    function g9(t6) {
      var e6 = t6._cipher.encryptBlockRaw(t6._prev);
      return m9(t6._prev), e6;
    }
    var Cu = 16;
    ym.encrypt = function(t6, e6) {
      var r6 = Math.ceil(e6.length / Cu), o2 = t6._cache.length;
      t6._cache = gm.concat([t6._cache, gm.allocUnsafe(r6 * Cu)]);
      for (var f = 0;f < r6; f++) {
        var p2 = g9(t6), m2 = o2 + f * Cu;
        t6._cache.writeUInt32BE(p2[0], m2 + 0), t6._cache.writeUInt32BE(p2[1], m2 + 4), t6._cache.writeUInt32BE(p2[2], m2 + 8), t6._cache.writeUInt32BE(p2[3], m2 + 12);
      }
      var y2 = t6._cache.slice(0, e6.length);
      return t6._cache = t6._cache.slice(e6.length), b9(e6, y2);
    };
  });
  Fu = T((kT, y9) => {
    y9.exports = { "aes-128-ecb": { cipher: "AES", key: 128, iv: 0, mode: "ECB", type: "block" }, "aes-192-ecb": { cipher: "AES", key: 192, iv: 0, mode: "ECB", type: "block" }, "aes-256-ecb": { cipher: "AES", key: 256, iv: 0, mode: "ECB", type: "block" }, "aes-128-cbc": { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, "aes-192-cbc": { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, "aes-256-cbc": { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, aes128: { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" }, aes192: { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" }, aes256: { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" }, "aes-128-cfb": { cipher: "AES", key: 128, iv: 16, mode: "CFB", type: "stream" }, "aes-192-cfb": { cipher: "AES", key: 192, iv: 16, mode: "CFB", type: "stream" }, "aes-256-cfb": { cipher: "AES", key: 256, iv: 16, mode: "CFB", type: "stream" }, "aes-128-cfb8": { cipher: "AES", key: 128, iv: 16, mode: "CFB8", type: "stream" }, "aes-192-cfb8": { cipher: "AES", key: 192, iv: 16, mode: "CFB8", type: "stream" }, "aes-256-cfb8": { cipher: "AES", key: 256, iv: 16, mode: "CFB8", type: "stream" }, "aes-128-cfb1": { cipher: "AES", key: 128, iv: 16, mode: "CFB1", type: "stream" }, "aes-192-cfb1": { cipher: "AES", key: 192, iv: 16, mode: "CFB1", type: "stream" }, "aes-256-cfb1": { cipher: "AES", key: 256, iv: 16, mode: "CFB1", type: "stream" }, "aes-128-ofb": { cipher: "AES", key: 128, iv: 16, mode: "OFB", type: "stream" }, "aes-192-ofb": { cipher: "AES", key: 192, iv: 16, mode: "OFB", type: "stream" }, "aes-256-ofb": { cipher: "AES", key: 256, iv: 16, mode: "OFB", type: "stream" }, "aes-128-ctr": { cipher: "AES", key: 128, iv: 16, mode: "CTR", type: "stream" }, "aes-192-ctr": { cipher: "AES", key: 192, iv: 16, mode: "CTR", type: "stream" }, "aes-256-ctr": { cipher: "AES", key: 256, iv: 16, mode: "CTR", type: "stream" }, "aes-128-gcm": { cipher: "AES", key: 128, iv: 12, mode: "GCM", type: "auth" }, "aes-192-gcm": { cipher: "AES", key: 192, iv: 12, mode: "GCM", type: "auth" }, "aes-256-gcm": { cipher: "AES", key: 256, iv: 12, mode: "GCM", type: "auth" } };
  });
  ws2 = T((LT, wm) => {
    var w9 = { ECB: nm(), CBC: om(), CFB: um(), CFB8: dm(), CFB1: pm(), OFB: bm(), CTR: Ou(), GCM: Ou() }, ys = Fu();
    for (Uu in ys)
      ys[Uu].module = w9[ys[Uu].mode];
    var Uu;
    wm.exports = ys;
  });
  Aa = T((NT, _m) => {
    var Ms = Te().Buffer;
    function Hu(t6) {
      Ms.isBuffer(t6) || (t6 = Ms.from(t6));
      for (var e6 = t6.length / 4 | 0, r6 = new Array(e6), o2 = 0;o2 < e6; o2++)
        r6[o2] = t6.readUInt32BE(o2 * 4);
      return r6;
    }
    function zu(t6) {
      for (var e6 = 0;e6 < t6.length; t6++)
        t6[e6] = 0;
    }
    function Mm(t6, e6, r6, o2, f) {
      for (var p2 = r6[0], m2 = r6[1], y2 = r6[2], M = r6[3], x = t6[0] ^ e6[0], S = t6[1] ^ e6[1], E = t6[2] ^ e6[2], B = t6[3] ^ e6[3], q2, L, ge, _e, N = 4, we = 1;we < f; we++)
        q2 = p2[x >>> 24] ^ m2[S >>> 16 & 255] ^ y2[E >>> 8 & 255] ^ M[B & 255] ^ e6[N++], L = p2[S >>> 24] ^ m2[E >>> 16 & 255] ^ y2[B >>> 8 & 255] ^ M[x & 255] ^ e6[N++], ge = p2[E >>> 24] ^ m2[B >>> 16 & 255] ^ y2[x >>> 8 & 255] ^ M[S & 255] ^ e6[N++], _e = p2[B >>> 24] ^ m2[x >>> 16 & 255] ^ y2[S >>> 8 & 255] ^ M[E & 255] ^ e6[N++], x = q2, S = L, E = ge, B = _e;
      return q2 = (o2[x >>> 24] << 24 | o2[S >>> 16 & 255] << 16 | o2[E >>> 8 & 255] << 8 | o2[B & 255]) ^ e6[N++], L = (o2[S >>> 24] << 24 | o2[E >>> 16 & 255] << 16 | o2[B >>> 8 & 255] << 8 | o2[x & 255]) ^ e6[N++], ge = (o2[E >>> 24] << 24 | o2[B >>> 16 & 255] << 16 | o2[x >>> 8 & 255] << 8 | o2[S & 255]) ^ e6[N++], _e = (o2[B >>> 24] << 24 | o2[x >>> 16 & 255] << 16 | o2[S >>> 8 & 255] << 8 | o2[E & 255]) ^ e6[N++], q2 = q2 >>> 0, L = L >>> 0, ge = ge >>> 0, _e = _e >>> 0, [q2, L, ge, _e];
    }
    var M9 = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], kt = function() {
      for (var t6 = new Array(256), e6 = 0;e6 < 256; e6++)
        e6 < 128 ? t6[e6] = e6 << 1 : t6[e6] = e6 << 1 ^ 283;
      for (var r6 = [], o2 = [], f = [[], [], [], []], p2 = [[], [], [], []], m2 = 0, y2 = 0, M = 0;M < 256; ++M) {
        var x = y2 ^ y2 << 1 ^ y2 << 2 ^ y2 << 3 ^ y2 << 4;
        x = x >>> 8 ^ x & 255 ^ 99, r6[m2] = x, o2[x] = m2;
        var S = t6[m2], E = t6[S], B = t6[E], q2 = t6[x] * 257 ^ x * 16843008;
        f[0][m2] = q2 << 24 | q2 >>> 8, f[1][m2] = q2 << 16 | q2 >>> 16, f[2][m2] = q2 << 8 | q2 >>> 24, f[3][m2] = q2, q2 = B * 16843009 ^ E * 65537 ^ S * 257 ^ m2 * 16843008, p2[0][x] = q2 << 24 | q2 >>> 8, p2[1][x] = q2 << 16 | q2 >>> 16, p2[2][x] = q2 << 8 | q2 >>> 24, p2[3][x] = q2, m2 === 0 ? m2 = y2 = 1 : (m2 = S ^ t6[t6[t6[B ^ S]]], y2 ^= t6[t6[y2]]);
      }
      return { SBOX: r6, INV_SBOX: o2, SUB_MIX: f, INV_SUB_MIX: p2 };
    }();
    function gr(t6) {
      this._key = Hu(t6), this._reset();
    }
    gr.blockSize = 4 * 4;
    gr.keySize = 256 / 8;
    gr.prototype.blockSize = gr.blockSize;
    gr.prototype.keySize = gr.keySize;
    gr.prototype._reset = function() {
      for (var t6 = this._key, e6 = t6.length, r6 = e6 + 6, o2 = (r6 + 1) * 4, f = [], p2 = 0;p2 < e6; p2++)
        f[p2] = t6[p2];
      for (p2 = e6;p2 < o2; p2++) {
        var m2 = f[p2 - 1];
        p2 % e6 === 0 ? (m2 = m2 << 8 | m2 >>> 24, m2 = kt.SBOX[m2 >>> 24] << 24 | kt.SBOX[m2 >>> 16 & 255] << 16 | kt.SBOX[m2 >>> 8 & 255] << 8 | kt.SBOX[m2 & 255], m2 ^= M9[p2 / e6 | 0] << 24) : e6 > 6 && p2 % e6 === 4 && (m2 = kt.SBOX[m2 >>> 24] << 24 | kt.SBOX[m2 >>> 16 & 255] << 16 | kt.SBOX[m2 >>> 8 & 255] << 8 | kt.SBOX[m2 & 255]), f[p2] = f[p2 - e6] ^ m2;
      }
      for (var y2 = [], M = 0;M < o2; M++) {
        var x = o2 - M, S = f[x - (M % 4 ? 0 : 4)];
        M < 4 || x <= 4 ? y2[M] = S : y2[M] = kt.INV_SUB_MIX[0][kt.SBOX[S >>> 24]] ^ kt.INV_SUB_MIX[1][kt.SBOX[S >>> 16 & 255]] ^ kt.INV_SUB_MIX[2][kt.SBOX[S >>> 8 & 255]] ^ kt.INV_SUB_MIX[3][kt.SBOX[S & 255]];
      }
      this._nRounds = r6, this._keySchedule = f, this._invKeySchedule = y2;
    };
    gr.prototype.encryptBlockRaw = function(t6) {
      return t6 = Hu(t6), Mm(t6, this._keySchedule, kt.SUB_MIX, kt.SBOX, this._nRounds);
    };
    gr.prototype.encryptBlock = function(t6) {
      var e6 = this.encryptBlockRaw(t6), r6 = Ms.allocUnsafe(16);
      return r6.writeUInt32BE(e6[0], 0), r6.writeUInt32BE(e6[1], 4), r6.writeUInt32BE(e6[2], 8), r6.writeUInt32BE(e6[3], 12), r6;
    };
    gr.prototype.decryptBlock = function(t6) {
      t6 = Hu(t6);
      var e6 = t6[1];
      t6[1] = t6[3], t6[3] = e6;
      var r6 = Mm(t6, this._invKeySchedule, kt.INV_SUB_MIX, kt.INV_SBOX, this._nRounds), o2 = Ms.allocUnsafe(16);
      return o2.writeUInt32BE(r6[0], 0), o2.writeUInt32BE(r6[3], 4), o2.writeUInt32BE(r6[2], 8), o2.writeUInt32BE(r6[1], 12), o2;
    };
    gr.prototype.scrub = function() {
      zu(this._keySchedule), zu(this._invKeySchedule), zu(this._key);
    };
    _m.exports.AES = gr;
  });
  Em = T((DT, Sm) => {
    var wf = Te().Buffer, _9 = wf.alloc(16, 0);
    function x9(t6) {
      return [t6.readUInt32BE(0), t6.readUInt32BE(4), t6.readUInt32BE(8), t6.readUInt32BE(12)];
    }
    function xm(t6) {
      var e6 = wf.allocUnsafe(16);
      return e6.writeUInt32BE(t6[0] >>> 0, 0), e6.writeUInt32BE(t6[1] >>> 0, 4), e6.writeUInt32BE(t6[2] >>> 0, 8), e6.writeUInt32BE(t6[3] >>> 0, 12), e6;
    }
    function Ra(t6) {
      this.h = t6, this.state = wf.alloc(16, 0), this.cache = wf.allocUnsafe(0);
    }
    Ra.prototype.ghash = function(t6) {
      for (var e6 = -1;++e6 < t6.length; )
        this.state[e6] ^= t6[e6];
      this._multiply();
    };
    Ra.prototype._multiply = function() {
      for (var t6 = x9(this.h), e6 = [0, 0, 0, 0], r6, o2, f, p2 = -1;++p2 < 128; ) {
        for (o2 = (this.state[~~(p2 / 8)] & 1 << 7 - p2 % 8) !== 0, o2 && (e6[0] ^= t6[0], e6[1] ^= t6[1], e6[2] ^= t6[2], e6[3] ^= t6[3]), f = (t6[3] & 1) !== 0, r6 = 3;r6 > 0; r6--)
          t6[r6] = t6[r6] >>> 1 | (t6[r6 - 1] & 1) << 31;
        t6[0] = t6[0] >>> 1, f && (t6[0] = t6[0] ^ 225 << 24);
      }
      this.state = xm(e6);
    };
    Ra.prototype.update = function(t6) {
      this.cache = wf.concat([this.cache, t6]);
      for (var e6;this.cache.length >= 16; )
        e6 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), this.ghash(e6);
    };
    Ra.prototype.final = function(t6, e6) {
      return this.cache.length && this.ghash(wf.concat([this.cache, _9], 16)), this.ghash(xm([0, t6, 0, e6])), this.state;
    };
    Sm.exports = Ra;
  });
  Wu = T((PT, Bm) => {
    var S9 = Aa(), rr = Te().Buffer, Am = yi(), E9 = Ie(), Rm = Em(), A9 = yf(), R9 = Pu();
    function B9(t6, e6) {
      var r6 = 0;
      t6.length !== e6.length && r6++;
      for (var o2 = Math.min(t6.length, e6.length), f = 0;f < o2; ++f)
        r6 += t6[f] ^ e6[f];
      return r6;
    }
    function q9(t6, e6, r6) {
      if (e6.length === 12)
        return t6._finID = rr.concat([e6, rr.from([0, 0, 0, 1])]), rr.concat([e6, rr.from([0, 0, 0, 2])]);
      var o2 = new Rm(r6), f = e6.length, p2 = f % 16;
      o2.update(e6), p2 && (p2 = 16 - p2, o2.update(rr.alloc(p2, 0))), o2.update(rr.alloc(8, 0));
      var m2 = f * 8, y2 = rr.alloc(8);
      y2.writeUIntBE(m2, 0, 8), o2.update(y2), t6._finID = o2.state;
      var M = rr.from(t6._finID);
      return R9(M), M;
    }
    function Bn(t6, e6, r6, o2) {
      Am.call(this);
      var f = rr.alloc(4, 0);
      this._cipher = new S9.AES(e6);
      var p2 = this._cipher.encryptBlock(f);
      this._ghash = new Rm(p2), r6 = q9(this, r6, p2), this._prev = rr.from(r6), this._cache = rr.allocUnsafe(0), this._secCache = rr.allocUnsafe(0), this._decrypt = o2, this._alen = 0, this._len = 0, this._mode = t6, this._authTag = null, this._called = false;
    }
    E9(Bn, Am);
    Bn.prototype._update = function(t6) {
      if (!this._called && this._alen) {
        var e6 = 16 - this._alen % 16;
        e6 < 16 && (e6 = rr.alloc(e6, 0), this._ghash.update(e6));
      }
      this._called = true;
      var r6 = this._mode.encrypt(this, t6);
      return this._decrypt ? this._ghash.update(t6) : this._ghash.update(r6), this._len += t6.length, r6;
    };
    Bn.prototype._final = function() {
      if (this._decrypt && !this._authTag)
        throw new Error("Unsupported state or unable to authenticate data");
      var t6 = A9(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));
      if (this._decrypt && B9(t6, this._authTag))
        throw new Error("Unsupported state or unable to authenticate data");
      this._authTag = t6, this._cipher.scrub();
    };
    Bn.prototype.getAuthTag = function() {
      if (this._decrypt || !rr.isBuffer(this._authTag))
        throw new Error("Attempting to get auth tag in unsupported state");
      return this._authTag;
    };
    Bn.prototype.setAuthTag = function(e6) {
      if (!this._decrypt)
        throw new Error("Attempting to set auth tag in unsupported state");
      this._authTag = e6;
    };
    Bn.prototype.setAAD = function(e6) {
      if (this._called)
        throw new Error("Attempting to set AAD in unsupported state");
      this._ghash.update(e6), this._alen += e6.length;
    };
    Bm.exports = Bn;
  });
  ju = T((CT, Im) => {
    var I9 = Aa(), Ku = Te().Buffer, qm = yi(), T9 = Ie();
    function _s(t6, e6, r6, o2) {
      qm.call(this), this._cipher = new I9.AES(e6), this._prev = Ku.from(r6), this._cache = Ku.allocUnsafe(0), this._secCache = Ku.allocUnsafe(0), this._decrypt = o2, this._mode = t6;
    }
    T9(_s, qm);
    _s.prototype._update = function(t6) {
      return this._mode.encrypt(this, t6, this._decrypt);
    };
    _s.prototype._final = function() {
      this._cipher.scrub();
    };
    Im.exports = _s;
  });
  Ba = T((OT, Tm) => {
    var qn = Te().Buffer, k9 = Ao();
    function L9(t6, e6, r6, o2) {
      if (qn.isBuffer(t6) || (t6 = qn.from(t6, "binary")), e6 && (qn.isBuffer(e6) || (e6 = qn.from(e6, "binary")), e6.length !== 8))
        throw new RangeError("salt should be Buffer with 8 byte length");
      for (var f = r6 / 8, p2 = qn.alloc(f), m2 = qn.alloc(o2 || 0), y2 = qn.alloc(0);f > 0 || o2 > 0; ) {
        var M = new k9;
        M.update(y2), M.update(t6), e6 && M.update(e6), y2 = M.digest();
        var x = 0;
        if (f > 0) {
          var S = p2.length - f;
          x = Math.min(f, y2.length), y2.copy(p2, S, 0, x), f -= x;
        }
        if (x < y2.length && o2 > 0) {
          var E = m2.length - o2, B = Math.min(o2, y2.length - x);
          y2.copy(m2, E, x, x + B), o2 -= B;
        }
      }
      return y2.fill(0), { key: p2, iv: m2 };
    }
    Tm.exports = L9;
  });
  Dm = T((Zu) => {
    var km = ws2(), N9 = Wu(), Mi = Te().Buffer, D9 = ju(), Lm = yi(), P9 = Aa(), C9 = Ba(), O9 = Ie();
    function qa(t6, e6, r6) {
      Lm.call(this), this._cache = new xs, this._cipher = new P9.AES(e6), this._prev = Mi.from(r6), this._mode = t6, this._autopadding = true;
    }
    O9(qa, Lm);
    qa.prototype._update = function(t6) {
      this._cache.add(t6);
      for (var e6, r6, o2 = [];e6 = this._cache.get(); )
        r6 = this._mode.encrypt(this, e6), o2.push(r6);
      return Mi.concat(o2);
    };
    var F9 = Mi.alloc(16, 16);
    qa.prototype._final = function() {
      var t6 = this._cache.flush();
      if (this._autopadding)
        return t6 = this._mode.encrypt(this, t6), this._cipher.scrub(), t6;
      if (!t6.equals(F9))
        throw this._cipher.scrub(), new Error("data not multiple of block length");
    };
    qa.prototype.setAutoPadding = function(t6) {
      return this._autopadding = !!t6, this;
    };
    function xs() {
      this.cache = Mi.allocUnsafe(0);
    }
    xs.prototype.add = function(t6) {
      this.cache = Mi.concat([this.cache, t6]);
    };
    xs.prototype.get = function() {
      if (this.cache.length > 15) {
        var t6 = this.cache.slice(0, 16);
        return this.cache = this.cache.slice(16), t6;
      }
      return null;
    };
    xs.prototype.flush = function() {
      for (var t6 = 16 - this.cache.length, e6 = Mi.allocUnsafe(t6), r6 = -1;++r6 < t6; )
        e6.writeUInt8(t6, r6);
      return Mi.concat([this.cache, e6]);
    };
    function Nm(t6, e6, r6) {
      var o2 = km[t6.toLowerCase()];
      if (!o2)
        throw new TypeError("invalid suite type");
      if (typeof e6 == "string" && (e6 = Mi.from(e6)), e6.length !== o2.key / 8)
        throw new TypeError("invalid key length " + e6.length);
      if (typeof r6 == "string" && (r6 = Mi.from(r6)), o2.mode !== "GCM" && r6.length !== o2.iv)
        throw new TypeError("invalid iv length " + r6.length);
      return o2.type === "stream" ? new D9(o2.module, e6, r6) : o2.type === "auth" ? new N9(o2.module, e6, r6) : new qa(o2.module, e6, r6);
    }
    function U9(t6, e6) {
      var r6 = km[t6.toLowerCase()];
      if (!r6)
        throw new TypeError("invalid suite type");
      var o2 = C9(e6, false, r6.key, r6.iv);
      return Nm(t6, o2.key, o2.iv);
    }
    Zu.createCipheriv = Nm;
    Zu.createCipher = U9;
  });
  Fm = T((Vu) => {
    var z9 = Wu(), Mf = Te().Buffer, Pm = ws2(), H9 = ju(), Cm = yi(), W9 = Aa(), K9 = Ba(), j9 = Ie();
    function Ia(t6, e6, r6) {
      Cm.call(this), this._cache = new Ss, this._last = undefined, this._cipher = new W9.AES(e6), this._prev = Mf.from(r6), this._mode = t6, this._autopadding = true;
    }
    j9(Ia, Cm);
    Ia.prototype._update = function(t6) {
      this._cache.add(t6);
      for (var e6, r6, o2 = [];e6 = this._cache.get(this._autopadding); )
        r6 = this._mode.decrypt(this, e6), o2.push(r6);
      return Mf.concat(o2);
    };
    Ia.prototype._final = function() {
      var t6 = this._cache.flush();
      if (this._autopadding)
        return Z9(this._mode.decrypt(this, t6));
      if (t6)
        throw new Error("data not multiple of block length");
    };
    Ia.prototype.setAutoPadding = function(t6) {
      return this._autopadding = !!t6, this;
    };
    function Ss() {
      this.cache = Mf.allocUnsafe(0);
    }
    Ss.prototype.add = function(t6) {
      this.cache = Mf.concat([this.cache, t6]);
    };
    Ss.prototype.get = function(t6) {
      var e6;
      if (t6) {
        if (this.cache.length > 16)
          return e6 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e6;
      } else if (this.cache.length >= 16)
        return e6 = this.cache.slice(0, 16), this.cache = this.cache.slice(16), e6;
      return null;
    };
    Ss.prototype.flush = function() {
      if (this.cache.length)
        return this.cache;
    };
    function Z9(t6) {
      var e6 = t6[15];
      if (e6 < 1 || e6 > 16)
        throw new Error("unable to decrypt data");
      for (var r6 = -1;++r6 < e6; )
        if (t6[r6 + (16 - e6)] !== e6)
          throw new Error("unable to decrypt data");
      if (e6 !== 16)
        return t6.slice(0, 16 - e6);
    }
    function Om(t6, e6, r6) {
      var o2 = Pm[t6.toLowerCase()];
      if (!o2)
        throw new TypeError("invalid suite type");
      if (typeof r6 == "string" && (r6 = Mf.from(r6)), o2.mode !== "GCM" && r6.length !== o2.iv)
        throw new TypeError("invalid iv length " + r6.length);
      if (typeof e6 == "string" && (e6 = Mf.from(e6)), e6.length !== o2.key / 8)
        throw new TypeError("invalid key length " + e6.length);
      return o2.type === "stream" ? new H9(o2.module, e6, r6, true) : o2.type === "auth" ? new z9(o2.module, e6, r6, true) : new Ia(o2.module, e6, r6);
    }
    function V9(t6, e6) {
      var r6 = Pm[t6.toLowerCase()];
      if (!r6)
        throw new TypeError("invalid suite type");
      var o2 = K9(e6, false, r6.key, r6.iv);
      return Om(t6, o2.key, o2.iv);
    }
    Vu.createDecipher = V9;
    Vu.createDecipheriv = Om;
  });
  Es = T((Nr) => {
    var Um = Dm(), zm = Fm(), $9 = Fu();
    function G9() {
      return Object.keys($9);
    }
    Nr.createCipher = Nr.Cipher = Um.createCipher;
    Nr.createCipheriv = Nr.Cipheriv = Um.createCipheriv;
    Nr.createDecipher = Nr.Decipher = zm.createDecipher;
    Nr.createDecipheriv = Nr.Decipheriv = zm.createDecipheriv;
    Nr.listCiphers = Nr.getCiphers = G9;
  });
  Hm = T((_i) => {
    _i["des-ecb"] = { key: 8, iv: 0 };
    _i["des-cbc"] = _i.des = { key: 8, iv: 8 };
    _i["des-ede3-cbc"] = _i.des3 = { key: 24, iv: 8 };
    _i["des-ede3"] = { key: 24, iv: 0 };
    _i["des-ede-cbc"] = { key: 16, iv: 8 };
    _i["des-ede"] = { key: 16, iv: 0 };
  });
  Vm = T((Dr) => {
    var Wm = im(), $u = Es(), Ki = ws2(), xi = Hm(), Km = Ba();
    function Y9(t6, e6) {
      t6 = t6.toLowerCase();
      var r6, o2;
      if (Ki[t6])
        r6 = Ki[t6].key, o2 = Ki[t6].iv;
      else if (xi[t6])
        r6 = xi[t6].key * 8, o2 = xi[t6].iv;
      else
        throw new TypeError("invalid suite type");
      var f = Km(e6, false, r6, o2);
      return jm(t6, f.key, f.iv);
    }
    function X9(t6, e6) {
      t6 = t6.toLowerCase();
      var r6, o2;
      if (Ki[t6])
        r6 = Ki[t6].key, o2 = Ki[t6].iv;
      else if (xi[t6])
        r6 = xi[t6].key * 8, o2 = xi[t6].iv;
      else
        throw new TypeError("invalid suite type");
      var f = Km(e6, false, r6, o2);
      return Zm(t6, f.key, f.iv);
    }
    function jm(t6, e6, r6) {
      if (t6 = t6.toLowerCase(), Ki[t6])
        return $u.createCipheriv(t6, e6, r6);
      if (xi[t6])
        return new Wm({ key: e6, iv: r6, mode: t6 });
      throw new TypeError("invalid suite type");
    }
    function Zm(t6, e6, r6) {
      if (t6 = t6.toLowerCase(), Ki[t6])
        return $u.createDecipheriv(t6, e6, r6);
      if (xi[t6])
        return new Wm({ key: e6, iv: r6, mode: t6, decrypt: true });
      throw new TypeError("invalid suite type");
    }
    function J9() {
      return Object.keys(xi).concat($u.getCiphers());
    }
    Dr.createCipher = Dr.Cipher = Y9;
    Dr.createCipheriv = Dr.Cipheriv = jm;
    Dr.createDecipher = Dr.Decipher = X9;
    Dr.createDecipheriv = Dr.Decipheriv = Zm;
    Dr.listCiphers = Dr.getCiphers = J9;
  });
  ji = T(() => {
  });
  Yu = T(($m, Gu) => {
    (function(t6, e6) {
      function r6(v, i2) {
        if (!v)
          throw new Error(i2 || "Assertion failed");
      }
      function o2(v, i2) {
        v.super_ = i2;
        var a4 = function() {
        };
        a4.prototype = i2.prototype, v.prototype = new a4, v.prototype.constructor = v;
      }
      function f(v, i2, a4) {
        if (f.isBN(v))
          return v;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i2 === "le" || i2 === "be") && (a4 = i2, i2 = 10), this._init(v || 0, i2 || 10, a4 || "be"));
      }
      typeof t6 == "object" ? t6.exports = f : e6.BN = f, f.BN = f, f.wordSize = 26;
      var p2;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p2 = window.Buffer : p2 = ji().Buffer;
      } catch {
      }
      f.isBN = function(i2) {
        return i2 instanceof f ? true : i2 !== null && typeof i2 == "object" && i2.constructor.wordSize === f.wordSize && Array.isArray(i2.words);
      }, f.max = function(i2, a4) {
        return i2.cmp(a4) > 0 ? i2 : a4;
      }, f.min = function(i2, a4) {
        return i2.cmp(a4) < 0 ? i2 : a4;
      }, f.prototype._init = function(i2, a4, h2) {
        if (typeof i2 == "number")
          return this._initNumber(i2, a4, h2);
        if (typeof i2 == "object")
          return this._initArray(i2, a4, h2);
        a4 === "hex" && (a4 = 16), r6(a4 === (a4 | 0) && a4 >= 2 && a4 <= 36), i2 = i2.toString().replace(/\s+/g, "");
        var s5 = 0;
        i2[0] === "-" && (s5++, this.negative = 1), s5 < i2.length && (a4 === 16 ? this._parseHex(i2, s5, h2) : (this._parseBase(i2, a4, s5), h2 === "le" && this._initArray(this.toArray(), a4, h2)));
      }, f.prototype._initNumber = function(i2, a4, h2) {
        i2 < 0 && (this.negative = 1, i2 = -i2), i2 < 67108864 ? (this.words = [i2 & 67108863], this.length = 1) : i2 < 4503599627370496 ? (this.words = [i2 & 67108863, i2 / 67108864 & 67108863], this.length = 2) : (r6(i2 < 9007199254740992), this.words = [i2 & 67108863, i2 / 67108864 & 67108863, 1], this.length = 3), h2 === "le" && this._initArray(this.toArray(), a4, h2);
      }, f.prototype._initArray = function(i2, a4, h2) {
        if (r6(typeof i2.length == "number"), i2.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i2.length / 3), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2, c, b2 = 0;
        if (h2 === "be")
          for (s5 = i2.length - 1, u2 = 0;s5 >= 0; s5 -= 3)
            c = i2[s5] | i2[s5 - 1] << 8 | i2[s5 - 2] << 16, this.words[u2] |= c << b2 & 67108863, this.words[u2 + 1] = c >>> 26 - b2 & 67108863, b2 += 24, b2 >= 26 && (b2 -= 26, u2++);
        else if (h2 === "le")
          for (s5 = 0, u2 = 0;s5 < i2.length; s5 += 3)
            c = i2[s5] | i2[s5 + 1] << 8 | i2[s5 + 2] << 16, this.words[u2] |= c << b2 & 67108863, this.words[u2 + 1] = c >>> 26 - b2 & 67108863, b2 += 24, b2 >= 26 && (b2 -= 26, u2++);
        return this.strip();
      };
      function m2(v, i2) {
        var a4 = v.charCodeAt(i2);
        return a4 >= 65 && a4 <= 70 ? a4 - 55 : a4 >= 97 && a4 <= 102 ? a4 - 87 : a4 - 48 & 15;
      }
      function y2(v, i2, a4) {
        var h2 = m2(v, a4);
        return a4 - 1 >= i2 && (h2 |= m2(v, a4 - 1) << 4), h2;
      }
      f.prototype._parseHex = function(i2, a4, h2) {
        this.length = Math.ceil((i2.length - a4) / 6), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2 = 0, c = 0, b2;
        if (h2 === "be")
          for (s5 = i2.length - 1;s5 >= a4; s5 -= 2)
            b2 = y2(i2, a4, s5) << u2, this.words[c] |= b2 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b2 >>> 26) : u2 += 8;
        else {
          var l = i2.length - a4;
          for (s5 = l % 2 === 0 ? a4 + 1 : a4;s5 < i2.length; s5 += 2)
            b2 = y2(i2, a4, s5) << u2, this.words[c] |= b2 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b2 >>> 26) : u2 += 8;
        }
        this.strip();
      };
      function M(v, i2, a4, h2) {
        for (var s5 = 0, u2 = Math.min(v.length, a4), c = i2;c < u2; c++) {
          var b2 = v.charCodeAt(c) - 48;
          s5 *= h2, b2 >= 49 ? s5 += b2 - 49 + 10 : b2 >= 17 ? s5 += b2 - 17 + 10 : s5 += b2;
        }
        return s5;
      }
      f.prototype._parseBase = function(i2, a4, h2) {
        this.words = [0], this.length = 1;
        for (var s5 = 0, u2 = 1;u2 <= 67108863; u2 *= a4)
          s5++;
        s5--, u2 = u2 / a4 | 0;
        for (var c = i2.length - h2, b2 = c % s5, l = Math.min(c, c - b2) + h2, n2 = 0, d2 = h2;d2 < l; d2 += s5)
          n2 = M(i2, d2, d2 + s5, a4), this.imuln(u2), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        if (b2 !== 0) {
          var w = 1;
          for (n2 = M(i2, d2, i2.length, a4), d2 = 0;d2 < b2; d2++)
            w *= a4;
          this.imuln(w), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        }
        this.strip();
      }, f.prototype.copy = function(i2) {
        i2.words = new Array(this.length);
        for (var a4 = 0;a4 < this.length; a4++)
          i2.words[a4] = this.words[a4];
        i2.length = this.length, i2.negative = this.negative, i2.red = this.red;
      }, f.prototype.clone = function() {
        var i2 = new f(null);
        return this.copy(i2), i2;
      }, f.prototype._expand = function(i2) {
        for (;this.length < i2; )
          this.words[this.length++] = 0;
        return this;
      }, f.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f.prototype.toString = function(i2, a4) {
        i2 = i2 || 10, a4 = a4 | 0 || 1;
        var h2;
        if (i2 === 16 || i2 === "hex") {
          h2 = "";
          for (var s5 = 0, u2 = 0, c = 0;c < this.length; c++) {
            var b2 = this.words[c], l = ((b2 << s5 | u2) & 16777215).toString(16);
            u2 = b2 >>> 24 - s5 & 16777215, u2 !== 0 || c !== this.length - 1 ? h2 = x[6 - l.length] + l + h2 : h2 = l + h2, s5 += 2, s5 >= 26 && (s5 -= 26, c--);
          }
          for (u2 !== 0 && (h2 = u2.toString(16) + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        if (i2 === (i2 | 0) && i2 >= 2 && i2 <= 36) {
          var n2 = S[i2], d2 = E[i2];
          h2 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g2 = w.modn(d2).toString(i2);
            w = w.idivn(d2), w.isZero() ? h2 = g2 + h2 : h2 = x[n2 - g2.length] + g2 + h2;
          }
          for (this.isZero() && (h2 = "0" + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        r6(false, "Base should be between 2 and 36");
      }, f.prototype.toNumber = function() {
        var i2 = this.words[0];
        return this.length === 2 ? i2 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i2 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i2 : i2;
      }, f.prototype.toJSON = function() {
        return this.toString(16);
      }, f.prototype.toBuffer = function(i2, a4) {
        return r6(typeof p2 < "u"), this.toArrayLike(p2, i2, a4);
      }, f.prototype.toArray = function(i2, a4) {
        return this.toArrayLike(Array, i2, a4);
      }, f.prototype.toArrayLike = function(i2, a4, h2) {
        var s5 = this.byteLength(), u2 = h2 || Math.max(1, s5);
        r6(s5 <= u2, "byte array longer than desired length"), r6(u2 > 0, "Requested array length <= 0"), this.strip();
        var c = a4 === "le", b2 = new i2(u2), l, n2, d2 = this.clone();
        if (c) {
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b2[n2] = l;
          for (;n2 < u2; n2++)
            b2[n2] = 0;
        } else {
          for (n2 = 0;n2 < u2 - s5; n2++)
            b2[n2] = 0;
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b2[u2 - n2 - 1] = l;
        }
        return b2;
      }, Math.clz32 ? f.prototype._countBits = function(i2) {
        return 32 - Math.clz32(i2);
      } : f.prototype._countBits = function(i2) {
        var a4 = i2, h2 = 0;
        return a4 >= 4096 && (h2 += 13, a4 >>>= 13), a4 >= 64 && (h2 += 7, a4 >>>= 7), a4 >= 8 && (h2 += 4, a4 >>>= 4), a4 >= 2 && (h2 += 2, a4 >>>= 2), h2 + a4;
      }, f.prototype._zeroBits = function(i2) {
        if (i2 === 0)
          return 26;
        var a4 = i2, h2 = 0;
        return (a4 & 8191) === 0 && (h2 += 13, a4 >>>= 13), (a4 & 127) === 0 && (h2 += 7, a4 >>>= 7), (a4 & 15) === 0 && (h2 += 4, a4 >>>= 4), (a4 & 3) === 0 && (h2 += 2, a4 >>>= 2), (a4 & 1) === 0 && h2++, h2;
      }, f.prototype.bitLength = function() {
        var i2 = this.words[this.length - 1], a4 = this._countBits(i2);
        return (this.length - 1) * 26 + a4;
      };
      function B(v) {
        for (var i2 = new Array(v.bitLength()), a4 = 0;a4 < i2.length; a4++) {
          var h2 = a4 / 26 | 0, s5 = a4 % 26;
          i2[a4] = (v.words[h2] & 1 << s5) >>> s5;
        }
        return i2;
      }
      f.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i2 = 0, a4 = 0;a4 < this.length; a4++) {
          var h2 = this._zeroBits(this.words[a4]);
          if (i2 += h2, h2 !== 26)
            break;
        }
        return i2;
      }, f.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f.prototype.toTwos = function(i2) {
        return this.negative !== 0 ? this.abs().inotn(i2).iaddn(1) : this.clone();
      }, f.prototype.fromTwos = function(i2) {
        return this.testn(i2 - 1) ? this.notn(i2).iaddn(1).ineg() : this.clone();
      }, f.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f.prototype.neg = function() {
        return this.clone().ineg();
      }, f.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f.prototype.iuor = function(i2) {
        for (;this.length < i2.length; )
          this.words[this.length++] = 0;
        for (var a4 = 0;a4 < i2.length; a4++)
          this.words[a4] = this.words[a4] | i2.words[a4];
        return this.strip();
      }, f.prototype.ior = function(i2) {
        return r6((this.negative | i2.negative) === 0), this.iuor(i2);
      }, f.prototype.or = function(i2) {
        return this.length > i2.length ? this.clone().ior(i2) : i2.clone().ior(this);
      }, f.prototype.uor = function(i2) {
        return this.length > i2.length ? this.clone().iuor(i2) : i2.clone().iuor(this);
      }, f.prototype.iuand = function(i2) {
        var a4;
        this.length > i2.length ? a4 = i2 : a4 = this;
        for (var h2 = 0;h2 < a4.length; h2++)
          this.words[h2] = this.words[h2] & i2.words[h2];
        return this.length = a4.length, this.strip();
      }, f.prototype.iand = function(i2) {
        return r6((this.negative | i2.negative) === 0), this.iuand(i2);
      }, f.prototype.and = function(i2) {
        return this.length > i2.length ? this.clone().iand(i2) : i2.clone().iand(this);
      }, f.prototype.uand = function(i2) {
        return this.length > i2.length ? this.clone().iuand(i2) : i2.clone().iuand(this);
      }, f.prototype.iuxor = function(i2) {
        var a4, h2;
        this.length > i2.length ? (a4 = this, h2 = i2) : (a4 = i2, h2 = this);
        for (var s5 = 0;s5 < h2.length; s5++)
          this.words[s5] = a4.words[s5] ^ h2.words[s5];
        if (this !== a4)
          for (;s5 < a4.length; s5++)
            this.words[s5] = a4.words[s5];
        return this.length = a4.length, this.strip();
      }, f.prototype.ixor = function(i2) {
        return r6((this.negative | i2.negative) === 0), this.iuxor(i2);
      }, f.prototype.xor = function(i2) {
        return this.length > i2.length ? this.clone().ixor(i2) : i2.clone().ixor(this);
      }, f.prototype.uxor = function(i2) {
        return this.length > i2.length ? this.clone().iuxor(i2) : i2.clone().iuxor(this);
      }, f.prototype.inotn = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = Math.ceil(i2 / 26) | 0, h2 = i2 % 26;
        this._expand(a4), h2 > 0 && a4--;
        for (var s5 = 0;s5 < a4; s5++)
          this.words[s5] = ~this.words[s5] & 67108863;
        return h2 > 0 && (this.words[s5] = ~this.words[s5] & 67108863 >> 26 - h2), this.strip();
      }, f.prototype.notn = function(i2) {
        return this.clone().inotn(i2);
      }, f.prototype.setn = function(i2, a4) {
        r6(typeof i2 == "number" && i2 >= 0);
        var h2 = i2 / 26 | 0, s5 = i2 % 26;
        return this._expand(h2 + 1), a4 ? this.words[h2] = this.words[h2] | 1 << s5 : this.words[h2] = this.words[h2] & ~(1 << s5), this.strip();
      }, f.prototype.iadd = function(i2) {
        var a4;
        if (this.negative !== 0 && i2.negative === 0)
          return this.negative = 0, a4 = this.isub(i2), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i2.negative !== 0)
          return i2.negative = 0, a4 = this.isub(i2), i2.negative = 1, a4._normSign();
        var h2, s5;
        this.length > i2.length ? (h2 = this, s5 = i2) : (h2 = i2, s5 = this);
        for (var u2 = 0, c = 0;c < s5.length; c++)
          a4 = (h2.words[c] | 0) + (s5.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        for (;u2 !== 0 && c < h2.length; c++)
          a4 = (h2.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        if (this.length = h2.length, u2 !== 0)
          this.words[this.length] = u2, this.length++;
        else if (h2 !== this)
          for (;c < h2.length; c++)
            this.words[c] = h2.words[c];
        return this;
      }, f.prototype.add = function(i2) {
        var a4;
        return i2.negative !== 0 && this.negative === 0 ? (i2.negative = 0, a4 = this.sub(i2), i2.negative ^= 1, a4) : i2.negative === 0 && this.negative !== 0 ? (this.negative = 0, a4 = i2.sub(this), this.negative = 1, a4) : this.length > i2.length ? this.clone().iadd(i2) : i2.clone().iadd(this);
      }, f.prototype.isub = function(i2) {
        if (i2.negative !== 0) {
          i2.negative = 0;
          var a4 = this.iadd(i2);
          return i2.negative = 1, a4._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i2), this.negative = 1, this._normSign();
        var h2 = this.cmp(i2);
        if (h2 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s5, u2;
        h2 > 0 ? (s5 = this, u2 = i2) : (s5 = i2, u2 = this);
        for (var c = 0, b2 = 0;b2 < u2.length; b2++)
          a4 = (s5.words[b2] | 0) - (u2.words[b2] | 0) + c, c = a4 >> 26, this.words[b2] = a4 & 67108863;
        for (;c !== 0 && b2 < s5.length; b2++)
          a4 = (s5.words[b2] | 0) + c, c = a4 >> 26, this.words[b2] = a4 & 67108863;
        if (c === 0 && b2 < s5.length && s5 !== this)
          for (;b2 < s5.length; b2++)
            this.words[b2] = s5.words[b2];
        return this.length = Math.max(this.length, b2), s5 !== this && (this.negative = 1), this.strip();
      }, f.prototype.sub = function(i2) {
        return this.clone().isub(i2);
      };
      function q2(v, i2, a4) {
        a4.negative = i2.negative ^ v.negative;
        var h2 = v.length + i2.length | 0;
        a4.length = h2, h2 = h2 - 1 | 0;
        var s5 = v.words[0] | 0, u2 = i2.words[0] | 0, c = s5 * u2, b2 = c & 67108863, l = c / 67108864 | 0;
        a4.words[0] = b2;
        for (var n2 = 1;n2 < h2; n2++) {
          for (var d2 = l >>> 26, w = l & 67108863, g2 = Math.min(n2, i2.length - 1), _ = Math.max(0, n2 - v.length + 1);_ <= g2; _++) {
            var A = n2 - _ | 0;
            s5 = v.words[A] | 0, u2 = i2.words[_] | 0, c = s5 * u2 + w, d2 += c / 67108864 | 0, w = c & 67108863;
          }
          a4.words[n2] = w | 0, l = d2 | 0;
        }
        return l !== 0 ? a4.words[n2] = l | 0 : a4.length--, a4.strip();
      }
      var L = function(i2, a4, h2) {
        var s5 = i2.words, u2 = a4.words, c = h2.words, b2 = 0, l, n2, d2, w = s5[0] | 0, g2 = w & 8191, _ = w >>> 13, A = s5[1] | 0, R = A & 8191, I = A >>> 13, Me = s5[2] | 0, k2 = Me & 8191, D = Me >>> 13, nt = s5[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s5[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s5[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s5[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s5[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s5[8] | 0, V = yt & 8191, $2 = yt >>> 13, wt = s5[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u2[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u2[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u2[2] | 0, te = xt & 8191, re = xt >>> 13, St = u2[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u2[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u2[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u2[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u2[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u2[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u2[9] | 0, ve = It & 8191, be = It >>> 13;
        h2.negative = i2.negative ^ a4.negative, h2.length = 19, l = Math.imul(g2, X), n2 = Math.imul(g2, J), n2 = n2 + Math.imul(_, X) | 0, d2 = Math.imul(_, J);
        var ft = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n2 = Math.imul(R, J), n2 = n2 + Math.imul(I, X) | 0, d2 = Math.imul(I, J), l = l + Math.imul(g2, Q) | 0, n2 = n2 + Math.imul(g2, ee) | 0, n2 = n2 + Math.imul(_, Q) | 0, d2 = d2 + Math.imul(_, ee) | 0;
        var Be = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k2, X), n2 = Math.imul(k2, J), n2 = n2 + Math.imul(D, X) | 0, d2 = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n2 = n2 + Math.imul(R, ee) | 0, n2 = n2 + Math.imul(I, Q) | 0, d2 = d2 + Math.imul(I, ee) | 0, l = l + Math.imul(g2, te) | 0, n2 = n2 + Math.imul(g2, re) | 0, n2 = n2 + Math.imul(_, te) | 0, d2 = d2 + Math.imul(_, re) | 0;
        var qe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n2 = Math.imul(C, J), n2 = n2 + Math.imul(O, X) | 0, d2 = Math.imul(O, J), l = l + Math.imul(k2, Q) | 0, n2 = n2 + Math.imul(k2, ee) | 0, n2 = n2 + Math.imul(D, Q) | 0, d2 = d2 + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n2 = n2 + Math.imul(R, re) | 0, n2 = n2 + Math.imul(I, te) | 0, d2 = d2 + Math.imul(I, re) | 0, l = l + Math.imul(g2, ie) | 0, n2 = n2 + Math.imul(g2, ne) | 0, n2 = n2 + Math.imul(_, ie) | 0, d2 = d2 + Math.imul(_, ne) | 0;
        var ze = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n2 = Math.imul(F, J), n2 = n2 + Math.imul(U, X) | 0, d2 = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n2 = n2 + Math.imul(C, ee) | 0, n2 = n2 + Math.imul(O, Q) | 0, d2 = d2 + Math.imul(O, ee) | 0, l = l + Math.imul(k2, te) | 0, n2 = n2 + Math.imul(k2, re) | 0, n2 = n2 + Math.imul(D, te) | 0, d2 = d2 + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n2 = n2 + Math.imul(R, ne) | 0, n2 = n2 + Math.imul(I, ie) | 0, d2 = d2 + Math.imul(I, ne) | 0, l = l + Math.imul(g2, fe) | 0, n2 = n2 + Math.imul(g2, ae) | 0, n2 = n2 + Math.imul(_, fe) | 0, d2 = d2 + Math.imul(_, ae) | 0;
        var He = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n2 = Math.imul(z, J), n2 = n2 + Math.imul(H, X) | 0, d2 = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n2 = n2 + Math.imul(F, ee) | 0, n2 = n2 + Math.imul(U, Q) | 0, d2 = d2 + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n2 = n2 + Math.imul(C, re) | 0, n2 = n2 + Math.imul(O, te) | 0, d2 = d2 + Math.imul(O, re) | 0, l = l + Math.imul(k2, ie) | 0, n2 = n2 + Math.imul(k2, ne) | 0, n2 = n2 + Math.imul(D, ie) | 0, d2 = d2 + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n2 = n2 + Math.imul(R, ae) | 0, n2 = n2 + Math.imul(I, fe) | 0, d2 = d2 + Math.imul(I, ae) | 0, l = l + Math.imul(g2, oe) | 0, n2 = n2 + Math.imul(g2, se) | 0, n2 = n2 + Math.imul(_, oe) | 0, d2 = d2 + Math.imul(_, se) | 0;
        var We = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n2 = Math.imul(W, J), n2 = n2 + Math.imul(K, X) | 0, d2 = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n2 = n2 + Math.imul(z, ee) | 0, n2 = n2 + Math.imul(H, Q) | 0, d2 = d2 + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n2 = n2 + Math.imul(F, re) | 0, n2 = n2 + Math.imul(U, te) | 0, d2 = d2 + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n2 = n2 + Math.imul(C, ne) | 0, n2 = n2 + Math.imul(O, ie) | 0, d2 = d2 + Math.imul(O, ne) | 0, l = l + Math.imul(k2, fe) | 0, n2 = n2 + Math.imul(k2, ae) | 0, n2 = n2 + Math.imul(D, fe) | 0, d2 = d2 + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n2 = n2 + Math.imul(R, se) | 0, n2 = n2 + Math.imul(I, oe) | 0, d2 = d2 + Math.imul(I, se) | 0, l = l + Math.imul(g2, he) | 0, n2 = n2 + Math.imul(g2, ue) | 0, n2 = n2 + Math.imul(_, he) | 0, d2 = d2 + Math.imul(_, ue) | 0;
        var Ke = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n2 = Math.imul(j, J), n2 = n2 + Math.imul(Z, X) | 0, d2 = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n2 = n2 + Math.imul(W, ee) | 0, n2 = n2 + Math.imul(K, Q) | 0, d2 = d2 + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n2 = n2 + Math.imul(z, re) | 0, n2 = n2 + Math.imul(H, te) | 0, d2 = d2 + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n2 = n2 + Math.imul(F, ne) | 0, n2 = n2 + Math.imul(U, ie) | 0, d2 = d2 + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n2 = n2 + Math.imul(C, ae) | 0, n2 = n2 + Math.imul(O, fe) | 0, d2 = d2 + Math.imul(O, ae) | 0, l = l + Math.imul(k2, oe) | 0, n2 = n2 + Math.imul(k2, se) | 0, n2 = n2 + Math.imul(D, oe) | 0, d2 = d2 + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n2 = n2 + Math.imul(R, ue) | 0, n2 = n2 + Math.imul(I, he) | 0, d2 = d2 + Math.imul(I, ue) | 0, l = l + Math.imul(g2, le) | 0, n2 = n2 + Math.imul(g2, de) | 0, n2 = n2 + Math.imul(_, le) | 0, d2 = d2 + Math.imul(_, de) | 0;
        var je = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n2 = Math.imul(V, J), n2 = n2 + Math.imul($2, X) | 0, d2 = Math.imul($2, J), l = l + Math.imul(j, Q) | 0, n2 = n2 + Math.imul(j, ee) | 0, n2 = n2 + Math.imul(Z, Q) | 0, d2 = d2 + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n2 = n2 + Math.imul(W, re) | 0, n2 = n2 + Math.imul(K, te) | 0, d2 = d2 + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n2 = n2 + Math.imul(z, ne) | 0, n2 = n2 + Math.imul(H, ie) | 0, d2 = d2 + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n2 = n2 + Math.imul(F, ae) | 0, n2 = n2 + Math.imul(U, fe) | 0, d2 = d2 + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n2 = n2 + Math.imul(C, se) | 0, n2 = n2 + Math.imul(O, oe) | 0, d2 = d2 + Math.imul(O, se) | 0, l = l + Math.imul(k2, he) | 0, n2 = n2 + Math.imul(k2, ue) | 0, n2 = n2 + Math.imul(D, he) | 0, d2 = d2 + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n2 = n2 + Math.imul(R, de) | 0, n2 = n2 + Math.imul(I, le) | 0, d2 = d2 + Math.imul(I, de) | 0, l = l + Math.imul(g2, ce) | 0, n2 = n2 + Math.imul(g2, pe) | 0, n2 = n2 + Math.imul(_, ce) | 0, d2 = d2 + Math.imul(_, pe) | 0;
        var Ze = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n2 = Math.imul(G, J), n2 = n2 + Math.imul(Y, X) | 0, d2 = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n2 = n2 + Math.imul(V, ee) | 0, n2 = n2 + Math.imul($2, Q) | 0, d2 = d2 + Math.imul($2, ee) | 0, l = l + Math.imul(j, te) | 0, n2 = n2 + Math.imul(j, re) | 0, n2 = n2 + Math.imul(Z, te) | 0, d2 = d2 + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n2 = n2 + Math.imul(W, ne) | 0, n2 = n2 + Math.imul(K, ie) | 0, d2 = d2 + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n2 = n2 + Math.imul(z, ae) | 0, n2 = n2 + Math.imul(H, fe) | 0, d2 = d2 + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n2 = n2 + Math.imul(F, se) | 0, n2 = n2 + Math.imul(U, oe) | 0, d2 = d2 + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n2 = n2 + Math.imul(C, ue) | 0, n2 = n2 + Math.imul(O, he) | 0, d2 = d2 + Math.imul(O, ue) | 0, l = l + Math.imul(k2, le) | 0, n2 = n2 + Math.imul(k2, de) | 0, n2 = n2 + Math.imul(D, le) | 0, d2 = d2 + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n2 = n2 + Math.imul(R, pe) | 0, n2 = n2 + Math.imul(I, ce) | 0, d2 = d2 + Math.imul(I, pe) | 0, l = l + Math.imul(g2, ve) | 0, n2 = n2 + Math.imul(g2, be) | 0, n2 = n2 + Math.imul(_, ve) | 0, d2 = d2 + Math.imul(_, be) | 0;
        var Ve = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n2 = Math.imul(G, ee), n2 = n2 + Math.imul(Y, Q) | 0, d2 = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n2 = n2 + Math.imul(V, re) | 0, n2 = n2 + Math.imul($2, te) | 0, d2 = d2 + Math.imul($2, re) | 0, l = l + Math.imul(j, ie) | 0, n2 = n2 + Math.imul(j, ne) | 0, n2 = n2 + Math.imul(Z, ie) | 0, d2 = d2 + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n2 = n2 + Math.imul(W, ae) | 0, n2 = n2 + Math.imul(K, fe) | 0, d2 = d2 + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n2 = n2 + Math.imul(z, se) | 0, n2 = n2 + Math.imul(H, oe) | 0, d2 = d2 + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n2 = n2 + Math.imul(F, ue) | 0, n2 = n2 + Math.imul(U, he) | 0, d2 = d2 + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n2 = n2 + Math.imul(C, de) | 0, n2 = n2 + Math.imul(O, le) | 0, d2 = d2 + Math.imul(O, de) | 0, l = l + Math.imul(k2, ce) | 0, n2 = n2 + Math.imul(k2, pe) | 0, n2 = n2 + Math.imul(D, ce) | 0, d2 = d2 + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n2 = n2 + Math.imul(R, be) | 0, n2 = n2 + Math.imul(I, ve) | 0, d2 = d2 + Math.imul(I, be) | 0;
        var $e = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n2 = Math.imul(G, re), n2 = n2 + Math.imul(Y, te) | 0, d2 = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n2 = n2 + Math.imul(V, ne) | 0, n2 = n2 + Math.imul($2, ie) | 0, d2 = d2 + Math.imul($2, ne) | 0, l = l + Math.imul(j, fe) | 0, n2 = n2 + Math.imul(j, ae) | 0, n2 = n2 + Math.imul(Z, fe) | 0, d2 = d2 + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n2 = n2 + Math.imul(W, se) | 0, n2 = n2 + Math.imul(K, oe) | 0, d2 = d2 + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n2 = n2 + Math.imul(z, ue) | 0, n2 = n2 + Math.imul(H, he) | 0, d2 = d2 + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n2 = n2 + Math.imul(F, de) | 0, n2 = n2 + Math.imul(U, le) | 0, d2 = d2 + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n2 = n2 + Math.imul(C, pe) | 0, n2 = n2 + Math.imul(O, ce) | 0, d2 = d2 + Math.imul(O, pe) | 0, l = l + Math.imul(k2, ve) | 0, n2 = n2 + Math.imul(k2, be) | 0, n2 = n2 + Math.imul(D, ve) | 0, d2 = d2 + Math.imul(D, be) | 0;
        var Ge = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n2 = Math.imul(G, ne), n2 = n2 + Math.imul(Y, ie) | 0, d2 = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n2 = n2 + Math.imul(V, ae) | 0, n2 = n2 + Math.imul($2, fe) | 0, d2 = d2 + Math.imul($2, ae) | 0, l = l + Math.imul(j, oe) | 0, n2 = n2 + Math.imul(j, se) | 0, n2 = n2 + Math.imul(Z, oe) | 0, d2 = d2 + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n2 = n2 + Math.imul(W, ue) | 0, n2 = n2 + Math.imul(K, he) | 0, d2 = d2 + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n2 = n2 + Math.imul(z, de) | 0, n2 = n2 + Math.imul(H, le) | 0, d2 = d2 + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n2 = n2 + Math.imul(F, pe) | 0, n2 = n2 + Math.imul(U, ce) | 0, d2 = d2 + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n2 = n2 + Math.imul(C, be) | 0, n2 = n2 + Math.imul(O, ve) | 0, d2 = d2 + Math.imul(O, be) | 0;
        var Ye = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n2 = Math.imul(G, ae), n2 = n2 + Math.imul(Y, fe) | 0, d2 = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n2 = n2 + Math.imul(V, se) | 0, n2 = n2 + Math.imul($2, oe) | 0, d2 = d2 + Math.imul($2, se) | 0, l = l + Math.imul(j, he) | 0, n2 = n2 + Math.imul(j, ue) | 0, n2 = n2 + Math.imul(Z, he) | 0, d2 = d2 + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n2 = n2 + Math.imul(W, de) | 0, n2 = n2 + Math.imul(K, le) | 0, d2 = d2 + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n2 = n2 + Math.imul(z, pe) | 0, n2 = n2 + Math.imul(H, ce) | 0, d2 = d2 + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n2 = n2 + Math.imul(F, be) | 0, n2 = n2 + Math.imul(U, ve) | 0, d2 = d2 + Math.imul(U, be) | 0;
        var Xe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n2 = Math.imul(G, se), n2 = n2 + Math.imul(Y, oe) | 0, d2 = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n2 = n2 + Math.imul(V, ue) | 0, n2 = n2 + Math.imul($2, he) | 0, d2 = d2 + Math.imul($2, ue) | 0, l = l + Math.imul(j, le) | 0, n2 = n2 + Math.imul(j, de) | 0, n2 = n2 + Math.imul(Z, le) | 0, d2 = d2 + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n2 = n2 + Math.imul(W, pe) | 0, n2 = n2 + Math.imul(K, ce) | 0, d2 = d2 + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n2 = n2 + Math.imul(z, be) | 0, n2 = n2 + Math.imul(H, ve) | 0, d2 = d2 + Math.imul(H, be) | 0;
        var Je = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n2 = Math.imul(G, ue), n2 = n2 + Math.imul(Y, he) | 0, d2 = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n2 = n2 + Math.imul(V, de) | 0, n2 = n2 + Math.imul($2, le) | 0, d2 = d2 + Math.imul($2, de) | 0, l = l + Math.imul(j, ce) | 0, n2 = n2 + Math.imul(j, pe) | 0, n2 = n2 + Math.imul(Z, ce) | 0, d2 = d2 + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n2 = n2 + Math.imul(W, be) | 0, n2 = n2 + Math.imul(K, ve) | 0, d2 = d2 + Math.imul(K, be) | 0;
        var Qe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n2 = Math.imul(G, de), n2 = n2 + Math.imul(Y, le) | 0, d2 = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n2 = n2 + Math.imul(V, pe) | 0, n2 = n2 + Math.imul($2, ce) | 0, d2 = d2 + Math.imul($2, pe) | 0, l = l + Math.imul(j, ve) | 0, n2 = n2 + Math.imul(j, be) | 0, n2 = n2 + Math.imul(Z, ve) | 0, d2 = d2 + Math.imul(Z, be) | 0;
        var et = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n2 = Math.imul(G, pe), n2 = n2 + Math.imul(Y, ce) | 0, d2 = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n2 = n2 + Math.imul(V, be) | 0, n2 = n2 + Math.imul($2, ve) | 0, d2 = d2 + Math.imul($2, be) | 0;
        var tt = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n2 = Math.imul(G, be), n2 = n2 + Math.imul(Y, ve) | 0, d2 = Math.imul(Y, be);
        var rt = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        return b2 = (d2 + (n2 >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b2 !== 0 && (c[19] = b2, h2.length++), h2;
      };
      Math.imul || (L = q2);
      function ge(v, i2, a4) {
        a4.negative = i2.negative ^ v.negative, a4.length = v.length + i2.length;
        for (var h2 = 0, s5 = 0, u2 = 0;u2 < a4.length - 1; u2++) {
          var c = s5;
          s5 = 0;
          for (var b2 = h2 & 67108863, l = Math.min(u2, i2.length - 1), n2 = Math.max(0, u2 - v.length + 1);n2 <= l; n2++) {
            var d2 = u2 - n2, w = v.words[d2] | 0, g2 = i2.words[n2] | 0, _ = w * g2, A = _ & 67108863;
            c = c + (_ / 67108864 | 0) | 0, A = A + b2 | 0, b2 = A & 67108863, c = c + (A >>> 26) | 0, s5 += c >>> 26, c &= 67108863;
          }
          a4.words[u2] = b2, h2 = c, c = s5;
        }
        return h2 !== 0 ? a4.words[u2] = h2 : a4.length--, a4.strip();
      }
      function _e(v, i2, a4) {
        var h2 = new N;
        return h2.mulp(v, i2, a4);
      }
      f.prototype.mulTo = function(i2, a4) {
        var h2, s5 = this.length + i2.length;
        return this.length === 10 && i2.length === 10 ? h2 = L(this, i2, a4) : s5 < 63 ? h2 = q2(this, i2, a4) : s5 < 1024 ? h2 = ge(this, i2, a4) : h2 = _e(this, i2, a4), h2;
      };
      function N(v, i2) {
        this.x = v, this.y = i2;
      }
      N.prototype.makeRBT = function(i2) {
        for (var a4 = new Array(i2), h2 = f.prototype._countBits(i2) - 1, s5 = 0;s5 < i2; s5++)
          a4[s5] = this.revBin(s5, h2, i2);
        return a4;
      }, N.prototype.revBin = function(i2, a4, h2) {
        if (i2 === 0 || i2 === h2 - 1)
          return i2;
        for (var s5 = 0, u2 = 0;u2 < a4; u2++)
          s5 |= (i2 & 1) << a4 - u2 - 1, i2 >>= 1;
        return s5;
      }, N.prototype.permute = function(i2, a4, h2, s5, u2, c) {
        for (var b2 = 0;b2 < c; b2++)
          s5[b2] = a4[i2[b2]], u2[b2] = h2[i2[b2]];
      }, N.prototype.transform = function(i2, a4, h2, s5, u2, c) {
        this.permute(c, i2, a4, h2, s5, u2);
        for (var b2 = 1;b2 < u2; b2 <<= 1)
          for (var l = b2 << 1, n2 = Math.cos(2 * Math.PI / l), d2 = Math.sin(2 * Math.PI / l), w = 0;w < u2; w += l)
            for (var g2 = n2, _ = d2, A = 0;A < b2; A++) {
              var R = h2[w + A], I = s5[w + A], Me = h2[w + A + b2], k2 = s5[w + A + b2], D = g2 * Me - _ * k2;
              k2 = g2 * k2 + _ * Me, Me = D, h2[w + A] = R + Me, s5[w + A] = I + k2, h2[w + A + b2] = R - Me, s5[w + A + b2] = I - k2, A !== l && (D = n2 * g2 - d2 * _, _ = n2 * _ + d2 * g2, g2 = D);
            }
      }, N.prototype.guessLen13b = function(i2, a4) {
        var h2 = Math.max(a4, i2) | 1, s5 = h2 & 1, u2 = 0;
        for (h2 = h2 / 2 | 0;h2; h2 = h2 >>> 1)
          u2++;
        return 1 << u2 + 1 + s5;
      }, N.prototype.conjugate = function(i2, a4, h2) {
        if (!(h2 <= 1))
          for (var s5 = 0;s5 < h2 / 2; s5++) {
            var u2 = i2[s5];
            i2[s5] = i2[h2 - s5 - 1], i2[h2 - s5 - 1] = u2, u2 = a4[s5], a4[s5] = -a4[h2 - s5 - 1], a4[h2 - s5 - 1] = -u2;
          }
      }, N.prototype.normalize13b = function(i2, a4) {
        for (var h2 = 0, s5 = 0;s5 < a4 / 2; s5++) {
          var u2 = Math.round(i2[2 * s5 + 1] / a4) * 8192 + Math.round(i2[2 * s5] / a4) + h2;
          i2[s5] = u2 & 67108863, u2 < 67108864 ? h2 = 0 : h2 = u2 / 67108864 | 0;
        }
        return i2;
      }, N.prototype.convert13b = function(i2, a4, h2, s5) {
        for (var u2 = 0, c = 0;c < a4; c++)
          u2 = u2 + (i2[c] | 0), h2[2 * c] = u2 & 8191, u2 = u2 >>> 13, h2[2 * c + 1] = u2 & 8191, u2 = u2 >>> 13;
        for (c = 2 * a4;c < s5; ++c)
          h2[c] = 0;
        r6(u2 === 0), r6((u2 & -8192) === 0);
      }, N.prototype.stub = function(i2) {
        for (var a4 = new Array(i2), h2 = 0;h2 < i2; h2++)
          a4[h2] = 0;
        return a4;
      }, N.prototype.mulp = function(i2, a4, h2) {
        var s5 = 2 * this.guessLen13b(i2.length, a4.length), u2 = this.makeRBT(s5), c = this.stub(s5), b2 = new Array(s5), l = new Array(s5), n2 = new Array(s5), d2 = new Array(s5), w = new Array(s5), g2 = new Array(s5), _ = h2.words;
        _.length = s5, this.convert13b(i2.words, i2.length, b2, s5), this.convert13b(a4.words, a4.length, d2, s5), this.transform(b2, c, l, n2, s5, u2), this.transform(d2, c, w, g2, s5, u2);
        for (var A = 0;A < s5; A++) {
          var R = l[A] * w[A] - n2[A] * g2[A];
          n2[A] = l[A] * g2[A] + n2[A] * w[A], l[A] = R;
        }
        return this.conjugate(l, n2, s5), this.transform(l, n2, _, c, s5, u2), this.conjugate(_, c, s5), this.normalize13b(_, s5), h2.negative = i2.negative ^ a4.negative, h2.length = i2.length + a4.length, h2.strip();
      }, f.prototype.mul = function(i2) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i2.length), this.mulTo(i2, a4);
      }, f.prototype.mulf = function(i2) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i2.length), _e(this, i2, a4);
      }, f.prototype.imul = function(i2) {
        return this.clone().mulTo(i2, this);
      }, f.prototype.imuln = function(i2) {
        r6(typeof i2 == "number"), r6(i2 < 67108864);
        for (var a4 = 0, h2 = 0;h2 < this.length; h2++) {
          var s5 = (this.words[h2] | 0) * i2, u2 = (s5 & 67108863) + (a4 & 67108863);
          a4 >>= 26, a4 += s5 / 67108864 | 0, a4 += u2 >>> 26, this.words[h2] = u2 & 67108863;
        }
        return a4 !== 0 && (this.words[h2] = a4, this.length++), this;
      }, f.prototype.muln = function(i2) {
        return this.clone().imuln(i2);
      }, f.prototype.sqr = function() {
        return this.mul(this);
      }, f.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f.prototype.pow = function(i2) {
        var a4 = B(i2);
        if (a4.length === 0)
          return new f(1);
        for (var h2 = this, s5 = 0;s5 < a4.length && a4[s5] === 0; s5++, h2 = h2.sqr())
          ;
        if (++s5 < a4.length)
          for (var u2 = h2.sqr();s5 < a4.length; s5++, u2 = u2.sqr())
            a4[s5] !== 0 && (h2 = h2.mul(u2));
        return h2;
      }, f.prototype.iushln = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = i2 % 26, h2 = (i2 - a4) / 26, s5 = 67108863 >>> 26 - a4 << 26 - a4, u2;
        if (a4 !== 0) {
          var c = 0;
          for (u2 = 0;u2 < this.length; u2++) {
            var b2 = this.words[u2] & s5, l = (this.words[u2] | 0) - b2 << a4;
            this.words[u2] = l | c, c = b2 >>> 26 - a4;
          }
          c && (this.words[u2] = c, this.length++);
        }
        if (h2 !== 0) {
          for (u2 = this.length - 1;u2 >= 0; u2--)
            this.words[u2 + h2] = this.words[u2];
          for (u2 = 0;u2 < h2; u2++)
            this.words[u2] = 0;
          this.length += h2;
        }
        return this.strip();
      }, f.prototype.ishln = function(i2) {
        return r6(this.negative === 0), this.iushln(i2);
      }, f.prototype.iushrn = function(i2, a4, h2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var s5;
        a4 ? s5 = (a4 - a4 % 26) / 26 : s5 = 0;
        var u2 = i2 % 26, c = Math.min((i2 - u2) / 26, this.length), b2 = 67108863 ^ 67108863 >>> u2 << u2, l = h2;
        if (s5 -= c, s5 = Math.max(0, s5), l) {
          for (var n2 = 0;n2 < c; n2++)
            l.words[n2] = this.words[n2];
          l.length = c;
        }
        if (c !== 0)
          if (this.length > c)
            for (this.length -= c, n2 = 0;n2 < this.length; n2++)
              this.words[n2] = this.words[n2 + c];
          else
            this.words[0] = 0, this.length = 1;
        var d2 = 0;
        for (n2 = this.length - 1;n2 >= 0 && (d2 !== 0 || n2 >= s5); n2--) {
          var w = this.words[n2] | 0;
          this.words[n2] = d2 << 26 - u2 | w >>> u2, d2 = w & b2;
        }
        return l && d2 !== 0 && (l.words[l.length++] = d2), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f.prototype.ishrn = function(i2, a4, h2) {
        return r6(this.negative === 0), this.iushrn(i2, a4, h2);
      }, f.prototype.shln = function(i2) {
        return this.clone().ishln(i2);
      }, f.prototype.ushln = function(i2) {
        return this.clone().iushln(i2);
      }, f.prototype.shrn = function(i2) {
        return this.clone().ishrn(i2);
      }, f.prototype.ushrn = function(i2) {
        return this.clone().iushrn(i2);
      }, f.prototype.testn = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = i2 % 26, h2 = (i2 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return false;
        var u2 = this.words[h2];
        return !!(u2 & s5);
      }, f.prototype.imaskn = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = i2 % 26, h2 = (i2 - a4) / 26;
        if (r6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h2)
          return this;
        if (a4 !== 0 && h2++, this.length = Math.min(h2, this.length), a4 !== 0) {
          var s5 = 67108863 ^ 67108863 >>> a4 << a4;
          this.words[this.length - 1] &= s5;
        }
        return this.strip();
      }, f.prototype.maskn = function(i2) {
        return this.clone().imaskn(i2);
      }, f.prototype.iaddn = function(i2) {
        return r6(typeof i2 == "number"), r6(i2 < 67108864), i2 < 0 ? this.isubn(-i2) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i2 ? (this.words[0] = i2 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i2), this.negative = 1, this) : this._iaddn(i2);
      }, f.prototype._iaddn = function(i2) {
        this.words[0] += i2;
        for (var a4 = 0;a4 < this.length && this.words[a4] >= 67108864; a4++)
          this.words[a4] -= 67108864, a4 === this.length - 1 ? this.words[a4 + 1] = 1 : this.words[a4 + 1]++;
        return this.length = Math.max(this.length, a4 + 1), this;
      }, f.prototype.isubn = function(i2) {
        if (r6(typeof i2 == "number"), r6(i2 < 67108864), i2 < 0)
          return this.iaddn(-i2);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i2), this.negative = 1, this;
        if (this.words[0] -= i2, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a4 = 0;a4 < this.length && this.words[a4] < 0; a4++)
            this.words[a4] += 67108864, this.words[a4 + 1] -= 1;
        return this.strip();
      }, f.prototype.addn = function(i2) {
        return this.clone().iaddn(i2);
      }, f.prototype.subn = function(i2) {
        return this.clone().isubn(i2);
      }, f.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f.prototype.abs = function() {
        return this.clone().iabs();
      }, f.prototype._ishlnsubmul = function(i2, a4, h2) {
        var s5 = i2.length + h2, u2;
        this._expand(s5);
        var c, b2 = 0;
        for (u2 = 0;u2 < i2.length; u2++) {
          c = (this.words[u2 + h2] | 0) + b2;
          var l = (i2.words[u2] | 0) * a4;
          c -= l & 67108863, b2 = (c >> 26) - (l / 67108864 | 0), this.words[u2 + h2] = c & 67108863;
        }
        for (;u2 < this.length - h2; u2++)
          c = (this.words[u2 + h2] | 0) + b2, b2 = c >> 26, this.words[u2 + h2] = c & 67108863;
        if (b2 === 0)
          return this.strip();
        for (r6(b2 === -1), b2 = 0, u2 = 0;u2 < this.length; u2++)
          c = -(this.words[u2] | 0) + b2, b2 = c >> 26, this.words[u2] = c & 67108863;
        return this.negative = 1, this.strip();
      }, f.prototype._wordDiv = function(i2, a4) {
        var h2 = this.length - i2.length, s5 = this.clone(), u2 = i2, c = u2.words[u2.length - 1] | 0, b2 = this._countBits(c);
        h2 = 26 - b2, h2 !== 0 && (u2 = u2.ushln(h2), s5.iushln(h2), c = u2.words[u2.length - 1] | 0);
        var l = s5.length - u2.length, n2;
        if (a4 !== "mod") {
          n2 = new f(null), n2.length = l + 1, n2.words = new Array(n2.length);
          for (var d2 = 0;d2 < n2.length; d2++)
            n2.words[d2] = 0;
        }
        var w = s5.clone()._ishlnsubmul(u2, 1, l);
        w.negative === 0 && (s5 = w, n2 && (n2.words[l] = 1));
        for (var g2 = l - 1;g2 >= 0; g2--) {
          var _ = (s5.words[u2.length + g2] | 0) * 67108864 + (s5.words[u2.length + g2 - 1] | 0);
          for (_ = Math.min(_ / c | 0, 67108863), s5._ishlnsubmul(u2, _, g2);s5.negative !== 0; )
            _--, s5.negative = 0, s5._ishlnsubmul(u2, 1, g2), s5.isZero() || (s5.negative ^= 1);
          n2 && (n2.words[g2] = _);
        }
        return n2 && n2.strip(), s5.strip(), a4 !== "div" && h2 !== 0 && s5.iushrn(h2), { div: n2 || null, mod: s5 };
      }, f.prototype.divmod = function(i2, a4, h2) {
        if (r6(!i2.isZero()), this.isZero())
          return { div: new f(0), mod: new f(0) };
        var s5, u2, c;
        return this.negative !== 0 && i2.negative === 0 ? (c = this.neg().divmod(i2, a4), a4 !== "mod" && (s5 = c.div.neg()), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.iadd(i2)), { div: s5, mod: u2 }) : this.negative === 0 && i2.negative !== 0 ? (c = this.divmod(i2.neg(), a4), a4 !== "mod" && (s5 = c.div.neg()), { div: s5, mod: c.mod }) : (this.negative & i2.negative) !== 0 ? (c = this.neg().divmod(i2.neg(), a4), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.isub(i2)), { div: c.div, mod: u2 }) : i2.length > this.length || this.cmp(i2) < 0 ? { div: new f(0), mod: this } : i2.length === 1 ? a4 === "div" ? { div: this.divn(i2.words[0]), mod: null } : a4 === "mod" ? { div: null, mod: new f(this.modn(i2.words[0])) } : { div: this.divn(i2.words[0]), mod: new f(this.modn(i2.words[0])) } : this._wordDiv(i2, a4);
      }, f.prototype.div = function(i2) {
        return this.divmod(i2, "div", false).div;
      }, f.prototype.mod = function(i2) {
        return this.divmod(i2, "mod", false).mod;
      }, f.prototype.umod = function(i2) {
        return this.divmod(i2, "mod", true).mod;
      }, f.prototype.divRound = function(i2) {
        var a4 = this.divmod(i2);
        if (a4.mod.isZero())
          return a4.div;
        var h2 = a4.div.negative !== 0 ? a4.mod.isub(i2) : a4.mod, s5 = i2.ushrn(1), u2 = i2.andln(1), c = h2.cmp(s5);
        return c < 0 || u2 === 1 && c === 0 ? a4.div : a4.div.negative !== 0 ? a4.div.isubn(1) : a4.div.iaddn(1);
      }, f.prototype.modn = function(i2) {
        r6(i2 <= 67108863);
        for (var a4 = (1 << 26) % i2, h2 = 0, s5 = this.length - 1;s5 >= 0; s5--)
          h2 = (a4 * h2 + (this.words[s5] | 0)) % i2;
        return h2;
      }, f.prototype.idivn = function(i2) {
        r6(i2 <= 67108863);
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = (this.words[h2] | 0) + a4 * 67108864;
          this.words[h2] = s5 / i2 | 0, a4 = s5 % i2;
        }
        return this.strip();
      }, f.prototype.divn = function(i2) {
        return this.clone().idivn(i2);
      }, f.prototype.egcd = function(i2) {
        r6(i2.negative === 0), r6(!i2.isZero());
        var a4 = this, h2 = i2.clone();
        a4.negative !== 0 ? a4 = a4.umod(i2) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = new f(0), b2 = new f(1), l = 0;a4.isEven() && h2.isEven(); )
          a4.iushrn(1), h2.iushrn(1), ++l;
        for (var n2 = h2.clone(), d2 = a4.clone();!a4.isZero(); ) {
          for (var w = 0, g2 = 1;(a4.words[0] & g2) === 0 && w < 26; ++w, g2 <<= 1)
            ;
          if (w > 0)
            for (a4.iushrn(w);w-- > 0; )
              (s5.isOdd() || u2.isOdd()) && (s5.iadd(n2), u2.isub(d2)), s5.iushrn(1), u2.iushrn(1);
          for (var _ = 0, A = 1;(h2.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
            ;
          if (_ > 0)
            for (h2.iushrn(_);_-- > 0; )
              (c.isOdd() || b2.isOdd()) && (c.iadd(n2), b2.isub(d2)), c.iushrn(1), b2.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(c), u2.isub(b2)) : (h2.isub(a4), c.isub(s5), b2.isub(u2));
        }
        return { a: c, b: b2, gcd: h2.iushln(l) };
      }, f.prototype._invmp = function(i2) {
        r6(i2.negative === 0), r6(!i2.isZero());
        var a4 = this, h2 = i2.clone();
        a4.negative !== 0 ? a4 = a4.umod(i2) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = h2.clone();a4.cmpn(1) > 0 && h2.cmpn(1) > 0; ) {
          for (var b2 = 0, l = 1;(a4.words[0] & l) === 0 && b2 < 26; ++b2, l <<= 1)
            ;
          if (b2 > 0)
            for (a4.iushrn(b2);b2-- > 0; )
              s5.isOdd() && s5.iadd(c), s5.iushrn(1);
          for (var n2 = 0, d2 = 1;(h2.words[0] & d2) === 0 && n2 < 26; ++n2, d2 <<= 1)
            ;
          if (n2 > 0)
            for (h2.iushrn(n2);n2-- > 0; )
              u2.isOdd() && u2.iadd(c), u2.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(u2)) : (h2.isub(a4), u2.isub(s5));
        }
        var w;
        return a4.cmpn(1) === 0 ? w = s5 : w = u2, w.cmpn(0) < 0 && w.iadd(i2), w;
      }, f.prototype.gcd = function(i2) {
        if (this.isZero())
          return i2.abs();
        if (i2.isZero())
          return this.abs();
        var a4 = this.clone(), h2 = i2.clone();
        a4.negative = 0, h2.negative = 0;
        for (var s5 = 0;a4.isEven() && h2.isEven(); s5++)
          a4.iushrn(1), h2.iushrn(1);
        do {
          for (;a4.isEven(); )
            a4.iushrn(1);
          for (;h2.isEven(); )
            h2.iushrn(1);
          var u2 = a4.cmp(h2);
          if (u2 < 0) {
            var c = a4;
            a4 = h2, h2 = c;
          } else if (u2 === 0 || h2.cmpn(1) === 0)
            break;
          a4.isub(h2);
        } while (true);
        return h2.iushln(s5);
      }, f.prototype.invm = function(i2) {
        return this.egcd(i2).a.umod(i2);
      }, f.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f.prototype.andln = function(i2) {
        return this.words[0] & i2;
      }, f.prototype.bincn = function(i2) {
        r6(typeof i2 == "number");
        var a4 = i2 % 26, h2 = (i2 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return this._expand(h2 + 1), this.words[h2] |= s5, this;
        for (var u2 = s5, c = h2;u2 !== 0 && c < this.length; c++) {
          var b2 = this.words[c] | 0;
          b2 += u2, u2 = b2 >>> 26, b2 &= 67108863, this.words[c] = b2;
        }
        return u2 !== 0 && (this.words[c] = u2, this.length++), this;
      }, f.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f.prototype.cmpn = function(i2) {
        var a4 = i2 < 0;
        if (this.negative !== 0 && !a4)
          return -1;
        if (this.negative === 0 && a4)
          return 1;
        this.strip();
        var h2;
        if (this.length > 1)
          h2 = 1;
        else {
          a4 && (i2 = -i2), r6(i2 <= 67108863, "Number is too big");
          var s5 = this.words[0] | 0;
          h2 = s5 === i2 ? 0 : s5 < i2 ? -1 : 1;
        }
        return this.negative !== 0 ? -h2 | 0 : h2;
      }, f.prototype.cmp = function(i2) {
        if (this.negative !== 0 && i2.negative === 0)
          return -1;
        if (this.negative === 0 && i2.negative !== 0)
          return 1;
        var a4 = this.ucmp(i2);
        return this.negative !== 0 ? -a4 | 0 : a4;
      }, f.prototype.ucmp = function(i2) {
        if (this.length > i2.length)
          return 1;
        if (this.length < i2.length)
          return -1;
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = this.words[h2] | 0, u2 = i2.words[h2] | 0;
          if (s5 !== u2) {
            s5 < u2 ? a4 = -1 : s5 > u2 && (a4 = 1);
            break;
          }
        }
        return a4;
      }, f.prototype.gtn = function(i2) {
        return this.cmpn(i2) === 1;
      }, f.prototype.gt = function(i2) {
        return this.cmp(i2) === 1;
      }, f.prototype.gten = function(i2) {
        return this.cmpn(i2) >= 0;
      }, f.prototype.gte = function(i2) {
        return this.cmp(i2) >= 0;
      }, f.prototype.ltn = function(i2) {
        return this.cmpn(i2) === -1;
      }, f.prototype.lt = function(i2) {
        return this.cmp(i2) === -1;
      }, f.prototype.lten = function(i2) {
        return this.cmpn(i2) <= 0;
      }, f.prototype.lte = function(i2) {
        return this.cmp(i2) <= 0;
      }, f.prototype.eqn = function(i2) {
        return this.cmpn(i2) === 0;
      }, f.prototype.eq = function(i2) {
        return this.cmp(i2) === 0;
      }, f.red = function(i2) {
        return new P(i2);
      }, f.prototype.toRed = function(i2) {
        return r6(!this.red, "Already a number in reduction context"), r6(this.negative === 0, "red works only with positives"), i2.convertTo(this)._forceRed(i2);
      }, f.prototype.fromRed = function() {
        return r6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f.prototype._forceRed = function(i2) {
        return this.red = i2, this;
      }, f.prototype.forceRed = function(i2) {
        return r6(!this.red, "Already a number in reduction context"), this._forceRed(i2);
      }, f.prototype.redAdd = function(i2) {
        return r6(this.red, "redAdd works only with red numbers"), this.red.add(this, i2);
      }, f.prototype.redIAdd = function(i2) {
        return r6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i2);
      }, f.prototype.redSub = function(i2) {
        return r6(this.red, "redSub works only with red numbers"), this.red.sub(this, i2);
      }, f.prototype.redISub = function(i2) {
        return r6(this.red, "redISub works only with red numbers"), this.red.isub(this, i2);
      }, f.prototype.redShl = function(i2) {
        return r6(this.red, "redShl works only with red numbers"), this.red.shl(this, i2);
      }, f.prototype.redMul = function(i2) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i2), this.red.mul(this, i2);
      }, f.prototype.redIMul = function(i2) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i2), this.red.imul(this, i2);
      }, f.prototype.redSqr = function() {
        return r6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f.prototype.redISqr = function() {
        return r6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f.prototype.redSqrt = function() {
        return r6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f.prototype.redInvm = function() {
        return r6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f.prototype.redNeg = function() {
        return r6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f.prototype.redPow = function(i2) {
        return r6(this.red && !i2.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i2);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v, i2) {
        this.name = v, this.p = new f(i2, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i2 = new f(null);
        return i2.words = new Array(Math.ceil(this.n / 13)), i2;
      }, ye.prototype.ireduce = function(i2) {
        var a4 = i2, h2;
        do
          this.split(a4, this.tmp), a4 = this.imulK(a4), a4 = a4.iadd(this.tmp), h2 = a4.bitLength();
        while (h2 > this.n);
        var s5 = h2 < this.n ? -1 : a4.ucmp(this.p);
        return s5 === 0 ? (a4.words[0] = 0, a4.length = 1) : s5 > 0 ? a4.isub(this.p) : a4.strip !== undefined ? a4.strip() : a4._strip(), a4;
      }, ye.prototype.split = function(i2, a4) {
        i2.iushrn(this.n, 0, a4);
      }, ye.prototype.imulK = function(i2) {
        return i2.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o2(xe, ye), xe.prototype.split = function(i2, a4) {
        for (var h2 = 4194303, s5 = Math.min(i2.length, 9), u2 = 0;u2 < s5; u2++)
          a4.words[u2] = i2.words[u2];
        if (a4.length = s5, i2.length <= 9) {
          i2.words[0] = 0, i2.length = 1;
          return;
        }
        var c = i2.words[9];
        for (a4.words[a4.length++] = c & h2, u2 = 10;u2 < i2.length; u2++) {
          var b2 = i2.words[u2] | 0;
          i2.words[u2 - 10] = (b2 & h2) << 4 | c >>> 22, c = b2;
        }
        c >>>= 22, i2.words[u2 - 10] = c, c === 0 && i2.length > 10 ? i2.length -= 10 : i2.length -= 9;
      }, xe.prototype.imulK = function(i2) {
        i2.words[i2.length] = 0, i2.words[i2.length + 1] = 0, i2.length += 2;
        for (var a4 = 0, h2 = 0;h2 < i2.length; h2++) {
          var s5 = i2.words[h2] | 0;
          a4 += s5 * 977, i2.words[h2] = a4 & 67108863, a4 = s5 * 64 + (a4 / 67108864 | 0);
        }
        return i2.words[i2.length - 1] === 0 && (i2.length--, i2.words[i2.length - 1] === 0 && i2.length--), i2;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o2(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o2(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o2(Ae, ye), Ae.prototype.imulK = function(i2) {
        for (var a4 = 0, h2 = 0;h2 < i2.length; h2++) {
          var s5 = (i2.words[h2] | 0) * 19 + a4, u2 = s5 & 67108863;
          s5 >>>= 26, i2.words[h2] = u2, a4 = s5;
        }
        return a4 !== 0 && (i2.words[i2.length++] = a4), i2;
      }, f._prime = function(i2) {
        if (we[i2])
          return we[i2];
        var a4;
        if (i2 === "k256")
          a4 = new xe;
        else if (i2 === "p224")
          a4 = new Re;
        else if (i2 === "p192")
          a4 = new Ee;
        else if (i2 === "p25519")
          a4 = new Ae;
        else
          throw new Error("Unknown prime " + i2);
        return we[i2] = a4, a4;
      };
      function P(v) {
        if (typeof v == "string") {
          var i2 = f._prime(v);
          this.m = i2.p, this.prime = i2;
        } else
          r6(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
      }
      P.prototype._verify1 = function(i2) {
        r6(i2.negative === 0, "red works only with positives"), r6(i2.red, "red works only with red numbers");
      }, P.prototype._verify2 = function(i2, a4) {
        r6((i2.negative | a4.negative) === 0, "red works only with positives"), r6(i2.red && i2.red === a4.red, "red works only with red numbers");
      }, P.prototype.imod = function(i2) {
        return this.prime ? this.prime.ireduce(i2)._forceRed(this) : i2.umod(this.m)._forceRed(this);
      }, P.prototype.neg = function(i2) {
        return i2.isZero() ? i2.clone() : this.m.sub(i2)._forceRed(this);
      }, P.prototype.add = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.add(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2._forceRed(this);
      }, P.prototype.iadd = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.iadd(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2;
      }, P.prototype.sub = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.sub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2._forceRed(this);
      }, P.prototype.isub = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.isub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2;
      }, P.prototype.shl = function(i2, a4) {
        return this._verify1(i2), this.imod(i2.ushln(a4));
      }, P.prototype.imul = function(i2, a4) {
        return this._verify2(i2, a4), this.imod(i2.imul(a4));
      }, P.prototype.mul = function(i2, a4) {
        return this._verify2(i2, a4), this.imod(i2.mul(a4));
      }, P.prototype.isqr = function(i2) {
        return this.imul(i2, i2.clone());
      }, P.prototype.sqr = function(i2) {
        return this.mul(i2, i2);
      }, P.prototype.sqrt = function(i2) {
        if (i2.isZero())
          return i2.clone();
        var a4 = this.m.andln(3);
        if (r6(a4 % 2 === 1), a4 === 3) {
          var h2 = this.m.add(new f(1)).iushrn(2);
          return this.pow(i2, h2);
        }
        for (var s5 = this.m.subn(1), u2 = 0;!s5.isZero() && s5.andln(1) === 0; )
          u2++, s5.iushrn(1);
        r6(!s5.isZero());
        var c = new f(1).toRed(this), b2 = c.redNeg(), l = this.m.subn(1).iushrn(1), n2 = this.m.bitLength();
        for (n2 = new f(2 * n2 * n2).toRed(this);this.pow(n2, l).cmp(b2) !== 0; )
          n2.redIAdd(b2);
        for (var d2 = this.pow(n2, s5), w = this.pow(i2, s5.addn(1).iushrn(1)), g2 = this.pow(i2, s5), _ = u2;g2.cmp(c) !== 0; ) {
          for (var A = g2, R = 0;A.cmp(c) !== 0; R++)
            A = A.redSqr();
          r6(R < _);
          var I = this.pow(d2, new f(1).iushln(_ - R - 1));
          w = w.redMul(I), d2 = I.redSqr(), g2 = g2.redMul(d2), _ = R;
        }
        return w;
      }, P.prototype.invm = function(i2) {
        var a4 = i2._invmp(this.m);
        return a4.negative !== 0 ? (a4.negative = 0, this.imod(a4).redNeg()) : this.imod(a4);
      }, P.prototype.pow = function(i2, a4) {
        if (a4.isZero())
          return new f(1).toRed(this);
        if (a4.cmpn(1) === 0)
          return i2.clone();
        var h2 = 4, s5 = new Array(1 << h2);
        s5[0] = new f(1).toRed(this), s5[1] = i2;
        for (var u2 = 2;u2 < s5.length; u2++)
          s5[u2] = this.mul(s5[u2 - 1], i2);
        var c = s5[0], b2 = 0, l = 0, n2 = a4.bitLength() % 26;
        for (n2 === 0 && (n2 = 26), u2 = a4.length - 1;u2 >= 0; u2--) {
          for (var d2 = a4.words[u2], w = n2 - 1;w >= 0; w--) {
            var g2 = d2 >> w & 1;
            if (c !== s5[0] && (c = this.sqr(c)), g2 === 0 && b2 === 0) {
              l = 0;
              continue;
            }
            b2 <<= 1, b2 |= g2, l++, !(l !== h2 && (u2 !== 0 || w !== 0)) && (c = this.mul(c, s5[b2]), l = 0, b2 = 0);
          }
          n2 = 26;
        }
        return c;
      }, P.prototype.convertTo = function(i2) {
        var a4 = i2.umod(this.m);
        return a4 === i2 ? a4.clone() : a4;
      }, P.prototype.convertFrom = function(i2) {
        var a4 = i2.clone();
        return a4.red = null, a4;
      }, f.mont = function(i2) {
        return new Se(i2);
      };
      function Se(v) {
        P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o2(Se, P), Se.prototype.convertTo = function(i2) {
        return this.imod(i2.ushln(this.shift));
      }, Se.prototype.convertFrom = function(i2) {
        var a4 = this.imod(i2.mul(this.rinv));
        return a4.red = null, a4;
      }, Se.prototype.imul = function(i2, a4) {
        if (i2.isZero() || a4.isZero())
          return i2.words[0] = 0, i2.length = 1, i2;
        var h2 = i2.imul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.mul = function(i2, a4) {
        if (i2.isZero() || a4.isZero())
          return new f(0)._forceRed(this);
        var h2 = i2.mul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.invm = function(i2) {
        var a4 = this.imod(i2._invmp(this.m).mul(this.r2));
        return a4._forceRed(this);
      };
    })(typeof Gu > "u" || Gu, $m);
  });
  Ym = T((Gm, Xu) => {
    (function(t6, e6) {
      function r6(v, i2) {
        if (!v)
          throw new Error(i2 || "Assertion failed");
      }
      function o2(v, i2) {
        v.super_ = i2;
        var a4 = function() {
        };
        a4.prototype = i2.prototype, v.prototype = new a4, v.prototype.constructor = v;
      }
      function f(v, i2, a4) {
        if (f.isBN(v))
          return v;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i2 === "le" || i2 === "be") && (a4 = i2, i2 = 10), this._init(v || 0, i2 || 10, a4 || "be"));
      }
      typeof t6 == "object" ? t6.exports = f : e6.BN = f, f.BN = f, f.wordSize = 26;
      var p2;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p2 = window.Buffer : p2 = ji().Buffer;
      } catch {
      }
      f.isBN = function(i2) {
        return i2 instanceof f ? true : i2 !== null && typeof i2 == "object" && i2.constructor.wordSize === f.wordSize && Array.isArray(i2.words);
      }, f.max = function(i2, a4) {
        return i2.cmp(a4) > 0 ? i2 : a4;
      }, f.min = function(i2, a4) {
        return i2.cmp(a4) < 0 ? i2 : a4;
      }, f.prototype._init = function(i2, a4, h2) {
        if (typeof i2 == "number")
          return this._initNumber(i2, a4, h2);
        if (typeof i2 == "object")
          return this._initArray(i2, a4, h2);
        a4 === "hex" && (a4 = 16), r6(a4 === (a4 | 0) && a4 >= 2 && a4 <= 36), i2 = i2.toString().replace(/\s+/g, "");
        var s5 = 0;
        i2[0] === "-" && (s5++, this.negative = 1), s5 < i2.length && (a4 === 16 ? this._parseHex(i2, s5, h2) : (this._parseBase(i2, a4, s5), h2 === "le" && this._initArray(this.toArray(), a4, h2)));
      }, f.prototype._initNumber = function(i2, a4, h2) {
        i2 < 0 && (this.negative = 1, i2 = -i2), i2 < 67108864 ? (this.words = [i2 & 67108863], this.length = 1) : i2 < 4503599627370496 ? (this.words = [i2 & 67108863, i2 / 67108864 & 67108863], this.length = 2) : (r6(i2 < 9007199254740992), this.words = [i2 & 67108863, i2 / 67108864 & 67108863, 1], this.length = 3), h2 === "le" && this._initArray(this.toArray(), a4, h2);
      }, f.prototype._initArray = function(i2, a4, h2) {
        if (r6(typeof i2.length == "number"), i2.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i2.length / 3), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2, c, b2 = 0;
        if (h2 === "be")
          for (s5 = i2.length - 1, u2 = 0;s5 >= 0; s5 -= 3)
            c = i2[s5] | i2[s5 - 1] << 8 | i2[s5 - 2] << 16, this.words[u2] |= c << b2 & 67108863, this.words[u2 + 1] = c >>> 26 - b2 & 67108863, b2 += 24, b2 >= 26 && (b2 -= 26, u2++);
        else if (h2 === "le")
          for (s5 = 0, u2 = 0;s5 < i2.length; s5 += 3)
            c = i2[s5] | i2[s5 + 1] << 8 | i2[s5 + 2] << 16, this.words[u2] |= c << b2 & 67108863, this.words[u2 + 1] = c >>> 26 - b2 & 67108863, b2 += 24, b2 >= 26 && (b2 -= 26, u2++);
        return this.strip();
      };
      function m2(v, i2) {
        var a4 = v.charCodeAt(i2);
        return a4 >= 65 && a4 <= 70 ? a4 - 55 : a4 >= 97 && a4 <= 102 ? a4 - 87 : a4 - 48 & 15;
      }
      function y2(v, i2, a4) {
        var h2 = m2(v, a4);
        return a4 - 1 >= i2 && (h2 |= m2(v, a4 - 1) << 4), h2;
      }
      f.prototype._parseHex = function(i2, a4, h2) {
        this.length = Math.ceil((i2.length - a4) / 6), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2 = 0, c = 0, b2;
        if (h2 === "be")
          for (s5 = i2.length - 1;s5 >= a4; s5 -= 2)
            b2 = y2(i2, a4, s5) << u2, this.words[c] |= b2 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b2 >>> 26) : u2 += 8;
        else {
          var l = i2.length - a4;
          for (s5 = l % 2 === 0 ? a4 + 1 : a4;s5 < i2.length; s5 += 2)
            b2 = y2(i2, a4, s5) << u2, this.words[c] |= b2 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b2 >>> 26) : u2 += 8;
        }
        this.strip();
      };
      function M(v, i2, a4, h2) {
        for (var s5 = 0, u2 = Math.min(v.length, a4), c = i2;c < u2; c++) {
          var b2 = v.charCodeAt(c) - 48;
          s5 *= h2, b2 >= 49 ? s5 += b2 - 49 + 10 : b2 >= 17 ? s5 += b2 - 17 + 10 : s5 += b2;
        }
        return s5;
      }
      f.prototype._parseBase = function(i2, a4, h2) {
        this.words = [0], this.length = 1;
        for (var s5 = 0, u2 = 1;u2 <= 67108863; u2 *= a4)
          s5++;
        s5--, u2 = u2 / a4 | 0;
        for (var c = i2.length - h2, b2 = c % s5, l = Math.min(c, c - b2) + h2, n2 = 0, d2 = h2;d2 < l; d2 += s5)
          n2 = M(i2, d2, d2 + s5, a4), this.imuln(u2), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        if (b2 !== 0) {
          var w = 1;
          for (n2 = M(i2, d2, i2.length, a4), d2 = 0;d2 < b2; d2++)
            w *= a4;
          this.imuln(w), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        }
        this.strip();
      }, f.prototype.copy = function(i2) {
        i2.words = new Array(this.length);
        for (var a4 = 0;a4 < this.length; a4++)
          i2.words[a4] = this.words[a4];
        i2.length = this.length, i2.negative = this.negative, i2.red = this.red;
      }, f.prototype.clone = function() {
        var i2 = new f(null);
        return this.copy(i2), i2;
      }, f.prototype._expand = function(i2) {
        for (;this.length < i2; )
          this.words[this.length++] = 0;
        return this;
      }, f.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f.prototype.toString = function(i2, a4) {
        i2 = i2 || 10, a4 = a4 | 0 || 1;
        var h2;
        if (i2 === 16 || i2 === "hex") {
          h2 = "";
          for (var s5 = 0, u2 = 0, c = 0;c < this.length; c++) {
            var b2 = this.words[c], l = ((b2 << s5 | u2) & 16777215).toString(16);
            u2 = b2 >>> 24 - s5 & 16777215, u2 !== 0 || c !== this.length - 1 ? h2 = x[6 - l.length] + l + h2 : h2 = l + h2, s5 += 2, s5 >= 26 && (s5 -= 26, c--);
          }
          for (u2 !== 0 && (h2 = u2.toString(16) + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        if (i2 === (i2 | 0) && i2 >= 2 && i2 <= 36) {
          var n2 = S[i2], d2 = E[i2];
          h2 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g2 = w.modn(d2).toString(i2);
            w = w.idivn(d2), w.isZero() ? h2 = g2 + h2 : h2 = x[n2 - g2.length] + g2 + h2;
          }
          for (this.isZero() && (h2 = "0" + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        r6(false, "Base should be between 2 and 36");
      }, f.prototype.toNumber = function() {
        var i2 = this.words[0];
        return this.length === 2 ? i2 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i2 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i2 : i2;
      }, f.prototype.toJSON = function() {
        return this.toString(16);
      }, f.prototype.toBuffer = function(i2, a4) {
        return r6(typeof p2 < "u"), this.toArrayLike(p2, i2, a4);
      }, f.prototype.toArray = function(i2, a4) {
        return this.toArrayLike(Array, i2, a4);
      }, f.prototype.toArrayLike = function(i2, a4, h2) {
        var s5 = this.byteLength(), u2 = h2 || Math.max(1, s5);
        r6(s5 <= u2, "byte array longer than desired length"), r6(u2 > 0, "Requested array length <= 0"), this.strip();
        var c = a4 === "le", b2 = new i2(u2), l, n2, d2 = this.clone();
        if (c) {
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b2[n2] = l;
          for (;n2 < u2; n2++)
            b2[n2] = 0;
        } else {
          for (n2 = 0;n2 < u2 - s5; n2++)
            b2[n2] = 0;
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b2[u2 - n2 - 1] = l;
        }
        return b2;
      }, Math.clz32 ? f.prototype._countBits = function(i2) {
        return 32 - Math.clz32(i2);
      } : f.prototype._countBits = function(i2) {
        var a4 = i2, h2 = 0;
        return a4 >= 4096 && (h2 += 13, a4 >>>= 13), a4 >= 64 && (h2 += 7, a4 >>>= 7), a4 >= 8 && (h2 += 4, a4 >>>= 4), a4 >= 2 && (h2 += 2, a4 >>>= 2), h2 + a4;
      }, f.prototype._zeroBits = function(i2) {
        if (i2 === 0)
          return 26;
        var a4 = i2, h2 = 0;
        return (a4 & 8191) === 0 && (h2 += 13, a4 >>>= 13), (a4 & 127) === 0 && (h2 += 7, a4 >>>= 7), (a4 & 15) === 0 && (h2 += 4, a4 >>>= 4), (a4 & 3) === 0 && (h2 += 2, a4 >>>= 2), (a4 & 1) === 0 && h2++, h2;
      }, f.prototype.bitLength = function() {
        var i2 = this.words[this.length - 1], a4 = this._countBits(i2);
        return (this.length - 1) * 26 + a4;
      };
      function B(v) {
        for (var i2 = new Array(v.bitLength()), a4 = 0;a4 < i2.length; a4++) {
          var h2 = a4 / 26 | 0, s5 = a4 % 26;
          i2[a4] = (v.words[h2] & 1 << s5) >>> s5;
        }
        return i2;
      }
      f.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i2 = 0, a4 = 0;a4 < this.length; a4++) {
          var h2 = this._zeroBits(this.words[a4]);
          if (i2 += h2, h2 !== 26)
            break;
        }
        return i2;
      }, f.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f.prototype.toTwos = function(i2) {
        return this.negative !== 0 ? this.abs().inotn(i2).iaddn(1) : this.clone();
      }, f.prototype.fromTwos = function(i2) {
        return this.testn(i2 - 1) ? this.notn(i2).iaddn(1).ineg() : this.clone();
      }, f.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f.prototype.neg = function() {
        return this.clone().ineg();
      }, f.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f.prototype.iuor = function(i2) {
        for (;this.length < i2.length; )
          this.words[this.length++] = 0;
        for (var a4 = 0;a4 < i2.length; a4++)
          this.words[a4] = this.words[a4] | i2.words[a4];
        return this.strip();
      }, f.prototype.ior = function(i2) {
        return r6((this.negative | i2.negative) === 0), this.iuor(i2);
      }, f.prototype.or = function(i2) {
        return this.length > i2.length ? this.clone().ior(i2) : i2.clone().ior(this);
      }, f.prototype.uor = function(i2) {
        return this.length > i2.length ? this.clone().iuor(i2) : i2.clone().iuor(this);
      }, f.prototype.iuand = function(i2) {
        var a4;
        this.length > i2.length ? a4 = i2 : a4 = this;
        for (var h2 = 0;h2 < a4.length; h2++)
          this.words[h2] = this.words[h2] & i2.words[h2];
        return this.length = a4.length, this.strip();
      }, f.prototype.iand = function(i2) {
        return r6((this.negative | i2.negative) === 0), this.iuand(i2);
      }, f.prototype.and = function(i2) {
        return this.length > i2.length ? this.clone().iand(i2) : i2.clone().iand(this);
      }, f.prototype.uand = function(i2) {
        return this.length > i2.length ? this.clone().iuand(i2) : i2.clone().iuand(this);
      }, f.prototype.iuxor = function(i2) {
        var a4, h2;
        this.length > i2.length ? (a4 = this, h2 = i2) : (a4 = i2, h2 = this);
        for (var s5 = 0;s5 < h2.length; s5++)
          this.words[s5] = a4.words[s5] ^ h2.words[s5];
        if (this !== a4)
          for (;s5 < a4.length; s5++)
            this.words[s5] = a4.words[s5];
        return this.length = a4.length, this.strip();
      }, f.prototype.ixor = function(i2) {
        return r6((this.negative | i2.negative) === 0), this.iuxor(i2);
      }, f.prototype.xor = function(i2) {
        return this.length > i2.length ? this.clone().ixor(i2) : i2.clone().ixor(this);
      }, f.prototype.uxor = function(i2) {
        return this.length > i2.length ? this.clone().iuxor(i2) : i2.clone().iuxor(this);
      }, f.prototype.inotn = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = Math.ceil(i2 / 26) | 0, h2 = i2 % 26;
        this._expand(a4), h2 > 0 && a4--;
        for (var s5 = 0;s5 < a4; s5++)
          this.words[s5] = ~this.words[s5] & 67108863;
        return h2 > 0 && (this.words[s5] = ~this.words[s5] & 67108863 >> 26 - h2), this.strip();
      }, f.prototype.notn = function(i2) {
        return this.clone().inotn(i2);
      }, f.prototype.setn = function(i2, a4) {
        r6(typeof i2 == "number" && i2 >= 0);
        var h2 = i2 / 26 | 0, s5 = i2 % 26;
        return this._expand(h2 + 1), a4 ? this.words[h2] = this.words[h2] | 1 << s5 : this.words[h2] = this.words[h2] & ~(1 << s5), this.strip();
      }, f.prototype.iadd = function(i2) {
        var a4;
        if (this.negative !== 0 && i2.negative === 0)
          return this.negative = 0, a4 = this.isub(i2), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i2.negative !== 0)
          return i2.negative = 0, a4 = this.isub(i2), i2.negative = 1, a4._normSign();
        var h2, s5;
        this.length > i2.length ? (h2 = this, s5 = i2) : (h2 = i2, s5 = this);
        for (var u2 = 0, c = 0;c < s5.length; c++)
          a4 = (h2.words[c] | 0) + (s5.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        for (;u2 !== 0 && c < h2.length; c++)
          a4 = (h2.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        if (this.length = h2.length, u2 !== 0)
          this.words[this.length] = u2, this.length++;
        else if (h2 !== this)
          for (;c < h2.length; c++)
            this.words[c] = h2.words[c];
        return this;
      }, f.prototype.add = function(i2) {
        var a4;
        return i2.negative !== 0 && this.negative === 0 ? (i2.negative = 0, a4 = this.sub(i2), i2.negative ^= 1, a4) : i2.negative === 0 && this.negative !== 0 ? (this.negative = 0, a4 = i2.sub(this), this.negative = 1, a4) : this.length > i2.length ? this.clone().iadd(i2) : i2.clone().iadd(this);
      }, f.prototype.isub = function(i2) {
        if (i2.negative !== 0) {
          i2.negative = 0;
          var a4 = this.iadd(i2);
          return i2.negative = 1, a4._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i2), this.negative = 1, this._normSign();
        var h2 = this.cmp(i2);
        if (h2 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s5, u2;
        h2 > 0 ? (s5 = this, u2 = i2) : (s5 = i2, u2 = this);
        for (var c = 0, b2 = 0;b2 < u2.length; b2++)
          a4 = (s5.words[b2] | 0) - (u2.words[b2] | 0) + c, c = a4 >> 26, this.words[b2] = a4 & 67108863;
        for (;c !== 0 && b2 < s5.length; b2++)
          a4 = (s5.words[b2] | 0) + c, c = a4 >> 26, this.words[b2] = a4 & 67108863;
        if (c === 0 && b2 < s5.length && s5 !== this)
          for (;b2 < s5.length; b2++)
            this.words[b2] = s5.words[b2];
        return this.length = Math.max(this.length, b2), s5 !== this && (this.negative = 1), this.strip();
      }, f.prototype.sub = function(i2) {
        return this.clone().isub(i2);
      };
      function q2(v, i2, a4) {
        a4.negative = i2.negative ^ v.negative;
        var h2 = v.length + i2.length | 0;
        a4.length = h2, h2 = h2 - 1 | 0;
        var s5 = v.words[0] | 0, u2 = i2.words[0] | 0, c = s5 * u2, b2 = c & 67108863, l = c / 67108864 | 0;
        a4.words[0] = b2;
        for (var n2 = 1;n2 < h2; n2++) {
          for (var d2 = l >>> 26, w = l & 67108863, g2 = Math.min(n2, i2.length - 1), _ = Math.max(0, n2 - v.length + 1);_ <= g2; _++) {
            var A = n2 - _ | 0;
            s5 = v.words[A] | 0, u2 = i2.words[_] | 0, c = s5 * u2 + w, d2 += c / 67108864 | 0, w = c & 67108863;
          }
          a4.words[n2] = w | 0, l = d2 | 0;
        }
        return l !== 0 ? a4.words[n2] = l | 0 : a4.length--, a4.strip();
      }
      var L = function(i2, a4, h2) {
        var s5 = i2.words, u2 = a4.words, c = h2.words, b2 = 0, l, n2, d2, w = s5[0] | 0, g2 = w & 8191, _ = w >>> 13, A = s5[1] | 0, R = A & 8191, I = A >>> 13, Me = s5[2] | 0, k2 = Me & 8191, D = Me >>> 13, nt = s5[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s5[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s5[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s5[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s5[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s5[8] | 0, V = yt & 8191, $2 = yt >>> 13, wt = s5[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u2[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u2[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u2[2] | 0, te = xt & 8191, re = xt >>> 13, St = u2[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u2[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u2[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u2[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u2[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u2[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u2[9] | 0, ve = It & 8191, be = It >>> 13;
        h2.negative = i2.negative ^ a4.negative, h2.length = 19, l = Math.imul(g2, X), n2 = Math.imul(g2, J), n2 = n2 + Math.imul(_, X) | 0, d2 = Math.imul(_, J);
        var ft = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n2 = Math.imul(R, J), n2 = n2 + Math.imul(I, X) | 0, d2 = Math.imul(I, J), l = l + Math.imul(g2, Q) | 0, n2 = n2 + Math.imul(g2, ee) | 0, n2 = n2 + Math.imul(_, Q) | 0, d2 = d2 + Math.imul(_, ee) | 0;
        var Be = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k2, X), n2 = Math.imul(k2, J), n2 = n2 + Math.imul(D, X) | 0, d2 = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n2 = n2 + Math.imul(R, ee) | 0, n2 = n2 + Math.imul(I, Q) | 0, d2 = d2 + Math.imul(I, ee) | 0, l = l + Math.imul(g2, te) | 0, n2 = n2 + Math.imul(g2, re) | 0, n2 = n2 + Math.imul(_, te) | 0, d2 = d2 + Math.imul(_, re) | 0;
        var qe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n2 = Math.imul(C, J), n2 = n2 + Math.imul(O, X) | 0, d2 = Math.imul(O, J), l = l + Math.imul(k2, Q) | 0, n2 = n2 + Math.imul(k2, ee) | 0, n2 = n2 + Math.imul(D, Q) | 0, d2 = d2 + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n2 = n2 + Math.imul(R, re) | 0, n2 = n2 + Math.imul(I, te) | 0, d2 = d2 + Math.imul(I, re) | 0, l = l + Math.imul(g2, ie) | 0, n2 = n2 + Math.imul(g2, ne) | 0, n2 = n2 + Math.imul(_, ie) | 0, d2 = d2 + Math.imul(_, ne) | 0;
        var ze = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n2 = Math.imul(F, J), n2 = n2 + Math.imul(U, X) | 0, d2 = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n2 = n2 + Math.imul(C, ee) | 0, n2 = n2 + Math.imul(O, Q) | 0, d2 = d2 + Math.imul(O, ee) | 0, l = l + Math.imul(k2, te) | 0, n2 = n2 + Math.imul(k2, re) | 0, n2 = n2 + Math.imul(D, te) | 0, d2 = d2 + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n2 = n2 + Math.imul(R, ne) | 0, n2 = n2 + Math.imul(I, ie) | 0, d2 = d2 + Math.imul(I, ne) | 0, l = l + Math.imul(g2, fe) | 0, n2 = n2 + Math.imul(g2, ae) | 0, n2 = n2 + Math.imul(_, fe) | 0, d2 = d2 + Math.imul(_, ae) | 0;
        var He = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n2 = Math.imul(z, J), n2 = n2 + Math.imul(H, X) | 0, d2 = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n2 = n2 + Math.imul(F, ee) | 0, n2 = n2 + Math.imul(U, Q) | 0, d2 = d2 + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n2 = n2 + Math.imul(C, re) | 0, n2 = n2 + Math.imul(O, te) | 0, d2 = d2 + Math.imul(O, re) | 0, l = l + Math.imul(k2, ie) | 0, n2 = n2 + Math.imul(k2, ne) | 0, n2 = n2 + Math.imul(D, ie) | 0, d2 = d2 + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n2 = n2 + Math.imul(R, ae) | 0, n2 = n2 + Math.imul(I, fe) | 0, d2 = d2 + Math.imul(I, ae) | 0, l = l + Math.imul(g2, oe) | 0, n2 = n2 + Math.imul(g2, se) | 0, n2 = n2 + Math.imul(_, oe) | 0, d2 = d2 + Math.imul(_, se) | 0;
        var We = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n2 = Math.imul(W, J), n2 = n2 + Math.imul(K, X) | 0, d2 = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n2 = n2 + Math.imul(z, ee) | 0, n2 = n2 + Math.imul(H, Q) | 0, d2 = d2 + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n2 = n2 + Math.imul(F, re) | 0, n2 = n2 + Math.imul(U, te) | 0, d2 = d2 + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n2 = n2 + Math.imul(C, ne) | 0, n2 = n2 + Math.imul(O, ie) | 0, d2 = d2 + Math.imul(O, ne) | 0, l = l + Math.imul(k2, fe) | 0, n2 = n2 + Math.imul(k2, ae) | 0, n2 = n2 + Math.imul(D, fe) | 0, d2 = d2 + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n2 = n2 + Math.imul(R, se) | 0, n2 = n2 + Math.imul(I, oe) | 0, d2 = d2 + Math.imul(I, se) | 0, l = l + Math.imul(g2, he) | 0, n2 = n2 + Math.imul(g2, ue) | 0, n2 = n2 + Math.imul(_, he) | 0, d2 = d2 + Math.imul(_, ue) | 0;
        var Ke = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n2 = Math.imul(j, J), n2 = n2 + Math.imul(Z, X) | 0, d2 = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n2 = n2 + Math.imul(W, ee) | 0, n2 = n2 + Math.imul(K, Q) | 0, d2 = d2 + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n2 = n2 + Math.imul(z, re) | 0, n2 = n2 + Math.imul(H, te) | 0, d2 = d2 + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n2 = n2 + Math.imul(F, ne) | 0, n2 = n2 + Math.imul(U, ie) | 0, d2 = d2 + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n2 = n2 + Math.imul(C, ae) | 0, n2 = n2 + Math.imul(O, fe) | 0, d2 = d2 + Math.imul(O, ae) | 0, l = l + Math.imul(k2, oe) | 0, n2 = n2 + Math.imul(k2, se) | 0, n2 = n2 + Math.imul(D, oe) | 0, d2 = d2 + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n2 = n2 + Math.imul(R, ue) | 0, n2 = n2 + Math.imul(I, he) | 0, d2 = d2 + Math.imul(I, ue) | 0, l = l + Math.imul(g2, le) | 0, n2 = n2 + Math.imul(g2, de) | 0, n2 = n2 + Math.imul(_, le) | 0, d2 = d2 + Math.imul(_, de) | 0;
        var je = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n2 = Math.imul(V, J), n2 = n2 + Math.imul($2, X) | 0, d2 = Math.imul($2, J), l = l + Math.imul(j, Q) | 0, n2 = n2 + Math.imul(j, ee) | 0, n2 = n2 + Math.imul(Z, Q) | 0, d2 = d2 + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n2 = n2 + Math.imul(W, re) | 0, n2 = n2 + Math.imul(K, te) | 0, d2 = d2 + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n2 = n2 + Math.imul(z, ne) | 0, n2 = n2 + Math.imul(H, ie) | 0, d2 = d2 + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n2 = n2 + Math.imul(F, ae) | 0, n2 = n2 + Math.imul(U, fe) | 0, d2 = d2 + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n2 = n2 + Math.imul(C, se) | 0, n2 = n2 + Math.imul(O, oe) | 0, d2 = d2 + Math.imul(O, se) | 0, l = l + Math.imul(k2, he) | 0, n2 = n2 + Math.imul(k2, ue) | 0, n2 = n2 + Math.imul(D, he) | 0, d2 = d2 + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n2 = n2 + Math.imul(R, de) | 0, n2 = n2 + Math.imul(I, le) | 0, d2 = d2 + Math.imul(I, de) | 0, l = l + Math.imul(g2, ce) | 0, n2 = n2 + Math.imul(g2, pe) | 0, n2 = n2 + Math.imul(_, ce) | 0, d2 = d2 + Math.imul(_, pe) | 0;
        var Ze = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n2 = Math.imul(G, J), n2 = n2 + Math.imul(Y, X) | 0, d2 = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n2 = n2 + Math.imul(V, ee) | 0, n2 = n2 + Math.imul($2, Q) | 0, d2 = d2 + Math.imul($2, ee) | 0, l = l + Math.imul(j, te) | 0, n2 = n2 + Math.imul(j, re) | 0, n2 = n2 + Math.imul(Z, te) | 0, d2 = d2 + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n2 = n2 + Math.imul(W, ne) | 0, n2 = n2 + Math.imul(K, ie) | 0, d2 = d2 + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n2 = n2 + Math.imul(z, ae) | 0, n2 = n2 + Math.imul(H, fe) | 0, d2 = d2 + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n2 = n2 + Math.imul(F, se) | 0, n2 = n2 + Math.imul(U, oe) | 0, d2 = d2 + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n2 = n2 + Math.imul(C, ue) | 0, n2 = n2 + Math.imul(O, he) | 0, d2 = d2 + Math.imul(O, ue) | 0, l = l + Math.imul(k2, le) | 0, n2 = n2 + Math.imul(k2, de) | 0, n2 = n2 + Math.imul(D, le) | 0, d2 = d2 + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n2 = n2 + Math.imul(R, pe) | 0, n2 = n2 + Math.imul(I, ce) | 0, d2 = d2 + Math.imul(I, pe) | 0, l = l + Math.imul(g2, ve) | 0, n2 = n2 + Math.imul(g2, be) | 0, n2 = n2 + Math.imul(_, ve) | 0, d2 = d2 + Math.imul(_, be) | 0;
        var Ve = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n2 = Math.imul(G, ee), n2 = n2 + Math.imul(Y, Q) | 0, d2 = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n2 = n2 + Math.imul(V, re) | 0, n2 = n2 + Math.imul($2, te) | 0, d2 = d2 + Math.imul($2, re) | 0, l = l + Math.imul(j, ie) | 0, n2 = n2 + Math.imul(j, ne) | 0, n2 = n2 + Math.imul(Z, ie) | 0, d2 = d2 + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n2 = n2 + Math.imul(W, ae) | 0, n2 = n2 + Math.imul(K, fe) | 0, d2 = d2 + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n2 = n2 + Math.imul(z, se) | 0, n2 = n2 + Math.imul(H, oe) | 0, d2 = d2 + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n2 = n2 + Math.imul(F, ue) | 0, n2 = n2 + Math.imul(U, he) | 0, d2 = d2 + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n2 = n2 + Math.imul(C, de) | 0, n2 = n2 + Math.imul(O, le) | 0, d2 = d2 + Math.imul(O, de) | 0, l = l + Math.imul(k2, ce) | 0, n2 = n2 + Math.imul(k2, pe) | 0, n2 = n2 + Math.imul(D, ce) | 0, d2 = d2 + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n2 = n2 + Math.imul(R, be) | 0, n2 = n2 + Math.imul(I, ve) | 0, d2 = d2 + Math.imul(I, be) | 0;
        var $e = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n2 = Math.imul(G, re), n2 = n2 + Math.imul(Y, te) | 0, d2 = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n2 = n2 + Math.imul(V, ne) | 0, n2 = n2 + Math.imul($2, ie) | 0, d2 = d2 + Math.imul($2, ne) | 0, l = l + Math.imul(j, fe) | 0, n2 = n2 + Math.imul(j, ae) | 0, n2 = n2 + Math.imul(Z, fe) | 0, d2 = d2 + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n2 = n2 + Math.imul(W, se) | 0, n2 = n2 + Math.imul(K, oe) | 0, d2 = d2 + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n2 = n2 + Math.imul(z, ue) | 0, n2 = n2 + Math.imul(H, he) | 0, d2 = d2 + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n2 = n2 + Math.imul(F, de) | 0, n2 = n2 + Math.imul(U, le) | 0, d2 = d2 + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n2 = n2 + Math.imul(C, pe) | 0, n2 = n2 + Math.imul(O, ce) | 0, d2 = d2 + Math.imul(O, pe) | 0, l = l + Math.imul(k2, ve) | 0, n2 = n2 + Math.imul(k2, be) | 0, n2 = n2 + Math.imul(D, ve) | 0, d2 = d2 + Math.imul(D, be) | 0;
        var Ge = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n2 = Math.imul(G, ne), n2 = n2 + Math.imul(Y, ie) | 0, d2 = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n2 = n2 + Math.imul(V, ae) | 0, n2 = n2 + Math.imul($2, fe) | 0, d2 = d2 + Math.imul($2, ae) | 0, l = l + Math.imul(j, oe) | 0, n2 = n2 + Math.imul(j, se) | 0, n2 = n2 + Math.imul(Z, oe) | 0, d2 = d2 + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n2 = n2 + Math.imul(W, ue) | 0, n2 = n2 + Math.imul(K, he) | 0, d2 = d2 + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n2 = n2 + Math.imul(z, de) | 0, n2 = n2 + Math.imul(H, le) | 0, d2 = d2 + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n2 = n2 + Math.imul(F, pe) | 0, n2 = n2 + Math.imul(U, ce) | 0, d2 = d2 + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n2 = n2 + Math.imul(C, be) | 0, n2 = n2 + Math.imul(O, ve) | 0, d2 = d2 + Math.imul(O, be) | 0;
        var Ye = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n2 = Math.imul(G, ae), n2 = n2 + Math.imul(Y, fe) | 0, d2 = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n2 = n2 + Math.imul(V, se) | 0, n2 = n2 + Math.imul($2, oe) | 0, d2 = d2 + Math.imul($2, se) | 0, l = l + Math.imul(j, he) | 0, n2 = n2 + Math.imul(j, ue) | 0, n2 = n2 + Math.imul(Z, he) | 0, d2 = d2 + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n2 = n2 + Math.imul(W, de) | 0, n2 = n2 + Math.imul(K, le) | 0, d2 = d2 + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n2 = n2 + Math.imul(z, pe) | 0, n2 = n2 + Math.imul(H, ce) | 0, d2 = d2 + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n2 = n2 + Math.imul(F, be) | 0, n2 = n2 + Math.imul(U, ve) | 0, d2 = d2 + Math.imul(U, be) | 0;
        var Xe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n2 = Math.imul(G, se), n2 = n2 + Math.imul(Y, oe) | 0, d2 = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n2 = n2 + Math.imul(V, ue) | 0, n2 = n2 + Math.imul($2, he) | 0, d2 = d2 + Math.imul($2, ue) | 0, l = l + Math.imul(j, le) | 0, n2 = n2 + Math.imul(j, de) | 0, n2 = n2 + Math.imul(Z, le) | 0, d2 = d2 + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n2 = n2 + Math.imul(W, pe) | 0, n2 = n2 + Math.imul(K, ce) | 0, d2 = d2 + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n2 = n2 + Math.imul(z, be) | 0, n2 = n2 + Math.imul(H, ve) | 0, d2 = d2 + Math.imul(H, be) | 0;
        var Je = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n2 = Math.imul(G, ue), n2 = n2 + Math.imul(Y, he) | 0, d2 = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n2 = n2 + Math.imul(V, de) | 0, n2 = n2 + Math.imul($2, le) | 0, d2 = d2 + Math.imul($2, de) | 0, l = l + Math.imul(j, ce) | 0, n2 = n2 + Math.imul(j, pe) | 0, n2 = n2 + Math.imul(Z, ce) | 0, d2 = d2 + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n2 = n2 + Math.imul(W, be) | 0, n2 = n2 + Math.imul(K, ve) | 0, d2 = d2 + Math.imul(K, be) | 0;
        var Qe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n2 = Math.imul(G, de), n2 = n2 + Math.imul(Y, le) | 0, d2 = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n2 = n2 + Math.imul(V, pe) | 0, n2 = n2 + Math.imul($2, ce) | 0, d2 = d2 + Math.imul($2, pe) | 0, l = l + Math.imul(j, ve) | 0, n2 = n2 + Math.imul(j, be) | 0, n2 = n2 + Math.imul(Z, ve) | 0, d2 = d2 + Math.imul(Z, be) | 0;
        var et = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n2 = Math.imul(G, pe), n2 = n2 + Math.imul(Y, ce) | 0, d2 = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n2 = n2 + Math.imul(V, be) | 0, n2 = n2 + Math.imul($2, ve) | 0, d2 = d2 + Math.imul($2, be) | 0;
        var tt = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n2 = Math.imul(G, be), n2 = n2 + Math.imul(Y, ve) | 0, d2 = Math.imul(Y, be);
        var rt = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        return b2 = (d2 + (n2 >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b2 !== 0 && (c[19] = b2, h2.length++), h2;
      };
      Math.imul || (L = q2);
      function ge(v, i2, a4) {
        a4.negative = i2.negative ^ v.negative, a4.length = v.length + i2.length;
        for (var h2 = 0, s5 = 0, u2 = 0;u2 < a4.length - 1; u2++) {
          var c = s5;
          s5 = 0;
          for (var b2 = h2 & 67108863, l = Math.min(u2, i2.length - 1), n2 = Math.max(0, u2 - v.length + 1);n2 <= l; n2++) {
            var d2 = u2 - n2, w = v.words[d2] | 0, g2 = i2.words[n2] | 0, _ = w * g2, A = _ & 67108863;
            c = c + (_ / 67108864 | 0) | 0, A = A + b2 | 0, b2 = A & 67108863, c = c + (A >>> 26) | 0, s5 += c >>> 26, c &= 67108863;
          }
          a4.words[u2] = b2, h2 = c, c = s5;
        }
        return h2 !== 0 ? a4.words[u2] = h2 : a4.length--, a4.strip();
      }
      function _e(v, i2, a4) {
        var h2 = new N;
        return h2.mulp(v, i2, a4);
      }
      f.prototype.mulTo = function(i2, a4) {
        var h2, s5 = this.length + i2.length;
        return this.length === 10 && i2.length === 10 ? h2 = L(this, i2, a4) : s5 < 63 ? h2 = q2(this, i2, a4) : s5 < 1024 ? h2 = ge(this, i2, a4) : h2 = _e(this, i2, a4), h2;
      };
      function N(v, i2) {
        this.x = v, this.y = i2;
      }
      N.prototype.makeRBT = function(i2) {
        for (var a4 = new Array(i2), h2 = f.prototype._countBits(i2) - 1, s5 = 0;s5 < i2; s5++)
          a4[s5] = this.revBin(s5, h2, i2);
        return a4;
      }, N.prototype.revBin = function(i2, a4, h2) {
        if (i2 === 0 || i2 === h2 - 1)
          return i2;
        for (var s5 = 0, u2 = 0;u2 < a4; u2++)
          s5 |= (i2 & 1) << a4 - u2 - 1, i2 >>= 1;
        return s5;
      }, N.prototype.permute = function(i2, a4, h2, s5, u2, c) {
        for (var b2 = 0;b2 < c; b2++)
          s5[b2] = a4[i2[b2]], u2[b2] = h2[i2[b2]];
      }, N.prototype.transform = function(i2, a4, h2, s5, u2, c) {
        this.permute(c, i2, a4, h2, s5, u2);
        for (var b2 = 1;b2 < u2; b2 <<= 1)
          for (var l = b2 << 1, n2 = Math.cos(2 * Math.PI / l), d2 = Math.sin(2 * Math.PI / l), w = 0;w < u2; w += l)
            for (var g2 = n2, _ = d2, A = 0;A < b2; A++) {
              var R = h2[w + A], I = s5[w + A], Me = h2[w + A + b2], k2 = s5[w + A + b2], D = g2 * Me - _ * k2;
              k2 = g2 * k2 + _ * Me, Me = D, h2[w + A] = R + Me, s5[w + A] = I + k2, h2[w + A + b2] = R - Me, s5[w + A + b2] = I - k2, A !== l && (D = n2 * g2 - d2 * _, _ = n2 * _ + d2 * g2, g2 = D);
            }
      }, N.prototype.guessLen13b = function(i2, a4) {
        var h2 = Math.max(a4, i2) | 1, s5 = h2 & 1, u2 = 0;
        for (h2 = h2 / 2 | 0;h2; h2 = h2 >>> 1)
          u2++;
        return 1 << u2 + 1 + s5;
      }, N.prototype.conjugate = function(i2, a4, h2) {
        if (!(h2 <= 1))
          for (var s5 = 0;s5 < h2 / 2; s5++) {
            var u2 = i2[s5];
            i2[s5] = i2[h2 - s5 - 1], i2[h2 - s5 - 1] = u2, u2 = a4[s5], a4[s5] = -a4[h2 - s5 - 1], a4[h2 - s5 - 1] = -u2;
          }
      }, N.prototype.normalize13b = function(i2, a4) {
        for (var h2 = 0, s5 = 0;s5 < a4 / 2; s5++) {
          var u2 = Math.round(i2[2 * s5 + 1] / a4) * 8192 + Math.round(i2[2 * s5] / a4) + h2;
          i2[s5] = u2 & 67108863, u2 < 67108864 ? h2 = 0 : h2 = u2 / 67108864 | 0;
        }
        return i2;
      }, N.prototype.convert13b = function(i2, a4, h2, s5) {
        for (var u2 = 0, c = 0;c < a4; c++)
          u2 = u2 + (i2[c] | 0), h2[2 * c] = u2 & 8191, u2 = u2 >>> 13, h2[2 * c + 1] = u2 & 8191, u2 = u2 >>> 13;
        for (c = 2 * a4;c < s5; ++c)
          h2[c] = 0;
        r6(u2 === 0), r6((u2 & -8192) === 0);
      }, N.prototype.stub = function(i2) {
        for (var a4 = new Array(i2), h2 = 0;h2 < i2; h2++)
          a4[h2] = 0;
        return a4;
      }, N.prototype.mulp = function(i2, a4, h2) {
        var s5 = 2 * this.guessLen13b(i2.length, a4.length), u2 = this.makeRBT(s5), c = this.stub(s5), b2 = new Array(s5), l = new Array(s5), n2 = new Array(s5), d2 = new Array(s5), w = new Array(s5), g2 = new Array(s5), _ = h2.words;
        _.length = s5, this.convert13b(i2.words, i2.length, b2, s5), this.convert13b(a4.words, a4.length, d2, s5), this.transform(b2, c, l, n2, s5, u2), this.transform(d2, c, w, g2, s5, u2);
        for (var A = 0;A < s5; A++) {
          var R = l[A] * w[A] - n2[A] * g2[A];
          n2[A] = l[A] * g2[A] + n2[A] * w[A], l[A] = R;
        }
        return this.conjugate(l, n2, s5), this.transform(l, n2, _, c, s5, u2), this.conjugate(_, c, s5), this.normalize13b(_, s5), h2.negative = i2.negative ^ a4.negative, h2.length = i2.length + a4.length, h2.strip();
      }, f.prototype.mul = function(i2) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i2.length), this.mulTo(i2, a4);
      }, f.prototype.mulf = function(i2) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i2.length), _e(this, i2, a4);
      }, f.prototype.imul = function(i2) {
        return this.clone().mulTo(i2, this);
      }, f.prototype.imuln = function(i2) {
        r6(typeof i2 == "number"), r6(i2 < 67108864);
        for (var a4 = 0, h2 = 0;h2 < this.length; h2++) {
          var s5 = (this.words[h2] | 0) * i2, u2 = (s5 & 67108863) + (a4 & 67108863);
          a4 >>= 26, a4 += s5 / 67108864 | 0, a4 += u2 >>> 26, this.words[h2] = u2 & 67108863;
        }
        return a4 !== 0 && (this.words[h2] = a4, this.length++), this;
      }, f.prototype.muln = function(i2) {
        return this.clone().imuln(i2);
      }, f.prototype.sqr = function() {
        return this.mul(this);
      }, f.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f.prototype.pow = function(i2) {
        var a4 = B(i2);
        if (a4.length === 0)
          return new f(1);
        for (var h2 = this, s5 = 0;s5 < a4.length && a4[s5] === 0; s5++, h2 = h2.sqr())
          ;
        if (++s5 < a4.length)
          for (var u2 = h2.sqr();s5 < a4.length; s5++, u2 = u2.sqr())
            a4[s5] !== 0 && (h2 = h2.mul(u2));
        return h2;
      }, f.prototype.iushln = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = i2 % 26, h2 = (i2 - a4) / 26, s5 = 67108863 >>> 26 - a4 << 26 - a4, u2;
        if (a4 !== 0) {
          var c = 0;
          for (u2 = 0;u2 < this.length; u2++) {
            var b2 = this.words[u2] & s5, l = (this.words[u2] | 0) - b2 << a4;
            this.words[u2] = l | c, c = b2 >>> 26 - a4;
          }
          c && (this.words[u2] = c, this.length++);
        }
        if (h2 !== 0) {
          for (u2 = this.length - 1;u2 >= 0; u2--)
            this.words[u2 + h2] = this.words[u2];
          for (u2 = 0;u2 < h2; u2++)
            this.words[u2] = 0;
          this.length += h2;
        }
        return this.strip();
      }, f.prototype.ishln = function(i2) {
        return r6(this.negative === 0), this.iushln(i2);
      }, f.prototype.iushrn = function(i2, a4, h2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var s5;
        a4 ? s5 = (a4 - a4 % 26) / 26 : s5 = 0;
        var u2 = i2 % 26, c = Math.min((i2 - u2) / 26, this.length), b2 = 67108863 ^ 67108863 >>> u2 << u2, l = h2;
        if (s5 -= c, s5 = Math.max(0, s5), l) {
          for (var n2 = 0;n2 < c; n2++)
            l.words[n2] = this.words[n2];
          l.length = c;
        }
        if (c !== 0)
          if (this.length > c)
            for (this.length -= c, n2 = 0;n2 < this.length; n2++)
              this.words[n2] = this.words[n2 + c];
          else
            this.words[0] = 0, this.length = 1;
        var d2 = 0;
        for (n2 = this.length - 1;n2 >= 0 && (d2 !== 0 || n2 >= s5); n2--) {
          var w = this.words[n2] | 0;
          this.words[n2] = d2 << 26 - u2 | w >>> u2, d2 = w & b2;
        }
        return l && d2 !== 0 && (l.words[l.length++] = d2), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f.prototype.ishrn = function(i2, a4, h2) {
        return r6(this.negative === 0), this.iushrn(i2, a4, h2);
      }, f.prototype.shln = function(i2) {
        return this.clone().ishln(i2);
      }, f.prototype.ushln = function(i2) {
        return this.clone().iushln(i2);
      }, f.prototype.shrn = function(i2) {
        return this.clone().ishrn(i2);
      }, f.prototype.ushrn = function(i2) {
        return this.clone().iushrn(i2);
      }, f.prototype.testn = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = i2 % 26, h2 = (i2 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return false;
        var u2 = this.words[h2];
        return !!(u2 & s5);
      }, f.prototype.imaskn = function(i2) {
        r6(typeof i2 == "number" && i2 >= 0);
        var a4 = i2 % 26, h2 = (i2 - a4) / 26;
        if (r6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h2)
          return this;
        if (a4 !== 0 && h2++, this.length = Math.min(h2, this.length), a4 !== 0) {
          var s5 = 67108863 ^ 67108863 >>> a4 << a4;
          this.words[this.length - 1] &= s5;
        }
        return this.strip();
      }, f.prototype.maskn = function(i2) {
        return this.clone().imaskn(i2);
      }, f.prototype.iaddn = function(i2) {
        return r6(typeof i2 == "number"), r6(i2 < 67108864), i2 < 0 ? this.isubn(-i2) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i2 ? (this.words[0] = i2 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i2), this.negative = 1, this) : this._iaddn(i2);
      }, f.prototype._iaddn = function(i2) {
        this.words[0] += i2;
        for (var a4 = 0;a4 < this.length && this.words[a4] >= 67108864; a4++)
          this.words[a4] -= 67108864, a4 === this.length - 1 ? this.words[a4 + 1] = 1 : this.words[a4 + 1]++;
        return this.length = Math.max(this.length, a4 + 1), this;
      }, f.prototype.isubn = function(i2) {
        if (r6(typeof i2 == "number"), r6(i2 < 67108864), i2 < 0)
          return this.iaddn(-i2);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i2), this.negative = 1, this;
        if (this.words[0] -= i2, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a4 = 0;a4 < this.length && this.words[a4] < 0; a4++)
            this.words[a4] += 67108864, this.words[a4 + 1] -= 1;
        return this.strip();
      }, f.prototype.addn = function(i2) {
        return this.clone().iaddn(i2);
      }, f.prototype.subn = function(i2) {
        return this.clone().isubn(i2);
      }, f.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f.prototype.abs = function() {
        return this.clone().iabs();
      }, f.prototype._ishlnsubmul = function(i2, a4, h2) {
        var s5 = i2.length + h2, u2;
        this._expand(s5);
        var c, b2 = 0;
        for (u2 = 0;u2 < i2.length; u2++) {
          c = (this.words[u2 + h2] | 0) + b2;
          var l = (i2.words[u2] | 0) * a4;
          c -= l & 67108863, b2 = (c >> 26) - (l / 67108864 | 0), this.words[u2 + h2] = c & 67108863;
        }
        for (;u2 < this.length - h2; u2++)
          c = (this.words[u2 + h2] | 0) + b2, b2 = c >> 26, this.words[u2 + h2] = c & 67108863;
        if (b2 === 0)
          return this.strip();
        for (r6(b2 === -1), b2 = 0, u2 = 0;u2 < this.length; u2++)
          c = -(this.words[u2] | 0) + b2, b2 = c >> 26, this.words[u2] = c & 67108863;
        return this.negative = 1, this.strip();
      }, f.prototype._wordDiv = function(i2, a4) {
        var h2 = this.length - i2.length, s5 = this.clone(), u2 = i2, c = u2.words[u2.length - 1] | 0, b2 = this._countBits(c);
        h2 = 26 - b2, h2 !== 0 && (u2 = u2.ushln(h2), s5.iushln(h2), c = u2.words[u2.length - 1] | 0);
        var l = s5.length - u2.length, n2;
        if (a4 !== "mod") {
          n2 = new f(null), n2.length = l + 1, n2.words = new Array(n2.length);
          for (var d2 = 0;d2 < n2.length; d2++)
            n2.words[d2] = 0;
        }
        var w = s5.clone()._ishlnsubmul(u2, 1, l);
        w.negative === 0 && (s5 = w, n2 && (n2.words[l] = 1));
        for (var g2 = l - 1;g2 >= 0; g2--) {
          var _ = (s5.words[u2.length + g2] | 0) * 67108864 + (s5.words[u2.length + g2 - 1] | 0);
          for (_ = Math.min(_ / c | 0, 67108863), s5._ishlnsubmul(u2, _, g2);s5.negative !== 0; )
            _--, s5.negative = 0, s5._ishlnsubmul(u2, 1, g2), s5.isZero() || (s5.negative ^= 1);
          n2 && (n2.words[g2] = _);
        }
        return n2 && n2.strip(), s5.strip(), a4 !== "div" && h2 !== 0 && s5.iushrn(h2), { div: n2 || null, mod: s5 };
      }, f.prototype.divmod = function(i2, a4, h2) {
        if (r6(!i2.isZero()), this.isZero())
          return { div: new f(0), mod: new f(0) };
        var s5, u2, c;
        return this.negative !== 0 && i2.negative === 0 ? (c = this.neg().divmod(i2, a4), a4 !== "mod" && (s5 = c.div.neg()), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.iadd(i2)), { div: s5, mod: u2 }) : this.negative === 0 && i2.negative !== 0 ? (c = this.divmod(i2.neg(), a4), a4 !== "mod" && (s5 = c.div.neg()), { div: s5, mod: c.mod }) : (this.negative & i2.negative) !== 0 ? (c = this.neg().divmod(i2.neg(), a4), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.isub(i2)), { div: c.div, mod: u2 }) : i2.length > this.length || this.cmp(i2) < 0 ? { div: new f(0), mod: this } : i2.length === 1 ? a4 === "div" ? { div: this.divn(i2.words[0]), mod: null } : a4 === "mod" ? { div: null, mod: new f(this.modn(i2.words[0])) } : { div: this.divn(i2.words[0]), mod: new f(this.modn(i2.words[0])) } : this._wordDiv(i2, a4);
      }, f.prototype.div = function(i2) {
        return this.divmod(i2, "div", false).div;
      }, f.prototype.mod = function(i2) {
        return this.divmod(i2, "mod", false).mod;
      }, f.prototype.umod = function(i2) {
        return this.divmod(i2, "mod", true).mod;
      }, f.prototype.divRound = function(i2) {
        var a4 = this.divmod(i2);
        if (a4.mod.isZero())
          return a4.div;
        var h2 = a4.div.negative !== 0 ? a4.mod.isub(i2) : a4.mod, s5 = i2.ushrn(1), u2 = i2.andln(1), c = h2.cmp(s5);
        return c < 0 || u2 === 1 && c === 0 ? a4.div : a4.div.negative !== 0 ? a4.div.isubn(1) : a4.div.iaddn(1);
      }, f.prototype.modn = function(i2) {
        r6(i2 <= 67108863);
        for (var a4 = (1 << 26) % i2, h2 = 0, s5 = this.length - 1;s5 >= 0; s5--)
          h2 = (a4 * h2 + (this.words[s5] | 0)) % i2;
        return h2;
      }, f.prototype.idivn = function(i2) {
        r6(i2 <= 67108863);
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = (this.words[h2] | 0) + a4 * 67108864;
          this.words[h2] = s5 / i2 | 0, a4 = s5 % i2;
        }
        return this.strip();
      }, f.prototype.divn = function(i2) {
        return this.clone().idivn(i2);
      }, f.prototype.egcd = function(i2) {
        r6(i2.negative === 0), r6(!i2.isZero());
        var a4 = this, h2 = i2.clone();
        a4.negative !== 0 ? a4 = a4.umod(i2) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = new f(0), b2 = new f(1), l = 0;a4.isEven() && h2.isEven(); )
          a4.iushrn(1), h2.iushrn(1), ++l;
        for (var n2 = h2.clone(), d2 = a4.clone();!a4.isZero(); ) {
          for (var w = 0, g2 = 1;(a4.words[0] & g2) === 0 && w < 26; ++w, g2 <<= 1)
            ;
          if (w > 0)
            for (a4.iushrn(w);w-- > 0; )
              (s5.isOdd() || u2.isOdd()) && (s5.iadd(n2), u2.isub(d2)), s5.iushrn(1), u2.iushrn(1);
          for (var _ = 0, A = 1;(h2.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
            ;
          if (_ > 0)
            for (h2.iushrn(_);_-- > 0; )
              (c.isOdd() || b2.isOdd()) && (c.iadd(n2), b2.isub(d2)), c.iushrn(1), b2.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(c), u2.isub(b2)) : (h2.isub(a4), c.isub(s5), b2.isub(u2));
        }
        return { a: c, b: b2, gcd: h2.iushln(l) };
      }, f.prototype._invmp = function(i2) {
        r6(i2.negative === 0), r6(!i2.isZero());
        var a4 = this, h2 = i2.clone();
        a4.negative !== 0 ? a4 = a4.umod(i2) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = h2.clone();a4.cmpn(1) > 0 && h2.cmpn(1) > 0; ) {
          for (var b2 = 0, l = 1;(a4.words[0] & l) === 0 && b2 < 26; ++b2, l <<= 1)
            ;
          if (b2 > 0)
            for (a4.iushrn(b2);b2-- > 0; )
              s5.isOdd() && s5.iadd(c), s5.iushrn(1);
          for (var n2 = 0, d2 = 1;(h2.words[0] & d2) === 0 && n2 < 26; ++n2, d2 <<= 1)
            ;
          if (n2 > 0)
            for (h2.iushrn(n2);n2-- > 0; )
              u2.isOdd() && u2.iadd(c), u2.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(u2)) : (h2.isub(a4), u2.isub(s5));
        }
        var w;
        return a4.cmpn(1) === 0 ? w = s5 : w = u2, w.cmpn(0) < 0 && w.iadd(i2), w;
      }, f.prototype.gcd = function(i2) {
        if (this.isZero())
          return i2.abs();
        if (i2.isZero())
          return this.abs();
        var a4 = this.clone(), h2 = i2.clone();
        a4.negative = 0, h2.negative = 0;
        for (var s5 = 0;a4.isEven() && h2.isEven(); s5++)
          a4.iushrn(1), h2.iushrn(1);
        do {
          for (;a4.isEven(); )
            a4.iushrn(1);
          for (;h2.isEven(); )
            h2.iushrn(1);
          var u2 = a4.cmp(h2);
          if (u2 < 0) {
            var c = a4;
            a4 = h2, h2 = c;
          } else if (u2 === 0 || h2.cmpn(1) === 0)
            break;
          a4.isub(h2);
        } while (true);
        return h2.iushln(s5);
      }, f.prototype.invm = function(i2) {
        return this.egcd(i2).a.umod(i2);
      }, f.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f.prototype.andln = function(i2) {
        return this.words[0] & i2;
      }, f.prototype.bincn = function(i2) {
        r6(typeof i2 == "number");
        var a4 = i2 % 26, h2 = (i2 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return this._expand(h2 + 1), this.words[h2] |= s5, this;
        for (var u2 = s5, c = h2;u2 !== 0 && c < this.length; c++) {
          var b2 = this.words[c] | 0;
          b2 += u2, u2 = b2 >>> 26, b2 &= 67108863, this.words[c] = b2;
        }
        return u2 !== 0 && (this.words[c] = u2, this.length++), this;
      }, f.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f.prototype.cmpn = function(i2) {
        var a4 = i2 < 0;
        if (this.negative !== 0 && !a4)
          return -1;
        if (this.negative === 0 && a4)
          return 1;
        this.strip();
        var h2;
        if (this.length > 1)
          h2 = 1;
        else {
          a4 && (i2 = -i2), r6(i2 <= 67108863, "Number is too big");
          var s5 = this.words[0] | 0;
          h2 = s5 === i2 ? 0 : s5 < i2 ? -1 : 1;
        }
        return this.negative !== 0 ? -h2 | 0 : h2;
      }, f.prototype.cmp = function(i2) {
        if (this.negative !== 0 && i2.negative === 0)
          return -1;
        if (this.negative === 0 && i2.negative !== 0)
          return 1;
        var a4 = this.ucmp(i2);
        return this.negative !== 0 ? -a4 | 0 : a4;
      }, f.prototype.ucmp = function(i2) {
        if (this.length > i2.length)
          return 1;
        if (this.length < i2.length)
          return -1;
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = this.words[h2] | 0, u2 = i2.words[h2] | 0;
          if (s5 !== u2) {
            s5 < u2 ? a4 = -1 : s5 > u2 && (a4 = 1);
            break;
          }
        }
        return a4;
      }, f.prototype.gtn = function(i2) {
        return this.cmpn(i2) === 1;
      }, f.prototype.gt = function(i2) {
        return this.cmp(i2) === 1;
      }, f.prototype.gten = function(i2) {
        return this.cmpn(i2) >= 0;
      }, f.prototype.gte = function(i2) {
        return this.cmp(i2) >= 0;
      }, f.prototype.ltn = function(i2) {
        return this.cmpn(i2) === -1;
      }, f.prototype.lt = function(i2) {
        return this.cmp(i2) === -1;
      }, f.prototype.lten = function(i2) {
        return this.cmpn(i2) <= 0;
      }, f.prototype.lte = function(i2) {
        return this.cmp(i2) <= 0;
      }, f.prototype.eqn = function(i2) {
        return this.cmpn(i2) === 0;
      }, f.prototype.eq = function(i2) {
        return this.cmp(i2) === 0;
      }, f.red = function(i2) {
        return new P(i2);
      }, f.prototype.toRed = function(i2) {
        return r6(!this.red, "Already a number in reduction context"), r6(this.negative === 0, "red works only with positives"), i2.convertTo(this)._forceRed(i2);
      }, f.prototype.fromRed = function() {
        return r6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f.prototype._forceRed = function(i2) {
        return this.red = i2, this;
      }, f.prototype.forceRed = function(i2) {
        return r6(!this.red, "Already a number in reduction context"), this._forceRed(i2);
      }, f.prototype.redAdd = function(i2) {
        return r6(this.red, "redAdd works only with red numbers"), this.red.add(this, i2);
      }, f.prototype.redIAdd = function(i2) {
        return r6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i2);
      }, f.prototype.redSub = function(i2) {
        return r6(this.red, "redSub works only with red numbers"), this.red.sub(this, i2);
      }, f.prototype.redISub = function(i2) {
        return r6(this.red, "redISub works only with red numbers"), this.red.isub(this, i2);
      }, f.prototype.redShl = function(i2) {
        return r6(this.red, "redShl works only with red numbers"), this.red.shl(this, i2);
      }, f.prototype.redMul = function(i2) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i2), this.red.mul(this, i2);
      }, f.prototype.redIMul = function(i2) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i2), this.red.imul(this, i2);
      }, f.prototype.redSqr = function() {
        return r6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f.prototype.redISqr = function() {
        return r6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f.prototype.redSqrt = function() {
        return r6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f.prototype.redInvm = function() {
        return r6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f.prototype.redNeg = function() {
        return r6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f.prototype.redPow = function(i2) {
        return r6(this.red && !i2.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i2);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v, i2) {
        this.name = v, this.p = new f(i2, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i2 = new f(null);
        return i2.words = new Array(Math.ceil(this.n / 13)), i2;
      }, ye.prototype.ireduce = function(i2) {
        var a4 = i2, h2;
        do
          this.split(a4, this.tmp), a4 = this.imulK(a4), a4 = a4.iadd(this.tmp), h2 = a4.bitLength();
        while (h2 > this.n);
        var s5 = h2 < this.n ? -1 : a4.ucmp(this.p);
        return s5 === 0 ? (a4.words[0] = 0, a4.length = 1) : s5 > 0 ? a4.isub(this.p) : a4.strip !== undefined ? a4.strip() : a4._strip(), a4;
      }, ye.prototype.split = function(i2, a4) {
        i2.iushrn(this.n, 0, a4);
      }, ye.prototype.imulK = function(i2) {
        return i2.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o2(xe, ye), xe.prototype.split = function(i2, a4) {
        for (var h2 = 4194303, s5 = Math.min(i2.length, 9), u2 = 0;u2 < s5; u2++)
          a4.words[u2] = i2.words[u2];
        if (a4.length = s5, i2.length <= 9) {
          i2.words[0] = 0, i2.length = 1;
          return;
        }
        var c = i2.words[9];
        for (a4.words[a4.length++] = c & h2, u2 = 10;u2 < i2.length; u2++) {
          var b2 = i2.words[u2] | 0;
          i2.words[u2 - 10] = (b2 & h2) << 4 | c >>> 22, c = b2;
        }
        c >>>= 22, i2.words[u2 - 10] = c, c === 0 && i2.length > 10 ? i2.length -= 10 : i2.length -= 9;
      }, xe.prototype.imulK = function(i2) {
        i2.words[i2.length] = 0, i2.words[i2.length + 1] = 0, i2.length += 2;
        for (var a4 = 0, h2 = 0;h2 < i2.length; h2++) {
          var s5 = i2.words[h2] | 0;
          a4 += s5 * 977, i2.words[h2] = a4 & 67108863, a4 = s5 * 64 + (a4 / 67108864 | 0);
        }
        return i2.words[i2.length - 1] === 0 && (i2.length--, i2.words[i2.length - 1] === 0 && i2.length--), i2;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o2(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o2(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o2(Ae, ye), Ae.prototype.imulK = function(i2) {
        for (var a4 = 0, h2 = 0;h2 < i2.length; h2++) {
          var s5 = (i2.words[h2] | 0) * 19 + a4, u2 = s5 & 67108863;
          s5 >>>= 26, i2.words[h2] = u2, a4 = s5;
        }
        return a4 !== 0 && (i2.words[i2.length++] = a4), i2;
      }, f._prime = function(i2) {
        if (we[i2])
          return we[i2];
        var a4;
        if (i2 === "k256")
          a4 = new xe;
        else if (i2 === "p224")
          a4 = new Re;
        else if (i2 === "p192")
          a4 = new Ee;
        else if (i2 === "p25519")
          a4 = new Ae;
        else
          throw new Error("Unknown prime " + i2);
        return we[i2] = a4, a4;
      };
      function P(v) {
        if (typeof v == "string") {
          var i2 = f._prime(v);
          this.m = i2.p, this.prime = i2;
        } else
          r6(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
      }
      P.prototype._verify1 = function(i2) {
        r6(i2.negative === 0, "red works only with positives"), r6(i2.red, "red works only with red numbers");
      }, P.prototype._verify2 = function(i2, a4) {
        r6((i2.negative | a4.negative) === 0, "red works only with positives"), r6(i2.red && i2.red === a4.red, "red works only with red numbers");
      }, P.prototype.imod = function(i2) {
        return this.prime ? this.prime.ireduce(i2)._forceRed(this) : i2.umod(this.m)._forceRed(this);
      }, P.prototype.neg = function(i2) {
        return i2.isZero() ? i2.clone() : this.m.sub(i2)._forceRed(this);
      }, P.prototype.add = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.add(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2._forceRed(this);
      }, P.prototype.iadd = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.iadd(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2;
      }, P.prototype.sub = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.sub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2._forceRed(this);
      }, P.prototype.isub = function(i2, a4) {
        this._verify2(i2, a4);
        var h2 = i2.isub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2;
      }, P.prototype.shl = function(i2, a4) {
        return this._verify1(i2), this.imod(i2.ushln(a4));
      }, P.prototype.imul = function(i2, a4) {
        return this._verify2(i2, a4), this.imod(i2.imul(a4));
      }, P.prototype.mul = function(i2, a4) {
        return this._verify2(i2, a4), this.imod(i2.mul(a4));
      }, P.prototype.isqr = function(i2) {
        return this.imul(i2, i2.clone());
      }, P.prototype.sqr = function(i2) {
        return this.mul(i2, i2);
      }, P.prototype.sqrt = function(i2) {
        if (i2.isZero())
          return i2.clone();
        var a4 = this.m.andln(3);
        if (r6(a4 % 2 === 1), a4 === 3) {
          var h2 = this.m.add(new f(1)).iushrn(2);
          return this.pow(i2, h2);
        }
        for (var s5 = this.m.subn(1), u2 = 0;!s5.isZero() && s5.andln(1) === 0; )
          u2++, s5.iushrn(1);
        r6(!s5.isZero());
        var c = new f(1).toRed(this), b2 = c.redNeg(), l = this.m.subn(1).iushrn(1), n2 = this.m.bitLength();
        for (n2 = new f(2 * n2 * n2).toRed(this);this.pow(n2, l).cmp(b2) !== 0; )
          n2.redIAdd(b2);
        for (var d2 = this.pow(n2, s5), w = this.pow(i2, s5.addn(1).iushrn(1)), g2 = this.pow(i2, s5), _ = u2;g2.cmp(c) !== 0; ) {
          for (var A = g2, R = 0;A.cmp(c) !== 0; R++)
            A = A.redSqr();
          r6(R < _);
          var I = this.pow(d2, new f(1).iushln(_ - R - 1));
          w = w.redMul(I), d2 = I.redSqr(), g2 = g2.redMul(d2), _ = R;
        }
        return w;
      }, P.prototype.invm = function(i2) {
        var a4 = i2._invmp(this.m);
        return a4.negative !== 0 ? (a4.negative = 0, this.imod(a4).redNeg()) : this.imod(a4);
      }, P.prototype.pow = function(i2, a4) {
        if (a4.isZero())
          return new f(1).toRed(this);
        if (a4.cmpn(1) === 0)
          return i2.clone();
        var h2 = 4, s5 = new Array(1 << h2);
        s5[0] = new f(1).toRed(this), s5[1] = i2;
        for (var u2 = 2;u2 < s5.length; u2++)
          s5[u2] = this.mul(s5[u2 - 1], i2);
        var c = s5[0], b2 = 0, l = 0, n2 = a4.bitLength() % 26;
        for (n2 === 0 && (n2 = 26), u2 = a4.length - 1;u2 >= 0; u2--) {
          for (var d2 = a4.words[u2], w = n2 - 1;w >= 0; w--) {
            var g2 = d2 >> w & 1;
            if (c !== s5[0] && (c = this.sqr(c)), g2 === 0 && b2 === 0) {
              l = 0;
              continue;
            }
            b2 <<= 1, b2 |= g2, l++, !(l !== h2 && (u2 !== 0 || w !== 0)) && (c = this.mul(c, s5[b2]), l = 0, b2 = 0);
          }
          n2 = 26;
        }
        return c;
      }, P.prototype.convertTo = function(i2) {
        var a4 = i2.umod(this.m);
        return a4 === i2 ? a4.clone() : a4;
      }, P.prototype.convertFrom = function(i2) {
        var a4 = i2.clone();
        return a4.red = null, a4;
      }, f.mont = function(i2) {
        return new Se(i2);
      };
      function Se(v) {
        P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o2(Se, P), Se.prototype.convertTo = function(i2) {
        return this.imod(i2.ushln(this.shift));
      }, Se.prototype.convertFrom = function(i2) {
        var a4 = this.imod(i2.mul(this.rinv));
        return a4.red = null, a4;
      }, Se.prototype.imul = function(i2, a4) {
        if (i2.isZero() || a4.isZero())
          return i2.words[0] = 0, i2.length = 1, i2;
        var h2 = i2.imul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.mul = function(i2, a4) {
        if (i2.isZero() || a4.isZero())
          return new f(0)._forceRed(this);
        var h2 = i2.mul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.invm = function(i2) {
        var a4 = this.imod(i2._invmp(this.m).mul(this.r2));
        return a4._forceRed(this);
      };
    })(typeof Xu > "u" || Xu, Gm);
  });
  Xm = T(() => {
  });
  As = T(($T, el) => {
    var Ju;
    el.exports = function(e6) {
      return Ju || (Ju = new Zi(null)), Ju.generate(e6);
    };
    function Zi(t6) {
      this.rand = t6;
    }
    el.exports.Rand = Zi;
    Zi.prototype.generate = function(e6) {
      return this._rand(e6);
    };
    Zi.prototype._rand = function(e6) {
      if (this.rand.getBytes)
        return this.rand.getBytes(e6);
      for (var r6 = new Uint8Array(e6), o2 = 0;o2 < r6.length; o2++)
        r6[o2] = this.rand.getByte();
      return r6;
    };
    if (typeof self == "object")
      self.crypto && self.crypto.getRandomValues ? Zi.prototype._rand = function(e6) {
        var r6 = new Uint8Array(e6);
        return self.crypto.getRandomValues(r6), r6;
      } : self.msCrypto && self.msCrypto.getRandomValues ? Zi.prototype._rand = function(e6) {
        var r6 = new Uint8Array(e6);
        return self.msCrypto.getRandomValues(r6), r6;
      } : typeof window == "object" && (Zi.prototype._rand = function() {
        throw new Error("Not implemented yet");
      });
    else
      try {
        if (Qu = Xm(), typeof Qu.randomBytes != "function")
          throw new Error("Not supported");
        Zi.prototype._rand = function(e6) {
          return Qu.randomBytes(e6);
        };
      } catch {
      }
    var Qu;
  });
  tl = T((GT, Jm) => {
    var In = Ym(), Q9 = As();
    function Tn(t6) {
      this.rand = t6 || new Q9.Rand;
    }
    Jm.exports = Tn;
    Tn.create = function(e6) {
      return new Tn(e6);
    };
    Tn.prototype._randbelow = function(e6) {
      var r6 = e6.bitLength(), o2 = Math.ceil(r6 / 8);
      do
        var f = new In(this.rand.generate(o2));
      while (f.cmp(e6) >= 0);
      return f;
    };
    Tn.prototype._randrange = function(e6, r6) {
      var o2 = r6.sub(e6);
      return e6.add(this._randbelow(o2));
    };
    Tn.prototype.test = function(e6, r6, o2) {
      var f = e6.bitLength(), p2 = In.mont(e6), m2 = new In(1).toRed(p2);
      r6 || (r6 = Math.max(1, f / 48 | 0));
      for (var y2 = e6.subn(1), M = 0;!y2.testn(M); M++)
        ;
      for (var x = e6.shrn(M), S = y2.toRed(p2), E = true;r6 > 0; r6--) {
        var B = this._randrange(new In(2), y2);
        o2 && o2(B);
        var q2 = B.toRed(p2).redPow(x);
        if (!(q2.cmp(m2) === 0 || q2.cmp(S) === 0)) {
          for (var L = 1;L < M; L++) {
            if (q2 = q2.redSqr(), q2.cmp(m2) === 0)
              return false;
            if (q2.cmp(S) === 0)
              break;
          }
          if (L === M)
            return false;
        }
      }
      return E;
    };
    Tn.prototype.getDivisor = function(e6, r6) {
      var o2 = e6.bitLength(), f = In.mont(e6), p2 = new In(1).toRed(f);
      r6 || (r6 = Math.max(1, o2 / 48 | 0));
      for (var m2 = e6.subn(1), y2 = 0;!m2.testn(y2); y2++)
        ;
      for (var M = e6.shrn(y2), x = m2.toRed(f);r6 > 0; r6--) {
        var S = this._randrange(new In(2), m2), E = e6.gcd(S);
        if (E.cmpn(1) !== 0)
          return E;
        var B = S.toRed(f).redPow(M);
        if (!(B.cmp(p2) === 0 || B.cmp(x) === 0)) {
          for (var q2 = 1;q2 < y2; q2++) {
            if (B = B.redSqr(), B.cmp(p2) === 0)
              return B.fromRed().subn(1).gcd(e6);
            if (B.cmp(x) === 0)
              break;
          }
          if (q2 === y2)
            return B = B.redSqr(), B.fromRed().subn(1).gcd(e6);
        }
      }
      return false;
    };
  });
  ol = T((ek, tg) => {
    var eS = on();
    tg.exports = al;
    al.simpleSieve = nl;
    al.fermatTest = fl;
    var Ht = Yu(), tS = new Ht(24), rS = tl(), Qm = new rS, iS = new Ht(1), il = new Ht(2), nS = new Ht(5), YT = new Ht(16), XT = new Ht(8), fS = new Ht(10), aS = new Ht(3), JT = new Ht(7), oS = new Ht(11), eg = new Ht(4), QT = new Ht(12), rl = null;
    function sS() {
      if (rl !== null)
        return rl;
      var t6 = 1048576, e6 = [];
      e6[0] = 2;
      for (var r6 = 1, o2 = 3;o2 < t6; o2 += 2) {
        for (var f = Math.ceil(Math.sqrt(o2)), p2 = 0;p2 < r6 && e6[p2] <= f && o2 % e6[p2] !== 0; p2++)
          ;
        r6 !== p2 && e6[p2] <= f || (e6[r6++] = o2);
      }
      return rl = e6, e6;
    }
    function nl(t6) {
      for (var e6 = sS(), r6 = 0;r6 < e6.length; r6++)
        if (t6.modn(e6[r6]) === 0)
          return t6.cmpn(e6[r6]) === 0;
      return true;
    }
    function fl(t6) {
      var e6 = Ht.mont(t6);
      return il.toRed(e6).redPow(t6.subn(1)).fromRed().cmpn(1) === 0;
    }
    function al(t6, e6) {
      if (t6 < 16)
        return e6 === 2 || e6 === 5 ? new Ht([140, 123]) : new Ht([140, 39]);
      e6 = new Ht(e6);
      for (var r6, o2;; ) {
        for (r6 = new Ht(eS(Math.ceil(t6 / 8)));r6.bitLength() > t6; )
          r6.ishrn(1);
        if (r6.isEven() && r6.iadd(iS), r6.testn(1) || r6.iadd(il), e6.cmp(il)) {
          if (!e6.cmp(nS))
            for (;r6.mod(fS).cmp(aS); )
              r6.iadd(eg);
        } else
          for (;r6.mod(tS).cmp(oS); )
            r6.iadd(eg);
        if (o2 = r6.shrn(1), nl(o2) && nl(r6) && fl(o2) && fl(r6) && Qm.test(o2) && Qm.test(r6))
          return r6;
      }
    }
  });
  rg = T((tk, hS) => {
    hS.exports = { modp1: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff" }, modp2: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff" }, modp5: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff" }, modp14: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff" }, modp15: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff" }, modp16: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff" }, modp17: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff" }, modp18: { gen: "02", prime: "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff" } };
  });
  ag = T((rk, fg) => {
    var yr = Yu(), uS = tl(), ig = new uS, lS = new yr(24), dS = new yr(11), cS = new yr(10), pS = new yr(3), vS = new yr(7), ng = ol(), bS = on();
    fg.exports = Si;
    function mS(t6, e6) {
      return e6 = e6 || "utf8", Buffer.isBuffer(t6) || (t6 = new Buffer(t6, e6)), this._pub = new yr(t6), this;
    }
    function gS(t6, e6) {
      return e6 = e6 || "utf8", Buffer.isBuffer(t6) || (t6 = new Buffer(t6, e6)), this._priv = new yr(t6), this;
    }
    var Rs = {};
    function yS(t6, e6) {
      var r6 = e6.toString("hex"), o2 = [r6, t6.toString(16)].join("_");
      if (o2 in Rs)
        return Rs[o2];
      var f = 0;
      if (t6.isEven() || !ng.simpleSieve || !ng.fermatTest(t6) || !ig.test(t6))
        return f += 1, r6 === "02" || r6 === "05" ? f += 8 : f += 4, Rs[o2] = f, f;
      ig.test(t6.shrn(1)) || (f += 2);
      var p2;
      switch (r6) {
        case "02":
          t6.mod(lS).cmp(dS) && (f += 8);
          break;
        case "05":
          p2 = t6.mod(cS), p2.cmp(pS) && p2.cmp(vS) && (f += 8);
          break;
        default:
          f += 4;
      }
      return Rs[o2] = f, f;
    }
    function Si(t6, e6, r6) {
      this.setGenerator(e6), this.__prime = new yr(t6), this._prime = yr.mont(this.__prime), this._primeLen = t6.length, this._pub = undefined, this._priv = undefined, this._primeCode = undefined, r6 ? (this.setPublicKey = mS, this.setPrivateKey = gS) : this._primeCode = 8;
    }
    Object.defineProperty(Si.prototype, "verifyError", { enumerable: true, get: function() {
      return typeof this._primeCode != "number" && (this._primeCode = yS(this.__prime, this.__gen)), this._primeCode;
    } });
    Si.prototype.generateKeys = function() {
      return this._priv || (this._priv = new yr(bS(this._primeLen))), this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed(), this.getPublicKey();
    };
    Si.prototype.computeSecret = function(t6) {
      t6 = new yr(t6), t6 = t6.toRed(this._prime);
      var e6 = t6.redPow(this._priv).fromRed(), r6 = new Buffer(e6.toArray()), o2 = this.getPrime();
      if (r6.length < o2.length) {
        var f = new Buffer(o2.length - r6.length);
        f.fill(0), r6 = Buffer.concat([f, r6]);
      }
      return r6;
    };
    Si.prototype.getPublicKey = function(e6) {
      return Bs(this._pub, e6);
    };
    Si.prototype.getPrivateKey = function(e6) {
      return Bs(this._priv, e6);
    };
    Si.prototype.getPrime = function(t6) {
      return Bs(this.__prime, t6);
    };
    Si.prototype.getGenerator = function(t6) {
      return Bs(this._gen, t6);
    };
    Si.prototype.setGenerator = function(t6, e6) {
      return e6 = e6 || "utf8", Buffer.isBuffer(t6) || (t6 = new Buffer(t6, e6)), this.__gen = t6, this._gen = new yr(t6), this;
    };
    function Bs(t6, e6) {
      var r6 = new Buffer(t6.toArray());
      return e6 ? r6.toString(e6) : r6;
    }
  });
  hg = T((_f) => {
    var wS = ol(), og = rg(), sl = ag();
    function MS(t6) {
      var e6 = new Buffer(og[t6].prime, "hex"), r6 = new Buffer(og[t6].gen, "hex");
      return new sl(e6, r6);
    }
    var _S = { binary: true, hex: true, base64: true };
    function sg(t6, e6, r6, o2) {
      return Buffer.isBuffer(e6) || _S[e6] === undefined ? sg(t6, "binary", e6, r6) : (e6 = e6 || "binary", o2 = o2 || "binary", r6 = r6 || new Buffer([2]), Buffer.isBuffer(r6) || (r6 = new Buffer(r6, o2)), typeof t6 == "number" ? new sl(wS(t6, r6), r6, true) : (Buffer.isBuffer(t6) || (t6 = new Buffer(t6, e6)), new sl(t6, r6, true)));
    }
    _f.DiffieHellmanGroup = _f.createDiffieHellmanGroup = _f.getDiffieHellman = MS;
    _f.createDiffieHellman = _f.DiffieHellman = sg;
  });
  hl = T((nk, ug) => {
    ug.exports = ki().EventEmitter;
  });
  pg = T((fk, cg) => {
    function lg(t6, e6) {
      var r6 = Object.keys(t6);
      if (Object.getOwnPropertySymbols) {
        var o2 = Object.getOwnPropertySymbols(t6);
        e6 && (o2 = o2.filter(function(f) {
          return Object.getOwnPropertyDescriptor(t6, f).enumerable;
        })), r6.push.apply(r6, o2);
      }
      return r6;
    }
    function xS(t6) {
      for (var e6 = 1;e6 < arguments.length; e6++) {
        var r6 = arguments[e6] != null ? arguments[e6] : {};
        e6 % 2 ? lg(Object(r6), true).forEach(function(o2) {
          SS(t6, o2, r6[o2]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t6, Object.getOwnPropertyDescriptors(r6)) : lg(Object(r6)).forEach(function(o2) {
          Object.defineProperty(t6, o2, Object.getOwnPropertyDescriptor(r6, o2));
        });
      }
      return t6;
    }
    function SS(t6, e6, r6) {
      return (e6 in t6) ? Object.defineProperty(t6, e6, { value: r6, enumerable: true, configurable: true, writable: true }) : t6[e6] = r6, t6;
    }
    function ES(t6, e6) {
      if (!(t6 instanceof e6))
        throw new TypeError("Cannot call a class as a function");
    }
    function dg(t6, e6) {
      for (var r6 = 0;r6 < e6.length; r6++) {
        var o2 = e6[r6];
        o2.enumerable = o2.enumerable || false, o2.configurable = true, ("value" in o2) && (o2.writable = true), Object.defineProperty(t6, o2.key, o2);
      }
    }
    function AS(t6, e6, r6) {
      return e6 && dg(t6.prototype, e6), r6 && dg(t6, r6), t6;
    }
    var RS = Ut(), qs = RS.Buffer, BS = $f(), ul = BS.inspect, qS = ul && ul.custom || "inspect";
    function IS(t6, e6, r6) {
      qs.prototype.copy.call(t6, e6, r6);
    }
    cg.exports = function() {
      function t6() {
        ES(this, t6), this.head = null, this.tail = null, this.length = 0;
      }
      return AS(t6, [{ key: "push", value: function(r6) {
        var o2 = { data: r6, next: null };
        this.length > 0 ? this.tail.next = o2 : this.head = o2, this.tail = o2, ++this.length;
      } }, { key: "unshift", value: function(r6) {
        var o2 = { data: r6, next: this.head };
        this.length === 0 && (this.tail = o2), this.head = o2, ++this.length;
      } }, { key: "shift", value: function() {
        if (this.length !== 0) {
          var r6 = this.head.data;
          return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, r6;
        }
      } }, { key: "clear", value: function() {
        this.head = this.tail = null, this.length = 0;
      } }, { key: "join", value: function(r6) {
        if (this.length === 0)
          return "";
        for (var o2 = this.head, f = "" + o2.data;o2 = o2.next; )
          f += r6 + o2.data;
        return f;
      } }, { key: "concat", value: function(r6) {
        if (this.length === 0)
          return qs.alloc(0);
        for (var o2 = qs.allocUnsafe(r6 >>> 0), f = this.head, p2 = 0;f; )
          IS(f.data, o2, p2), p2 += f.data.length, f = f.next;
        return o2;
      } }, { key: "consume", value: function(r6, o2) {
        var f;
        return r6 < this.head.data.length ? (f = this.head.data.slice(0, r6), this.head.data = this.head.data.slice(r6)) : r6 === this.head.data.length ? f = this.shift() : f = o2 ? this._getString(r6) : this._getBuffer(r6), f;
      } }, { key: "first", value: function() {
        return this.head.data;
      } }, { key: "_getString", value: function(r6) {
        var o2 = this.head, f = 1, p2 = o2.data;
        for (r6 -= p2.length;o2 = o2.next; ) {
          var m2 = o2.data, y2 = r6 > m2.length ? m2.length : r6;
          if (y2 === m2.length ? p2 += m2 : p2 += m2.slice(0, r6), r6 -= y2, r6 === 0) {
            y2 === m2.length ? (++f, o2.next ? this.head = o2.next : this.head = this.tail = null) : (this.head = o2, o2.data = m2.slice(y2));
            break;
          }
          ++f;
        }
        return this.length -= f, p2;
      } }, { key: "_getBuffer", value: function(r6) {
        var o2 = qs.allocUnsafe(r6), f = this.head, p2 = 1;
        for (f.data.copy(o2), r6 -= f.data.length;f = f.next; ) {
          var m2 = f.data, y2 = r6 > m2.length ? m2.length : r6;
          if (m2.copy(o2, o2.length - r6, 0, y2), r6 -= y2, r6 === 0) {
            y2 === m2.length ? (++p2, f.next ? this.head = f.next : this.head = this.tail = null) : (this.head = f, f.data = m2.slice(y2));
            break;
          }
          ++p2;
        }
        return this.length -= p2, o2;
      } }, { key: qS, value: function(r6, o2) {
        return ul(this, xS({}, o2, { depth: 0, customInspect: false }));
      } }]), t6;
    }();
  });
  dl = T((ak, bg) => {
    function TS(t6, e6) {
      var r6 = this, o2 = this._readableState && this._readableState.destroyed, f = this._writableState && this._writableState.destroyed;
      return o2 || f ? (e6 ? e6(t6) : t6 && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = true, process.nextTick(ll, this, t6)) : process.nextTick(ll, this, t6)), this) : (this._readableState && (this._readableState.destroyed = true), this._writableState && (this._writableState.destroyed = true), this._destroy(t6 || null, function(p2) {
        !e6 && p2 ? r6._writableState ? r6._writableState.errorEmitted ? process.nextTick(Is, r6) : (r6._writableState.errorEmitted = true, process.nextTick(vg, r6, p2)) : process.nextTick(vg, r6, p2) : e6 ? (process.nextTick(Is, r6), e6(p2)) : process.nextTick(Is, r6);
      }), this);
    }
    function vg(t6, e6) {
      ll(t6, e6), Is(t6);
    }
    function Is(t6) {
      t6._writableState && !t6._writableState.emitClose || t6._readableState && !t6._readableState.emitClose || t6.emit("close");
    }
    function kS() {
      this._readableState && (this._readableState.destroyed = false, this._readableState.reading = false, this._readableState.ended = false, this._readableState.endEmitted = false), this._writableState && (this._writableState.destroyed = false, this._writableState.ended = false, this._writableState.ending = false, this._writableState.finalCalled = false, this._writableState.prefinished = false, this._writableState.finished = false, this._writableState.errorEmitted = false);
    }
    function ll(t6, e6) {
      t6.emit("error", e6);
    }
    function LS(t6, e6) {
      var { _readableState: r6, _writableState: o2 } = t6;
      r6 && r6.autoDestroy || o2 && o2.autoDestroy ? t6.destroy(e6) : t6.emit("error", e6);
    }
    bg.exports = { destroy: TS, undestroy: kS, errorOrDestroy: LS };
  });
  kn = T((ok, yg) => {
    function NS(t6, e6) {
      t6.prototype = Object.create(e6.prototype), t6.prototype.constructor = t6, t6.__proto__ = e6;
    }
    var gg = {};
    function wr(t6, e6, r6) {
      r6 || (r6 = Error);
      function o2(p2, m2, y2) {
        return typeof e6 == "string" ? e6 : e6(p2, m2, y2);
      }
      var f = function(p2) {
        NS(m2, p2);
        function m2(y2, M, x) {
          return p2.call(this, o2(y2, M, x)) || this;
        }
        return m2;
      }(r6);
      f.prototype.name = r6.name, f.prototype.code = t6, gg[t6] = f;
    }
    function mg(t6, e6) {
      if (Array.isArray(t6)) {
        var r6 = t6.length;
        return t6 = t6.map(function(o2) {
          return String(o2);
        }), r6 > 2 ? "one of ".concat(e6, " ").concat(t6.slice(0, r6 - 1).join(", "), ", or ") + t6[r6 - 1] : r6 === 2 ? "one of ".concat(e6, " ").concat(t6[0], " or ").concat(t6[1]) : "of ".concat(e6, " ").concat(t6[0]);
      } else
        return "of ".concat(e6, " ").concat(String(t6));
    }
    function DS(t6, e6, r6) {
      return t6.substr(!r6 || r6 < 0 ? 0 : +r6, e6.length) === e6;
    }
    function PS(t6, e6, r6) {
      return (r6 === undefined || r6 > t6.length) && (r6 = t6.length), t6.substring(r6 - e6.length, r6) === e6;
    }
    function CS(t6, e6, r6) {
      return typeof r6 != "number" && (r6 = 0), r6 + e6.length > t6.length ? false : t6.indexOf(e6, r6) !== -1;
    }
    wr("ERR_INVALID_OPT_VALUE", function(t6, e6) {
      return 'The value "' + e6 + '" is invalid for option "' + t6 + '"';
    }, TypeError);
    wr("ERR_INVALID_ARG_TYPE", function(t6, e6, r6) {
      var o2;
      typeof e6 == "string" && DS(e6, "not ") ? (o2 = "must not be", e6 = e6.replace(/^not /, "")) : o2 = "must be";
      var f;
      if (PS(t6, " argument"))
        f = "The ".concat(t6, " ").concat(o2, " ").concat(mg(e6, "type"));
      else {
        var p2 = CS(t6, ".") ? "property" : "argument";
        f = 'The "'.concat(t6, '" ').concat(p2, " ").concat(o2, " ").concat(mg(e6, "type"));
      }
      return f += ". Received type ".concat(typeof r6), f;
    }, TypeError);
    wr("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF");
    wr("ERR_METHOD_NOT_IMPLEMENTED", function(t6) {
      return "The " + t6 + " method is not implemented";
    });
    wr("ERR_STREAM_PREMATURE_CLOSE", "Premature close");
    wr("ERR_STREAM_DESTROYED", function(t6) {
      return "Cannot call " + t6 + " after a stream was destroyed";
    });
    wr("ERR_MULTIPLE_CALLBACK", "Callback called multiple times");
    wr("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable");
    wr("ERR_STREAM_WRITE_AFTER_END", "write after end");
    wr("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError);
    wr("ERR_UNKNOWN_ENCODING", function(t6) {
      return "Unknown encoding: " + t6;
    }, TypeError);
    wr("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event");
    yg.exports.codes = gg;
  });
  cl = T((sk, wg) => {
    var OS = kn().codes.ERR_INVALID_OPT_VALUE;
    function FS(t6, e6, r6) {
      return t6.highWaterMark != null ? t6.highWaterMark : e6 ? t6[r6] : null;
    }
    function US(t6, e6, r6, o2) {
      var f = FS(e6, o2, r6);
      if (f != null) {
        if (!(isFinite(f) && Math.floor(f) === f) || f < 0) {
          var p2 = o2 ? r6 : "highWaterMark";
          throw new OS(p2, f);
        }
        return Math.floor(f);
      }
      return t6.objectMode ? 16 : 16 * 1024;
    }
    wg.exports = { getHighWaterMark: US };
  });
  bl = T((hk, Ag) => {
    Ag.exports = ut;
    function _g(t6) {
      var e6 = this;
      this.next = null, this.entry = null, this.finish = function() {
        cE(e6, t6);
      };
    }
    var xf;
    ut.WritableState = ka;
    var zS = { deprecate: G0() }, xg = hl(), ks = Ut().Buffer, HS = global.Uint8Array || function() {
    };
    function WS(t6) {
      return ks.from(t6);
    }
    function KS(t6) {
      return ks.isBuffer(t6) || t6 instanceof HS;
    }
    var vl = dl(), jS = cl(), ZS = jS.getHighWaterMark, Vi = kn().codes, VS = Vi.ERR_INVALID_ARG_TYPE, $S = Vi.ERR_METHOD_NOT_IMPLEMENTED, GS = Vi.ERR_MULTIPLE_CALLBACK, YS = Vi.ERR_STREAM_CANNOT_PIPE, XS = Vi.ERR_STREAM_DESTROYED, JS = Vi.ERR_STREAM_NULL_VALUES, QS = Vi.ERR_STREAM_WRITE_AFTER_END, eE = Vi.ERR_UNKNOWN_ENCODING, Sf = vl.errorOrDestroy;
    Ie()(ut, xg);
    function tE() {
    }
    function ka(t6, e6, r6) {
      xf = xf || Ln(), t6 = t6 || {}, typeof r6 != "boolean" && (r6 = e6 instanceof xf), this.objectMode = !!t6.objectMode, r6 && (this.objectMode = this.objectMode || !!t6.writableObjectMode), this.highWaterMark = ZS(this, t6, "writableHighWaterMark", r6), this.finalCalled = false, this.needDrain = false, this.ending = false, this.ended = false, this.finished = false, this.destroyed = false;
      var o2 = t6.decodeStrings === false;
      this.decodeStrings = !o2, this.defaultEncoding = t6.defaultEncoding || "utf8", this.length = 0, this.writing = false, this.corked = 0, this.sync = true, this.bufferProcessing = false, this.onwrite = function(f) {
        sE(e6, f);
      }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = false, this.errorEmitted = false, this.emitClose = t6.emitClose !== false, this.autoDestroy = !!t6.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new _g(this);
    }
    ka.prototype.getBuffer = function() {
      for (var e6 = this.bufferedRequest, r6 = [];e6; )
        r6.push(e6), e6 = e6.next;
      return r6;
    };
    (function() {
      try {
        Object.defineProperty(ka.prototype, "buffer", { get: zS.deprecate(function() {
          return this.getBuffer();
        }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003") });
      } catch {
      }
    })();
    var Ts;
    typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (Ts = Function.prototype[Symbol.hasInstance], Object.defineProperty(ut, Symbol.hasInstance, { value: function(e6) {
      return Ts.call(this, e6) ? true : this !== ut ? false : e6 && e6._writableState instanceof ka;
    } })) : Ts = function(e6) {
      return e6 instanceof this;
    };
    function ut(t6) {
      xf = xf || Ln();
      var e6 = this instanceof xf;
      if (!e6 && !Ts.call(ut, this))
        return new ut(t6);
      this._writableState = new ka(t6, this, e6), this.writable = true, t6 && (typeof t6.write == "function" && (this._write = t6.write), typeof t6.writev == "function" && (this._writev = t6.writev), typeof t6.destroy == "function" && (this._destroy = t6.destroy), typeof t6.final == "function" && (this._final = t6.final)), xg.call(this);
    }
    ut.prototype.pipe = function() {
      Sf(this, new YS);
    };
    function rE(t6, e6) {
      var r6 = new QS;
      Sf(t6, r6), process.nextTick(e6, r6);
    }
    function iE(t6, e6, r6, o2) {
      var f;
      return r6 === null ? f = new JS : typeof r6 != "string" && !e6.objectMode && (f = new VS("chunk", ["string", "Buffer"], r6)), f ? (Sf(t6, f), process.nextTick(o2, f), false) : true;
    }
    ut.prototype.write = function(t6, e6, r6) {
      var o2 = this._writableState, f = false, p2 = !o2.objectMode && KS(t6);
      return p2 && !ks.isBuffer(t6) && (t6 = WS(t6)), typeof e6 == "function" && (r6 = e6, e6 = null), p2 ? e6 = "buffer" : e6 || (e6 = o2.defaultEncoding), typeof r6 != "function" && (r6 = tE), o2.ending ? rE(this, r6) : (p2 || iE(this, o2, t6, r6)) && (o2.pendingcb++, f = fE(this, o2, p2, t6, e6, r6)), f;
    };
    ut.prototype.cork = function() {
      this._writableState.corked++;
    };
    ut.prototype.uncork = function() {
      var t6 = this._writableState;
      t6.corked && (t6.corked--, !t6.writing && !t6.corked && !t6.bufferProcessing && t6.bufferedRequest && Sg(this, t6));
    };
    ut.prototype.setDefaultEncoding = function(e6) {
      if (typeof e6 == "string" && (e6 = e6.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((e6 + "").toLowerCase()) > -1))
        throw new eE(e6);
      return this._writableState.defaultEncoding = e6, this;
    };
    Object.defineProperty(ut.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    function nE(t6, e6, r6) {
      return !t6.objectMode && t6.decodeStrings !== false && typeof e6 == "string" && (e6 = ks.from(e6, r6)), e6;
    }
    Object.defineProperty(ut.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    function fE(t6, e6, r6, o2, f, p2) {
      if (!r6) {
        var m2 = nE(e6, o2, f);
        o2 !== m2 && (r6 = true, f = "buffer", o2 = m2);
      }
      var y2 = e6.objectMode ? 1 : o2.length;
      e6.length += y2;
      var M = e6.length < e6.highWaterMark;
      if (M || (e6.needDrain = true), e6.writing || e6.corked) {
        var x = e6.lastBufferedRequest;
        e6.lastBufferedRequest = { chunk: o2, encoding: f, isBuf: r6, callback: p2, next: null }, x ? x.next = e6.lastBufferedRequest : e6.bufferedRequest = e6.lastBufferedRequest, e6.bufferedRequestCount += 1;
      } else
        pl(t6, e6, false, y2, o2, f, p2);
      return M;
    }
    function pl(t6, e6, r6, o2, f, p2, m2) {
      e6.writelen = o2, e6.writecb = m2, e6.writing = true, e6.sync = true, e6.destroyed ? e6.onwrite(new XS("write")) : r6 ? t6._writev(f, e6.onwrite) : t6._write(f, p2, e6.onwrite), e6.sync = false;
    }
    function aE(t6, e6, r6, o2, f) {
      --e6.pendingcb, r6 ? (process.nextTick(f, o2), process.nextTick(Ta, t6, e6), t6._writableState.errorEmitted = true, Sf(t6, o2)) : (f(o2), t6._writableState.errorEmitted = true, Sf(t6, o2), Ta(t6, e6));
    }
    function oE(t6) {
      t6.writing = false, t6.writecb = null, t6.length -= t6.writelen, t6.writelen = 0;
    }
    function sE(t6, e6) {
      var r6 = t6._writableState, o2 = r6.sync, f = r6.writecb;
      if (typeof f != "function")
        throw new GS;
      if (oE(r6), e6)
        aE(t6, r6, o2, e6, f);
      else {
        var p2 = Eg(r6) || t6.destroyed;
        !p2 && !r6.corked && !r6.bufferProcessing && r6.bufferedRequest && Sg(t6, r6), o2 ? process.nextTick(Mg, t6, r6, p2, f) : Mg(t6, r6, p2, f);
      }
    }
    function Mg(t6, e6, r6, o2) {
      r6 || hE(t6, e6), e6.pendingcb--, o2(), Ta(t6, e6);
    }
    function hE(t6, e6) {
      e6.length === 0 && e6.needDrain && (e6.needDrain = false, t6.emit("drain"));
    }
    function Sg(t6, e6) {
      e6.bufferProcessing = true;
      var r6 = e6.bufferedRequest;
      if (t6._writev && r6 && r6.next) {
        var o2 = e6.bufferedRequestCount, f = new Array(o2), p2 = e6.corkedRequestsFree;
        p2.entry = r6;
        for (var m2 = 0, y2 = true;r6; )
          f[m2] = r6, r6.isBuf || (y2 = false), r6 = r6.next, m2 += 1;
        f.allBuffers = y2, pl(t6, e6, true, e6.length, f, "", p2.finish), e6.pendingcb++, e6.lastBufferedRequest = null, p2.next ? (e6.corkedRequestsFree = p2.next, p2.next = null) : e6.corkedRequestsFree = new _g(e6), e6.bufferedRequestCount = 0;
      } else {
        for (;r6; ) {
          var { chunk: M, encoding: x, callback: S } = r6, E = e6.objectMode ? 1 : M.length;
          if (pl(t6, e6, false, E, M, x, S), r6 = r6.next, e6.bufferedRequestCount--, e6.writing)
            break;
        }
        r6 === null && (e6.lastBufferedRequest = null);
      }
      e6.bufferedRequest = r6, e6.bufferProcessing = false;
    }
    ut.prototype._write = function(t6, e6, r6) {
      r6(new $S("_write()"));
    };
    ut.prototype._writev = null;
    ut.prototype.end = function(t6, e6, r6) {
      var o2 = this._writableState;
      return typeof t6 == "function" ? (r6 = t6, t6 = null, e6 = null) : typeof e6 == "function" && (r6 = e6, e6 = null), t6 != null && this.write(t6, e6), o2.corked && (o2.corked = 1, this.uncork()), o2.ending || dE(this, o2, r6), this;
    };
    Object.defineProperty(ut.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function Eg(t6) {
      return t6.ending && t6.length === 0 && t6.bufferedRequest === null && !t6.finished && !t6.writing;
    }
    function uE(t6, e6) {
      t6._final(function(r6) {
        e6.pendingcb--, r6 && Sf(t6, r6), e6.prefinished = true, t6.emit("prefinish"), Ta(t6, e6);
      });
    }
    function lE(t6, e6) {
      !e6.prefinished && !e6.finalCalled && (typeof t6._final == "function" && !e6.destroyed ? (e6.pendingcb++, e6.finalCalled = true, process.nextTick(uE, t6, e6)) : (e6.prefinished = true, t6.emit("prefinish")));
    }
    function Ta(t6, e6) {
      var r6 = Eg(e6);
      if (r6 && (lE(t6, e6), e6.pendingcb === 0 && (e6.finished = true, t6.emit("finish"), e6.autoDestroy))) {
        var o2 = t6._readableState;
        (!o2 || o2.autoDestroy && o2.endEmitted) && t6.destroy();
      }
      return r6;
    }
    function dE(t6, e6, r6) {
      e6.ending = true, Ta(t6, e6), r6 && (e6.finished ? process.nextTick(r6) : t6.once("finish", r6)), e6.ended = true, t6.writable = false;
    }
    function cE(t6, e6, r6) {
      var o2 = t6.entry;
      for (t6.entry = null;o2; ) {
        var f = o2.callback;
        e6.pendingcb--, f(r6), o2 = o2.next;
      }
      e6.corkedRequestsFree.next = t6;
    }
    Object.defineProperty(ut.prototype, "destroyed", { enumerable: false, get: function() {
      return this._writableState === undefined ? false : this._writableState.destroyed;
    }, set: function(e6) {
      !this._writableState || (this._writableState.destroyed = e6);
    } });
    ut.prototype.destroy = vl.destroy;
    ut.prototype._undestroy = vl.undestroy;
    ut.prototype._destroy = function(t6, e6) {
      e6(t6);
    };
  });
  Ln = T((uk, Bg) => {
    var pE = Object.keys || function(t6) {
      var e6 = [];
      for (var r6 in t6)
        e6.push(r6);
      return e6;
    };
    Bg.exports = ti;
    var Rg = yl(), gl = bl();
    Ie()(ti, Rg);
    for (ml = pE(gl.prototype), Ls = 0;Ls < ml.length; Ls++)
      Ns = ml[Ls], ti.prototype[Ns] || (ti.prototype[Ns] = gl.prototype[Ns]);
    var ml, Ns, Ls;
    function ti(t6) {
      if (!(this instanceof ti))
        return new ti(t6);
      Rg.call(this, t6), gl.call(this, t6), this.allowHalfOpen = true, t6 && (t6.readable === false && (this.readable = false), t6.writable === false && (this.writable = false), t6.allowHalfOpen === false && (this.allowHalfOpen = false, this.once("end", vE)));
    }
    Object.defineProperty(ti.prototype, "writableHighWaterMark", { enumerable: false, get: function() {
      return this._writableState.highWaterMark;
    } });
    Object.defineProperty(ti.prototype, "writableBuffer", { enumerable: false, get: function() {
      return this._writableState && this._writableState.getBuffer();
    } });
    Object.defineProperty(ti.prototype, "writableLength", { enumerable: false, get: function() {
      return this._writableState.length;
    } });
    function vE() {
      this._writableState.ended || process.nextTick(bE, this);
    }
    function bE(t6) {
      t6.end();
    }
    Object.defineProperty(ti.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined || this._writableState === undefined ? false : this._readableState.destroyed && this._writableState.destroyed;
    }, set: function(e6) {
      this._readableState === undefined || this._writableState === undefined || (this._readableState.destroyed = e6, this._writableState.destroyed = e6);
    } });
  });
  Ds = T((lk, Tg) => {
    var qg = kn().codes.ERR_STREAM_PREMATURE_CLOSE;
    function mE(t6) {
      var e6 = false;
      return function() {
        if (!e6) {
          e6 = true;
          for (var r6 = arguments.length, o2 = new Array(r6), f = 0;f < r6; f++)
            o2[f] = arguments[f];
          t6.apply(this, o2);
        }
      };
    }
    function gE() {
    }
    function yE(t6) {
      return t6.setHeader && typeof t6.abort == "function";
    }
    function Ig(t6, e6, r6) {
      if (typeof e6 == "function")
        return Ig(t6, null, e6);
      e6 || (e6 = {}), r6 = mE(r6 || gE);
      var o2 = e6.readable || e6.readable !== false && t6.readable, f = e6.writable || e6.writable !== false && t6.writable, p2 = function() {
        t6.writable || y2();
      }, m2 = t6._writableState && t6._writableState.finished, y2 = function() {
        f = false, m2 = true, o2 || r6.call(t6);
      }, M = t6._readableState && t6._readableState.endEmitted, x = function() {
        o2 = false, M = true, f || r6.call(t6);
      }, S = function(L) {
        r6.call(t6, L);
      }, E = function() {
        var L;
        if (o2 && !M)
          return (!t6._readableState || !t6._readableState.ended) && (L = new qg), r6.call(t6, L);
        if (f && !m2)
          return (!t6._writableState || !t6._writableState.ended) && (L = new qg), r6.call(t6, L);
      }, B = function() {
        t6.req.on("finish", y2);
      };
      return yE(t6) ? (t6.on("complete", y2), t6.on("abort", E), t6.req ? B() : t6.on("request", B)) : f && !t6._writableState && (t6.on("end", p2), t6.on("close", p2)), t6.on("end", x), t6.on("finish", y2), e6.error !== false && t6.on("error", S), t6.on("close", E), function() {
        t6.removeListener("complete", y2), t6.removeListener("abort", E), t6.removeListener("request", B), t6.req && t6.req.removeListener("finish", y2), t6.removeListener("end", p2), t6.removeListener("close", p2), t6.removeListener("finish", y2), t6.removeListener("end", x), t6.removeListener("error", S), t6.removeListener("close", E);
      };
    }
    Tg.exports = Ig;
  });
  Lg = T((dk, kg) => {
    var Ps;
    function $i(t6, e6, r6) {
      return (e6 in t6) ? Object.defineProperty(t6, e6, { value: r6, enumerable: true, configurable: true, writable: true }) : t6[e6] = r6, t6;
    }
    var wE = Ds(), Gi = Symbol("lastResolve"), Nn = Symbol("lastReject"), La = Symbol("error"), Cs = Symbol("ended"), Dn = Symbol("lastPromise"), wl = Symbol("handlePromise"), Pn = Symbol("stream");
    function Yi(t6, e6) {
      return { value: t6, done: e6 };
    }
    function ME(t6) {
      var e6 = t6[Gi];
      if (e6 !== null) {
        var r6 = t6[Pn].read();
        r6 !== null && (t6[Dn] = null, t6[Gi] = null, t6[Nn] = null, e6(Yi(r6, false)));
      }
    }
    function _E(t6) {
      process.nextTick(ME, t6);
    }
    function xE(t6, e6) {
      return function(r6, o2) {
        t6.then(function() {
          if (e6[Cs]) {
            r6(Yi(undefined, true));
            return;
          }
          e6[wl](r6, o2);
        }, o2);
      };
    }
    var SE = Object.getPrototypeOf(function() {
    }), EE = Object.setPrototypeOf((Ps = { get stream() {
      return this[Pn];
    }, next: function() {
      var e6 = this, r6 = this[La];
      if (r6 !== null)
        return Promise.reject(r6);
      if (this[Cs])
        return Promise.resolve(Yi(undefined, true));
      if (this[Pn].destroyed)
        return new Promise(function(m2, y2) {
          process.nextTick(function() {
            e6[La] ? y2(e6[La]) : m2(Yi(undefined, true));
          });
        });
      var o2 = this[Dn], f;
      if (o2)
        f = new Promise(xE(o2, this));
      else {
        var p2 = this[Pn].read();
        if (p2 !== null)
          return Promise.resolve(Yi(p2, false));
        f = new Promise(this[wl]);
      }
      return this[Dn] = f, f;
    } }, $i(Ps, Symbol.asyncIterator, function() {
      return this;
    }), $i(Ps, "return", function() {
      var e6 = this;
      return new Promise(function(r6, o2) {
        e6[Pn].destroy(null, function(f) {
          if (f) {
            o2(f);
            return;
          }
          r6(Yi(undefined, true));
        });
      });
    }), Ps), SE), AE = function(e6) {
      var r6, o2 = Object.create(EE, (r6 = {}, $i(r6, Pn, { value: e6, writable: true }), $i(r6, Gi, { value: null, writable: true }), $i(r6, Nn, { value: null, writable: true }), $i(r6, La, { value: null, writable: true }), $i(r6, Cs, { value: e6._readableState.endEmitted, writable: true }), $i(r6, wl, { value: function(p2, m2) {
        var y2 = o2[Pn].read();
        y2 ? (o2[Dn] = null, o2[Gi] = null, o2[Nn] = null, p2(Yi(y2, false))) : (o2[Gi] = p2, o2[Nn] = m2);
      }, writable: true }), r6));
      return o2[Dn] = null, wE(e6, function(f) {
        if (f && f.code !== "ERR_STREAM_PREMATURE_CLOSE") {
          var p2 = o2[Nn];
          p2 !== null && (o2[Dn] = null, o2[Gi] = null, o2[Nn] = null, p2(f)), o2[La] = f;
          return;
        }
        var m2 = o2[Gi];
        m2 !== null && (o2[Dn] = null, o2[Gi] = null, o2[Nn] = null, m2(Yi(undefined, true))), o2[Cs] = true;
      }), e6.on("readable", _E.bind(null, o2)), o2;
    };
    kg.exports = AE;
  });
  Dg = T((ck, Ng) => {
    Ng.exports = function() {
      throw new Error("Readable.from is not available in the browser");
    };
  });
  yl = T((vk, jg) => {
    jg.exports = Oe;
    var Ef;
    Oe.ReadableState = Fg;
    var pk = ki().EventEmitter, Og = function(e6, r6) {
      return e6.listeners(r6).length;
    }, Da = hl(), Os = Ut().Buffer, RE = global.Uint8Array || function() {
    };
    function BE(t6) {
      return Os.from(t6);
    }
    function qE(t6) {
      return Os.isBuffer(t6) || t6 instanceof RE;
    }
    var Ml = $f(), De;
    Ml && Ml.debuglog ? De = Ml.debuglog("stream") : De = function() {
    };
    var IE = pg(), Bl = dl(), TE = cl(), kE = TE.getHighWaterMark, Fs = kn().codes, LE = Fs.ERR_INVALID_ARG_TYPE, NE = Fs.ERR_STREAM_PUSH_AFTER_EOF, DE = Fs.ERR_METHOD_NOT_IMPLEMENTED, PE = Fs.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, Af, _l, xl;
    Ie()(Oe, Da);
    var Na = Bl.errorOrDestroy, Sl = ["error", "close", "destroy", "pause", "resume"];
    function CE(t6, e6, r6) {
      if (typeof t6.prependListener == "function")
        return t6.prependListener(e6, r6);
      !t6._events || !t6._events[e6] ? t6.on(e6, r6) : Array.isArray(t6._events[e6]) ? t6._events[e6].unshift(r6) : t6._events[e6] = [r6, t6._events[e6]];
    }
    function Fg(t6, e6, r6) {
      Ef = Ef || Ln(), t6 = t6 || {}, typeof r6 != "boolean" && (r6 = e6 instanceof Ef), this.objectMode = !!t6.objectMode, r6 && (this.objectMode = this.objectMode || !!t6.readableObjectMode), this.highWaterMark = kE(this, t6, "readableHighWaterMark", r6), this.buffer = new IE, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = false, this.endEmitted = false, this.reading = false, this.sync = true, this.needReadable = false, this.emittedReadable = false, this.readableListening = false, this.resumeScheduled = false, this.paused = true, this.emitClose = t6.emitClose !== false, this.autoDestroy = !!t6.autoDestroy, this.destroyed = false, this.defaultEncoding = t6.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = false, this.decoder = null, this.encoding = null, t6.encoding && (Af || (Af = (Qf(), ur(Jf)).StringDecoder), this.decoder = new Af(t6.encoding), this.encoding = t6.encoding);
    }
    function Oe(t6) {
      if (Ef = Ef || Ln(), !(this instanceof Oe))
        return new Oe(t6);
      var e6 = this instanceof Ef;
      this._readableState = new Fg(t6, this, e6), this.readable = true, t6 && (typeof t6.read == "function" && (this._read = t6.read), typeof t6.destroy == "function" && (this._destroy = t6.destroy)), Da.call(this);
    }
    Object.defineProperty(Oe.prototype, "destroyed", { enumerable: false, get: function() {
      return this._readableState === undefined ? false : this._readableState.destroyed;
    }, set: function(e6) {
      !this._readableState || (this._readableState.destroyed = e6);
    } });
    Oe.prototype.destroy = Bl.destroy;
    Oe.prototype._undestroy = Bl.undestroy;
    Oe.prototype._destroy = function(t6, e6) {
      e6(t6);
    };
    Oe.prototype.push = function(t6, e6) {
      var r6 = this._readableState, o2;
      return r6.objectMode ? o2 = true : typeof t6 == "string" && (e6 = e6 || r6.defaultEncoding, e6 !== r6.encoding && (t6 = Os.from(t6, e6), e6 = ""), o2 = true), Ug(this, t6, e6, false, o2);
    };
    Oe.prototype.unshift = function(t6) {
      return Ug(this, t6, null, true, false);
    };
    function Ug(t6, e6, r6, o2, f) {
      De("readableAddChunk", e6);
      var p2 = t6._readableState;
      if (e6 === null)
        p2.reading = false, UE(t6, p2);
      else {
        var m2;
        if (f || (m2 = OE(p2, e6)), m2)
          Na(t6, m2);
        else if (p2.objectMode || e6 && e6.length > 0)
          if (typeof e6 != "string" && !p2.objectMode && Object.getPrototypeOf(e6) !== Os.prototype && (e6 = BE(e6)), o2)
            p2.endEmitted ? Na(t6, new PE) : El(t6, p2, e6, true);
          else if (p2.ended)
            Na(t6, new NE);
          else {
            if (p2.destroyed)
              return false;
            p2.reading = false, p2.decoder && !r6 ? (e6 = p2.decoder.write(e6), p2.objectMode || e6.length !== 0 ? El(t6, p2, e6, false) : Rl(t6, p2)) : El(t6, p2, e6, false);
          }
        else
          o2 || (p2.reading = false, Rl(t6, p2));
      }
      return !p2.ended && (p2.length < p2.highWaterMark || p2.length === 0);
    }
    function El(t6, e6, r6, o2) {
      e6.flowing && e6.length === 0 && !e6.sync ? (e6.awaitDrain = 0, t6.emit("data", r6)) : (e6.length += e6.objectMode ? 1 : r6.length, o2 ? e6.buffer.unshift(r6) : e6.buffer.push(r6), e6.needReadable && Us(t6)), Rl(t6, e6);
    }
    function OE(t6, e6) {
      var r6;
      return !qE(e6) && typeof e6 != "string" && e6 !== undefined && !t6.objectMode && (r6 = new LE("chunk", ["string", "Buffer", "Uint8Array"], e6)), r6;
    }
    Oe.prototype.isPaused = function() {
      return this._readableState.flowing === false;
    };
    Oe.prototype.setEncoding = function(t6) {
      Af || (Af = (Qf(), ur(Jf)).StringDecoder);
      var e6 = new Af(t6);
      this._readableState.decoder = e6, this._readableState.encoding = this._readableState.decoder.encoding;
      for (var r6 = this._readableState.buffer.head, o2 = "";r6 !== null; )
        o2 += e6.write(r6.data), r6 = r6.next;
      return this._readableState.buffer.clear(), o2 !== "" && this._readableState.buffer.push(o2), this._readableState.length = o2.length, this;
    };
    var Pg = 1073741824;
    function FE(t6) {
      return t6 >= Pg ? t6 = Pg : (t6--, t6 |= t6 >>> 1, t6 |= t6 >>> 2, t6 |= t6 >>> 4, t6 |= t6 >>> 8, t6 |= t6 >>> 16, t6++), t6;
    }
    function Cg(t6, e6) {
      return t6 <= 0 || e6.length === 0 && e6.ended ? 0 : e6.objectMode ? 1 : t6 !== t6 ? e6.flowing && e6.length ? e6.buffer.head.data.length : e6.length : (t6 > e6.highWaterMark && (e6.highWaterMark = FE(t6)), t6 <= e6.length ? t6 : e6.ended ? e6.length : (e6.needReadable = true, 0));
    }
    Oe.prototype.read = function(t6) {
      De("read", t6), t6 = parseInt(t6, 10);
      var e6 = this._readableState, r6 = t6;
      if (t6 !== 0 && (e6.emittedReadable = false), t6 === 0 && e6.needReadable && ((e6.highWaterMark !== 0 ? e6.length >= e6.highWaterMark : e6.length > 0) || e6.ended))
        return De("read: emitReadable", e6.length, e6.ended), e6.length === 0 && e6.ended ? Al(this) : Us(this), null;
      if (t6 = Cg(t6, e6), t6 === 0 && e6.ended)
        return e6.length === 0 && Al(this), null;
      var o2 = e6.needReadable;
      De("need readable", o2), (e6.length === 0 || e6.length - t6 < e6.highWaterMark) && (o2 = true, De("length less than watermark", o2)), e6.ended || e6.reading ? (o2 = false, De("reading or ended", o2)) : o2 && (De("do read"), e6.reading = true, e6.sync = true, e6.length === 0 && (e6.needReadable = true), this._read(e6.highWaterMark), e6.sync = false, e6.reading || (t6 = Cg(r6, e6)));
      var f;
      return t6 > 0 ? f = Wg(t6, e6) : f = null, f === null ? (e6.needReadable = e6.length <= e6.highWaterMark, t6 = 0) : (e6.length -= t6, e6.awaitDrain = 0), e6.length === 0 && (e6.ended || (e6.needReadable = true), r6 !== t6 && e6.ended && Al(this)), f !== null && this.emit("data", f), f;
    };
    function UE(t6, e6) {
      if (De("onEofChunk"), !e6.ended) {
        if (e6.decoder) {
          var r6 = e6.decoder.end();
          r6 && r6.length && (e6.buffer.push(r6), e6.length += e6.objectMode ? 1 : r6.length);
        }
        e6.ended = true, e6.sync ? Us(t6) : (e6.needReadable = false, e6.emittedReadable || (e6.emittedReadable = true, zg(t6)));
      }
    }
    function Us(t6) {
      var e6 = t6._readableState;
      De("emitReadable", e6.needReadable, e6.emittedReadable), e6.needReadable = false, e6.emittedReadable || (De("emitReadable", e6.flowing), e6.emittedReadable = true, process.nextTick(zg, t6));
    }
    function zg(t6) {
      var e6 = t6._readableState;
      De("emitReadable_", e6.destroyed, e6.length, e6.ended), !e6.destroyed && (e6.length || e6.ended) && (t6.emit("readable"), e6.emittedReadable = false), e6.needReadable = !e6.flowing && !e6.ended && e6.length <= e6.highWaterMark, ql(t6);
    }
    function Rl(t6, e6) {
      e6.readingMore || (e6.readingMore = true, process.nextTick(zE, t6, e6));
    }
    function zE(t6, e6) {
      for (;!e6.reading && !e6.ended && (e6.length < e6.highWaterMark || e6.flowing && e6.length === 0); ) {
        var r6 = e6.length;
        if (De("maybeReadMore read 0"), t6.read(0), r6 === e6.length)
          break;
      }
      e6.readingMore = false;
    }
    Oe.prototype._read = function(t6) {
      Na(this, new DE("_read()"));
    };
    Oe.prototype.pipe = function(t6, e6) {
      var r6 = this, o2 = this._readableState;
      switch (o2.pipesCount) {
        case 0:
          o2.pipes = t6;
          break;
        case 1:
          o2.pipes = [o2.pipes, t6];
          break;
        default:
          o2.pipes.push(t6);
          break;
      }
      o2.pipesCount += 1, De("pipe count=%d opts=%j", o2.pipesCount, e6);
      var f = (!e6 || e6.end !== false) && t6 !== process.stdout && t6 !== process.stderr, p2 = f ? y2 : ge;
      o2.endEmitted ? process.nextTick(p2) : r6.once("end", p2), t6.on("unpipe", m2);
      function m2(_e, N) {
        De("onunpipe"), _e === r6 && N && N.hasUnpiped === false && (N.hasUnpiped = true, S());
      }
      function y2() {
        De("onend"), t6.end();
      }
      var M = HE(r6);
      t6.on("drain", M);
      var x = false;
      function S() {
        De("cleanup"), t6.removeListener("close", q2), t6.removeListener("finish", L), t6.removeListener("drain", M), t6.removeListener("error", B), t6.removeListener("unpipe", m2), r6.removeListener("end", y2), r6.removeListener("end", ge), r6.removeListener("data", E), x = true, o2.awaitDrain && (!t6._writableState || t6._writableState.needDrain) && M();
      }
      r6.on("data", E);
      function E(_e) {
        De("ondata");
        var N = t6.write(_e);
        De("dest.write", N), N === false && ((o2.pipesCount === 1 && o2.pipes === t6 || o2.pipesCount > 1 && Kg(o2.pipes, t6) !== -1) && !x && (De("false write response, pause", o2.awaitDrain), o2.awaitDrain++), r6.pause());
      }
      function B(_e) {
        De("onerror", _e), ge(), t6.removeListener("error", B), Og(t6, "error") === 0 && Na(t6, _e);
      }
      CE(t6, "error", B);
      function q2() {
        t6.removeListener("finish", L), ge();
      }
      t6.once("close", q2);
      function L() {
        De("onfinish"), t6.removeListener("close", q2), ge();
      }
      t6.once("finish", L);
      function ge() {
        De("unpipe"), r6.unpipe(t6);
      }
      return t6.emit("pipe", r6), o2.flowing || (De("pipe resume"), r6.resume()), t6;
    };
    function HE(t6) {
      return function() {
        var r6 = t6._readableState;
        De("pipeOnDrain", r6.awaitDrain), r6.awaitDrain && r6.awaitDrain--, r6.awaitDrain === 0 && Og(t6, "data") && (r6.flowing = true, ql(t6));
      };
    }
    Oe.prototype.unpipe = function(t6) {
      var e6 = this._readableState, r6 = { hasUnpiped: false };
      if (e6.pipesCount === 0)
        return this;
      if (e6.pipesCount === 1)
        return t6 && t6 !== e6.pipes ? this : (t6 || (t6 = e6.pipes), e6.pipes = null, e6.pipesCount = 0, e6.flowing = false, t6 && t6.emit("unpipe", this, r6), this);
      if (!t6) {
        var { pipes: o2, pipesCount: f } = e6;
        e6.pipes = null, e6.pipesCount = 0, e6.flowing = false;
        for (var p2 = 0;p2 < f; p2++)
          o2[p2].emit("unpipe", this, { hasUnpiped: false });
        return this;
      }
      var m2 = Kg(e6.pipes, t6);
      return m2 === -1 ? this : (e6.pipes.splice(m2, 1), e6.pipesCount -= 1, e6.pipesCount === 1 && (e6.pipes = e6.pipes[0]), t6.emit("unpipe", this, r6), this);
    };
    Oe.prototype.on = function(t6, e6) {
      var r6 = Da.prototype.on.call(this, t6, e6), o2 = this._readableState;
      return t6 === "data" ? (o2.readableListening = this.listenerCount("readable") > 0, o2.flowing !== false && this.resume()) : t6 === "readable" && !o2.endEmitted && !o2.readableListening && (o2.readableListening = o2.needReadable = true, o2.flowing = false, o2.emittedReadable = false, De("on readable", o2.length, o2.reading), o2.length ? Us(this) : o2.reading || process.nextTick(WE, this)), r6;
    };
    Oe.prototype.addListener = Oe.prototype.on;
    Oe.prototype.removeListener = function(t6, e6) {
      var r6 = Da.prototype.removeListener.call(this, t6, e6);
      return t6 === "readable" && process.nextTick(Hg, this), r6;
    };
    Oe.prototype.removeAllListeners = function(t6) {
      var e6 = Da.prototype.removeAllListeners.apply(this, arguments);
      return (t6 === "readable" || t6 === undefined) && process.nextTick(Hg, this), e6;
    };
    function Hg(t6) {
      var e6 = t6._readableState;
      e6.readableListening = t6.listenerCount("readable") > 0, e6.resumeScheduled && !e6.paused ? e6.flowing = true : t6.listenerCount("data") > 0 && t6.resume();
    }
    function WE(t6) {
      De("readable nexttick read 0"), t6.read(0);
    }
    Oe.prototype.resume = function() {
      var t6 = this._readableState;
      return t6.flowing || (De("resume"), t6.flowing = !t6.readableListening, KE(this, t6)), t6.paused = false, this;
    };
    function KE(t6, e6) {
      e6.resumeScheduled || (e6.resumeScheduled = true, process.nextTick(jE, t6, e6));
    }
    function jE(t6, e6) {
      De("resume", e6.reading), e6.reading || t6.read(0), e6.resumeScheduled = false, t6.emit("resume"), ql(t6), e6.flowing && !e6.reading && t6.read(0);
    }
    Oe.prototype.pause = function() {
      return De("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== false && (De("pause"), this._readableState.flowing = false, this.emit("pause")), this._readableState.paused = true, this;
    };
    function ql(t6) {
      var e6 = t6._readableState;
      for (De("flow", e6.flowing);e6.flowing && t6.read() !== null; )
        ;
    }
    Oe.prototype.wrap = function(t6) {
      var e6 = this, r6 = this._readableState, o2 = false;
      t6.on("end", function() {
        if (De("wrapped end"), r6.decoder && !r6.ended) {
          var m2 = r6.decoder.end();
          m2 && m2.length && e6.push(m2);
        }
        e6.push(null);
      }), t6.on("data", function(m2) {
        if (De("wrapped data"), r6.decoder && (m2 = r6.decoder.write(m2)), !(r6.objectMode && m2 == null) && !(!r6.objectMode && (!m2 || !m2.length))) {
          var y2 = e6.push(m2);
          y2 || (o2 = true, t6.pause());
        }
      });
      for (var f in t6)
        this[f] === undefined && typeof t6[f] == "function" && (this[f] = function(y2) {
          return function() {
            return t6[y2].apply(t6, arguments);
          };
        }(f));
      for (var p2 = 0;p2 < Sl.length; p2++)
        t6.on(Sl[p2], this.emit.bind(this, Sl[p2]));
      return this._read = function(m2) {
        De("wrapped _read", m2), o2 && (o2 = false, t6.resume());
      }, this;
    };
    typeof Symbol == "function" && (Oe.prototype[Symbol.asyncIterator] = function() {
      return _l === undefined && (_l = Lg()), _l(this);
    });
    Object.defineProperty(Oe.prototype, "readableHighWaterMark", { enumerable: false, get: function() {
      return this._readableState.highWaterMark;
    } });
    Object.defineProperty(Oe.prototype, "readableBuffer", { enumerable: false, get: function() {
      return this._readableState && this._readableState.buffer;
    } });
    Object.defineProperty(Oe.prototype, "readableFlowing", { enumerable: false, get: function() {
      return this._readableState.flowing;
    }, set: function(e6) {
      this._readableState && (this._readableState.flowing = e6);
    } });
    Oe._fromList = Wg;
    Object.defineProperty(Oe.prototype, "readableLength", { enumerable: false, get: function() {
      return this._readableState.length;
    } });
    function Wg(t6, e6) {
      if (e6.length === 0)
        return null;
      var r6;
      return e6.objectMode ? r6 = e6.buffer.shift() : !t6 || t6 >= e6.length ? (e6.decoder ? r6 = e6.buffer.join("") : e6.buffer.length === 1 ? r6 = e6.buffer.first() : r6 = e6.buffer.concat(e6.length), e6.buffer.clear()) : r6 = e6.buffer.consume(t6, e6.decoder), r6;
    }
    function Al(t6) {
      var e6 = t6._readableState;
      De("endReadable", e6.endEmitted), e6.endEmitted || (e6.ended = true, process.nextTick(ZE, e6, t6));
    }
    function ZE(t6, e6) {
      if (De("endReadableNT", t6.endEmitted, t6.length), !t6.endEmitted && t6.length === 0 && (t6.endEmitted = true, e6.readable = false, e6.emit("end"), t6.autoDestroy)) {
        var r6 = e6._writableState;
        (!r6 || r6.autoDestroy && r6.finished) && e6.destroy();
      }
    }
    typeof Symbol == "function" && (Oe.from = function(t6, e6) {
      return xl === undefined && (xl = Dg()), xl(Oe, t6, e6);
    });
    function Kg(t6, e6) {
      for (var r6 = 0, o2 = t6.length;r6 < o2; r6++)
        if (t6[r6] === e6)
          return r6;
      return -1;
    }
  });
  Il = T((bk, Vg) => {
    Vg.exports = Ei;
    var zs = kn().codes, VE = zs.ERR_METHOD_NOT_IMPLEMENTED, $E = zs.ERR_MULTIPLE_CALLBACK, GE = zs.ERR_TRANSFORM_ALREADY_TRANSFORMING, YE = zs.ERR_TRANSFORM_WITH_LENGTH_0, Hs = Ln();
    Ie()(Ei, Hs);
    function XE(t6, e6) {
      var r6 = this._transformState;
      r6.transforming = false;
      var o2 = r6.writecb;
      if (o2 === null)
        return this.emit("error", new $E);
      r6.writechunk = null, r6.writecb = null, e6 != null && this.push(e6), o2(t6);
      var f = this._readableState;
      f.reading = false, (f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
    }
    function Ei(t6) {
      if (!(this instanceof Ei))
        return new Ei(t6);
      Hs.call(this, t6), this._transformState = { afterTransform: XE.bind(this), needTransform: false, transforming: false, writecb: null, writechunk: null, writeencoding: null }, this._readableState.needReadable = true, this._readableState.sync = false, t6 && (typeof t6.transform == "function" && (this._transform = t6.transform), typeof t6.flush == "function" && (this._flush = t6.flush)), this.on("prefinish", JE);
    }
    function JE() {
      var t6 = this;
      typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(e6, r6) {
        Zg(t6, e6, r6);
      }) : Zg(this, null, null);
    }
    Ei.prototype.push = function(t6, e6) {
      return this._transformState.needTransform = false, Hs.prototype.push.call(this, t6, e6);
    };
    Ei.prototype._transform = function(t6, e6, r6) {
      r6(new VE("_transform()"));
    };
    Ei.prototype._write = function(t6, e6, r6) {
      var o2 = this._transformState;
      if (o2.writecb = r6, o2.writechunk = t6, o2.writeencoding = e6, !o2.transforming) {
        var f = this._readableState;
        (o2.needTransform || f.needReadable || f.length < f.highWaterMark) && this._read(f.highWaterMark);
      }
    };
    Ei.prototype._read = function(t6) {
      var e6 = this._transformState;
      e6.writechunk !== null && !e6.transforming ? (e6.transforming = true, this._transform(e6.writechunk, e6.writeencoding, e6.afterTransform)) : e6.needTransform = true;
    };
    Ei.prototype._destroy = function(t6, e6) {
      Hs.prototype._destroy.call(this, t6, function(r6) {
        e6(r6);
      });
    };
    function Zg(t6, e6, r6) {
      if (e6)
        return t6.emit("error", e6);
      if (r6 != null && t6.push(r6), t6._writableState.length)
        throw new YE;
      if (t6._transformState.transforming)
        throw new GE;
      return t6.push(null);
    }
  });
  Yg = T((mk, Gg) => {
    Gg.exports = Pa;
    var $g = Il();
    Ie()(Pa, $g);
    function Pa(t6) {
      if (!(this instanceof Pa))
        return new Pa(t6);
      $g.call(this, t6);
    }
    Pa.prototype._transform = function(t6, e6, r6) {
      r6(null, t6);
    };
  });
  t22 = T((gk, e22) => {
    var Tl;
    function QE(t6) {
      var e6 = false;
      return function() {
        e6 || (e6 = true, t6.apply(undefined, arguments));
      };
    }
    var Qg = kn().codes, eA = Qg.ERR_MISSING_ARGS, tA = Qg.ERR_STREAM_DESTROYED;
    function Xg(t6) {
      if (t6)
        throw t6;
    }
    function rA(t6) {
      return t6.setHeader && typeof t6.abort == "function";
    }
    function iA(t6, e6, r6, o2) {
      o2 = QE(o2);
      var f = false;
      t6.on("close", function() {
        f = true;
      }), Tl === undefined && (Tl = Ds()), Tl(t6, { readable: e6, writable: r6 }, function(m2) {
        if (m2)
          return o2(m2);
        f = true, o2();
      });
      var p2 = false;
      return function(m2) {
        if (!f && !p2) {
          if (p2 = true, rA(t6))
            return t6.abort();
          if (typeof t6.destroy == "function")
            return t6.destroy();
          o2(m2 || new tA("pipe"));
        }
      };
    }
    function Jg(t6) {
      t6();
    }
    function nA(t6, e6) {
      return t6.pipe(e6);
    }
    function fA(t6) {
      return !t6.length || typeof t6[t6.length - 1] != "function" ? Xg : t6.pop();
    }
    function aA() {
      for (var t6 = arguments.length, e6 = new Array(t6), r6 = 0;r6 < t6; r6++)
        e6[r6] = arguments[r6];
      var o2 = fA(e6);
      if (Array.isArray(e6[0]) && (e6 = e6[0]), e6.length < 2)
        throw new eA("streams");
      var f, p2 = e6.map(function(m2, y2) {
        var M = y2 < e6.length - 1, x = y2 > 0;
        return iA(m2, M, x, function(S) {
          f || (f = S), S && p2.forEach(Jg), !M && (p2.forEach(Jg), o2(f));
        });
      });
      return e6.reduce(nA);
    }
    e22.exports = aA;
  });
  i2 = T((Mr, r22) => {
    Mr = r22.exports = yl();
    Mr.Stream = Mr;
    Mr.Readable = Mr;
    Mr.Writable = bl();
    Mr.Duplex = Ln();
    Mr.Transform = Il();
    Mr.PassThrough = Yg();
    Mr.finished = Ds();
    Mr.pipeline = t22();
  });
  Ws = T((n2, kl) => {
    (function(t6, e6) {
      function r6(h2, s5) {
        if (!h2)
          throw new Error(s5 || "Assertion failed");
      }
      function o2(h2, s5) {
        h2.super_ = s5;
        var u2 = function() {
        };
        u2.prototype = s5.prototype, h2.prototype = new u2, h2.prototype.constructor = h2;
      }
      function f(h2, s5, u2) {
        if (f.isBN(h2))
          return h2;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, h2 !== null && ((s5 === "le" || s5 === "be") && (u2 = s5, s5 = 10), this._init(h2 || 0, s5 || 10, u2 || "be"));
      }
      typeof t6 == "object" ? t6.exports = f : e6.BN = f, f.BN = f, f.wordSize = 26;
      var p2;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p2 = window.Buffer : p2 = ji().Buffer;
      } catch {
      }
      f.isBN = function(s5) {
        return s5 instanceof f ? true : s5 !== null && typeof s5 == "object" && s5.constructor.wordSize === f.wordSize && Array.isArray(s5.words);
      }, f.max = function(s5, u2) {
        return s5.cmp(u2) > 0 ? s5 : u2;
      }, f.min = function(s5, u2) {
        return s5.cmp(u2) < 0 ? s5 : u2;
      }, f.prototype._init = function(s5, u2, c) {
        if (typeof s5 == "number")
          return this._initNumber(s5, u2, c);
        if (typeof s5 == "object")
          return this._initArray(s5, u2, c);
        u2 === "hex" && (u2 = 16), r6(u2 === (u2 | 0) && u2 >= 2 && u2 <= 36), s5 = s5.toString().replace(/\s+/g, "");
        var b2 = 0;
        s5[0] === "-" && (b2++, this.negative = 1), b2 < s5.length && (u2 === 16 ? this._parseHex(s5, b2, c) : (this._parseBase(s5, u2, b2), c === "le" && this._initArray(this.toArray(), u2, c)));
      }, f.prototype._initNumber = function(s5, u2, c) {
        s5 < 0 && (this.negative = 1, s5 = -s5), s5 < 67108864 ? (this.words = [s5 & 67108863], this.length = 1) : s5 < 4503599627370496 ? (this.words = [s5 & 67108863, s5 / 67108864 & 67108863], this.length = 2) : (r6(s5 < 9007199254740992), this.words = [s5 & 67108863, s5 / 67108864 & 67108863, 1], this.length = 3), c === "le" && this._initArray(this.toArray(), u2, c);
      }, f.prototype._initArray = function(s5, u2, c) {
        if (r6(typeof s5.length == "number"), s5.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(s5.length / 3), this.words = new Array(this.length);
        for (var b2 = 0;b2 < this.length; b2++)
          this.words[b2] = 0;
        var l, n3, d2 = 0;
        if (c === "be")
          for (b2 = s5.length - 1, l = 0;b2 >= 0; b2 -= 3)
            n3 = s5[b2] | s5[b2 - 1] << 8 | s5[b2 - 2] << 16, this.words[l] |= n3 << d2 & 67108863, this.words[l + 1] = n3 >>> 26 - d2 & 67108863, d2 += 24, d2 >= 26 && (d2 -= 26, l++);
        else if (c === "le")
          for (b2 = 0, l = 0;b2 < s5.length; b2 += 3)
            n3 = s5[b2] | s5[b2 + 1] << 8 | s5[b2 + 2] << 16, this.words[l] |= n3 << d2 & 67108863, this.words[l + 1] = n3 >>> 26 - d2 & 67108863, d2 += 24, d2 >= 26 && (d2 -= 26, l++);
        return this._strip();
      };
      function m2(h2, s5) {
        var u2 = h2.charCodeAt(s5);
        if (u2 >= 48 && u2 <= 57)
          return u2 - 48;
        if (u2 >= 65 && u2 <= 70)
          return u2 - 55;
        if (u2 >= 97 && u2 <= 102)
          return u2 - 87;
        r6(false, "Invalid character in " + h2);
      }
      function y2(h2, s5, u2) {
        var c = m2(h2, u2);
        return u2 - 1 >= s5 && (c |= m2(h2, u2 - 1) << 4), c;
      }
      f.prototype._parseHex = function(s5, u2, c) {
        this.length = Math.ceil((s5.length - u2) / 6), this.words = new Array(this.length);
        for (var b2 = 0;b2 < this.length; b2++)
          this.words[b2] = 0;
        var l = 0, n3 = 0, d2;
        if (c === "be")
          for (b2 = s5.length - 1;b2 >= u2; b2 -= 2)
            d2 = y2(s5, u2, b2) << l, this.words[n3] |= d2 & 67108863, l >= 18 ? (l -= 18, n3 += 1, this.words[n3] |= d2 >>> 26) : l += 8;
        else {
          var w = s5.length - u2;
          for (b2 = w % 2 === 0 ? u2 + 1 : u2;b2 < s5.length; b2 += 2)
            d2 = y2(s5, u2, b2) << l, this.words[n3] |= d2 & 67108863, l >= 18 ? (l -= 18, n3 += 1, this.words[n3] |= d2 >>> 26) : l += 8;
        }
        this._strip();
      };
      function M(h2, s5, u2, c) {
        for (var b2 = 0, l = 0, n3 = Math.min(h2.length, u2), d2 = s5;d2 < n3; d2++) {
          var w = h2.charCodeAt(d2) - 48;
          b2 *= c, w >= 49 ? l = w - 49 + 10 : w >= 17 ? l = w - 17 + 10 : l = w, r6(w >= 0 && l < c, "Invalid character"), b2 += l;
        }
        return b2;
      }
      f.prototype._parseBase = function(s5, u2, c) {
        this.words = [0], this.length = 1;
        for (var b2 = 0, l = 1;l <= 67108863; l *= u2)
          b2++;
        b2--, l = l / u2 | 0;
        for (var n3 = s5.length - c, d2 = n3 % b2, w = Math.min(n3, n3 - d2) + c, g2 = 0, _ = c;_ < w; _ += b2)
          g2 = M(s5, _, _ + b2, u2), this.imuln(l), this.words[0] + g2 < 67108864 ? this.words[0] += g2 : this._iaddn(g2);
        if (d2 !== 0) {
          var A = 1;
          for (g2 = M(s5, _, s5.length, u2), _ = 0;_ < d2; _++)
            A *= u2;
          this.imuln(A), this.words[0] + g2 < 67108864 ? this.words[0] += g2 : this._iaddn(g2);
        }
        this._strip();
      }, f.prototype.copy = function(s5) {
        s5.words = new Array(this.length);
        for (var u2 = 0;u2 < this.length; u2++)
          s5.words[u2] = this.words[u2];
        s5.length = this.length, s5.negative = this.negative, s5.red = this.red;
      };
      function x(h2, s5) {
        h2.words = s5.words, h2.length = s5.length, h2.negative = s5.negative, h2.red = s5.red;
      }
      if (f.prototype._move = function(s5) {
        x(s5, this);
      }, f.prototype.clone = function() {
        var s5 = new f(null);
        return this.copy(s5), s5;
      }, f.prototype._expand = function(s5) {
        for (;this.length < s5; )
          this.words[this.length++] = 0;
        return this;
      }, f.prototype._strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, typeof Symbol < "u" && typeof Symbol.for == "function")
        try {
          f.prototype[Symbol.for("nodejs.util.inspect.custom")] = S;
        } catch {
          f.prototype.inspect = S;
        }
      else
        f.prototype.inspect = S;
      function S() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      }
      var E = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], B = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], q2 = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f.prototype.toString = function(s5, u2) {
        s5 = s5 || 10, u2 = u2 | 0 || 1;
        var c;
        if (s5 === 16 || s5 === "hex") {
          c = "";
          for (var b2 = 0, l = 0, n3 = 0;n3 < this.length; n3++) {
            var d2 = this.words[n3], w = ((d2 << b2 | l) & 16777215).toString(16);
            l = d2 >>> 24 - b2 & 16777215, b2 += 2, b2 >= 26 && (b2 -= 26, n3--), l !== 0 || n3 !== this.length - 1 ? c = E[6 - w.length] + w + c : c = w + c;
          }
          for (l !== 0 && (c = l.toString(16) + c);c.length % u2 !== 0; )
            c = "0" + c;
          return this.negative !== 0 && (c = "-" + c), c;
        }
        if (s5 === (s5 | 0) && s5 >= 2 && s5 <= 36) {
          var g2 = B[s5], _ = q2[s5];
          c = "";
          var A = this.clone();
          for (A.negative = 0;!A.isZero(); ) {
            var R = A.modrn(_).toString(s5);
            A = A.idivn(_), A.isZero() ? c = R + c : c = E[g2 - R.length] + R + c;
          }
          for (this.isZero() && (c = "0" + c);c.length % u2 !== 0; )
            c = "0" + c;
          return this.negative !== 0 && (c = "-" + c), c;
        }
        r6(false, "Base should be between 2 and 36");
      }, f.prototype.toNumber = function() {
        var s5 = this.words[0];
        return this.length === 2 ? s5 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? s5 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -s5 : s5;
      }, f.prototype.toJSON = function() {
        return this.toString(16, 2);
      }, p2 && (f.prototype.toBuffer = function(s5, u2) {
        return this.toArrayLike(p2, s5, u2);
      }), f.prototype.toArray = function(s5, u2) {
        return this.toArrayLike(Array, s5, u2);
      };
      var L = function(s5, u2) {
        return s5.allocUnsafe ? s5.allocUnsafe(u2) : new s5(u2);
      };
      f.prototype.toArrayLike = function(s5, u2, c) {
        this._strip();
        var b2 = this.byteLength(), l = c || Math.max(1, b2);
        r6(b2 <= l, "byte array longer than desired length"), r6(l > 0, "Requested array length <= 0");
        var n3 = L(s5, l), d2 = u2 === "le" ? "LE" : "BE";
        return this["_toArrayLike" + d2](n3, b2), n3;
      }, f.prototype._toArrayLikeLE = function(s5, u2) {
        for (var c = 0, b2 = 0, l = 0, n3 = 0;l < this.length; l++) {
          var d2 = this.words[l] << n3 | b2;
          s5[c++] = d2 & 255, c < s5.length && (s5[c++] = d2 >> 8 & 255), c < s5.length && (s5[c++] = d2 >> 16 & 255), n3 === 6 ? (c < s5.length && (s5[c++] = d2 >> 24 & 255), b2 = 0, n3 = 0) : (b2 = d2 >>> 24, n3 += 2);
        }
        if (c < s5.length)
          for (s5[c++] = b2;c < s5.length; )
            s5[c++] = 0;
      }, f.prototype._toArrayLikeBE = function(s5, u2) {
        for (var c = s5.length - 1, b2 = 0, l = 0, n3 = 0;l < this.length; l++) {
          var d2 = this.words[l] << n3 | b2;
          s5[c--] = d2 & 255, c >= 0 && (s5[c--] = d2 >> 8 & 255), c >= 0 && (s5[c--] = d2 >> 16 & 255), n3 === 6 ? (c >= 0 && (s5[c--] = d2 >> 24 & 255), b2 = 0, n3 = 0) : (b2 = d2 >>> 24, n3 += 2);
        }
        if (c >= 0)
          for (s5[c--] = b2;c >= 0; )
            s5[c--] = 0;
      }, Math.clz32 ? f.prototype._countBits = function(s5) {
        return 32 - Math.clz32(s5);
      } : f.prototype._countBits = function(s5) {
        var u2 = s5, c = 0;
        return u2 >= 4096 && (c += 13, u2 >>>= 13), u2 >= 64 && (c += 7, u2 >>>= 7), u2 >= 8 && (c += 4, u2 >>>= 4), u2 >= 2 && (c += 2, u2 >>>= 2), c + u2;
      }, f.prototype._zeroBits = function(s5) {
        if (s5 === 0)
          return 26;
        var u2 = s5, c = 0;
        return (u2 & 8191) === 0 && (c += 13, u2 >>>= 13), (u2 & 127) === 0 && (c += 7, u2 >>>= 7), (u2 & 15) === 0 && (c += 4, u2 >>>= 4), (u2 & 3) === 0 && (c += 2, u2 >>>= 2), (u2 & 1) === 0 && c++, c;
      }, f.prototype.bitLength = function() {
        var s5 = this.words[this.length - 1], u2 = this._countBits(s5);
        return (this.length - 1) * 26 + u2;
      };
      function ge(h2) {
        for (var s5 = new Array(h2.bitLength()), u2 = 0;u2 < s5.length; u2++) {
          var c = u2 / 26 | 0, b2 = u2 % 26;
          s5[u2] = h2.words[c] >>> b2 & 1;
        }
        return s5;
      }
      f.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var s5 = 0, u2 = 0;u2 < this.length; u2++) {
          var c = this._zeroBits(this.words[u2]);
          if (s5 += c, c !== 26)
            break;
        }
        return s5;
      }, f.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f.prototype.toTwos = function(s5) {
        return this.negative !== 0 ? this.abs().inotn(s5).iaddn(1) : this.clone();
      }, f.prototype.fromTwos = function(s5) {
        return this.testn(s5 - 1) ? this.notn(s5).iaddn(1).ineg() : this.clone();
      }, f.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f.prototype.neg = function() {
        return this.clone().ineg();
      }, f.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f.prototype.iuor = function(s5) {
        for (;this.length < s5.length; )
          this.words[this.length++] = 0;
        for (var u2 = 0;u2 < s5.length; u2++)
          this.words[u2] = this.words[u2] | s5.words[u2];
        return this._strip();
      }, f.prototype.ior = function(s5) {
        return r6((this.negative | s5.negative) === 0), this.iuor(s5);
      }, f.prototype.or = function(s5) {
        return this.length > s5.length ? this.clone().ior(s5) : s5.clone().ior(this);
      }, f.prototype.uor = function(s5) {
        return this.length > s5.length ? this.clone().iuor(s5) : s5.clone().iuor(this);
      }, f.prototype.iuand = function(s5) {
        var u2;
        this.length > s5.length ? u2 = s5 : u2 = this;
        for (var c = 0;c < u2.length; c++)
          this.words[c] = this.words[c] & s5.words[c];
        return this.length = u2.length, this._strip();
      }, f.prototype.iand = function(s5) {
        return r6((this.negative | s5.negative) === 0), this.iuand(s5);
      }, f.prototype.and = function(s5) {
        return this.length > s5.length ? this.clone().iand(s5) : s5.clone().iand(this);
      }, f.prototype.uand = function(s5) {
        return this.length > s5.length ? this.clone().iuand(s5) : s5.clone().iuand(this);
      }, f.prototype.iuxor = function(s5) {
        var u2, c;
        this.length > s5.length ? (u2 = this, c = s5) : (u2 = s5, c = this);
        for (var b2 = 0;b2 < c.length; b2++)
          this.words[b2] = u2.words[b2] ^ c.words[b2];
        if (this !== u2)
          for (;b2 < u2.length; b2++)
            this.words[b2] = u2.words[b2];
        return this.length = u2.length, this._strip();
      }, f.prototype.ixor = function(s5) {
        return r6((this.negative | s5.negative) === 0), this.iuxor(s5);
      }, f.prototype.xor = function(s5) {
        return this.length > s5.length ? this.clone().ixor(s5) : s5.clone().ixor(this);
      }, f.prototype.uxor = function(s5) {
        return this.length > s5.length ? this.clone().iuxor(s5) : s5.clone().iuxor(this);
      }, f.prototype.inotn = function(s5) {
        r6(typeof s5 == "number" && s5 >= 0);
        var u2 = Math.ceil(s5 / 26) | 0, c = s5 % 26;
        this._expand(u2), c > 0 && u2--;
        for (var b2 = 0;b2 < u2; b2++)
          this.words[b2] = ~this.words[b2] & 67108863;
        return c > 0 && (this.words[b2] = ~this.words[b2] & 67108863 >> 26 - c), this._strip();
      }, f.prototype.notn = function(s5) {
        return this.clone().inotn(s5);
      }, f.prototype.setn = function(s5, u2) {
        r6(typeof s5 == "number" && s5 >= 0);
        var c = s5 / 26 | 0, b2 = s5 % 26;
        return this._expand(c + 1), u2 ? this.words[c] = this.words[c] | 1 << b2 : this.words[c] = this.words[c] & ~(1 << b2), this._strip();
      }, f.prototype.iadd = function(s5) {
        var u2;
        if (this.negative !== 0 && s5.negative === 0)
          return this.negative = 0, u2 = this.isub(s5), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && s5.negative !== 0)
          return s5.negative = 0, u2 = this.isub(s5), s5.negative = 1, u2._normSign();
        var c, b2;
        this.length > s5.length ? (c = this, b2 = s5) : (c = s5, b2 = this);
        for (var l = 0, n3 = 0;n3 < b2.length; n3++)
          u2 = (c.words[n3] | 0) + (b2.words[n3] | 0) + l, this.words[n3] = u2 & 67108863, l = u2 >>> 26;
        for (;l !== 0 && n3 < c.length; n3++)
          u2 = (c.words[n3] | 0) + l, this.words[n3] = u2 & 67108863, l = u2 >>> 26;
        if (this.length = c.length, l !== 0)
          this.words[this.length] = l, this.length++;
        else if (c !== this)
          for (;n3 < c.length; n3++)
            this.words[n3] = c.words[n3];
        return this;
      }, f.prototype.add = function(s5) {
        var u2;
        return s5.negative !== 0 && this.negative === 0 ? (s5.negative = 0, u2 = this.sub(s5), s5.negative ^= 1, u2) : s5.negative === 0 && this.negative !== 0 ? (this.negative = 0, u2 = s5.sub(this), this.negative = 1, u2) : this.length > s5.length ? this.clone().iadd(s5) : s5.clone().iadd(this);
      }, f.prototype.isub = function(s5) {
        if (s5.negative !== 0) {
          s5.negative = 0;
          var u2 = this.iadd(s5);
          return s5.negative = 1, u2._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(s5), this.negative = 1, this._normSign();
        var c = this.cmp(s5);
        if (c === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var b2, l;
        c > 0 ? (b2 = this, l = s5) : (b2 = s5, l = this);
        for (var n3 = 0, d2 = 0;d2 < l.length; d2++)
          u2 = (b2.words[d2] | 0) - (l.words[d2] | 0) + n3, n3 = u2 >> 26, this.words[d2] = u2 & 67108863;
        for (;n3 !== 0 && d2 < b2.length; d2++)
          u2 = (b2.words[d2] | 0) + n3, n3 = u2 >> 26, this.words[d2] = u2 & 67108863;
        if (n3 === 0 && d2 < b2.length && b2 !== this)
          for (;d2 < b2.length; d2++)
            this.words[d2] = b2.words[d2];
        return this.length = Math.max(this.length, d2), b2 !== this && (this.negative = 1), this._strip();
      }, f.prototype.sub = function(s5) {
        return this.clone().isub(s5);
      };
      function _e(h2, s5, u2) {
        u2.negative = s5.negative ^ h2.negative;
        var c = h2.length + s5.length | 0;
        u2.length = c, c = c - 1 | 0;
        var b2 = h2.words[0] | 0, l = s5.words[0] | 0, n3 = b2 * l, d2 = n3 & 67108863, w = n3 / 67108864 | 0;
        u2.words[0] = d2;
        for (var g2 = 1;g2 < c; g2++) {
          for (var _ = w >>> 26, A = w & 67108863, R = Math.min(g2, s5.length - 1), I = Math.max(0, g2 - h2.length + 1);I <= R; I++) {
            var Me = g2 - I | 0;
            b2 = h2.words[Me] | 0, l = s5.words[I] | 0, n3 = b2 * l + A, _ += n3 / 67108864 | 0, A = n3 & 67108863;
          }
          u2.words[g2] = A | 0, w = _ | 0;
        }
        return w !== 0 ? u2.words[g2] = w | 0 : u2.length--, u2._strip();
      }
      var N = function(s5, u2, c) {
        var b2 = s5.words, l = u2.words, n3 = c.words, d2 = 0, w, g2, _, A = b2[0] | 0, R = A & 8191, I = A >>> 13, Me = b2[1] | 0, k2 = Me & 8191, D = Me >>> 13, nt = b2[2] | 0, C = nt & 8191, O = nt >>> 13, vt = b2[3] | 0, F = vt & 8191, U = vt >>> 13, bt = b2[4] | 0, z = bt & 8191, H = bt >>> 13, mt = b2[5] | 0, W = mt & 8191, K = mt >>> 13, gt = b2[6] | 0, j = gt & 8191, Z = gt >>> 13, yt = b2[7] | 0, V = yt & 8191, $2 = yt >>> 13, wt = b2[8] | 0, G = wt & 8191, Y = wt >>> 13, Mt = b2[9] | 0, X = Mt & 8191, J = Mt >>> 13, _t = l[0] | 0, Q = _t & 8191, ee = _t >>> 13, xt = l[1] | 0, te = xt & 8191, re = xt >>> 13, St = l[2] | 0, ie = St & 8191, ne = St >>> 13, Et = l[3] | 0, fe = Et & 8191, ae = Et >>> 13, At = l[4] | 0, oe = At & 8191, se = At >>> 13, Rt = l[5] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = l[6] | 0, le = Bt & 8191, de = Bt >>> 13, qt = l[7] | 0, ce = qt & 8191, pe = qt >>> 13, It = l[8] | 0, ve = It & 8191, be = It >>> 13, ft = l[9] | 0, Be = ft & 8191, qe = ft >>> 13;
        c.negative = s5.negative ^ u2.negative, c.length = 19, w = Math.imul(R, Q), g2 = Math.imul(R, ee), g2 = g2 + Math.imul(I, Q) | 0, _ = Math.imul(I, ee);
        var ze = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, w = Math.imul(k2, Q), g2 = Math.imul(k2, ee), g2 = g2 + Math.imul(D, Q) | 0, _ = Math.imul(D, ee), w = w + Math.imul(R, te) | 0, g2 = g2 + Math.imul(R, re) | 0, g2 = g2 + Math.imul(I, te) | 0, _ = _ + Math.imul(I, re) | 0;
        var He = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, w = Math.imul(C, Q), g2 = Math.imul(C, ee), g2 = g2 + Math.imul(O, Q) | 0, _ = Math.imul(O, ee), w = w + Math.imul(k2, te) | 0, g2 = g2 + Math.imul(k2, re) | 0, g2 = g2 + Math.imul(D, te) | 0, _ = _ + Math.imul(D, re) | 0, w = w + Math.imul(R, ie) | 0, g2 = g2 + Math.imul(R, ne) | 0, g2 = g2 + Math.imul(I, ie) | 0, _ = _ + Math.imul(I, ne) | 0;
        var We = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, w = Math.imul(F, Q), g2 = Math.imul(F, ee), g2 = g2 + Math.imul(U, Q) | 0, _ = Math.imul(U, ee), w = w + Math.imul(C, te) | 0, g2 = g2 + Math.imul(C, re) | 0, g2 = g2 + Math.imul(O, te) | 0, _ = _ + Math.imul(O, re) | 0, w = w + Math.imul(k2, ie) | 0, g2 = g2 + Math.imul(k2, ne) | 0, g2 = g2 + Math.imul(D, ie) | 0, _ = _ + Math.imul(D, ne) | 0, w = w + Math.imul(R, fe) | 0, g2 = g2 + Math.imul(R, ae) | 0, g2 = g2 + Math.imul(I, fe) | 0, _ = _ + Math.imul(I, ae) | 0;
        var Ke = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, w = Math.imul(z, Q), g2 = Math.imul(z, ee), g2 = g2 + Math.imul(H, Q) | 0, _ = Math.imul(H, ee), w = w + Math.imul(F, te) | 0, g2 = g2 + Math.imul(F, re) | 0, g2 = g2 + Math.imul(U, te) | 0, _ = _ + Math.imul(U, re) | 0, w = w + Math.imul(C, ie) | 0, g2 = g2 + Math.imul(C, ne) | 0, g2 = g2 + Math.imul(O, ie) | 0, _ = _ + Math.imul(O, ne) | 0, w = w + Math.imul(k2, fe) | 0, g2 = g2 + Math.imul(k2, ae) | 0, g2 = g2 + Math.imul(D, fe) | 0, _ = _ + Math.imul(D, ae) | 0, w = w + Math.imul(R, oe) | 0, g2 = g2 + Math.imul(R, se) | 0, g2 = g2 + Math.imul(I, oe) | 0, _ = _ + Math.imul(I, se) | 0;
        var je = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, w = Math.imul(W, Q), g2 = Math.imul(W, ee), g2 = g2 + Math.imul(K, Q) | 0, _ = Math.imul(K, ee), w = w + Math.imul(z, te) | 0, g2 = g2 + Math.imul(z, re) | 0, g2 = g2 + Math.imul(H, te) | 0, _ = _ + Math.imul(H, re) | 0, w = w + Math.imul(F, ie) | 0, g2 = g2 + Math.imul(F, ne) | 0, g2 = g2 + Math.imul(U, ie) | 0, _ = _ + Math.imul(U, ne) | 0, w = w + Math.imul(C, fe) | 0, g2 = g2 + Math.imul(C, ae) | 0, g2 = g2 + Math.imul(O, fe) | 0, _ = _ + Math.imul(O, ae) | 0, w = w + Math.imul(k2, oe) | 0, g2 = g2 + Math.imul(k2, se) | 0, g2 = g2 + Math.imul(D, oe) | 0, _ = _ + Math.imul(D, se) | 0, w = w + Math.imul(R, he) | 0, g2 = g2 + Math.imul(R, ue) | 0, g2 = g2 + Math.imul(I, he) | 0, _ = _ + Math.imul(I, ue) | 0;
        var Ze = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, w = Math.imul(j, Q), g2 = Math.imul(j, ee), g2 = g2 + Math.imul(Z, Q) | 0, _ = Math.imul(Z, ee), w = w + Math.imul(W, te) | 0, g2 = g2 + Math.imul(W, re) | 0, g2 = g2 + Math.imul(K, te) | 0, _ = _ + Math.imul(K, re) | 0, w = w + Math.imul(z, ie) | 0, g2 = g2 + Math.imul(z, ne) | 0, g2 = g2 + Math.imul(H, ie) | 0, _ = _ + Math.imul(H, ne) | 0, w = w + Math.imul(F, fe) | 0, g2 = g2 + Math.imul(F, ae) | 0, g2 = g2 + Math.imul(U, fe) | 0, _ = _ + Math.imul(U, ae) | 0, w = w + Math.imul(C, oe) | 0, g2 = g2 + Math.imul(C, se) | 0, g2 = g2 + Math.imul(O, oe) | 0, _ = _ + Math.imul(O, se) | 0, w = w + Math.imul(k2, he) | 0, g2 = g2 + Math.imul(k2, ue) | 0, g2 = g2 + Math.imul(D, he) | 0, _ = _ + Math.imul(D, ue) | 0, w = w + Math.imul(R, le) | 0, g2 = g2 + Math.imul(R, de) | 0, g2 = g2 + Math.imul(I, le) | 0, _ = _ + Math.imul(I, de) | 0;
        var Ve = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, w = Math.imul(V, Q), g2 = Math.imul(V, ee), g2 = g2 + Math.imul($2, Q) | 0, _ = Math.imul($2, ee), w = w + Math.imul(j, te) | 0, g2 = g2 + Math.imul(j, re) | 0, g2 = g2 + Math.imul(Z, te) | 0, _ = _ + Math.imul(Z, re) | 0, w = w + Math.imul(W, ie) | 0, g2 = g2 + Math.imul(W, ne) | 0, g2 = g2 + Math.imul(K, ie) | 0, _ = _ + Math.imul(K, ne) | 0, w = w + Math.imul(z, fe) | 0, g2 = g2 + Math.imul(z, ae) | 0, g2 = g2 + Math.imul(H, fe) | 0, _ = _ + Math.imul(H, ae) | 0, w = w + Math.imul(F, oe) | 0, g2 = g2 + Math.imul(F, se) | 0, g2 = g2 + Math.imul(U, oe) | 0, _ = _ + Math.imul(U, se) | 0, w = w + Math.imul(C, he) | 0, g2 = g2 + Math.imul(C, ue) | 0, g2 = g2 + Math.imul(O, he) | 0, _ = _ + Math.imul(O, ue) | 0, w = w + Math.imul(k2, le) | 0, g2 = g2 + Math.imul(k2, de) | 0, g2 = g2 + Math.imul(D, le) | 0, _ = _ + Math.imul(D, de) | 0, w = w + Math.imul(R, ce) | 0, g2 = g2 + Math.imul(R, pe) | 0, g2 = g2 + Math.imul(I, ce) | 0, _ = _ + Math.imul(I, pe) | 0;
        var $e = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, w = Math.imul(G, Q), g2 = Math.imul(G, ee), g2 = g2 + Math.imul(Y, Q) | 0, _ = Math.imul(Y, ee), w = w + Math.imul(V, te) | 0, g2 = g2 + Math.imul(V, re) | 0, g2 = g2 + Math.imul($2, te) | 0, _ = _ + Math.imul($2, re) | 0, w = w + Math.imul(j, ie) | 0, g2 = g2 + Math.imul(j, ne) | 0, g2 = g2 + Math.imul(Z, ie) | 0, _ = _ + Math.imul(Z, ne) | 0, w = w + Math.imul(W, fe) | 0, g2 = g2 + Math.imul(W, ae) | 0, g2 = g2 + Math.imul(K, fe) | 0, _ = _ + Math.imul(K, ae) | 0, w = w + Math.imul(z, oe) | 0, g2 = g2 + Math.imul(z, se) | 0, g2 = g2 + Math.imul(H, oe) | 0, _ = _ + Math.imul(H, se) | 0, w = w + Math.imul(F, he) | 0, g2 = g2 + Math.imul(F, ue) | 0, g2 = g2 + Math.imul(U, he) | 0, _ = _ + Math.imul(U, ue) | 0, w = w + Math.imul(C, le) | 0, g2 = g2 + Math.imul(C, de) | 0, g2 = g2 + Math.imul(O, le) | 0, _ = _ + Math.imul(O, de) | 0, w = w + Math.imul(k2, ce) | 0, g2 = g2 + Math.imul(k2, pe) | 0, g2 = g2 + Math.imul(D, ce) | 0, _ = _ + Math.imul(D, pe) | 0, w = w + Math.imul(R, ve) | 0, g2 = g2 + Math.imul(R, be) | 0, g2 = g2 + Math.imul(I, ve) | 0, _ = _ + Math.imul(I, be) | 0;
        var Ge = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, w = Math.imul(X, Q), g2 = Math.imul(X, ee), g2 = g2 + Math.imul(J, Q) | 0, _ = Math.imul(J, ee), w = w + Math.imul(G, te) | 0, g2 = g2 + Math.imul(G, re) | 0, g2 = g2 + Math.imul(Y, te) | 0, _ = _ + Math.imul(Y, re) | 0, w = w + Math.imul(V, ie) | 0, g2 = g2 + Math.imul(V, ne) | 0, g2 = g2 + Math.imul($2, ie) | 0, _ = _ + Math.imul($2, ne) | 0, w = w + Math.imul(j, fe) | 0, g2 = g2 + Math.imul(j, ae) | 0, g2 = g2 + Math.imul(Z, fe) | 0, _ = _ + Math.imul(Z, ae) | 0, w = w + Math.imul(W, oe) | 0, g2 = g2 + Math.imul(W, se) | 0, g2 = g2 + Math.imul(K, oe) | 0, _ = _ + Math.imul(K, se) | 0, w = w + Math.imul(z, he) | 0, g2 = g2 + Math.imul(z, ue) | 0, g2 = g2 + Math.imul(H, he) | 0, _ = _ + Math.imul(H, ue) | 0, w = w + Math.imul(F, le) | 0, g2 = g2 + Math.imul(F, de) | 0, g2 = g2 + Math.imul(U, le) | 0, _ = _ + Math.imul(U, de) | 0, w = w + Math.imul(C, ce) | 0, g2 = g2 + Math.imul(C, pe) | 0, g2 = g2 + Math.imul(O, ce) | 0, _ = _ + Math.imul(O, pe) | 0, w = w + Math.imul(k2, ve) | 0, g2 = g2 + Math.imul(k2, be) | 0, g2 = g2 + Math.imul(D, ve) | 0, _ = _ + Math.imul(D, be) | 0, w = w + Math.imul(R, Be) | 0, g2 = g2 + Math.imul(R, qe) | 0, g2 = g2 + Math.imul(I, Be) | 0, _ = _ + Math.imul(I, qe) | 0;
        var Ye = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, w = Math.imul(X, te), g2 = Math.imul(X, re), g2 = g2 + Math.imul(J, te) | 0, _ = Math.imul(J, re), w = w + Math.imul(G, ie) | 0, g2 = g2 + Math.imul(G, ne) | 0, g2 = g2 + Math.imul(Y, ie) | 0, _ = _ + Math.imul(Y, ne) | 0, w = w + Math.imul(V, fe) | 0, g2 = g2 + Math.imul(V, ae) | 0, g2 = g2 + Math.imul($2, fe) | 0, _ = _ + Math.imul($2, ae) | 0, w = w + Math.imul(j, oe) | 0, g2 = g2 + Math.imul(j, se) | 0, g2 = g2 + Math.imul(Z, oe) | 0, _ = _ + Math.imul(Z, se) | 0, w = w + Math.imul(W, he) | 0, g2 = g2 + Math.imul(W, ue) | 0, g2 = g2 + Math.imul(K, he) | 0, _ = _ + Math.imul(K, ue) | 0, w = w + Math.imul(z, le) | 0, g2 = g2 + Math.imul(z, de) | 0, g2 = g2 + Math.imul(H, le) | 0, _ = _ + Math.imul(H, de) | 0, w = w + Math.imul(F, ce) | 0, g2 = g2 + Math.imul(F, pe) | 0, g2 = g2 + Math.imul(U, ce) | 0, _ = _ + Math.imul(U, pe) | 0, w = w + Math.imul(C, ve) | 0, g2 = g2 + Math.imul(C, be) | 0, g2 = g2 + Math.imul(O, ve) | 0, _ = _ + Math.imul(O, be) | 0, w = w + Math.imul(k2, Be) | 0, g2 = g2 + Math.imul(k2, qe) | 0, g2 = g2 + Math.imul(D, Be) | 0, _ = _ + Math.imul(D, qe) | 0;
        var Xe = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, w = Math.imul(X, ie), g2 = Math.imul(X, ne), g2 = g2 + Math.imul(J, ie) | 0, _ = Math.imul(J, ne), w = w + Math.imul(G, fe) | 0, g2 = g2 + Math.imul(G, ae) | 0, g2 = g2 + Math.imul(Y, fe) | 0, _ = _ + Math.imul(Y, ae) | 0, w = w + Math.imul(V, oe) | 0, g2 = g2 + Math.imul(V, se) | 0, g2 = g2 + Math.imul($2, oe) | 0, _ = _ + Math.imul($2, se) | 0, w = w + Math.imul(j, he) | 0, g2 = g2 + Math.imul(j, ue) | 0, g2 = g2 + Math.imul(Z, he) | 0, _ = _ + Math.imul(Z, ue) | 0, w = w + Math.imul(W, le) | 0, g2 = g2 + Math.imul(W, de) | 0, g2 = g2 + Math.imul(K, le) | 0, _ = _ + Math.imul(K, de) | 0, w = w + Math.imul(z, ce) | 0, g2 = g2 + Math.imul(z, pe) | 0, g2 = g2 + Math.imul(H, ce) | 0, _ = _ + Math.imul(H, pe) | 0, w = w + Math.imul(F, ve) | 0, g2 = g2 + Math.imul(F, be) | 0, g2 = g2 + Math.imul(U, ve) | 0, _ = _ + Math.imul(U, be) | 0, w = w + Math.imul(C, Be) | 0, g2 = g2 + Math.imul(C, qe) | 0, g2 = g2 + Math.imul(O, Be) | 0, _ = _ + Math.imul(O, qe) | 0;
        var Je = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, w = Math.imul(X, fe), g2 = Math.imul(X, ae), g2 = g2 + Math.imul(J, fe) | 0, _ = Math.imul(J, ae), w = w + Math.imul(G, oe) | 0, g2 = g2 + Math.imul(G, se) | 0, g2 = g2 + Math.imul(Y, oe) | 0, _ = _ + Math.imul(Y, se) | 0, w = w + Math.imul(V, he) | 0, g2 = g2 + Math.imul(V, ue) | 0, g2 = g2 + Math.imul($2, he) | 0, _ = _ + Math.imul($2, ue) | 0, w = w + Math.imul(j, le) | 0, g2 = g2 + Math.imul(j, de) | 0, g2 = g2 + Math.imul(Z, le) | 0, _ = _ + Math.imul(Z, de) | 0, w = w + Math.imul(W, ce) | 0, g2 = g2 + Math.imul(W, pe) | 0, g2 = g2 + Math.imul(K, ce) | 0, _ = _ + Math.imul(K, pe) | 0, w = w + Math.imul(z, ve) | 0, g2 = g2 + Math.imul(z, be) | 0, g2 = g2 + Math.imul(H, ve) | 0, _ = _ + Math.imul(H, be) | 0, w = w + Math.imul(F, Be) | 0, g2 = g2 + Math.imul(F, qe) | 0, g2 = g2 + Math.imul(U, Be) | 0, _ = _ + Math.imul(U, qe) | 0;
        var Qe = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, w = Math.imul(X, oe), g2 = Math.imul(X, se), g2 = g2 + Math.imul(J, oe) | 0, _ = Math.imul(J, se), w = w + Math.imul(G, he) | 0, g2 = g2 + Math.imul(G, ue) | 0, g2 = g2 + Math.imul(Y, he) | 0, _ = _ + Math.imul(Y, ue) | 0, w = w + Math.imul(V, le) | 0, g2 = g2 + Math.imul(V, de) | 0, g2 = g2 + Math.imul($2, le) | 0, _ = _ + Math.imul($2, de) | 0, w = w + Math.imul(j, ce) | 0, g2 = g2 + Math.imul(j, pe) | 0, g2 = g2 + Math.imul(Z, ce) | 0, _ = _ + Math.imul(Z, pe) | 0, w = w + Math.imul(W, ve) | 0, g2 = g2 + Math.imul(W, be) | 0, g2 = g2 + Math.imul(K, ve) | 0, _ = _ + Math.imul(K, be) | 0, w = w + Math.imul(z, Be) | 0, g2 = g2 + Math.imul(z, qe) | 0, g2 = g2 + Math.imul(H, Be) | 0, _ = _ + Math.imul(H, qe) | 0;
        var et = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, w = Math.imul(X, he), g2 = Math.imul(X, ue), g2 = g2 + Math.imul(J, he) | 0, _ = Math.imul(J, ue), w = w + Math.imul(G, le) | 0, g2 = g2 + Math.imul(G, de) | 0, g2 = g2 + Math.imul(Y, le) | 0, _ = _ + Math.imul(Y, de) | 0, w = w + Math.imul(V, ce) | 0, g2 = g2 + Math.imul(V, pe) | 0, g2 = g2 + Math.imul($2, ce) | 0, _ = _ + Math.imul($2, pe) | 0, w = w + Math.imul(j, ve) | 0, g2 = g2 + Math.imul(j, be) | 0, g2 = g2 + Math.imul(Z, ve) | 0, _ = _ + Math.imul(Z, be) | 0, w = w + Math.imul(W, Be) | 0, g2 = g2 + Math.imul(W, qe) | 0, g2 = g2 + Math.imul(K, Be) | 0, _ = _ + Math.imul(K, qe) | 0;
        var tt = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, w = Math.imul(X, le), g2 = Math.imul(X, de), g2 = g2 + Math.imul(J, le) | 0, _ = Math.imul(J, de), w = w + Math.imul(G, ce) | 0, g2 = g2 + Math.imul(G, pe) | 0, g2 = g2 + Math.imul(Y, ce) | 0, _ = _ + Math.imul(Y, pe) | 0, w = w + Math.imul(V, ve) | 0, g2 = g2 + Math.imul(V, be) | 0, g2 = g2 + Math.imul($2, ve) | 0, _ = _ + Math.imul($2, be) | 0, w = w + Math.imul(j, Be) | 0, g2 = g2 + Math.imul(j, qe) | 0, g2 = g2 + Math.imul(Z, Be) | 0, _ = _ + Math.imul(Z, qe) | 0;
        var rt = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, w = Math.imul(X, ce), g2 = Math.imul(X, pe), g2 = g2 + Math.imul(J, ce) | 0, _ = Math.imul(J, pe), w = w + Math.imul(G, ve) | 0, g2 = g2 + Math.imul(G, be) | 0, g2 = g2 + Math.imul(Y, ve) | 0, _ = _ + Math.imul(Y, be) | 0, w = w + Math.imul(V, Be) | 0, g2 = g2 + Math.imul(V, qe) | 0, g2 = g2 + Math.imul($2, Be) | 0, _ = _ + Math.imul($2, qe) | 0;
        var S0 = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (S0 >>> 26) | 0, S0 &= 67108863, w = Math.imul(X, ve), g2 = Math.imul(X, be), g2 = g2 + Math.imul(J, ve) | 0, _ = Math.imul(J, be), w = w + Math.imul(G, Be) | 0, g2 = g2 + Math.imul(G, qe) | 0, g2 = g2 + Math.imul(Y, Be) | 0, _ = _ + Math.imul(Y, qe) | 0;
        var E0 = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        d2 = (_ + (g2 >>> 13) | 0) + (E0 >>> 26) | 0, E0 &= 67108863, w = Math.imul(X, Be), g2 = Math.imul(X, qe), g2 = g2 + Math.imul(J, Be) | 0, _ = Math.imul(J, qe);
        var A0 = (d2 + w | 0) + ((g2 & 8191) << 13) | 0;
        return d2 = (_ + (g2 >>> 13) | 0) + (A0 >>> 26) | 0, A0 &= 67108863, n3[0] = ze, n3[1] = He, n3[2] = We, n3[3] = Ke, n3[4] = je, n3[5] = Ze, n3[6] = Ve, n3[7] = $e, n3[8] = Ge, n3[9] = Ye, n3[10] = Xe, n3[11] = Je, n3[12] = Qe, n3[13] = et, n3[14] = tt, n3[15] = rt, n3[16] = S0, n3[17] = E0, n3[18] = A0, d2 !== 0 && (n3[19] = d2, c.length++), c;
      };
      Math.imul || (N = _e);
      function we(h2, s5, u2) {
        u2.negative = s5.negative ^ h2.negative, u2.length = h2.length + s5.length;
        for (var c = 0, b2 = 0, l = 0;l < u2.length - 1; l++) {
          var n3 = b2;
          b2 = 0;
          for (var d2 = c & 67108863, w = Math.min(l, s5.length - 1), g2 = Math.max(0, l - h2.length + 1);g2 <= w; g2++) {
            var _ = l - g2, A = h2.words[_] | 0, R = s5.words[g2] | 0, I = A * R, Me = I & 67108863;
            n3 = n3 + (I / 67108864 | 0) | 0, Me = Me + d2 | 0, d2 = Me & 67108863, n3 = n3 + (Me >>> 26) | 0, b2 += n3 >>> 26, n3 &= 67108863;
          }
          u2.words[l] = d2, c = n3, n3 = b2;
        }
        return c !== 0 ? u2.words[l] = c : u2.length--, u2._strip();
      }
      function ye(h2, s5, u2) {
        return we(h2, s5, u2);
      }
      f.prototype.mulTo = function(s5, u2) {
        var c, b2 = this.length + s5.length;
        return this.length === 10 && s5.length === 10 ? c = N(this, s5, u2) : b2 < 63 ? c = _e(this, s5, u2) : b2 < 1024 ? c = we(this, s5, u2) : c = ye(this, s5, u2), c;
      };
      function xe(h2, s5) {
        this.x = h2, this.y = s5;
      }
      xe.prototype.makeRBT = function(s5) {
        for (var u2 = new Array(s5), c = f.prototype._countBits(s5) - 1, b2 = 0;b2 < s5; b2++)
          u2[b2] = this.revBin(b2, c, s5);
        return u2;
      }, xe.prototype.revBin = function(s5, u2, c) {
        if (s5 === 0 || s5 === c - 1)
          return s5;
        for (var b2 = 0, l = 0;l < u2; l++)
          b2 |= (s5 & 1) << u2 - l - 1, s5 >>= 1;
        return b2;
      }, xe.prototype.permute = function(s5, u2, c, b2, l, n3) {
        for (var d2 = 0;d2 < n3; d2++)
          b2[d2] = u2[s5[d2]], l[d2] = c[s5[d2]];
      }, xe.prototype.transform = function(s5, u2, c, b2, l, n3) {
        this.permute(n3, s5, u2, c, b2, l);
        for (var d2 = 1;d2 < l; d2 <<= 1)
          for (var w = d2 << 1, g2 = Math.cos(2 * Math.PI / w), _ = Math.sin(2 * Math.PI / w), A = 0;A < l; A += w)
            for (var R = g2, I = _, Me = 0;Me < d2; Me++) {
              var k2 = c[A + Me], D = b2[A + Me], nt = c[A + Me + d2], C = b2[A + Me + d2], O = R * nt - I * C;
              C = R * C + I * nt, nt = O, c[A + Me] = k2 + nt, b2[A + Me] = D + C, c[A + Me + d2] = k2 - nt, b2[A + Me + d2] = D - C, Me !== w && (O = g2 * R - _ * I, I = g2 * I + _ * R, R = O);
            }
      }, xe.prototype.guessLen13b = function(s5, u2) {
        var c = Math.max(u2, s5) | 1, b2 = c & 1, l = 0;
        for (c = c / 2 | 0;c; c = c >>> 1)
          l++;
        return 1 << l + 1 + b2;
      }, xe.prototype.conjugate = function(s5, u2, c) {
        if (!(c <= 1))
          for (var b2 = 0;b2 < c / 2; b2++) {
            var l = s5[b2];
            s5[b2] = s5[c - b2 - 1], s5[c - b2 - 1] = l, l = u2[b2], u2[b2] = -u2[c - b2 - 1], u2[c - b2 - 1] = -l;
          }
      }, xe.prototype.normalize13b = function(s5, u2) {
        for (var c = 0, b2 = 0;b2 < u2 / 2; b2++) {
          var l = Math.round(s5[2 * b2 + 1] / u2) * 8192 + Math.round(s5[2 * b2] / u2) + c;
          s5[b2] = l & 67108863, l < 67108864 ? c = 0 : c = l / 67108864 | 0;
        }
        return s5;
      }, xe.prototype.convert13b = function(s5, u2, c, b2) {
        for (var l = 0, n3 = 0;n3 < u2; n3++)
          l = l + (s5[n3] | 0), c[2 * n3] = l & 8191, l = l >>> 13, c[2 * n3 + 1] = l & 8191, l = l >>> 13;
        for (n3 = 2 * u2;n3 < b2; ++n3)
          c[n3] = 0;
        r6(l === 0), r6((l & -8192) === 0);
      }, xe.prototype.stub = function(s5) {
        for (var u2 = new Array(s5), c = 0;c < s5; c++)
          u2[c] = 0;
        return u2;
      }, xe.prototype.mulp = function(s5, u2, c) {
        var b2 = 2 * this.guessLen13b(s5.length, u2.length), l = this.makeRBT(b2), n3 = this.stub(b2), d2 = new Array(b2), w = new Array(b2), g2 = new Array(b2), _ = new Array(b2), A = new Array(b2), R = new Array(b2), I = c.words;
        I.length = b2, this.convert13b(s5.words, s5.length, d2, b2), this.convert13b(u2.words, u2.length, _, b2), this.transform(d2, n3, w, g2, b2, l), this.transform(_, n3, A, R, b2, l);
        for (var Me = 0;Me < b2; Me++) {
          var k2 = w[Me] * A[Me] - g2[Me] * R[Me];
          g2[Me] = w[Me] * R[Me] + g2[Me] * A[Me], w[Me] = k2;
        }
        return this.conjugate(w, g2, b2), this.transform(w, g2, I, n3, b2, l), this.conjugate(I, n3, b2), this.normalize13b(I, b2), c.negative = s5.negative ^ u2.negative, c.length = s5.length + u2.length, c._strip();
      }, f.prototype.mul = function(s5) {
        var u2 = new f(null);
        return u2.words = new Array(this.length + s5.length), this.mulTo(s5, u2);
      }, f.prototype.mulf = function(s5) {
        var u2 = new f(null);
        return u2.words = new Array(this.length + s5.length), ye(this, s5, u2);
      }, f.prototype.imul = function(s5) {
        return this.clone().mulTo(s5, this);
      }, f.prototype.imuln = function(s5) {
        var u2 = s5 < 0;
        u2 && (s5 = -s5), r6(typeof s5 == "number"), r6(s5 < 67108864);
        for (var c = 0, b2 = 0;b2 < this.length; b2++) {
          var l = (this.words[b2] | 0) * s5, n3 = (l & 67108863) + (c & 67108863);
          c >>= 26, c += l / 67108864 | 0, c += n3 >>> 26, this.words[b2] = n3 & 67108863;
        }
        return c !== 0 && (this.words[b2] = c, this.length++), u2 ? this.ineg() : this;
      }, f.prototype.muln = function(s5) {
        return this.clone().imuln(s5);
      }, f.prototype.sqr = function() {
        return this.mul(this);
      }, f.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f.prototype.pow = function(s5) {
        var u2 = ge(s5);
        if (u2.length === 0)
          return new f(1);
        for (var c = this, b2 = 0;b2 < u2.length && u2[b2] === 0; b2++, c = c.sqr())
          ;
        if (++b2 < u2.length)
          for (var l = c.sqr();b2 < u2.length; b2++, l = l.sqr())
            u2[b2] !== 0 && (c = c.mul(l));
        return c;
      }, f.prototype.iushln = function(s5) {
        r6(typeof s5 == "number" && s5 >= 0);
        var u2 = s5 % 26, c = (s5 - u2) / 26, b2 = 67108863 >>> 26 - u2 << 26 - u2, l;
        if (u2 !== 0) {
          var n3 = 0;
          for (l = 0;l < this.length; l++) {
            var d2 = this.words[l] & b2, w = (this.words[l] | 0) - d2 << u2;
            this.words[l] = w | n3, n3 = d2 >>> 26 - u2;
          }
          n3 && (this.words[l] = n3, this.length++);
        }
        if (c !== 0) {
          for (l = this.length - 1;l >= 0; l--)
            this.words[l + c] = this.words[l];
          for (l = 0;l < c; l++)
            this.words[l] = 0;
          this.length += c;
        }
        return this._strip();
      }, f.prototype.ishln = function(s5) {
        return r6(this.negative === 0), this.iushln(s5);
      }, f.prototype.iushrn = function(s5, u2, c) {
        r6(typeof s5 == "number" && s5 >= 0);
        var b2;
        u2 ? b2 = (u2 - u2 % 26) / 26 : b2 = 0;
        var l = s5 % 26, n3 = Math.min((s5 - l) / 26, this.length), d2 = 67108863 ^ 67108863 >>> l << l, w = c;
        if (b2 -= n3, b2 = Math.max(0, b2), w) {
          for (var g2 = 0;g2 < n3; g2++)
            w.words[g2] = this.words[g2];
          w.length = n3;
        }
        if (n3 !== 0)
          if (this.length > n3)
            for (this.length -= n3, g2 = 0;g2 < this.length; g2++)
              this.words[g2] = this.words[g2 + n3];
          else
            this.words[0] = 0, this.length = 1;
        var _ = 0;
        for (g2 = this.length - 1;g2 >= 0 && (_ !== 0 || g2 >= b2); g2--) {
          var A = this.words[g2] | 0;
          this.words[g2] = _ << 26 - l | A >>> l, _ = A & d2;
        }
        return w && _ !== 0 && (w.words[w.length++] = _), this.length === 0 && (this.words[0] = 0, this.length = 1), this._strip();
      }, f.prototype.ishrn = function(s5, u2, c) {
        return r6(this.negative === 0), this.iushrn(s5, u2, c);
      }, f.prototype.shln = function(s5) {
        return this.clone().ishln(s5);
      }, f.prototype.ushln = function(s5) {
        return this.clone().iushln(s5);
      }, f.prototype.shrn = function(s5) {
        return this.clone().ishrn(s5);
      }, f.prototype.ushrn = function(s5) {
        return this.clone().iushrn(s5);
      }, f.prototype.testn = function(s5) {
        r6(typeof s5 == "number" && s5 >= 0);
        var u2 = s5 % 26, c = (s5 - u2) / 26, b2 = 1 << u2;
        if (this.length <= c)
          return false;
        var l = this.words[c];
        return !!(l & b2);
      }, f.prototype.imaskn = function(s5) {
        r6(typeof s5 == "number" && s5 >= 0);
        var u2 = s5 % 26, c = (s5 - u2) / 26;
        if (r6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= c)
          return this;
        if (u2 !== 0 && c++, this.length = Math.min(c, this.length), u2 !== 0) {
          var b2 = 67108863 ^ 67108863 >>> u2 << u2;
          this.words[this.length - 1] &= b2;
        }
        return this._strip();
      }, f.prototype.maskn = function(s5) {
        return this.clone().imaskn(s5);
      }, f.prototype.iaddn = function(s5) {
        return r6(typeof s5 == "number"), r6(s5 < 67108864), s5 < 0 ? this.isubn(-s5) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) <= s5 ? (this.words[0] = s5 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(s5), this.negative = 1, this) : this._iaddn(s5);
      }, f.prototype._iaddn = function(s5) {
        this.words[0] += s5;
        for (var u2 = 0;u2 < this.length && this.words[u2] >= 67108864; u2++)
          this.words[u2] -= 67108864, u2 === this.length - 1 ? this.words[u2 + 1] = 1 : this.words[u2 + 1]++;
        return this.length = Math.max(this.length, u2 + 1), this;
      }, f.prototype.isubn = function(s5) {
        if (r6(typeof s5 == "number"), r6(s5 < 67108864), s5 < 0)
          return this.iaddn(-s5);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(s5), this.negative = 1, this;
        if (this.words[0] -= s5, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var u2 = 0;u2 < this.length && this.words[u2] < 0; u2++)
            this.words[u2] += 67108864, this.words[u2 + 1] -= 1;
        return this._strip();
      }, f.prototype.addn = function(s5) {
        return this.clone().iaddn(s5);
      }, f.prototype.subn = function(s5) {
        return this.clone().isubn(s5);
      }, f.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f.prototype.abs = function() {
        return this.clone().iabs();
      }, f.prototype._ishlnsubmul = function(s5, u2, c) {
        var b2 = s5.length + c, l;
        this._expand(b2);
        var n3, d2 = 0;
        for (l = 0;l < s5.length; l++) {
          n3 = (this.words[l + c] | 0) + d2;
          var w = (s5.words[l] | 0) * u2;
          n3 -= w & 67108863, d2 = (n3 >> 26) - (w / 67108864 | 0), this.words[l + c] = n3 & 67108863;
        }
        for (;l < this.length - c; l++)
          n3 = (this.words[l + c] | 0) + d2, d2 = n3 >> 26, this.words[l + c] = n3 & 67108863;
        if (d2 === 0)
          return this._strip();
        for (r6(d2 === -1), d2 = 0, l = 0;l < this.length; l++)
          n3 = -(this.words[l] | 0) + d2, d2 = n3 >> 26, this.words[l] = n3 & 67108863;
        return this.negative = 1, this._strip();
      }, f.prototype._wordDiv = function(s5, u2) {
        var c = this.length - s5.length, b2 = this.clone(), l = s5, n3 = l.words[l.length - 1] | 0, d2 = this._countBits(n3);
        c = 26 - d2, c !== 0 && (l = l.ushln(c), b2.iushln(c), n3 = l.words[l.length - 1] | 0);
        var w = b2.length - l.length, g2;
        if (u2 !== "mod") {
          g2 = new f(null), g2.length = w + 1, g2.words = new Array(g2.length);
          for (var _ = 0;_ < g2.length; _++)
            g2.words[_] = 0;
        }
        var A = b2.clone()._ishlnsubmul(l, 1, w);
        A.negative === 0 && (b2 = A, g2 && (g2.words[w] = 1));
        for (var R = w - 1;R >= 0; R--) {
          var I = (b2.words[l.length + R] | 0) * 67108864 + (b2.words[l.length + R - 1] | 0);
          for (I = Math.min(I / n3 | 0, 67108863), b2._ishlnsubmul(l, I, R);b2.negative !== 0; )
            I--, b2.negative = 0, b2._ishlnsubmul(l, 1, R), b2.isZero() || (b2.negative ^= 1);
          g2 && (g2.words[R] = I);
        }
        return g2 && g2._strip(), b2._strip(), u2 !== "div" && c !== 0 && b2.iushrn(c), { div: g2 || null, mod: b2 };
      }, f.prototype.divmod = function(s5, u2, c) {
        if (r6(!s5.isZero()), this.isZero())
          return { div: new f(0), mod: new f(0) };
        var b2, l, n3;
        return this.negative !== 0 && s5.negative === 0 ? (n3 = this.neg().divmod(s5, u2), u2 !== "mod" && (b2 = n3.div.neg()), u2 !== "div" && (l = n3.mod.neg(), c && l.negative !== 0 && l.iadd(s5)), { div: b2, mod: l }) : this.negative === 0 && s5.negative !== 0 ? (n3 = this.divmod(s5.neg(), u2), u2 !== "mod" && (b2 = n3.div.neg()), { div: b2, mod: n3.mod }) : (this.negative & s5.negative) !== 0 ? (n3 = this.neg().divmod(s5.neg(), u2), u2 !== "div" && (l = n3.mod.neg(), c && l.negative !== 0 && l.isub(s5)), { div: n3.div, mod: l }) : s5.length > this.length || this.cmp(s5) < 0 ? { div: new f(0), mod: this } : s5.length === 1 ? u2 === "div" ? { div: this.divn(s5.words[0]), mod: null } : u2 === "mod" ? { div: null, mod: new f(this.modrn(s5.words[0])) } : { div: this.divn(s5.words[0]), mod: new f(this.modrn(s5.words[0])) } : this._wordDiv(s5, u2);
      }, f.prototype.div = function(s5) {
        return this.divmod(s5, "div", false).div;
      }, f.prototype.mod = function(s5) {
        return this.divmod(s5, "mod", false).mod;
      }, f.prototype.umod = function(s5) {
        return this.divmod(s5, "mod", true).mod;
      }, f.prototype.divRound = function(s5) {
        var u2 = this.divmod(s5);
        if (u2.mod.isZero())
          return u2.div;
        var c = u2.div.negative !== 0 ? u2.mod.isub(s5) : u2.mod, b2 = s5.ushrn(1), l = s5.andln(1), n3 = c.cmp(b2);
        return n3 < 0 || l === 1 && n3 === 0 ? u2.div : u2.div.negative !== 0 ? u2.div.isubn(1) : u2.div.iaddn(1);
      }, f.prototype.modrn = function(s5) {
        var u2 = s5 < 0;
        u2 && (s5 = -s5), r6(s5 <= 67108863);
        for (var c = (1 << 26) % s5, b2 = 0, l = this.length - 1;l >= 0; l--)
          b2 = (c * b2 + (this.words[l] | 0)) % s5;
        return u2 ? -b2 : b2;
      }, f.prototype.modn = function(s5) {
        return this.modrn(s5);
      }, f.prototype.idivn = function(s5) {
        var u2 = s5 < 0;
        u2 && (s5 = -s5), r6(s5 <= 67108863);
        for (var c = 0, b2 = this.length - 1;b2 >= 0; b2--) {
          var l = (this.words[b2] | 0) + c * 67108864;
          this.words[b2] = l / s5 | 0, c = l % s5;
        }
        return this._strip(), u2 ? this.ineg() : this;
      }, f.prototype.divn = function(s5) {
        return this.clone().idivn(s5);
      }, f.prototype.egcd = function(s5) {
        r6(s5.negative === 0), r6(!s5.isZero());
        var u2 = this, c = s5.clone();
        u2.negative !== 0 ? u2 = u2.umod(s5) : u2 = u2.clone();
        for (var b2 = new f(1), l = new f(0), n3 = new f(0), d2 = new f(1), w = 0;u2.isEven() && c.isEven(); )
          u2.iushrn(1), c.iushrn(1), ++w;
        for (var g2 = c.clone(), _ = u2.clone();!u2.isZero(); ) {
          for (var A = 0, R = 1;(u2.words[0] & R) === 0 && A < 26; ++A, R <<= 1)
            ;
          if (A > 0)
            for (u2.iushrn(A);A-- > 0; )
              (b2.isOdd() || l.isOdd()) && (b2.iadd(g2), l.isub(_)), b2.iushrn(1), l.iushrn(1);
          for (var I = 0, Me = 1;(c.words[0] & Me) === 0 && I < 26; ++I, Me <<= 1)
            ;
          if (I > 0)
            for (c.iushrn(I);I-- > 0; )
              (n3.isOdd() || d2.isOdd()) && (n3.iadd(g2), d2.isub(_)), n3.iushrn(1), d2.iushrn(1);
          u2.cmp(c) >= 0 ? (u2.isub(c), b2.isub(n3), l.isub(d2)) : (c.isub(u2), n3.isub(b2), d2.isub(l));
        }
        return { a: n3, b: d2, gcd: c.iushln(w) };
      }, f.prototype._invmp = function(s5) {
        r6(s5.negative === 0), r6(!s5.isZero());
        var u2 = this, c = s5.clone();
        u2.negative !== 0 ? u2 = u2.umod(s5) : u2 = u2.clone();
        for (var b2 = new f(1), l = new f(0), n3 = c.clone();u2.cmpn(1) > 0 && c.cmpn(1) > 0; ) {
          for (var d2 = 0, w = 1;(u2.words[0] & w) === 0 && d2 < 26; ++d2, w <<= 1)
            ;
          if (d2 > 0)
            for (u2.iushrn(d2);d2-- > 0; )
              b2.isOdd() && b2.iadd(n3), b2.iushrn(1);
          for (var g2 = 0, _ = 1;(c.words[0] & _) === 0 && g2 < 26; ++g2, _ <<= 1)
            ;
          if (g2 > 0)
            for (c.iushrn(g2);g2-- > 0; )
              l.isOdd() && l.iadd(n3), l.iushrn(1);
          u2.cmp(c) >= 0 ? (u2.isub(c), b2.isub(l)) : (c.isub(u2), l.isub(b2));
        }
        var A;
        return u2.cmpn(1) === 0 ? A = b2 : A = l, A.cmpn(0) < 0 && A.iadd(s5), A;
      }, f.prototype.gcd = function(s5) {
        if (this.isZero())
          return s5.abs();
        if (s5.isZero())
          return this.abs();
        var u2 = this.clone(), c = s5.clone();
        u2.negative = 0, c.negative = 0;
        for (var b2 = 0;u2.isEven() && c.isEven(); b2++)
          u2.iushrn(1), c.iushrn(1);
        do {
          for (;u2.isEven(); )
            u2.iushrn(1);
          for (;c.isEven(); )
            c.iushrn(1);
          var l = u2.cmp(c);
          if (l < 0) {
            var n3 = u2;
            u2 = c, c = n3;
          } else if (l === 0 || c.cmpn(1) === 0)
            break;
          u2.isub(c);
        } while (true);
        return c.iushln(b2);
      }, f.prototype.invm = function(s5) {
        return this.egcd(s5).a.umod(s5);
      }, f.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f.prototype.andln = function(s5) {
        return this.words[0] & s5;
      }, f.prototype.bincn = function(s5) {
        r6(typeof s5 == "number");
        var u2 = s5 % 26, c = (s5 - u2) / 26, b2 = 1 << u2;
        if (this.length <= c)
          return this._expand(c + 1), this.words[c] |= b2, this;
        for (var l = b2, n3 = c;l !== 0 && n3 < this.length; n3++) {
          var d2 = this.words[n3] | 0;
          d2 += l, l = d2 >>> 26, d2 &= 67108863, this.words[n3] = d2;
        }
        return l !== 0 && (this.words[n3] = l, this.length++), this;
      }, f.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f.prototype.cmpn = function(s5) {
        var u2 = s5 < 0;
        if (this.negative !== 0 && !u2)
          return -1;
        if (this.negative === 0 && u2)
          return 1;
        this._strip();
        var c;
        if (this.length > 1)
          c = 1;
        else {
          u2 && (s5 = -s5), r6(s5 <= 67108863, "Number is too big");
          var b2 = this.words[0] | 0;
          c = b2 === s5 ? 0 : b2 < s5 ? -1 : 1;
        }
        return this.negative !== 0 ? -c | 0 : c;
      }, f.prototype.cmp = function(s5) {
        if (this.negative !== 0 && s5.negative === 0)
          return -1;
        if (this.negative === 0 && s5.negative !== 0)
          return 1;
        var u2 = this.ucmp(s5);
        return this.negative !== 0 ? -u2 | 0 : u2;
      }, f.prototype.ucmp = function(s5) {
        if (this.length > s5.length)
          return 1;
        if (this.length < s5.length)
          return -1;
        for (var u2 = 0, c = this.length - 1;c >= 0; c--) {
          var b2 = this.words[c] | 0, l = s5.words[c] | 0;
          if (b2 !== l) {
            b2 < l ? u2 = -1 : b2 > l && (u2 = 1);
            break;
          }
        }
        return u2;
      }, f.prototype.gtn = function(s5) {
        return this.cmpn(s5) === 1;
      }, f.prototype.gt = function(s5) {
        return this.cmp(s5) === 1;
      }, f.prototype.gten = function(s5) {
        return this.cmpn(s5) >= 0;
      }, f.prototype.gte = function(s5) {
        return this.cmp(s5) >= 0;
      }, f.prototype.ltn = function(s5) {
        return this.cmpn(s5) === -1;
      }, f.prototype.lt = function(s5) {
        return this.cmp(s5) === -1;
      }, f.prototype.lten = function(s5) {
        return this.cmpn(s5) <= 0;
      }, f.prototype.lte = function(s5) {
        return this.cmp(s5) <= 0;
      }, f.prototype.eqn = function(s5) {
        return this.cmpn(s5) === 0;
      }, f.prototype.eq = function(s5) {
        return this.cmp(s5) === 0;
      }, f.red = function(s5) {
        return new i3(s5);
      }, f.prototype.toRed = function(s5) {
        return r6(!this.red, "Already a number in reduction context"), r6(this.negative === 0, "red works only with positives"), s5.convertTo(this)._forceRed(s5);
      }, f.prototype.fromRed = function() {
        return r6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f.prototype._forceRed = function(s5) {
        return this.red = s5, this;
      }, f.prototype.forceRed = function(s5) {
        return r6(!this.red, "Already a number in reduction context"), this._forceRed(s5);
      }, f.prototype.redAdd = function(s5) {
        return r6(this.red, "redAdd works only with red numbers"), this.red.add(this, s5);
      }, f.prototype.redIAdd = function(s5) {
        return r6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, s5);
      }, f.prototype.redSub = function(s5) {
        return r6(this.red, "redSub works only with red numbers"), this.red.sub(this, s5);
      }, f.prototype.redISub = function(s5) {
        return r6(this.red, "redISub works only with red numbers"), this.red.isub(this, s5);
      }, f.prototype.redShl = function(s5) {
        return r6(this.red, "redShl works only with red numbers"), this.red.shl(this, s5);
      }, f.prototype.redMul = function(s5) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, s5), this.red.mul(this, s5);
      }, f.prototype.redIMul = function(s5) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, s5), this.red.imul(this, s5);
      }, f.prototype.redSqr = function() {
        return r6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f.prototype.redISqr = function() {
        return r6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f.prototype.redSqrt = function() {
        return r6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f.prototype.redInvm = function() {
        return r6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f.prototype.redNeg = function() {
        return r6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f.prototype.redPow = function(s5) {
        return r6(this.red && !s5.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, s5);
      };
      var Re = { k256: null, p224: null, p192: null, p25519: null };
      function Ee(h2, s5) {
        this.name = h2, this.p = new f(s5, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      Ee.prototype._tmp = function() {
        var s5 = new f(null);
        return s5.words = new Array(Math.ceil(this.n / 13)), s5;
      }, Ee.prototype.ireduce = function(s5) {
        var u2 = s5, c;
        do
          this.split(u2, this.tmp), u2 = this.imulK(u2), u2 = u2.iadd(this.tmp), c = u2.bitLength();
        while (c > this.n);
        var b2 = c < this.n ? -1 : u2.ucmp(this.p);
        return b2 === 0 ? (u2.words[0] = 0, u2.length = 1) : b2 > 0 ? u2.isub(this.p) : u2.strip !== undefined ? u2.strip() : u2._strip(), u2;
      }, Ee.prototype.split = function(s5, u2) {
        s5.iushrn(this.n, 0, u2);
      }, Ee.prototype.imulK = function(s5) {
        return s5.imul(this.k);
      };
      function Ae() {
        Ee.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o2(Ae, Ee), Ae.prototype.split = function(s5, u2) {
        for (var c = 4194303, b2 = Math.min(s5.length, 9), l = 0;l < b2; l++)
          u2.words[l] = s5.words[l];
        if (u2.length = b2, s5.length <= 9) {
          s5.words[0] = 0, s5.length = 1;
          return;
        }
        var n3 = s5.words[9];
        for (u2.words[u2.length++] = n3 & c, l = 10;l < s5.length; l++) {
          var d2 = s5.words[l] | 0;
          s5.words[l - 10] = (d2 & c) << 4 | n3 >>> 22, n3 = d2;
        }
        n3 >>>= 22, s5.words[l - 10] = n3, n3 === 0 && s5.length > 10 ? s5.length -= 10 : s5.length -= 9;
      }, Ae.prototype.imulK = function(s5) {
        s5.words[s5.length] = 0, s5.words[s5.length + 1] = 0, s5.length += 2;
        for (var u2 = 0, c = 0;c < s5.length; c++) {
          var b2 = s5.words[c] | 0;
          u2 += b2 * 977, s5.words[c] = u2 & 67108863, u2 = b2 * 64 + (u2 / 67108864 | 0);
        }
        return s5.words[s5.length - 1] === 0 && (s5.length--, s5.words[s5.length - 1] === 0 && s5.length--), s5;
      };
      function P() {
        Ee.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o2(P, Ee);
      function Se() {
        Ee.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o2(Se, Ee);
      function v() {
        Ee.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o2(v, Ee), v.prototype.imulK = function(s5) {
        for (var u2 = 0, c = 0;c < s5.length; c++) {
          var b2 = (s5.words[c] | 0) * 19 + u2, l = b2 & 67108863;
          b2 >>>= 26, s5.words[c] = l, u2 = b2;
        }
        return u2 !== 0 && (s5.words[s5.length++] = u2), s5;
      }, f._prime = function(s5) {
        if (Re[s5])
          return Re[s5];
        var u2;
        if (s5 === "k256")
          u2 = new Ae;
        else if (s5 === "p224")
          u2 = new P;
        else if (s5 === "p192")
          u2 = new Se;
        else if (s5 === "p25519")
          u2 = new v;
        else
          throw new Error("Unknown prime " + s5);
        return Re[s5] = u2, u2;
      };
      function i3(h2) {
        if (typeof h2 == "string") {
          var s5 = f._prime(h2);
          this.m = s5.p, this.prime = s5;
        } else
          r6(h2.gtn(1), "modulus must be greater than 1"), this.m = h2, this.prime = null;
      }
      i3.prototype._verify1 = function(s5) {
        r6(s5.negative === 0, "red works only with positives"), r6(s5.red, "red works only with red numbers");
      }, i3.prototype._verify2 = function(s5, u2) {
        r6((s5.negative | u2.negative) === 0, "red works only with positives"), r6(s5.red && s5.red === u2.red, "red works only with red numbers");
      }, i3.prototype.imod = function(s5) {
        return this.prime ? this.prime.ireduce(s5)._forceRed(this) : (x(s5, s5.umod(this.m)._forceRed(this)), s5);
      }, i3.prototype.neg = function(s5) {
        return s5.isZero() ? s5.clone() : this.m.sub(s5)._forceRed(this);
      }, i3.prototype.add = function(s5, u2) {
        this._verify2(s5, u2);
        var c = s5.add(u2);
        return c.cmp(this.m) >= 0 && c.isub(this.m), c._forceRed(this);
      }, i3.prototype.iadd = function(s5, u2) {
        this._verify2(s5, u2);
        var c = s5.iadd(u2);
        return c.cmp(this.m) >= 0 && c.isub(this.m), c;
      }, i3.prototype.sub = function(s5, u2) {
        this._verify2(s5, u2);
        var c = s5.sub(u2);
        return c.cmpn(0) < 0 && c.iadd(this.m), c._forceRed(this);
      }, i3.prototype.isub = function(s5, u2) {
        this._verify2(s5, u2);
        var c = s5.isub(u2);
        return c.cmpn(0) < 0 && c.iadd(this.m), c;
      }, i3.prototype.shl = function(s5, u2) {
        return this._verify1(s5), this.imod(s5.ushln(u2));
      }, i3.prototype.imul = function(s5, u2) {
        return this._verify2(s5, u2), this.imod(s5.imul(u2));
      }, i3.prototype.mul = function(s5, u2) {
        return this._verify2(s5, u2), this.imod(s5.mul(u2));
      }, i3.prototype.isqr = function(s5) {
        return this.imul(s5, s5.clone());
      }, i3.prototype.sqr = function(s5) {
        return this.mul(s5, s5);
      }, i3.prototype.sqrt = function(s5) {
        if (s5.isZero())
          return s5.clone();
        var u2 = this.m.andln(3);
        if (r6(u2 % 2 === 1), u2 === 3) {
          var c = this.m.add(new f(1)).iushrn(2);
          return this.pow(s5, c);
        }
        for (var b2 = this.m.subn(1), l = 0;!b2.isZero() && b2.andln(1) === 0; )
          l++, b2.iushrn(1);
        r6(!b2.isZero());
        var n3 = new f(1).toRed(this), d2 = n3.redNeg(), w = this.m.subn(1).iushrn(1), g2 = this.m.bitLength();
        for (g2 = new f(2 * g2 * g2).toRed(this);this.pow(g2, w).cmp(d2) !== 0; )
          g2.redIAdd(d2);
        for (var _ = this.pow(g2, b2), A = this.pow(s5, b2.addn(1).iushrn(1)), R = this.pow(s5, b2), I = l;R.cmp(n3) !== 0; ) {
          for (var Me = R, k2 = 0;Me.cmp(n3) !== 0; k2++)
            Me = Me.redSqr();
          r6(k2 < I);
          var D = this.pow(_, new f(1).iushln(I - k2 - 1));
          A = A.redMul(D), _ = D.redSqr(), R = R.redMul(_), I = k2;
        }
        return A;
      }, i3.prototype.invm = function(s5) {
        var u2 = s5._invmp(this.m);
        return u2.negative !== 0 ? (u2.negative = 0, this.imod(u2).redNeg()) : this.imod(u2);
      }, i3.prototype.pow = function(s5, u2) {
        if (u2.isZero())
          return new f(1).toRed(this);
        if (u2.cmpn(1) === 0)
          return s5.clone();
        var c = 4, b2 = new Array(1 << c);
        b2[0] = new f(1).toRed(this), b2[1] = s5;
        for (var l = 2;l < b2.length; l++)
          b2[l] = this.mul(b2[l - 1], s5);
        var n3 = b2[0], d2 = 0, w = 0, g2 = u2.bitLength() % 26;
        for (g2 === 0 && (g2 = 26), l = u2.length - 1;l >= 0; l--) {
          for (var _ = u2.words[l], A = g2 - 1;A >= 0; A--) {
            var R = _ >> A & 1;
            if (n3 !== b2[0] && (n3 = this.sqr(n3)), R === 0 && d2 === 0) {
              w = 0;
              continue;
            }
            d2 <<= 1, d2 |= R, w++, !(w !== c && (l !== 0 || A !== 0)) && (n3 = this.mul(n3, b2[d2]), w = 0, d2 = 0);
          }
          g2 = 26;
        }
        return n3;
      }, i3.prototype.convertTo = function(s5) {
        var u2 = s5.umod(this.m);
        return u2 === s5 ? u2.clone() : u2;
      }, i3.prototype.convertFrom = function(s5) {
        var u2 = s5.clone();
        return u2.red = null, u2;
      }, f.mont = function(s5) {
        return new a4(s5);
      };
      function a4(h2) {
        i3.call(this, h2), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o2(a4, i3), a4.prototype.convertTo = function(s5) {
        return this.imod(s5.ushln(this.shift));
      }, a4.prototype.convertFrom = function(s5) {
        var u2 = this.imod(s5.mul(this.rinv));
        return u2.red = null, u2;
      }, a4.prototype.imul = function(s5, u2) {
        if (s5.isZero() || u2.isZero())
          return s5.words[0] = 0, s5.length = 1, s5;
        var c = s5.imul(u2), b2 = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), l = c.isub(b2).iushrn(this.shift), n3 = l;
        return l.cmp(this.m) >= 0 ? n3 = l.isub(this.m) : l.cmpn(0) < 0 && (n3 = l.iadd(this.m)), n3._forceRed(this);
      }, a4.prototype.mul = function(s5, u2) {
        if (s5.isZero() || u2.isZero())
          return new f(0)._forceRed(this);
        var c = s5.mul(u2), b2 = c.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), l = c.isub(b2).iushrn(this.shift), n3 = l;
        return l.cmp(this.m) >= 0 ? n3 = l.isub(this.m) : l.cmpn(0) < 0 && (n3 = l.iadd(this.m)), n3._forceRed(this);
      }, a4.prototype.invm = function(s5) {
        var u2 = this.imod(s5._invmp(this.m).mul(this.r2));
        return u2._forceRed(this);
      };
    })(typeof kl > "u" || kl, n2);
  });
  Ks = T((yk, o2) => {
    var Rf = Ws(), oA = on();
    function sA(t6) {
      var e6 = f2(t6), r6 = e6.toRed(Rf.mont(t6.modulus)).redPow(new Rf(t6.publicExponent)).fromRed();
      return { blinder: r6, unblinder: e6.invm(t6.modulus) };
    }
    function f2(t6) {
      var e6 = t6.modulus.byteLength(), r6;
      do
        r6 = new Rf(oA(e6));
      while (r6.cmp(t6.modulus) >= 0 || !r6.umod(t6.prime1) || !r6.umod(t6.prime2));
      return r6;
    }
    function a22(t6, e6) {
      var r6 = sA(e6), o3 = e6.modulus.byteLength(), f = new Rf(t6).mul(r6.blinder).umod(e6.modulus), p2 = f.toRed(Rf.mont(e6.prime1)), m2 = f.toRed(Rf.mont(e6.prime2)), y2 = e6.coefficient, M = e6.prime1, x = e6.prime2, S = p2.redPow(e6.exponent1).fromRed(), E = m2.redPow(e6.exponent2).fromRed(), B = S.isub(E).imul(y2).umod(M).imul(x);
      return E.iadd(B).imul(r6.unblinder).umod(e6.modulus).toArrayLike(Buffer, "be", o3);
    }
    a22.getr = f2;
    o2.exports = a22;
  });
  s22 = T((wk, hA) => {
    hA.exports = { name: "elliptic", version: "6.5.4", description: "EC cryptography", main: "lib/elliptic.js", files: ["lib"], scripts: { lint: "eslint lib test", "lint:fix": "npm run lint -- --fix", unit: "istanbul test _mocha --reporter=spec test/index.js", test: "npm run lint && npm run unit", version: "grunt dist && git add dist/" }, repository: { type: "git", url: "git@github.com:indutny/elliptic" }, keywords: ["EC", "Elliptic", "curve", "Cryptography"], author: "Fedor Indutny <fedor@indutny.com>", license: "MIT", bugs: { url: "https://github.com/indutny/elliptic/issues" }, homepage: "https://github.com/indutny/elliptic", devDependencies: { brfs: "^2.0.2", coveralls: "^3.1.0", eslint: "^7.6.0", grunt: "^1.2.1", "grunt-browserify": "^5.3.0", "grunt-cli": "^1.3.2", "grunt-contrib-connect": "^3.0.0", "grunt-contrib-copy": "^1.0.0", "grunt-contrib-uglify": "^5.0.0", "grunt-mocha-istanbul": "^5.0.2", "grunt-saucelabs": "^9.0.1", istanbul: "^0.4.5", mocha: "^8.0.1" }, dependencies: { "bn.js": "^4.11.9", brorand: "^1.1.0", "hash.js": "^1.0.0", "hmac-drbg": "^1.0.1", inherits: "^2.0.4", "minimalistic-assert": "^1.0.1", "minimalistic-crypto-utils": "^1.0.1" } };
  });
  ri = T((h2, Ll) => {
    (function(t6, e6) {
      function r6(v, i3) {
        if (!v)
          throw new Error(i3 || "Assertion failed");
      }
      function o2(v, i3) {
        v.super_ = i3;
        var a4 = function() {
        };
        a4.prototype = i3.prototype, v.prototype = new a4, v.prototype.constructor = v;
      }
      function f(v, i3, a4) {
        if (f.isBN(v))
          return v;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i3 === "le" || i3 === "be") && (a4 = i3, i3 = 10), this._init(v || 0, i3 || 10, a4 || "be"));
      }
      typeof t6 == "object" ? t6.exports = f : e6.BN = f, f.BN = f, f.wordSize = 26;
      var p2;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p2 = window.Buffer : p2 = ji().Buffer;
      } catch {
      }
      f.isBN = function(i3) {
        return i3 instanceof f ? true : i3 !== null && typeof i3 == "object" && i3.constructor.wordSize === f.wordSize && Array.isArray(i3.words);
      }, f.max = function(i3, a4) {
        return i3.cmp(a4) > 0 ? i3 : a4;
      }, f.min = function(i3, a4) {
        return i3.cmp(a4) < 0 ? i3 : a4;
      }, f.prototype._init = function(i3, a4, h3) {
        if (typeof i3 == "number")
          return this._initNumber(i3, a4, h3);
        if (typeof i3 == "object")
          return this._initArray(i3, a4, h3);
        a4 === "hex" && (a4 = 16), r6(a4 === (a4 | 0) && a4 >= 2 && a4 <= 36), i3 = i3.toString().replace(/\s+/g, "");
        var s5 = 0;
        i3[0] === "-" && (s5++, this.negative = 1), s5 < i3.length && (a4 === 16 ? this._parseHex(i3, s5, h3) : (this._parseBase(i3, a4, s5), h3 === "le" && this._initArray(this.toArray(), a4, h3)));
      }, f.prototype._initNumber = function(i3, a4, h3) {
        i3 < 0 && (this.negative = 1, i3 = -i3), i3 < 67108864 ? (this.words = [i3 & 67108863], this.length = 1) : i3 < 4503599627370496 ? (this.words = [i3 & 67108863, i3 / 67108864 & 67108863], this.length = 2) : (r6(i3 < 9007199254740992), this.words = [i3 & 67108863, i3 / 67108864 & 67108863, 1], this.length = 3), h3 === "le" && this._initArray(this.toArray(), a4, h3);
      }, f.prototype._initArray = function(i3, a4, h3) {
        if (r6(typeof i3.length == "number"), i3.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i3.length / 3), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2, c, b2 = 0;
        if (h3 === "be")
          for (s5 = i3.length - 1, u2 = 0;s5 >= 0; s5 -= 3)
            c = i3[s5] | i3[s5 - 1] << 8 | i3[s5 - 2] << 16, this.words[u2] |= c << b2 & 67108863, this.words[u2 + 1] = c >>> 26 - b2 & 67108863, b2 += 24, b2 >= 26 && (b2 -= 26, u2++);
        else if (h3 === "le")
          for (s5 = 0, u2 = 0;s5 < i3.length; s5 += 3)
            c = i3[s5] | i3[s5 + 1] << 8 | i3[s5 + 2] << 16, this.words[u2] |= c << b2 & 67108863, this.words[u2 + 1] = c >>> 26 - b2 & 67108863, b2 += 24, b2 >= 26 && (b2 -= 26, u2++);
        return this.strip();
      };
      function m2(v, i3) {
        var a4 = v.charCodeAt(i3);
        return a4 >= 65 && a4 <= 70 ? a4 - 55 : a4 >= 97 && a4 <= 102 ? a4 - 87 : a4 - 48 & 15;
      }
      function y2(v, i3, a4) {
        var h3 = m2(v, a4);
        return a4 - 1 >= i3 && (h3 |= m2(v, a4 - 1) << 4), h3;
      }
      f.prototype._parseHex = function(i3, a4, h3) {
        this.length = Math.ceil((i3.length - a4) / 6), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2 = 0, c = 0, b2;
        if (h3 === "be")
          for (s5 = i3.length - 1;s5 >= a4; s5 -= 2)
            b2 = y2(i3, a4, s5) << u2, this.words[c] |= b2 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b2 >>> 26) : u2 += 8;
        else {
          var l = i3.length - a4;
          for (s5 = l % 2 === 0 ? a4 + 1 : a4;s5 < i3.length; s5 += 2)
            b2 = y2(i3, a4, s5) << u2, this.words[c] |= b2 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b2 >>> 26) : u2 += 8;
        }
        this.strip();
      };
      function M(v, i3, a4, h3) {
        for (var s5 = 0, u2 = Math.min(v.length, a4), c = i3;c < u2; c++) {
          var b2 = v.charCodeAt(c) - 48;
          s5 *= h3, b2 >= 49 ? s5 += b2 - 49 + 10 : b2 >= 17 ? s5 += b2 - 17 + 10 : s5 += b2;
        }
        return s5;
      }
      f.prototype._parseBase = function(i3, a4, h3) {
        this.words = [0], this.length = 1;
        for (var s5 = 0, u2 = 1;u2 <= 67108863; u2 *= a4)
          s5++;
        s5--, u2 = u2 / a4 | 0;
        for (var c = i3.length - h3, b2 = c % s5, l = Math.min(c, c - b2) + h3, n2 = 0, d2 = h3;d2 < l; d2 += s5)
          n2 = M(i3, d2, d2 + s5, a4), this.imuln(u2), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        if (b2 !== 0) {
          var w = 1;
          for (n2 = M(i3, d2, i3.length, a4), d2 = 0;d2 < b2; d2++)
            w *= a4;
          this.imuln(w), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        }
        this.strip();
      }, f.prototype.copy = function(i3) {
        i3.words = new Array(this.length);
        for (var a4 = 0;a4 < this.length; a4++)
          i3.words[a4] = this.words[a4];
        i3.length = this.length, i3.negative = this.negative, i3.red = this.red;
      }, f.prototype.clone = function() {
        var i3 = new f(null);
        return this.copy(i3), i3;
      }, f.prototype._expand = function(i3) {
        for (;this.length < i3; )
          this.words[this.length++] = 0;
        return this;
      }, f.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f.prototype.toString = function(i3, a4) {
        i3 = i3 || 10, a4 = a4 | 0 || 1;
        var h3;
        if (i3 === 16 || i3 === "hex") {
          h3 = "";
          for (var s5 = 0, u2 = 0, c = 0;c < this.length; c++) {
            var b2 = this.words[c], l = ((b2 << s5 | u2) & 16777215).toString(16);
            u2 = b2 >>> 24 - s5 & 16777215, u2 !== 0 || c !== this.length - 1 ? h3 = x[6 - l.length] + l + h3 : h3 = l + h3, s5 += 2, s5 >= 26 && (s5 -= 26, c--);
          }
          for (u2 !== 0 && (h3 = u2.toString(16) + h3);h3.length % a4 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        if (i3 === (i3 | 0) && i3 >= 2 && i3 <= 36) {
          var n2 = S[i3], d2 = E[i3];
          h3 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g2 = w.modn(d2).toString(i3);
            w = w.idivn(d2), w.isZero() ? h3 = g2 + h3 : h3 = x[n2 - g2.length] + g2 + h3;
          }
          for (this.isZero() && (h3 = "0" + h3);h3.length % a4 !== 0; )
            h3 = "0" + h3;
          return this.negative !== 0 && (h3 = "-" + h3), h3;
        }
        r6(false, "Base should be between 2 and 36");
      }, f.prototype.toNumber = function() {
        var i3 = this.words[0];
        return this.length === 2 ? i3 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i3 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i3 : i3;
      }, f.prototype.toJSON = function() {
        return this.toString(16);
      }, f.prototype.toBuffer = function(i3, a4) {
        return r6(typeof p2 < "u"), this.toArrayLike(p2, i3, a4);
      }, f.prototype.toArray = function(i3, a4) {
        return this.toArrayLike(Array, i3, a4);
      }, f.prototype.toArrayLike = function(i3, a4, h3) {
        var s5 = this.byteLength(), u2 = h3 || Math.max(1, s5);
        r6(s5 <= u2, "byte array longer than desired length"), r6(u2 > 0, "Requested array length <= 0"), this.strip();
        var c = a4 === "le", b2 = new i3(u2), l, n2, d2 = this.clone();
        if (c) {
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b2[n2] = l;
          for (;n2 < u2; n2++)
            b2[n2] = 0;
        } else {
          for (n2 = 0;n2 < u2 - s5; n2++)
            b2[n2] = 0;
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b2[u2 - n2 - 1] = l;
        }
        return b2;
      }, Math.clz32 ? f.prototype._countBits = function(i3) {
        return 32 - Math.clz32(i3);
      } : f.prototype._countBits = function(i3) {
        var a4 = i3, h3 = 0;
        return a4 >= 4096 && (h3 += 13, a4 >>>= 13), a4 >= 64 && (h3 += 7, a4 >>>= 7), a4 >= 8 && (h3 += 4, a4 >>>= 4), a4 >= 2 && (h3 += 2, a4 >>>= 2), h3 + a4;
      }, f.prototype._zeroBits = function(i3) {
        if (i3 === 0)
          return 26;
        var a4 = i3, h3 = 0;
        return (a4 & 8191) === 0 && (h3 += 13, a4 >>>= 13), (a4 & 127) === 0 && (h3 += 7, a4 >>>= 7), (a4 & 15) === 0 && (h3 += 4, a4 >>>= 4), (a4 & 3) === 0 && (h3 += 2, a4 >>>= 2), (a4 & 1) === 0 && h3++, h3;
      }, f.prototype.bitLength = function() {
        var i3 = this.words[this.length - 1], a4 = this._countBits(i3);
        return (this.length - 1) * 26 + a4;
      };
      function B(v) {
        for (var i3 = new Array(v.bitLength()), a4 = 0;a4 < i3.length; a4++) {
          var h3 = a4 / 26 | 0, s5 = a4 % 26;
          i3[a4] = (v.words[h3] & 1 << s5) >>> s5;
        }
        return i3;
      }
      f.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i3 = 0, a4 = 0;a4 < this.length; a4++) {
          var h3 = this._zeroBits(this.words[a4]);
          if (i3 += h3, h3 !== 26)
            break;
        }
        return i3;
      }, f.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f.prototype.toTwos = function(i3) {
        return this.negative !== 0 ? this.abs().inotn(i3).iaddn(1) : this.clone();
      }, f.prototype.fromTwos = function(i3) {
        return this.testn(i3 - 1) ? this.notn(i3).iaddn(1).ineg() : this.clone();
      }, f.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f.prototype.neg = function() {
        return this.clone().ineg();
      }, f.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f.prototype.iuor = function(i3) {
        for (;this.length < i3.length; )
          this.words[this.length++] = 0;
        for (var a4 = 0;a4 < i3.length; a4++)
          this.words[a4] = this.words[a4] | i3.words[a4];
        return this.strip();
      }, f.prototype.ior = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuor(i3);
      }, f.prototype.or = function(i3) {
        return this.length > i3.length ? this.clone().ior(i3) : i3.clone().ior(this);
      }, f.prototype.uor = function(i3) {
        return this.length > i3.length ? this.clone().iuor(i3) : i3.clone().iuor(this);
      }, f.prototype.iuand = function(i3) {
        var a4;
        this.length > i3.length ? a4 = i3 : a4 = this;
        for (var h3 = 0;h3 < a4.length; h3++)
          this.words[h3] = this.words[h3] & i3.words[h3];
        return this.length = a4.length, this.strip();
      }, f.prototype.iand = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuand(i3);
      }, f.prototype.and = function(i3) {
        return this.length > i3.length ? this.clone().iand(i3) : i3.clone().iand(this);
      }, f.prototype.uand = function(i3) {
        return this.length > i3.length ? this.clone().iuand(i3) : i3.clone().iuand(this);
      }, f.prototype.iuxor = function(i3) {
        var a4, h3;
        this.length > i3.length ? (a4 = this, h3 = i3) : (a4 = i3, h3 = this);
        for (var s5 = 0;s5 < h3.length; s5++)
          this.words[s5] = a4.words[s5] ^ h3.words[s5];
        if (this !== a4)
          for (;s5 < a4.length; s5++)
            this.words[s5] = a4.words[s5];
        return this.length = a4.length, this.strip();
      }, f.prototype.ixor = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuxor(i3);
      }, f.prototype.xor = function(i3) {
        return this.length > i3.length ? this.clone().ixor(i3) : i3.clone().ixor(this);
      }, f.prototype.uxor = function(i3) {
        return this.length > i3.length ? this.clone().iuxor(i3) : i3.clone().iuxor(this);
      }, f.prototype.inotn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = Math.ceil(i3 / 26) | 0, h3 = i3 % 26;
        this._expand(a4), h3 > 0 && a4--;
        for (var s5 = 0;s5 < a4; s5++)
          this.words[s5] = ~this.words[s5] & 67108863;
        return h3 > 0 && (this.words[s5] = ~this.words[s5] & 67108863 >> 26 - h3), this.strip();
      }, f.prototype.notn = function(i3) {
        return this.clone().inotn(i3);
      }, f.prototype.setn = function(i3, a4) {
        r6(typeof i3 == "number" && i3 >= 0);
        var h3 = i3 / 26 | 0, s5 = i3 % 26;
        return this._expand(h3 + 1), a4 ? this.words[h3] = this.words[h3] | 1 << s5 : this.words[h3] = this.words[h3] & ~(1 << s5), this.strip();
      }, f.prototype.iadd = function(i3) {
        var a4;
        if (this.negative !== 0 && i3.negative === 0)
          return this.negative = 0, a4 = this.isub(i3), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i3.negative !== 0)
          return i3.negative = 0, a4 = this.isub(i3), i3.negative = 1, a4._normSign();
        var h3, s5;
        this.length > i3.length ? (h3 = this, s5 = i3) : (h3 = i3, s5 = this);
        for (var u2 = 0, c = 0;c < s5.length; c++)
          a4 = (h3.words[c] | 0) + (s5.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        for (;u2 !== 0 && c < h3.length; c++)
          a4 = (h3.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        if (this.length = h3.length, u2 !== 0)
          this.words[this.length] = u2, this.length++;
        else if (h3 !== this)
          for (;c < h3.length; c++)
            this.words[c] = h3.words[c];
        return this;
      }, f.prototype.add = function(i3) {
        var a4;
        return i3.negative !== 0 && this.negative === 0 ? (i3.negative = 0, a4 = this.sub(i3), i3.negative ^= 1, a4) : i3.negative === 0 && this.negative !== 0 ? (this.negative = 0, a4 = i3.sub(this), this.negative = 1, a4) : this.length > i3.length ? this.clone().iadd(i3) : i3.clone().iadd(this);
      }, f.prototype.isub = function(i3) {
        if (i3.negative !== 0) {
          i3.negative = 0;
          var a4 = this.iadd(i3);
          return i3.negative = 1, a4._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i3), this.negative = 1, this._normSign();
        var h3 = this.cmp(i3);
        if (h3 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s5, u2;
        h3 > 0 ? (s5 = this, u2 = i3) : (s5 = i3, u2 = this);
        for (var c = 0, b2 = 0;b2 < u2.length; b2++)
          a4 = (s5.words[b2] | 0) - (u2.words[b2] | 0) + c, c = a4 >> 26, this.words[b2] = a4 & 67108863;
        for (;c !== 0 && b2 < s5.length; b2++)
          a4 = (s5.words[b2] | 0) + c, c = a4 >> 26, this.words[b2] = a4 & 67108863;
        if (c === 0 && b2 < s5.length && s5 !== this)
          for (;b2 < s5.length; b2++)
            this.words[b2] = s5.words[b2];
        return this.length = Math.max(this.length, b2), s5 !== this && (this.negative = 1), this.strip();
      }, f.prototype.sub = function(i3) {
        return this.clone().isub(i3);
      };
      function q2(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative;
        var h3 = v.length + i3.length | 0;
        a4.length = h3, h3 = h3 - 1 | 0;
        var s5 = v.words[0] | 0, u2 = i3.words[0] | 0, c = s5 * u2, b2 = c & 67108863, l = c / 67108864 | 0;
        a4.words[0] = b2;
        for (var n2 = 1;n2 < h3; n2++) {
          for (var d2 = l >>> 26, w = l & 67108863, g2 = Math.min(n2, i3.length - 1), _ = Math.max(0, n2 - v.length + 1);_ <= g2; _++) {
            var A = n2 - _ | 0;
            s5 = v.words[A] | 0, u2 = i3.words[_] | 0, c = s5 * u2 + w, d2 += c / 67108864 | 0, w = c & 67108863;
          }
          a4.words[n2] = w | 0, l = d2 | 0;
        }
        return l !== 0 ? a4.words[n2] = l | 0 : a4.length--, a4.strip();
      }
      var L = function(i3, a4, h3) {
        var s5 = i3.words, u2 = a4.words, c = h3.words, b2 = 0, l, n2, d2, w = s5[0] | 0, g2 = w & 8191, _ = w >>> 13, A = s5[1] | 0, R = A & 8191, I = A >>> 13, Me = s5[2] | 0, k2 = Me & 8191, D = Me >>> 13, nt = s5[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s5[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s5[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s5[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s5[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s5[8] | 0, V = yt & 8191, $2 = yt >>> 13, wt = s5[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u2[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u2[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u2[2] | 0, te = xt & 8191, re = xt >>> 13, St = u2[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u2[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u2[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u2[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u2[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u2[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u2[9] | 0, ve = It & 8191, be = It >>> 13;
        h3.negative = i3.negative ^ a4.negative, h3.length = 19, l = Math.imul(g2, X), n2 = Math.imul(g2, J), n2 = n2 + Math.imul(_, X) | 0, d2 = Math.imul(_, J);
        var ft = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n2 = Math.imul(R, J), n2 = n2 + Math.imul(I, X) | 0, d2 = Math.imul(I, J), l = l + Math.imul(g2, Q) | 0, n2 = n2 + Math.imul(g2, ee) | 0, n2 = n2 + Math.imul(_, Q) | 0, d2 = d2 + Math.imul(_, ee) | 0;
        var Be = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k2, X), n2 = Math.imul(k2, J), n2 = n2 + Math.imul(D, X) | 0, d2 = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n2 = n2 + Math.imul(R, ee) | 0, n2 = n2 + Math.imul(I, Q) | 0, d2 = d2 + Math.imul(I, ee) | 0, l = l + Math.imul(g2, te) | 0, n2 = n2 + Math.imul(g2, re) | 0, n2 = n2 + Math.imul(_, te) | 0, d2 = d2 + Math.imul(_, re) | 0;
        var qe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n2 = Math.imul(C, J), n2 = n2 + Math.imul(O, X) | 0, d2 = Math.imul(O, J), l = l + Math.imul(k2, Q) | 0, n2 = n2 + Math.imul(k2, ee) | 0, n2 = n2 + Math.imul(D, Q) | 0, d2 = d2 + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n2 = n2 + Math.imul(R, re) | 0, n2 = n2 + Math.imul(I, te) | 0, d2 = d2 + Math.imul(I, re) | 0, l = l + Math.imul(g2, ie) | 0, n2 = n2 + Math.imul(g2, ne) | 0, n2 = n2 + Math.imul(_, ie) | 0, d2 = d2 + Math.imul(_, ne) | 0;
        var ze = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n2 = Math.imul(F, J), n2 = n2 + Math.imul(U, X) | 0, d2 = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n2 = n2 + Math.imul(C, ee) | 0, n2 = n2 + Math.imul(O, Q) | 0, d2 = d2 + Math.imul(O, ee) | 0, l = l + Math.imul(k2, te) | 0, n2 = n2 + Math.imul(k2, re) | 0, n2 = n2 + Math.imul(D, te) | 0, d2 = d2 + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n2 = n2 + Math.imul(R, ne) | 0, n2 = n2 + Math.imul(I, ie) | 0, d2 = d2 + Math.imul(I, ne) | 0, l = l + Math.imul(g2, fe) | 0, n2 = n2 + Math.imul(g2, ae) | 0, n2 = n2 + Math.imul(_, fe) | 0, d2 = d2 + Math.imul(_, ae) | 0;
        var He = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n2 = Math.imul(z, J), n2 = n2 + Math.imul(H, X) | 0, d2 = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n2 = n2 + Math.imul(F, ee) | 0, n2 = n2 + Math.imul(U, Q) | 0, d2 = d2 + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n2 = n2 + Math.imul(C, re) | 0, n2 = n2 + Math.imul(O, te) | 0, d2 = d2 + Math.imul(O, re) | 0, l = l + Math.imul(k2, ie) | 0, n2 = n2 + Math.imul(k2, ne) | 0, n2 = n2 + Math.imul(D, ie) | 0, d2 = d2 + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n2 = n2 + Math.imul(R, ae) | 0, n2 = n2 + Math.imul(I, fe) | 0, d2 = d2 + Math.imul(I, ae) | 0, l = l + Math.imul(g2, oe) | 0, n2 = n2 + Math.imul(g2, se) | 0, n2 = n2 + Math.imul(_, oe) | 0, d2 = d2 + Math.imul(_, se) | 0;
        var We = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n2 = Math.imul(W, J), n2 = n2 + Math.imul(K, X) | 0, d2 = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n2 = n2 + Math.imul(z, ee) | 0, n2 = n2 + Math.imul(H, Q) | 0, d2 = d2 + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n2 = n2 + Math.imul(F, re) | 0, n2 = n2 + Math.imul(U, te) | 0, d2 = d2 + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n2 = n2 + Math.imul(C, ne) | 0, n2 = n2 + Math.imul(O, ie) | 0, d2 = d2 + Math.imul(O, ne) | 0, l = l + Math.imul(k2, fe) | 0, n2 = n2 + Math.imul(k2, ae) | 0, n2 = n2 + Math.imul(D, fe) | 0, d2 = d2 + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n2 = n2 + Math.imul(R, se) | 0, n2 = n2 + Math.imul(I, oe) | 0, d2 = d2 + Math.imul(I, se) | 0, l = l + Math.imul(g2, he) | 0, n2 = n2 + Math.imul(g2, ue) | 0, n2 = n2 + Math.imul(_, he) | 0, d2 = d2 + Math.imul(_, ue) | 0;
        var Ke = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n2 = Math.imul(j, J), n2 = n2 + Math.imul(Z, X) | 0, d2 = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n2 = n2 + Math.imul(W, ee) | 0, n2 = n2 + Math.imul(K, Q) | 0, d2 = d2 + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n2 = n2 + Math.imul(z, re) | 0, n2 = n2 + Math.imul(H, te) | 0, d2 = d2 + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n2 = n2 + Math.imul(F, ne) | 0, n2 = n2 + Math.imul(U, ie) | 0, d2 = d2 + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n2 = n2 + Math.imul(C, ae) | 0, n2 = n2 + Math.imul(O, fe) | 0, d2 = d2 + Math.imul(O, ae) | 0, l = l + Math.imul(k2, oe) | 0, n2 = n2 + Math.imul(k2, se) | 0, n2 = n2 + Math.imul(D, oe) | 0, d2 = d2 + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n2 = n2 + Math.imul(R, ue) | 0, n2 = n2 + Math.imul(I, he) | 0, d2 = d2 + Math.imul(I, ue) | 0, l = l + Math.imul(g2, le) | 0, n2 = n2 + Math.imul(g2, de) | 0, n2 = n2 + Math.imul(_, le) | 0, d2 = d2 + Math.imul(_, de) | 0;
        var je = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n2 = Math.imul(V, J), n2 = n2 + Math.imul($2, X) | 0, d2 = Math.imul($2, J), l = l + Math.imul(j, Q) | 0, n2 = n2 + Math.imul(j, ee) | 0, n2 = n2 + Math.imul(Z, Q) | 0, d2 = d2 + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n2 = n2 + Math.imul(W, re) | 0, n2 = n2 + Math.imul(K, te) | 0, d2 = d2 + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n2 = n2 + Math.imul(z, ne) | 0, n2 = n2 + Math.imul(H, ie) | 0, d2 = d2 + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n2 = n2 + Math.imul(F, ae) | 0, n2 = n2 + Math.imul(U, fe) | 0, d2 = d2 + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n2 = n2 + Math.imul(C, se) | 0, n2 = n2 + Math.imul(O, oe) | 0, d2 = d2 + Math.imul(O, se) | 0, l = l + Math.imul(k2, he) | 0, n2 = n2 + Math.imul(k2, ue) | 0, n2 = n2 + Math.imul(D, he) | 0, d2 = d2 + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n2 = n2 + Math.imul(R, de) | 0, n2 = n2 + Math.imul(I, le) | 0, d2 = d2 + Math.imul(I, de) | 0, l = l + Math.imul(g2, ce) | 0, n2 = n2 + Math.imul(g2, pe) | 0, n2 = n2 + Math.imul(_, ce) | 0, d2 = d2 + Math.imul(_, pe) | 0;
        var Ze = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n2 = Math.imul(G, J), n2 = n2 + Math.imul(Y, X) | 0, d2 = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n2 = n2 + Math.imul(V, ee) | 0, n2 = n2 + Math.imul($2, Q) | 0, d2 = d2 + Math.imul($2, ee) | 0, l = l + Math.imul(j, te) | 0, n2 = n2 + Math.imul(j, re) | 0, n2 = n2 + Math.imul(Z, te) | 0, d2 = d2 + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n2 = n2 + Math.imul(W, ne) | 0, n2 = n2 + Math.imul(K, ie) | 0, d2 = d2 + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n2 = n2 + Math.imul(z, ae) | 0, n2 = n2 + Math.imul(H, fe) | 0, d2 = d2 + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n2 = n2 + Math.imul(F, se) | 0, n2 = n2 + Math.imul(U, oe) | 0, d2 = d2 + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n2 = n2 + Math.imul(C, ue) | 0, n2 = n2 + Math.imul(O, he) | 0, d2 = d2 + Math.imul(O, ue) | 0, l = l + Math.imul(k2, le) | 0, n2 = n2 + Math.imul(k2, de) | 0, n2 = n2 + Math.imul(D, le) | 0, d2 = d2 + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n2 = n2 + Math.imul(R, pe) | 0, n2 = n2 + Math.imul(I, ce) | 0, d2 = d2 + Math.imul(I, pe) | 0, l = l + Math.imul(g2, ve) | 0, n2 = n2 + Math.imul(g2, be) | 0, n2 = n2 + Math.imul(_, ve) | 0, d2 = d2 + Math.imul(_, be) | 0;
        var Ve = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n2 = Math.imul(G, ee), n2 = n2 + Math.imul(Y, Q) | 0, d2 = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n2 = n2 + Math.imul(V, re) | 0, n2 = n2 + Math.imul($2, te) | 0, d2 = d2 + Math.imul($2, re) | 0, l = l + Math.imul(j, ie) | 0, n2 = n2 + Math.imul(j, ne) | 0, n2 = n2 + Math.imul(Z, ie) | 0, d2 = d2 + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n2 = n2 + Math.imul(W, ae) | 0, n2 = n2 + Math.imul(K, fe) | 0, d2 = d2 + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n2 = n2 + Math.imul(z, se) | 0, n2 = n2 + Math.imul(H, oe) | 0, d2 = d2 + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n2 = n2 + Math.imul(F, ue) | 0, n2 = n2 + Math.imul(U, he) | 0, d2 = d2 + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n2 = n2 + Math.imul(C, de) | 0, n2 = n2 + Math.imul(O, le) | 0, d2 = d2 + Math.imul(O, de) | 0, l = l + Math.imul(k2, ce) | 0, n2 = n2 + Math.imul(k2, pe) | 0, n2 = n2 + Math.imul(D, ce) | 0, d2 = d2 + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n2 = n2 + Math.imul(R, be) | 0, n2 = n2 + Math.imul(I, ve) | 0, d2 = d2 + Math.imul(I, be) | 0;
        var $e = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n2 = Math.imul(G, re), n2 = n2 + Math.imul(Y, te) | 0, d2 = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n2 = n2 + Math.imul(V, ne) | 0, n2 = n2 + Math.imul($2, ie) | 0, d2 = d2 + Math.imul($2, ne) | 0, l = l + Math.imul(j, fe) | 0, n2 = n2 + Math.imul(j, ae) | 0, n2 = n2 + Math.imul(Z, fe) | 0, d2 = d2 + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n2 = n2 + Math.imul(W, se) | 0, n2 = n2 + Math.imul(K, oe) | 0, d2 = d2 + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n2 = n2 + Math.imul(z, ue) | 0, n2 = n2 + Math.imul(H, he) | 0, d2 = d2 + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n2 = n2 + Math.imul(F, de) | 0, n2 = n2 + Math.imul(U, le) | 0, d2 = d2 + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n2 = n2 + Math.imul(C, pe) | 0, n2 = n2 + Math.imul(O, ce) | 0, d2 = d2 + Math.imul(O, pe) | 0, l = l + Math.imul(k2, ve) | 0, n2 = n2 + Math.imul(k2, be) | 0, n2 = n2 + Math.imul(D, ve) | 0, d2 = d2 + Math.imul(D, be) | 0;
        var Ge = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n2 = Math.imul(G, ne), n2 = n2 + Math.imul(Y, ie) | 0, d2 = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n2 = n2 + Math.imul(V, ae) | 0, n2 = n2 + Math.imul($2, fe) | 0, d2 = d2 + Math.imul($2, ae) | 0, l = l + Math.imul(j, oe) | 0, n2 = n2 + Math.imul(j, se) | 0, n2 = n2 + Math.imul(Z, oe) | 0, d2 = d2 + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n2 = n2 + Math.imul(W, ue) | 0, n2 = n2 + Math.imul(K, he) | 0, d2 = d2 + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n2 = n2 + Math.imul(z, de) | 0, n2 = n2 + Math.imul(H, le) | 0, d2 = d2 + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n2 = n2 + Math.imul(F, pe) | 0, n2 = n2 + Math.imul(U, ce) | 0, d2 = d2 + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n2 = n2 + Math.imul(C, be) | 0, n2 = n2 + Math.imul(O, ve) | 0, d2 = d2 + Math.imul(O, be) | 0;
        var Ye = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n2 = Math.imul(G, ae), n2 = n2 + Math.imul(Y, fe) | 0, d2 = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n2 = n2 + Math.imul(V, se) | 0, n2 = n2 + Math.imul($2, oe) | 0, d2 = d2 + Math.imul($2, se) | 0, l = l + Math.imul(j, he) | 0, n2 = n2 + Math.imul(j, ue) | 0, n2 = n2 + Math.imul(Z, he) | 0, d2 = d2 + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n2 = n2 + Math.imul(W, de) | 0, n2 = n2 + Math.imul(K, le) | 0, d2 = d2 + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n2 = n2 + Math.imul(z, pe) | 0, n2 = n2 + Math.imul(H, ce) | 0, d2 = d2 + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n2 = n2 + Math.imul(F, be) | 0, n2 = n2 + Math.imul(U, ve) | 0, d2 = d2 + Math.imul(U, be) | 0;
        var Xe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n2 = Math.imul(G, se), n2 = n2 + Math.imul(Y, oe) | 0, d2 = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n2 = n2 + Math.imul(V, ue) | 0, n2 = n2 + Math.imul($2, he) | 0, d2 = d2 + Math.imul($2, ue) | 0, l = l + Math.imul(j, le) | 0, n2 = n2 + Math.imul(j, de) | 0, n2 = n2 + Math.imul(Z, le) | 0, d2 = d2 + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n2 = n2 + Math.imul(W, pe) | 0, n2 = n2 + Math.imul(K, ce) | 0, d2 = d2 + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n2 = n2 + Math.imul(z, be) | 0, n2 = n2 + Math.imul(H, ve) | 0, d2 = d2 + Math.imul(H, be) | 0;
        var Je = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n2 = Math.imul(G, ue), n2 = n2 + Math.imul(Y, he) | 0, d2 = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n2 = n2 + Math.imul(V, de) | 0, n2 = n2 + Math.imul($2, le) | 0, d2 = d2 + Math.imul($2, de) | 0, l = l + Math.imul(j, ce) | 0, n2 = n2 + Math.imul(j, pe) | 0, n2 = n2 + Math.imul(Z, ce) | 0, d2 = d2 + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n2 = n2 + Math.imul(W, be) | 0, n2 = n2 + Math.imul(K, ve) | 0, d2 = d2 + Math.imul(K, be) | 0;
        var Qe = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n2 = Math.imul(G, de), n2 = n2 + Math.imul(Y, le) | 0, d2 = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n2 = n2 + Math.imul(V, pe) | 0, n2 = n2 + Math.imul($2, ce) | 0, d2 = d2 + Math.imul($2, pe) | 0, l = l + Math.imul(j, ve) | 0, n2 = n2 + Math.imul(j, be) | 0, n2 = n2 + Math.imul(Z, ve) | 0, d2 = d2 + Math.imul(Z, be) | 0;
        var et = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n2 = Math.imul(G, pe), n2 = n2 + Math.imul(Y, ce) | 0, d2 = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n2 = n2 + Math.imul(V, be) | 0, n2 = n2 + Math.imul($2, ve) | 0, d2 = d2 + Math.imul($2, be) | 0;
        var tt = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        b2 = (d2 + (n2 >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n2 = Math.imul(G, be), n2 = n2 + Math.imul(Y, ve) | 0, d2 = Math.imul(Y, be);
        var rt = (b2 + l | 0) + ((n2 & 8191) << 13) | 0;
        return b2 = (d2 + (n2 >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b2 !== 0 && (c[19] = b2, h3.length++), h3;
      };
      Math.imul || (L = q2);
      function ge(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative, a4.length = v.length + i3.length;
        for (var h3 = 0, s5 = 0, u2 = 0;u2 < a4.length - 1; u2++) {
          var c = s5;
          s5 = 0;
          for (var b2 = h3 & 67108863, l = Math.min(u2, i3.length - 1), n2 = Math.max(0, u2 - v.length + 1);n2 <= l; n2++) {
            var d2 = u2 - n2, w = v.words[d2] | 0, g2 = i3.words[n2] | 0, _ = w * g2, A = _ & 67108863;
            c = c + (_ / 67108864 | 0) | 0, A = A + b2 | 0, b2 = A & 67108863, c = c + (A >>> 26) | 0, s5 += c >>> 26, c &= 67108863;
          }
          a4.words[u2] = b2, h3 = c, c = s5;
        }
        return h3 !== 0 ? a4.words[u2] = h3 : a4.length--, a4.strip();
      }
      function _e(v, i3, a4) {
        var h3 = new N;
        return h3.mulp(v, i3, a4);
      }
      f.prototype.mulTo = function(i3, a4) {
        var h3, s5 = this.length + i3.length;
        return this.length === 10 && i3.length === 10 ? h3 = L(this, i3, a4) : s5 < 63 ? h3 = q2(this, i3, a4) : s5 < 1024 ? h3 = ge(this, i3, a4) : h3 = _e(this, i3, a4), h3;
      };
      function N(v, i3) {
        this.x = v, this.y = i3;
      }
      N.prototype.makeRBT = function(i3) {
        for (var a4 = new Array(i3), h3 = f.prototype._countBits(i3) - 1, s5 = 0;s5 < i3; s5++)
          a4[s5] = this.revBin(s5, h3, i3);
        return a4;
      }, N.prototype.revBin = function(i3, a4, h3) {
        if (i3 === 0 || i3 === h3 - 1)
          return i3;
        for (var s5 = 0, u2 = 0;u2 < a4; u2++)
          s5 |= (i3 & 1) << a4 - u2 - 1, i3 >>= 1;
        return s5;
      }, N.prototype.permute = function(i3, a4, h3, s5, u2, c) {
        for (var b2 = 0;b2 < c; b2++)
          s5[b2] = a4[i3[b2]], u2[b2] = h3[i3[b2]];
      }, N.prototype.transform = function(i3, a4, h3, s5, u2, c) {
        this.permute(c, i3, a4, h3, s5, u2);
        for (var b2 = 1;b2 < u2; b2 <<= 1)
          for (var l = b2 << 1, n2 = Math.cos(2 * Math.PI / l), d2 = Math.sin(2 * Math.PI / l), w = 0;w < u2; w += l)
            for (var g2 = n2, _ = d2, A = 0;A < b2; A++) {
              var R = h3[w + A], I = s5[w + A], Me = h3[w + A + b2], k2 = s5[w + A + b2], D = g2 * Me - _ * k2;
              k2 = g2 * k2 + _ * Me, Me = D, h3[w + A] = R + Me, s5[w + A] = I + k2, h3[w + A + b2] = R - Me, s5[w + A + b2] = I - k2, A !== l && (D = n2 * g2 - d2 * _, _ = n2 * _ + d2 * g2, g2 = D);
            }
      }, N.prototype.guessLen13b = function(i3, a4) {
        var h3 = Math.max(a4, i3) | 1, s5 = h3 & 1, u2 = 0;
        for (h3 = h3 / 2 | 0;h3; h3 = h3 >>> 1)
          u2++;
        return 1 << u2 + 1 + s5;
      }, N.prototype.conjugate = function(i3, a4, h3) {
        if (!(h3 <= 1))
          for (var s5 = 0;s5 < h3 / 2; s5++) {
            var u2 = i3[s5];
            i3[s5] = i3[h3 - s5 - 1], i3[h3 - s5 - 1] = u2, u2 = a4[s5], a4[s5] = -a4[h3 - s5 - 1], a4[h3 - s5 - 1] = -u2;
          }
      }, N.prototype.normalize13b = function(i3, a4) {
        for (var h3 = 0, s5 = 0;s5 < a4 / 2; s5++) {
          var u2 = Math.round(i3[2 * s5 + 1] / a4) * 8192 + Math.round(i3[2 * s5] / a4) + h3;
          i3[s5] = u2 & 67108863, u2 < 67108864 ? h3 = 0 : h3 = u2 / 67108864 | 0;
        }
        return i3;
      }, N.prototype.convert13b = function(i3, a4, h3, s5) {
        for (var u2 = 0, c = 0;c < a4; c++)
          u2 = u2 + (i3[c] | 0), h3[2 * c] = u2 & 8191, u2 = u2 >>> 13, h3[2 * c + 1] = u2 & 8191, u2 = u2 >>> 13;
        for (c = 2 * a4;c < s5; ++c)
          h3[c] = 0;
        r6(u2 === 0), r6((u2 & -8192) === 0);
      }, N.prototype.stub = function(i3) {
        for (var a4 = new Array(i3), h3 = 0;h3 < i3; h3++)
          a4[h3] = 0;
        return a4;
      }, N.prototype.mulp = function(i3, a4, h3) {
        var s5 = 2 * this.guessLen13b(i3.length, a4.length), u2 = this.makeRBT(s5), c = this.stub(s5), b2 = new Array(s5), l = new Array(s5), n2 = new Array(s5), d2 = new Array(s5), w = new Array(s5), g2 = new Array(s5), _ = h3.words;
        _.length = s5, this.convert13b(i3.words, i3.length, b2, s5), this.convert13b(a4.words, a4.length, d2, s5), this.transform(b2, c, l, n2, s5, u2), this.transform(d2, c, w, g2, s5, u2);
        for (var A = 0;A < s5; A++) {
          var R = l[A] * w[A] - n2[A] * g2[A];
          n2[A] = l[A] * g2[A] + n2[A] * w[A], l[A] = R;
        }
        return this.conjugate(l, n2, s5), this.transform(l, n2, _, c, s5, u2), this.conjugate(_, c, s5), this.normalize13b(_, s5), h3.negative = i3.negative ^ a4.negative, h3.length = i3.length + a4.length, h3.strip();
      }, f.prototype.mul = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), this.mulTo(i3, a4);
      }, f.prototype.mulf = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), _e(this, i3, a4);
      }, f.prototype.imul = function(i3) {
        return this.clone().mulTo(i3, this);
      }, f.prototype.imuln = function(i3) {
        r6(typeof i3 == "number"), r6(i3 < 67108864);
        for (var a4 = 0, h3 = 0;h3 < this.length; h3++) {
          var s5 = (this.words[h3] | 0) * i3, u2 = (s5 & 67108863) + (a4 & 67108863);
          a4 >>= 26, a4 += s5 / 67108864 | 0, a4 += u2 >>> 26, this.words[h3] = u2 & 67108863;
        }
        return a4 !== 0 && (this.words[h3] = a4, this.length++), this;
      }, f.prototype.muln = function(i3) {
        return this.clone().imuln(i3);
      }, f.prototype.sqr = function() {
        return this.mul(this);
      }, f.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f.prototype.pow = function(i3) {
        var a4 = B(i3);
        if (a4.length === 0)
          return new f(1);
        for (var h3 = this, s5 = 0;s5 < a4.length && a4[s5] === 0; s5++, h3 = h3.sqr())
          ;
        if (++s5 < a4.length)
          for (var u2 = h3.sqr();s5 < a4.length; s5++, u2 = u2.sqr())
            a4[s5] !== 0 && (h3 = h3.mul(u2));
        return h3;
      }, f.prototype.iushln = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h3 = (i3 - a4) / 26, s5 = 67108863 >>> 26 - a4 << 26 - a4, u2;
        if (a4 !== 0) {
          var c = 0;
          for (u2 = 0;u2 < this.length; u2++) {
            var b2 = this.words[u2] & s5, l = (this.words[u2] | 0) - b2 << a4;
            this.words[u2] = l | c, c = b2 >>> 26 - a4;
          }
          c && (this.words[u2] = c, this.length++);
        }
        if (h3 !== 0) {
          for (u2 = this.length - 1;u2 >= 0; u2--)
            this.words[u2 + h3] = this.words[u2];
          for (u2 = 0;u2 < h3; u2++)
            this.words[u2] = 0;
          this.length += h3;
        }
        return this.strip();
      }, f.prototype.ishln = function(i3) {
        return r6(this.negative === 0), this.iushln(i3);
      }, f.prototype.iushrn = function(i3, a4, h3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var s5;
        a4 ? s5 = (a4 - a4 % 26) / 26 : s5 = 0;
        var u2 = i3 % 26, c = Math.min((i3 - u2) / 26, this.length), b2 = 67108863 ^ 67108863 >>> u2 << u2, l = h3;
        if (s5 -= c, s5 = Math.max(0, s5), l) {
          for (var n2 = 0;n2 < c; n2++)
            l.words[n2] = this.words[n2];
          l.length = c;
        }
        if (c !== 0)
          if (this.length > c)
            for (this.length -= c, n2 = 0;n2 < this.length; n2++)
              this.words[n2] = this.words[n2 + c];
          else
            this.words[0] = 0, this.length = 1;
        var d2 = 0;
        for (n2 = this.length - 1;n2 >= 0 && (d2 !== 0 || n2 >= s5); n2--) {
          var w = this.words[n2] | 0;
          this.words[n2] = d2 << 26 - u2 | w >>> u2, d2 = w & b2;
        }
        return l && d2 !== 0 && (l.words[l.length++] = d2), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f.prototype.ishrn = function(i3, a4, h3) {
        return r6(this.negative === 0), this.iushrn(i3, a4, h3);
      }, f.prototype.shln = function(i3) {
        return this.clone().ishln(i3);
      }, f.prototype.ushln = function(i3) {
        return this.clone().iushln(i3);
      }, f.prototype.shrn = function(i3) {
        return this.clone().ishrn(i3);
      }, f.prototype.ushrn = function(i3) {
        return this.clone().iushrn(i3);
      }, f.prototype.testn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h3 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h3)
          return false;
        var u2 = this.words[h3];
        return !!(u2 & s5);
      }, f.prototype.imaskn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h3 = (i3 - a4) / 26;
        if (r6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h3)
          return this;
        if (a4 !== 0 && h3++, this.length = Math.min(h3, this.length), a4 !== 0) {
          var s5 = 67108863 ^ 67108863 >>> a4 << a4;
          this.words[this.length - 1] &= s5;
        }
        return this.strip();
      }, f.prototype.maskn = function(i3) {
        return this.clone().imaskn(i3);
      }, f.prototype.iaddn = function(i3) {
        return r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0 ? this.isubn(-i3) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i3 ? (this.words[0] = i3 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i3), this.negative = 1, this) : this._iaddn(i3);
      }, f.prototype._iaddn = function(i3) {
        this.words[0] += i3;
        for (var a4 = 0;a4 < this.length && this.words[a4] >= 67108864; a4++)
          this.words[a4] -= 67108864, a4 === this.length - 1 ? this.words[a4 + 1] = 1 : this.words[a4 + 1]++;
        return this.length = Math.max(this.length, a4 + 1), this;
      }, f.prototype.isubn = function(i3) {
        if (r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0)
          return this.iaddn(-i3);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i3), this.negative = 1, this;
        if (this.words[0] -= i3, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a4 = 0;a4 < this.length && this.words[a4] < 0; a4++)
            this.words[a4] += 67108864, this.words[a4 + 1] -= 1;
        return this.strip();
      }, f.prototype.addn = function(i3) {
        return this.clone().iaddn(i3);
      }, f.prototype.subn = function(i3) {
        return this.clone().isubn(i3);
      }, f.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f.prototype.abs = function() {
        return this.clone().iabs();
      }, f.prototype._ishlnsubmul = function(i3, a4, h3) {
        var s5 = i3.length + h3, u2;
        this._expand(s5);
        var c, b2 = 0;
        for (u2 = 0;u2 < i3.length; u2++) {
          c = (this.words[u2 + h3] | 0) + b2;
          var l = (i3.words[u2] | 0) * a4;
          c -= l & 67108863, b2 = (c >> 26) - (l / 67108864 | 0), this.words[u2 + h3] = c & 67108863;
        }
        for (;u2 < this.length - h3; u2++)
          c = (this.words[u2 + h3] | 0) + b2, b2 = c >> 26, this.words[u2 + h3] = c & 67108863;
        if (b2 === 0)
          return this.strip();
        for (r6(b2 === -1), b2 = 0, u2 = 0;u2 < this.length; u2++)
          c = -(this.words[u2] | 0) + b2, b2 = c >> 26, this.words[u2] = c & 67108863;
        return this.negative = 1, this.strip();
      }, f.prototype._wordDiv = function(i3, a4) {
        var h3 = this.length - i3.length, s5 = this.clone(), u2 = i3, c = u2.words[u2.length - 1] | 0, b2 = this._countBits(c);
        h3 = 26 - b2, h3 !== 0 && (u2 = u2.ushln(h3), s5.iushln(h3), c = u2.words[u2.length - 1] | 0);
        var l = s5.length - u2.length, n2;
        if (a4 !== "mod") {
          n2 = new f(null), n2.length = l + 1, n2.words = new Array(n2.length);
          for (var d2 = 0;d2 < n2.length; d2++)
            n2.words[d2] = 0;
        }
        var w = s5.clone()._ishlnsubmul(u2, 1, l);
        w.negative === 0 && (s5 = w, n2 && (n2.words[l] = 1));
        for (var g2 = l - 1;g2 >= 0; g2--) {
          var _ = (s5.words[u2.length + g2] | 0) * 67108864 + (s5.words[u2.length + g2 - 1] | 0);
          for (_ = Math.min(_ / c | 0, 67108863), s5._ishlnsubmul(u2, _, g2);s5.negative !== 0; )
            _--, s5.negative = 0, s5._ishlnsubmul(u2, 1, g2), s5.isZero() || (s5.negative ^= 1);
          n2 && (n2.words[g2] = _);
        }
        return n2 && n2.strip(), s5.strip(), a4 !== "div" && h3 !== 0 && s5.iushrn(h3), { div: n2 || null, mod: s5 };
      }, f.prototype.divmod = function(i3, a4, h3) {
        if (r6(!i3.isZero()), this.isZero())
          return { div: new f(0), mod: new f(0) };
        var s5, u2, c;
        return this.negative !== 0 && i3.negative === 0 ? (c = this.neg().divmod(i3, a4), a4 !== "mod" && (s5 = c.div.neg()), a4 !== "div" && (u2 = c.mod.neg(), h3 && u2.negative !== 0 && u2.iadd(i3)), { div: s5, mod: u2 }) : this.negative === 0 && i3.negative !== 0 ? (c = this.divmod(i3.neg(), a4), a4 !== "mod" && (s5 = c.div.neg()), { div: s5, mod: c.mod }) : (this.negative & i3.negative) !== 0 ? (c = this.neg().divmod(i3.neg(), a4), a4 !== "div" && (u2 = c.mod.neg(), h3 && u2.negative !== 0 && u2.isub(i3)), { div: c.div, mod: u2 }) : i3.length > this.length || this.cmp(i3) < 0 ? { div: new f(0), mod: this } : i3.length === 1 ? a4 === "div" ? { div: this.divn(i3.words[0]), mod: null } : a4 === "mod" ? { div: null, mod: new f(this.modn(i3.words[0])) } : { div: this.divn(i3.words[0]), mod: new f(this.modn(i3.words[0])) } : this._wordDiv(i3, a4);
      }, f.prototype.div = function(i3) {
        return this.divmod(i3, "div", false).div;
      }, f.prototype.mod = function(i3) {
        return this.divmod(i3, "mod", false).mod;
      }, f.prototype.umod = function(i3) {
        return this.divmod(i3, "mod", true).mod;
      }, f.prototype.divRound = function(i3) {
        var a4 = this.divmod(i3);
        if (a4.mod.isZero())
          return a4.div;
        var h3 = a4.div.negative !== 0 ? a4.mod.isub(i3) : a4.mod, s5 = i3.ushrn(1), u2 = i3.andln(1), c = h3.cmp(s5);
        return c < 0 || u2 === 1 && c === 0 ? a4.div : a4.div.negative !== 0 ? a4.div.isubn(1) : a4.div.iaddn(1);
      }, f.prototype.modn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = (1 << 26) % i3, h3 = 0, s5 = this.length - 1;s5 >= 0; s5--)
          h3 = (a4 * h3 + (this.words[s5] | 0)) % i3;
        return h3;
      }, f.prototype.idivn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s5 = (this.words[h3] | 0) + a4 * 67108864;
          this.words[h3] = s5 / i3 | 0, a4 = s5 % i3;
        }
        return this.strip();
      }, f.prototype.divn = function(i3) {
        return this.clone().idivn(i3);
      }, f.prototype.egcd = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h3 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = new f(0), b2 = new f(1), l = 0;a4.isEven() && h3.isEven(); )
          a4.iushrn(1), h3.iushrn(1), ++l;
        for (var n2 = h3.clone(), d2 = a4.clone();!a4.isZero(); ) {
          for (var w = 0, g2 = 1;(a4.words[0] & g2) === 0 && w < 26; ++w, g2 <<= 1)
            ;
          if (w > 0)
            for (a4.iushrn(w);w-- > 0; )
              (s5.isOdd() || u2.isOdd()) && (s5.iadd(n2), u2.isub(d2)), s5.iushrn(1), u2.iushrn(1);
          for (var _ = 0, A = 1;(h3.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
            ;
          if (_ > 0)
            for (h3.iushrn(_);_-- > 0; )
              (c.isOdd() || b2.isOdd()) && (c.iadd(n2), b2.isub(d2)), c.iushrn(1), b2.iushrn(1);
          a4.cmp(h3) >= 0 ? (a4.isub(h3), s5.isub(c), u2.isub(b2)) : (h3.isub(a4), c.isub(s5), b2.isub(u2));
        }
        return { a: c, b: b2, gcd: h3.iushln(l) };
      }, f.prototype._invmp = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h3 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = h3.clone();a4.cmpn(1) > 0 && h3.cmpn(1) > 0; ) {
          for (var b2 = 0, l = 1;(a4.words[0] & l) === 0 && b2 < 26; ++b2, l <<= 1)
            ;
          if (b2 > 0)
            for (a4.iushrn(b2);b2-- > 0; )
              s5.isOdd() && s5.iadd(c), s5.iushrn(1);
          for (var n2 = 0, d2 = 1;(h3.words[0] & d2) === 0 && n2 < 26; ++n2, d2 <<= 1)
            ;
          if (n2 > 0)
            for (h3.iushrn(n2);n2-- > 0; )
              u2.isOdd() && u2.iadd(c), u2.iushrn(1);
          a4.cmp(h3) >= 0 ? (a4.isub(h3), s5.isub(u2)) : (h3.isub(a4), u2.isub(s5));
        }
        var w;
        return a4.cmpn(1) === 0 ? w = s5 : w = u2, w.cmpn(0) < 0 && w.iadd(i3), w;
      }, f.prototype.gcd = function(i3) {
        if (this.isZero())
          return i3.abs();
        if (i3.isZero())
          return this.abs();
        var a4 = this.clone(), h3 = i3.clone();
        a4.negative = 0, h3.negative = 0;
        for (var s5 = 0;a4.isEven() && h3.isEven(); s5++)
          a4.iushrn(1), h3.iushrn(1);
        do {
          for (;a4.isEven(); )
            a4.iushrn(1);
          for (;h3.isEven(); )
            h3.iushrn(1);
          var u2 = a4.cmp(h3);
          if (u2 < 0) {
            var c = a4;
            a4 = h3, h3 = c;
          } else if (u2 === 0 || h3.cmpn(1) === 0)
            break;
          a4.isub(h3);
        } while (true);
        return h3.iushln(s5);
      }, f.prototype.invm = function(i3) {
        return this.egcd(i3).a.umod(i3);
      }, f.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f.prototype.andln = function(i3) {
        return this.words[0] & i3;
      }, f.prototype.bincn = function(i3) {
        r6(typeof i3 == "number");
        var a4 = i3 % 26, h3 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h3)
          return this._expand(h3 + 1), this.words[h3] |= s5, this;
        for (var u2 = s5, c = h3;u2 !== 0 && c < this.length; c++) {
          var b2 = this.words[c] | 0;
          b2 += u2, u2 = b2 >>> 26, b2 &= 67108863, this.words[c] = b2;
        }
        return u2 !== 0 && (this.words[c] = u2, this.length++), this;
      }, f.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f.prototype.cmpn = function(i3) {
        var a4 = i3 < 0;
        if (this.negative !== 0 && !a4)
          return -1;
        if (this.negative === 0 && a4)
          return 1;
        this.strip();
        var h3;
        if (this.length > 1)
          h3 = 1;
        else {
          a4 && (i3 = -i3), r6(i3 <= 67108863, "Number is too big");
          var s5 = this.words[0] | 0;
          h3 = s5 === i3 ? 0 : s5 < i3 ? -1 : 1;
        }
        return this.negative !== 0 ? -h3 | 0 : h3;
      }, f.prototype.cmp = function(i3) {
        if (this.negative !== 0 && i3.negative === 0)
          return -1;
        if (this.negative === 0 && i3.negative !== 0)
          return 1;
        var a4 = this.ucmp(i3);
        return this.negative !== 0 ? -a4 | 0 : a4;
      }, f.prototype.ucmp = function(i3) {
        if (this.length > i3.length)
          return 1;
        if (this.length < i3.length)
          return -1;
        for (var a4 = 0, h3 = this.length - 1;h3 >= 0; h3--) {
          var s5 = this.words[h3] | 0, u2 = i3.words[h3] | 0;
          if (s5 !== u2) {
            s5 < u2 ? a4 = -1 : s5 > u2 && (a4 = 1);
            break;
          }
        }
        return a4;
      }, f.prototype.gtn = function(i3) {
        return this.cmpn(i3) === 1;
      }, f.prototype.gt = function(i3) {
        return this.cmp(i3) === 1;
      }, f.prototype.gten = function(i3) {
        return this.cmpn(i3) >= 0;
      }, f.prototype.gte = function(i3) {
        return this.cmp(i3) >= 0;
      }, f.prototype.ltn = function(i3) {
        return this.cmpn(i3) === -1;
      }, f.prototype.lt = function(i3) {
        return this.cmp(i3) === -1;
      }, f.prototype.lten = function(i3) {
        return this.cmpn(i3) <= 0;
      }, f.prototype.lte = function(i3) {
        return this.cmp(i3) <= 0;
      }, f.prototype.eqn = function(i3) {
        return this.cmpn(i3) === 0;
      }, f.prototype.eq = function(i3) {
        return this.cmp(i3) === 0;
      }, f.red = function(i3) {
        return new P(i3);
      }, f.prototype.toRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), r6(this.negative === 0, "red works only with positives"), i3.convertTo(this)._forceRed(i3);
      }, f.prototype.fromRed = function() {
        return r6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f.prototype._forceRed = function(i3) {
        return this.red = i3, this;
      }, f.prototype.forceRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), this._forceRed(i3);
      }, f.prototype.redAdd = function(i3) {
        return r6(this.red, "redAdd works only with red numbers"), this.red.add(this, i3);
      }, f.prototype.redIAdd = function(i3) {
        return r6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i3);
      }, f.prototype.redSub = function(i3) {
        return r6(this.red, "redSub works only with red numbers"), this.red.sub(this, i3);
      }, f.prototype.redISub = function(i3) {
        return r6(this.red, "redISub works only with red numbers"), this.red.isub(this, i3);
      }, f.prototype.redShl = function(i3) {
        return r6(this.red, "redShl works only with red numbers"), this.red.shl(this, i3);
      }, f.prototype.redMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.mul(this, i3);
      }, f.prototype.redIMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.imul(this, i3);
      }, f.prototype.redSqr = function() {
        return r6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f.prototype.redISqr = function() {
        return r6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f.prototype.redSqrt = function() {
        return r6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f.prototype.redInvm = function() {
        return r6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f.prototype.redNeg = function() {
        return r6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f.prototype.redPow = function(i3) {
        return r6(this.red && !i3.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i3);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v, i3) {
        this.name = v, this.p = new f(i3, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i3 = new f(null);
        return i3.words = new Array(Math.ceil(this.n / 13)), i3;
      }, ye.prototype.ireduce = function(i3) {
        var a4 = i3, h3;
        do
          this.split(a4, this.tmp), a4 = this.imulK(a4), a4 = a4.iadd(this.tmp), h3 = a4.bitLength();
        while (h3 > this.n);
        var s5 = h3 < this.n ? -1 : a4.ucmp(this.p);
        return s5 === 0 ? (a4.words[0] = 0, a4.length = 1) : s5 > 0 ? a4.isub(this.p) : a4.strip !== undefined ? a4.strip() : a4._strip(), a4;
      }, ye.prototype.split = function(i3, a4) {
        i3.iushrn(this.n, 0, a4);
      }, ye.prototype.imulK = function(i3) {
        return i3.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o2(xe, ye), xe.prototype.split = function(i3, a4) {
        for (var h3 = 4194303, s5 = Math.min(i3.length, 9), u2 = 0;u2 < s5; u2++)
          a4.words[u2] = i3.words[u2];
        if (a4.length = s5, i3.length <= 9) {
          i3.words[0] = 0, i3.length = 1;
          return;
        }
        var c = i3.words[9];
        for (a4.words[a4.length++] = c & h3, u2 = 10;u2 < i3.length; u2++) {
          var b2 = i3.words[u2] | 0;
          i3.words[u2 - 10] = (b2 & h3) << 4 | c >>> 22, c = b2;
        }
        c >>>= 22, i3.words[u2 - 10] = c, c === 0 && i3.length > 10 ? i3.length -= 10 : i3.length -= 9;
      }, xe.prototype.imulK = function(i3) {
        i3.words[i3.length] = 0, i3.words[i3.length + 1] = 0, i3.length += 2;
        for (var a4 = 0, h3 = 0;h3 < i3.length; h3++) {
          var s5 = i3.words[h3] | 0;
          a4 += s5 * 977, i3.words[h3] = a4 & 67108863, a4 = s5 * 64 + (a4 / 67108864 | 0);
        }
        return i3.words[i3.length - 1] === 0 && (i3.length--, i3.words[i3.length - 1] === 0 && i3.length--), i3;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o2(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o2(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o2(Ae, ye), Ae.prototype.imulK = function(i3) {
        for (var a4 = 0, h3 = 0;h3 < i3.length; h3++) {
          var s5 = (i3.words[h3] | 0) * 19 + a4, u2 = s5 & 67108863;
          s5 >>>= 26, i3.words[h3] = u2, a4 = s5;
        }
        return a4 !== 0 && (i3.words[i3.length++] = a4), i3;
      }, f._prime = function(i3) {
        if (we[i3])
          return we[i3];
        var a4;
        if (i3 === "k256")
          a4 = new xe;
        else if (i3 === "p224")
          a4 = new Re;
        else if (i3 === "p192")
          a4 = new Ee;
        else if (i3 === "p25519")
          a4 = new Ae;
        else
          throw new Error("Unknown prime " + i3);
        return we[i3] = a4, a4;
      };
      function P(v) {
        if (typeof v == "string") {
          var i3 = f._prime(v);
          this.m = i3.p, this.prime = i3;
        } else
          r6(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
      }
      P.prototype._verify1 = function(i3) {
        r6(i3.negative === 0, "red works only with positives"), r6(i3.red, "red works only with red numbers");
      }, P.prototype._verify2 = function(i3, a4) {
        r6((i3.negative | a4.negative) === 0, "red works only with positives"), r6(i3.red && i3.red === a4.red, "red works only with red numbers");
      }, P.prototype.imod = function(i3) {
        return this.prime ? this.prime.ireduce(i3)._forceRed(this) : i3.umod(this.m)._forceRed(this);
      }, P.prototype.neg = function(i3) {
        return i3.isZero() ? i3.clone() : this.m.sub(i3)._forceRed(this);
      }, P.prototype.add = function(i3, a4) {
        this._verify2(i3, a4);
        var h3 = i3.add(a4);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3._forceRed(this);
      }, P.prototype.iadd = function(i3, a4) {
        this._verify2(i3, a4);
        var h3 = i3.iadd(a4);
        return h3.cmp(this.m) >= 0 && h3.isub(this.m), h3;
      }, P.prototype.sub = function(i3, a4) {
        this._verify2(i3, a4);
        var h3 = i3.sub(a4);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3._forceRed(this);
      }, P.prototype.isub = function(i3, a4) {
        this._verify2(i3, a4);
        var h3 = i3.isub(a4);
        return h3.cmpn(0) < 0 && h3.iadd(this.m), h3;
      }, P.prototype.shl = function(i3, a4) {
        return this._verify1(i3), this.imod(i3.ushln(a4));
      }, P.prototype.imul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.imul(a4));
      }, P.prototype.mul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.mul(a4));
      }, P.prototype.isqr = function(i3) {
        return this.imul(i3, i3.clone());
      }, P.prototype.sqr = function(i3) {
        return this.mul(i3, i3);
      }, P.prototype.sqrt = function(i3) {
        if (i3.isZero())
          return i3.clone();
        var a4 = this.m.andln(3);
        if (r6(a4 % 2 === 1), a4 === 3) {
          var h3 = this.m.add(new f(1)).iushrn(2);
          return this.pow(i3, h3);
        }
        for (var s5 = this.m.subn(1), u2 = 0;!s5.isZero() && s5.andln(1) === 0; )
          u2++, s5.iushrn(1);
        r6(!s5.isZero());
        var c = new f(1).toRed(this), b2 = c.redNeg(), l = this.m.subn(1).iushrn(1), n2 = this.m.bitLength();
        for (n2 = new f(2 * n2 * n2).toRed(this);this.pow(n2, l).cmp(b2) !== 0; )
          n2.redIAdd(b2);
        for (var d2 = this.pow(n2, s5), w = this.pow(i3, s5.addn(1).iushrn(1)), g2 = this.pow(i3, s5), _ = u2;g2.cmp(c) !== 0; ) {
          for (var A = g2, R = 0;A.cmp(c) !== 0; R++)
            A = A.redSqr();
          r6(R < _);
          var I = this.pow(d2, new f(1).iushln(_ - R - 1));
          w = w.redMul(I), d2 = I.redSqr(), g2 = g2.redMul(d2), _ = R;
        }
        return w;
      }, P.prototype.invm = function(i3) {
        var a4 = i3._invmp(this.m);
        return a4.negative !== 0 ? (a4.negative = 0, this.imod(a4).redNeg()) : this.imod(a4);
      }, P.prototype.pow = function(i3, a4) {
        if (a4.isZero())
          return new f(1).toRed(this);
        if (a4.cmpn(1) === 0)
          return i3.clone();
        var h3 = 4, s5 = new Array(1 << h3);
        s5[0] = new f(1).toRed(this), s5[1] = i3;
        for (var u2 = 2;u2 < s5.length; u2++)
          s5[u2] = this.mul(s5[u2 - 1], i3);
        var c = s5[0], b2 = 0, l = 0, n2 = a4.bitLength() % 26;
        for (n2 === 0 && (n2 = 26), u2 = a4.length - 1;u2 >= 0; u2--) {
          for (var d2 = a4.words[u2], w = n2 - 1;w >= 0; w--) {
            var g2 = d2 >> w & 1;
            if (c !== s5[0] && (c = this.sqr(c)), g2 === 0 && b2 === 0) {
              l = 0;
              continue;
            }
            b2 <<= 1, b2 |= g2, l++, !(l !== h3 && (u2 !== 0 || w !== 0)) && (c = this.mul(c, s5[b2]), l = 0, b2 = 0);
          }
          n2 = 26;
        }
        return c;
      }, P.prototype.convertTo = function(i3) {
        var a4 = i3.umod(this.m);
        return a4 === i3 ? a4.clone() : a4;
      }, P.prototype.convertFrom = function(i3) {
        var a4 = i3.clone();
        return a4.red = null, a4;
      }, f.mont = function(i3) {
        return new Se(i3);
      };
      function Se(v) {
        P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o2(Se, P), Se.prototype.convertTo = function(i3) {
        return this.imod(i3.ushln(this.shift));
      }, Se.prototype.convertFrom = function(i3) {
        var a4 = this.imod(i3.mul(this.rinv));
        return a4.red = null, a4;
      }, Se.prototype.imul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return i3.words[0] = 0, i3.length = 1, i3;
        var h3 = i3.imul(a4), s5 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h3.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.mul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return new f(0)._forceRed(this);
        var h3 = i3.mul(a4), s5 = h3.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h3.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.invm = function(i3) {
        var a4 = this.imod(i3._invmp(this.m).mul(this.r2));
        return a4._forceRed(this);
      };
    })(typeof Ll > "u" || Ll, h2);
  });
  Nl = T((d2) => {
    var js = d2;
    function uA(t6, e6) {
      if (Array.isArray(t6))
        return t6.slice();
      if (!t6)
        return [];
      var r6 = [];
      if (typeof t6 != "string") {
        for (var o2 = 0;o2 < t6.length; o2++)
          r6[o2] = t6[o2] | 0;
        return r6;
      }
      if (e6 === "hex") {
        t6 = t6.replace(/[^a-z0-9]+/ig, ""), t6.length % 2 !== 0 && (t6 = "0" + t6);
        for (var o2 = 0;o2 < t6.length; o2 += 2)
          r6.push(parseInt(t6[o2] + t6[o2 + 1], 16));
      } else
        for (var o2 = 0;o2 < t6.length; o2++) {
          var f = t6.charCodeAt(o2), p2 = f >> 8, m2 = f & 255;
          p2 ? r6.push(p2, m2) : r6.push(m2);
        }
      return r6;
    }
    js.toArray = uA;
    function u2(t6) {
      return t6.length === 1 ? "0" + t6 : t6;
    }
    js.zero2 = u2;
    function l2(t6) {
      for (var e6 = "", r6 = 0;r6 < t6.length; r6++)
        e6 += u2(t6[r6].toString(16));
      return e6;
    }
    js.toHex = l2;
    js.encode = function(e6, r6) {
      return r6 === "hex" ? l2(e6) : e6;
    };
  });
  or = T((c2) => {
    var Pr = c2, lA = ri(), dA = ar(), Zs = Nl();
    Pr.assert = dA;
    Pr.toArray = Zs.toArray;
    Pr.zero2 = Zs.zero2;
    Pr.toHex = Zs.toHex;
    Pr.encode = Zs.encode;
    function cA(t6, e6, r6) {
      var o2 = new Array(Math.max(t6.bitLength(), r6) + 1);
      o2.fill(0);
      for (var f = 1 << e6 + 1, p2 = t6.clone(), m2 = 0;m2 < o2.length; m2++) {
        var y2, M = p2.andln(f - 1);
        p2.isOdd() ? (M > (f >> 1) - 1 ? y2 = (f >> 1) - M : y2 = M, p2.isubn(y2)) : y2 = 0, o2[m2] = y2, p2.iushrn(1);
      }
      return o2;
    }
    Pr.getNAF = cA;
    function pA(t6, e6) {
      var r6 = [[], []];
      t6 = t6.clone(), e6 = e6.clone();
      for (var o2 = 0, f = 0, p2;t6.cmpn(-o2) > 0 || e6.cmpn(-f) > 0; ) {
        var m2 = t6.andln(3) + o2 & 3, y2 = e6.andln(3) + f & 3;
        m2 === 3 && (m2 = -1), y2 === 3 && (y2 = -1);
        var M;
        (m2 & 1) === 0 ? M = 0 : (p2 = t6.andln(7) + o2 & 7, (p2 === 3 || p2 === 5) && y2 === 2 ? M = -m2 : M = m2), r6[0].push(M);
        var x;
        (y2 & 1) === 0 ? x = 0 : (p2 = e6.andln(7) + f & 7, (p2 === 3 || p2 === 5) && m2 === 2 ? x = -y2 : x = y2), r6[1].push(x), 2 * o2 === M + 1 && (o2 = 1 - o2), 2 * f === x + 1 && (f = 1 - f), t6.iushrn(1), e6.iushrn(1);
      }
      return r6;
    }
    Pr.getJSF = pA;
    function vA(t6, e6, r6) {
      var o2 = "_" + e6;
      t6.prototype[e6] = function() {
        return this[o2] !== undefined ? this[o2] : this[o2] = r6.call(this);
      };
    }
    Pr.cachedProperty = vA;
    function bA(t6) {
      return typeof t6 == "string" ? Pr.toArray(t6, "hex") : t6;
    }
    Pr.parseBytes = bA;
    function mA(t6) {
      return new lA(t6, "hex", "le");
    }
    Pr.intFromLE = mA;
  });
  Oa = T((xk, p2) => {
    var Cn = ri(), Ca = or(), Vs = Ca.getNAF, gA = Ca.getJSF, $s = Ca.assert;
    function Xi(t6, e6) {
      this.type = t6, this.p = new Cn(e6.p, 16), this.red = e6.prime ? Cn.red(e6.prime) : Cn.mont(this.p), this.zero = new Cn(0).toRed(this.red), this.one = new Cn(1).toRed(this.red), this.two = new Cn(2).toRed(this.red), this.n = e6.n && new Cn(e6.n, 16), this.g = e6.g && this.pointFromJSON(e6.g, e6.gRed), this._wnafT1 = new Array(4), this._wnafT2 = new Array(4), this._wnafT3 = new Array(4), this._wnafT4 = new Array(4), this._bitLength = this.n ? this.n.bitLength() : 0;
      var r6 = this.n && this.p.div(this.n);
      !r6 || r6.cmpn(100) > 0 ? this.redN = null : (this._maxwellTrick = true, this.redN = this.n.toRed(this.red));
    }
    p2.exports = Xi;
    Xi.prototype.point = function() {
      throw new Error("Not implemented");
    };
    Xi.prototype.validate = function() {
      throw new Error("Not implemented");
    };
    Xi.prototype._fixedNafMul = function(e6, r6) {
      $s(e6.precomputed);
      var o2 = e6._getDoubles(), f = Vs(r6, 1, this._bitLength), p3 = (1 << o2.step + 1) - (o2.step % 2 === 0 ? 2 : 1);
      p3 /= 3;
      var m2 = [], y2, M;
      for (y2 = 0;y2 < f.length; y2 += o2.step) {
        M = 0;
        for (var x = y2 + o2.step - 1;x >= y2; x--)
          M = (M << 1) + f[x];
        m2.push(M);
      }
      for (var S = this.jpoint(null, null, null), E = this.jpoint(null, null, null), B = p3;B > 0; B--) {
        for (y2 = 0;y2 < m2.length; y2++)
          M = m2[y2], M === B ? E = E.mixedAdd(o2.points[y2]) : M === -B && (E = E.mixedAdd(o2.points[y2].neg()));
        S = S.add(E);
      }
      return S.toP();
    };
    Xi.prototype._wnafMul = function(e6, r6) {
      var o2 = 4, f = e6._getNAFPoints(o2);
      o2 = f.wnd;
      for (var p3 = f.points, m2 = Vs(r6, o2, this._bitLength), y2 = this.jpoint(null, null, null), M = m2.length - 1;M >= 0; M--) {
        for (var x = 0;M >= 0 && m2[M] === 0; M--)
          x++;
        if (M >= 0 && x++, y2 = y2.dblp(x), M < 0)
          break;
        var S = m2[M];
        $s(S !== 0), e6.type === "affine" ? S > 0 ? y2 = y2.mixedAdd(p3[S - 1 >> 1]) : y2 = y2.mixedAdd(p3[-S - 1 >> 1].neg()) : S > 0 ? y2 = y2.add(p3[S - 1 >> 1]) : y2 = y2.add(p3[-S - 1 >> 1].neg());
      }
      return e6.type === "affine" ? y2.toP() : y2;
    };
    Xi.prototype._wnafMulAdd = function(e6, r6, o2, f, p3) {
      var m2 = this._wnafT1, y2 = this._wnafT2, M = this._wnafT3, x = 0, S, E, B;
      for (S = 0;S < f; S++) {
        B = r6[S];
        var q2 = B._getNAFPoints(e6);
        m2[S] = q2.wnd, y2[S] = q2.points;
      }
      for (S = f - 1;S >= 1; S -= 2) {
        var L = S - 1, ge = S;
        if (m2[L] !== 1 || m2[ge] !== 1) {
          M[L] = Vs(o2[L], m2[L], this._bitLength), M[ge] = Vs(o2[ge], m2[ge], this._bitLength), x = Math.max(M[L].length, x), x = Math.max(M[ge].length, x);
          continue;
        }
        var _e = [r6[L], null, null, r6[ge]];
        r6[L].y.cmp(r6[ge].y) === 0 ? (_e[1] = r6[L].add(r6[ge]), _e[2] = r6[L].toJ().mixedAdd(r6[ge].neg())) : r6[L].y.cmp(r6[ge].y.redNeg()) === 0 ? (_e[1] = r6[L].toJ().mixedAdd(r6[ge]), _e[2] = r6[L].add(r6[ge].neg())) : (_e[1] = r6[L].toJ().mixedAdd(r6[ge]), _e[2] = r6[L].toJ().mixedAdd(r6[ge].neg()));
        var N = [-3, -1, -5, -7, 0, 7, 5, 1, 3], we = gA(o2[L], o2[ge]);
        for (x = Math.max(we[0].length, x), M[L] = new Array(x), M[ge] = new Array(x), E = 0;E < x; E++) {
          var ye = we[0][E] | 0, xe = we[1][E] | 0;
          M[L][E] = N[(ye + 1) * 3 + (xe + 1)], M[ge][E] = 0, y2[L] = _e;
        }
      }
      var Re = this.jpoint(null, null, null), Ee = this._wnafT4;
      for (S = x;S >= 0; S--) {
        for (var Ae = 0;S >= 0; ) {
          var P = true;
          for (E = 0;E < f; E++)
            Ee[E] = M[E][S] | 0, Ee[E] !== 0 && (P = false);
          if (!P)
            break;
          Ae++, S--;
        }
        if (S >= 0 && Ae++, Re = Re.dblp(Ae), S < 0)
          break;
        for (E = 0;E < f; E++) {
          var Se = Ee[E];
          Se !== 0 && (Se > 0 ? B = y2[E][Se - 1 >> 1] : Se < 0 && (B = y2[E][-Se - 1 >> 1].neg()), B.type === "affine" ? Re = Re.mixedAdd(B) : Re = Re.add(B));
        }
      }
      for (S = 0;S < f; S++)
        y2[S] = null;
      return p3 ? Re : Re.toP();
    };
    function _r(t6, e6) {
      this.curve = t6, this.type = e6, this.precomputed = null;
    }
    Xi.BasePoint = _r;
    _r.prototype.eq = function() {
      throw new Error("Not implemented");
    };
    _r.prototype.validate = function() {
      return this.curve.validate(this);
    };
    Xi.prototype.decodePoint = function(e6, r6) {
      e6 = Ca.toArray(e6, r6);
      var o2 = this.p.byteLength();
      if ((e6[0] === 4 || e6[0] === 6 || e6[0] === 7) && e6.length - 1 === 2 * o2) {
        e6[0] === 6 ? $s(e6[e6.length - 1] % 2 === 0) : e6[0] === 7 && $s(e6[e6.length - 1] % 2 === 1);
        var f = this.point(e6.slice(1, 1 + o2), e6.slice(1 + o2, 1 + 2 * o2));
        return f;
      } else if ((e6[0] === 2 || e6[0] === 3) && e6.length - 1 === o2)
        return this.pointFromX(e6.slice(1, 1 + o2), e6[0] === 3);
      throw new Error("Unknown point format");
    };
    _r.prototype.encodeCompressed = function(e6) {
      return this.encode(e6, true);
    };
    _r.prototype._encode = function(e6) {
      var r6 = this.curve.p.byteLength(), o2 = this.getX().toArray("be", r6);
      return e6 ? [this.getY().isEven() ? 2 : 3].concat(o2) : [4].concat(o2, this.getY().toArray("be", r6));
    };
    _r.prototype.encode = function(e6, r6) {
      return Ca.encode(this._encode(r6), e6);
    };
    _r.prototype.precompute = function(e6) {
      if (this.precomputed)
        return this;
      var r6 = { doubles: null, naf: null, beta: null };
      return r6.naf = this._getNAFPoints(8), r6.doubles = this._getDoubles(4, e6), r6.beta = this._getBeta(), this.precomputed = r6, this;
    };
    _r.prototype._hasDoubles = function(e6) {
      if (!this.precomputed)
        return false;
      var r6 = this.precomputed.doubles;
      return r6 ? r6.points.length >= Math.ceil((e6.bitLength() + 1) / r6.step) : false;
    };
    _r.prototype._getDoubles = function(e6, r6) {
      if (this.precomputed && this.precomputed.doubles)
        return this.precomputed.doubles;
      for (var o2 = [this], f = this, p3 = 0;p3 < r6; p3 += e6) {
        for (var m2 = 0;m2 < e6; m2++)
          f = f.dbl();
        o2.push(f);
      }
      return { step: e6, points: o2 };
    };
    _r.prototype._getNAFPoints = function(e6) {
      if (this.precomputed && this.precomputed.naf)
        return this.precomputed.naf;
      for (var r6 = [this], o2 = (1 << e6) - 1, f = o2 === 1 ? null : this.dbl(), p3 = 1;p3 < o2; p3++)
        r6[p3] = r6[p3 - 1].add(f);
      return { wnd: e6, points: r6 };
    };
    _r.prototype._getBeta = function() {
      return null;
    };
    _r.prototype.dblp = function(e6) {
      for (var r6 = this, o2 = 0;o2 < e6; o2++)
        r6 = r6.dbl();
      return r6;
    };
  });
  b2 = T((Sk, v2) => {
    var yA = or(), lt = ri(), Dl = Ie(), Bf = Oa(), wA = yA.assert;
    function xr(t6) {
      Bf.call(this, "short", t6), this.a = new lt(t6.a, 16).toRed(this.red), this.b = new lt(t6.b, 16).toRed(this.red), this.tinv = this.two.redInvm(), this.zeroA = this.a.fromRed().cmpn(0) === 0, this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0, this.endo = this._getEndomorphism(t6), this._endoWnafT1 = new Array(4), this._endoWnafT2 = new Array(4);
    }
    Dl(xr, Bf);
    v2.exports = xr;
    xr.prototype._getEndomorphism = function(e6) {
      if (!(!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)) {
        var r6, o2;
        if (e6.beta)
          r6 = new lt(e6.beta, 16).toRed(this.red);
        else {
          var f = this._getEndoRoots(this.p);
          r6 = f[0].cmp(f[1]) < 0 ? f[0] : f[1], r6 = r6.toRed(this.red);
        }
        if (e6.lambda)
          o2 = new lt(e6.lambda, 16);
        else {
          var p2 = this._getEndoRoots(this.n);
          this.g.mul(p2[0]).x.cmp(this.g.x.redMul(r6)) === 0 ? o2 = p2[0] : (o2 = p2[1], wA(this.g.mul(o2).x.cmp(this.g.x.redMul(r6)) === 0));
        }
        var m2;
        return e6.basis ? m2 = e6.basis.map(function(y2) {
          return { a: new lt(y2.a, 16), b: new lt(y2.b, 16) };
        }) : m2 = this._getEndoBasis(o2), { beta: r6, lambda: o2, basis: m2 };
      }
    };
    xr.prototype._getEndoRoots = function(e6) {
      var r6 = e6 === this.p ? this.red : lt.mont(e6), o2 = new lt(2).toRed(r6).redInvm(), f = o2.redNeg(), p2 = new lt(3).toRed(r6).redNeg().redSqrt().redMul(o2), m2 = f.redAdd(p2).fromRed(), y2 = f.redSub(p2).fromRed();
      return [m2, y2];
    };
    xr.prototype._getEndoBasis = function(e6) {
      for (var r6 = this.n.ushrn(Math.floor(this.n.bitLength() / 2)), o2 = e6, f = this.n.clone(), p2 = new lt(1), m2 = new lt(0), y2 = new lt(0), M = new lt(1), x, S, E, B, q2, L, ge, _e = 0, N, we;o2.cmpn(0) !== 0; ) {
        var ye = f.div(o2);
        N = f.sub(ye.mul(o2)), we = y2.sub(ye.mul(p2));
        var xe = M.sub(ye.mul(m2));
        if (!E && N.cmp(r6) < 0)
          x = ge.neg(), S = p2, E = N.neg(), B = we;
        else if (E && ++_e === 2)
          break;
        ge = N, f = o2, o2 = N, y2 = p2, p2 = we, M = m2, m2 = xe;
      }
      q2 = N.neg(), L = we;
      var Re = E.sqr().add(B.sqr()), Ee = q2.sqr().add(L.sqr());
      return Ee.cmp(Re) >= 0 && (q2 = x, L = S), E.negative && (E = E.neg(), B = B.neg()), q2.negative && (q2 = q2.neg(), L = L.neg()), [{ a: E, b: B }, { a: q2, b: L }];
    };
    xr.prototype._endoSplit = function(e6) {
      var r6 = this.endo.basis, o2 = r6[0], f = r6[1], p2 = f.b.mul(e6).divRound(this.n), m2 = o2.b.neg().mul(e6).divRound(this.n), y2 = p2.mul(o2.a), M = m2.mul(f.a), x = p2.mul(o2.b), S = m2.mul(f.b), E = e6.sub(y2).sub(M), B = x.add(S).neg();
      return { k1: E, k2: B };
    };
    xr.prototype.pointFromX = function(e6, r6) {
      e6 = new lt(e6, 16), e6.red || (e6 = e6.toRed(this.red));
      var o2 = e6.redSqr().redMul(e6).redIAdd(e6.redMul(this.a)).redIAdd(this.b), f = o2.redSqrt();
      if (f.redSqr().redSub(o2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var p2 = f.fromRed().isOdd();
      return (r6 && !p2 || !r6 && p2) && (f = f.redNeg()), this.point(e6, f);
    };
    xr.prototype.validate = function(e6) {
      if (e6.inf)
        return true;
      var { x: r6, y: o2 } = e6, f = this.a.redMul(r6), p2 = r6.redSqr().redMul(r6).redIAdd(f).redIAdd(this.b);
      return o2.redSqr().redISub(p2).cmpn(0) === 0;
    };
    xr.prototype._endoWnafMulAdd = function(e6, r6, o2) {
      for (var f = this._endoWnafT1, p2 = this._endoWnafT2, m2 = 0;m2 < e6.length; m2++) {
        var y2 = this._endoSplit(r6[m2]), M = e6[m2], x = M._getBeta();
        y2.k1.negative && (y2.k1.ineg(), M = M.neg(true)), y2.k2.negative && (y2.k2.ineg(), x = x.neg(true)), f[m2 * 2] = M, f[m2 * 2 + 1] = x, p2[m2 * 2] = y2.k1, p2[m2 * 2 + 1] = y2.k2;
      }
      for (var S = this._wnafMulAdd(1, f, p2, m2 * 2, o2), E = 0;E < m2 * 2; E++)
        f[E] = null, p2[E] = null;
      return S;
    };
    function Ct(t6, e6, r6, o2) {
      Bf.BasePoint.call(this, t6, "affine"), e6 === null && r6 === null ? (this.x = null, this.y = null, this.inf = true) : (this.x = new lt(e6, 16), this.y = new lt(r6, 16), o2 && (this.x.forceRed(this.curve.red), this.y.forceRed(this.curve.red)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.inf = false);
    }
    Dl(Ct, Bf.BasePoint);
    xr.prototype.point = function(e6, r6, o2) {
      return new Ct(this, e6, r6, o2);
    };
    xr.prototype.pointFromJSON = function(e6, r6) {
      return Ct.fromJSON(this, e6, r6);
    };
    Ct.prototype._getBeta = function() {
      if (!!this.curve.endo) {
        var e6 = this.precomputed;
        if (e6 && e6.beta)
          return e6.beta;
        var r6 = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
        if (e6) {
          var o2 = this.curve, f = function(p2) {
            return o2.point(p2.x.redMul(o2.endo.beta), p2.y);
          };
          e6.beta = r6, r6.precomputed = { beta: null, naf: e6.naf && { wnd: e6.naf.wnd, points: e6.naf.points.map(f) }, doubles: e6.doubles && { step: e6.doubles.step, points: e6.doubles.points.map(f) } };
        }
        return r6;
      }
    };
    Ct.prototype.toJSON = function() {
      return this.precomputed ? [this.x, this.y, this.precomputed && { doubles: this.precomputed.doubles && { step: this.precomputed.doubles.step, points: this.precomputed.doubles.points.slice(1) }, naf: this.precomputed.naf && { wnd: this.precomputed.naf.wnd, points: this.precomputed.naf.points.slice(1) } }] : [this.x, this.y];
    };
    Ct.fromJSON = function(e6, r6, o2) {
      typeof r6 == "string" && (r6 = JSON.parse(r6));
      var f = e6.point(r6[0], r6[1], o2);
      if (!r6[2])
        return f;
      function p2(y2) {
        return e6.point(y2[0], y2[1], o2);
      }
      var m2 = r6[2];
      return f.precomputed = { beta: null, doubles: m2.doubles && { step: m2.doubles.step, points: [f].concat(m2.doubles.points.map(p2)) }, naf: m2.naf && { wnd: m2.naf.wnd, points: [f].concat(m2.naf.points.map(p2)) } }, f;
    };
    Ct.prototype.inspect = function() {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + ">";
    };
    Ct.prototype.isInfinity = function() {
      return this.inf;
    };
    Ct.prototype.add = function(e6) {
      if (this.inf)
        return e6;
      if (e6.inf)
        return this;
      if (this.eq(e6))
        return this.dbl();
      if (this.neg().eq(e6))
        return this.curve.point(null, null);
      if (this.x.cmp(e6.x) === 0)
        return this.curve.point(null, null);
      var r6 = this.y.redSub(e6.y);
      r6.cmpn(0) !== 0 && (r6 = r6.redMul(this.x.redSub(e6.x).redInvm()));
      var o2 = r6.redSqr().redISub(this.x).redISub(e6.x), f = r6.redMul(this.x.redSub(o2)).redISub(this.y);
      return this.curve.point(o2, f);
    };
    Ct.prototype.dbl = function() {
      if (this.inf)
        return this;
      var e6 = this.y.redAdd(this.y);
      if (e6.cmpn(0) === 0)
        return this.curve.point(null, null);
      var r6 = this.curve.a, o2 = this.x.redSqr(), f = e6.redInvm(), p2 = o2.redAdd(o2).redIAdd(o2).redIAdd(r6).redMul(f), m2 = p2.redSqr().redISub(this.x.redAdd(this.x)), y2 = p2.redMul(this.x.redSub(m2)).redISub(this.y);
      return this.curve.point(m2, y2);
    };
    Ct.prototype.getX = function() {
      return this.x.fromRed();
    };
    Ct.prototype.getY = function() {
      return this.y.fromRed();
    };
    Ct.prototype.mul = function(e6) {
      return e6 = new lt(e6, 16), this.isInfinity() ? this : this._hasDoubles(e6) ? this.curve._fixedNafMul(this, e6) : this.curve.endo ? this.curve._endoWnafMulAdd([this], [e6]) : this.curve._wnafMul(this, e6);
    };
    Ct.prototype.mulAdd = function(e6, r6, o2) {
      var f = [this, r6], p2 = [e6, o2];
      return this.curve.endo ? this.curve._endoWnafMulAdd(f, p2) : this.curve._wnafMulAdd(1, f, p2, 2);
    };
    Ct.prototype.jmulAdd = function(e6, r6, o2) {
      var f = [this, r6], p2 = [e6, o2];
      return this.curve.endo ? this.curve._endoWnafMulAdd(f, p2, true) : this.curve._wnafMulAdd(1, f, p2, 2, true);
    };
    Ct.prototype.eq = function(e6) {
      return this === e6 || this.inf === e6.inf && (this.inf || this.x.cmp(e6.x) === 0 && this.y.cmp(e6.y) === 0);
    };
    Ct.prototype.neg = function(e6) {
      if (this.inf)
        return this;
      var r6 = this.curve.point(this.x, this.y.redNeg());
      if (e6 && this.precomputed) {
        var o2 = this.precomputed, f = function(p2) {
          return p2.neg();
        };
        r6.precomputed = { naf: o2.naf && { wnd: o2.naf.wnd, points: o2.naf.points.map(f) }, doubles: o2.doubles && { step: o2.doubles.step, points: o2.doubles.points.map(f) } };
      }
      return r6;
    };
    Ct.prototype.toJ = function() {
      if (this.inf)
        return this.curve.jpoint(null, null, null);
      var e6 = this.curve.jpoint(this.x, this.y, this.curve.one);
      return e6;
    };
    function Wt(t6, e6, r6, o2) {
      Bf.BasePoint.call(this, t6, "jacobian"), e6 === null && r6 === null && o2 === null ? (this.x = this.curve.one, this.y = this.curve.one, this.z = new lt(0)) : (this.x = new lt(e6, 16), this.y = new lt(r6, 16), this.z = new lt(o2, 16)), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.zOne = this.z === this.curve.one;
    }
    Dl(Wt, Bf.BasePoint);
    xr.prototype.jpoint = function(e6, r6, o2) {
      return new Wt(this, e6, r6, o2);
    };
    Wt.prototype.toP = function() {
      if (this.isInfinity())
        return this.curve.point(null, null);
      var e6 = this.z.redInvm(), r6 = e6.redSqr(), o2 = this.x.redMul(r6), f = this.y.redMul(r6).redMul(e6);
      return this.curve.point(o2, f);
    };
    Wt.prototype.neg = function() {
      return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
    };
    Wt.prototype.add = function(e6) {
      if (this.isInfinity())
        return e6;
      if (e6.isInfinity())
        return this;
      var r6 = e6.z.redSqr(), o2 = this.z.redSqr(), f = this.x.redMul(r6), p2 = e6.x.redMul(o2), m2 = this.y.redMul(r6.redMul(e6.z)), y2 = e6.y.redMul(o2.redMul(this.z)), M = f.redSub(p2), x = m2.redSub(y2);
      if (M.cmpn(0) === 0)
        return x.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
      var S = M.redSqr(), E = S.redMul(M), B = f.redMul(S), q2 = x.redSqr().redIAdd(E).redISub(B).redISub(B), L = x.redMul(B.redISub(q2)).redISub(m2.redMul(E)), ge = this.z.redMul(e6.z).redMul(M);
      return this.curve.jpoint(q2, L, ge);
    };
    Wt.prototype.mixedAdd = function(e6) {
      if (this.isInfinity())
        return e6.toJ();
      if (e6.isInfinity())
        return this;
      var r6 = this.z.redSqr(), o2 = this.x, f = e6.x.redMul(r6), p2 = this.y, m2 = e6.y.redMul(r6).redMul(this.z), y2 = o2.redSub(f), M = p2.redSub(m2);
      if (y2.cmpn(0) === 0)
        return M.cmpn(0) !== 0 ? this.curve.jpoint(null, null, null) : this.dbl();
      var x = y2.redSqr(), S = x.redMul(y2), E = o2.redMul(x), B = M.redSqr().redIAdd(S).redISub(E).redISub(E), q2 = M.redMul(E.redISub(B)).redISub(p2.redMul(S)), L = this.z.redMul(y2);
      return this.curve.jpoint(B, q2, L);
    };
    Wt.prototype.dblp = function(e6) {
      if (e6 === 0)
        return this;
      if (this.isInfinity())
        return this;
      if (!e6)
        return this.dbl();
      var r6;
      if (this.curve.zeroA || this.curve.threeA) {
        var o2 = this;
        for (r6 = 0;r6 < e6; r6++)
          o2 = o2.dbl();
        return o2;
      }
      var f = this.curve.a, p2 = this.curve.tinv, m2 = this.x, y2 = this.y, M = this.z, x = M.redSqr().redSqr(), S = y2.redAdd(y2);
      for (r6 = 0;r6 < e6; r6++) {
        var E = m2.redSqr(), B = S.redSqr(), q2 = B.redSqr(), L = E.redAdd(E).redIAdd(E).redIAdd(f.redMul(x)), ge = m2.redMul(B), _e = L.redSqr().redISub(ge.redAdd(ge)), N = ge.redISub(_e), we = L.redMul(N);
        we = we.redIAdd(we).redISub(q2);
        var ye = S.redMul(M);
        r6 + 1 < e6 && (x = x.redMul(q2)), m2 = _e, M = ye, S = we;
      }
      return this.curve.jpoint(m2, S.redMul(p2), M);
    };
    Wt.prototype.dbl = function() {
      return this.isInfinity() ? this : this.curve.zeroA ? this._zeroDbl() : this.curve.threeA ? this._threeDbl() : this._dbl();
    };
    Wt.prototype._zeroDbl = function() {
      var e6, r6, o2;
      if (this.zOne) {
        var f = this.x.redSqr(), p2 = this.y.redSqr(), m2 = p2.redSqr(), y2 = this.x.redAdd(p2).redSqr().redISub(f).redISub(m2);
        y2 = y2.redIAdd(y2);
        var M = f.redAdd(f).redIAdd(f), x = M.redSqr().redISub(y2).redISub(y2), S = m2.redIAdd(m2);
        S = S.redIAdd(S), S = S.redIAdd(S), e6 = x, r6 = M.redMul(y2.redISub(x)).redISub(S), o2 = this.y.redAdd(this.y);
      } else {
        var E = this.x.redSqr(), B = this.y.redSqr(), q2 = B.redSqr(), L = this.x.redAdd(B).redSqr().redISub(E).redISub(q2);
        L = L.redIAdd(L);
        var ge = E.redAdd(E).redIAdd(E), _e = ge.redSqr(), N = q2.redIAdd(q2);
        N = N.redIAdd(N), N = N.redIAdd(N), e6 = _e.redISub(L).redISub(L), r6 = ge.redMul(L.redISub(e6)).redISub(N), o2 = this.y.redMul(this.z), o2 = o2.redIAdd(o2);
      }
      return this.curve.jpoint(e6, r6, o2);
    };
    Wt.prototype._threeDbl = function() {
      var e6, r6, o2;
      if (this.zOne) {
        var f = this.x.redSqr(), p2 = this.y.redSqr(), m2 = p2.redSqr(), y2 = this.x.redAdd(p2).redSqr().redISub(f).redISub(m2);
        y2 = y2.redIAdd(y2);
        var M = f.redAdd(f).redIAdd(f).redIAdd(this.curve.a), x = M.redSqr().redISub(y2).redISub(y2);
        e6 = x;
        var S = m2.redIAdd(m2);
        S = S.redIAdd(S), S = S.redIAdd(S), r6 = M.redMul(y2.redISub(x)).redISub(S), o2 = this.y.redAdd(this.y);
      } else {
        var E = this.z.redSqr(), B = this.y.redSqr(), q2 = this.x.redMul(B), L = this.x.redSub(E).redMul(this.x.redAdd(E));
        L = L.redAdd(L).redIAdd(L);
        var ge = q2.redIAdd(q2);
        ge = ge.redIAdd(ge);
        var _e = ge.redAdd(ge);
        e6 = L.redSqr().redISub(_e), o2 = this.y.redAdd(this.z).redSqr().redISub(B).redISub(E);
        var N = B.redSqr();
        N = N.redIAdd(N), N = N.redIAdd(N), N = N.redIAdd(N), r6 = L.redMul(ge.redISub(e6)).redISub(N);
      }
      return this.curve.jpoint(e6, r6, o2);
    };
    Wt.prototype._dbl = function() {
      var e6 = this.curve.a, r6 = this.x, o2 = this.y, f = this.z, p2 = f.redSqr().redSqr(), m2 = r6.redSqr(), y2 = o2.redSqr(), M = m2.redAdd(m2).redIAdd(m2).redIAdd(e6.redMul(p2)), x = r6.redAdd(r6);
      x = x.redIAdd(x);
      var S = x.redMul(y2), E = M.redSqr().redISub(S.redAdd(S)), B = S.redISub(E), q2 = y2.redSqr();
      q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2);
      var L = M.redMul(B).redISub(q2), ge = o2.redAdd(o2).redMul(f);
      return this.curve.jpoint(E, L, ge);
    };
    Wt.prototype.trpl = function() {
      if (!this.curve.zeroA)
        return this.dbl().add(this);
      var e6 = this.x.redSqr(), r6 = this.y.redSqr(), o2 = this.z.redSqr(), f = r6.redSqr(), p2 = e6.redAdd(e6).redIAdd(e6), m2 = p2.redSqr(), y2 = this.x.redAdd(r6).redSqr().redISub(e6).redISub(f);
      y2 = y2.redIAdd(y2), y2 = y2.redAdd(y2).redIAdd(y2), y2 = y2.redISub(m2);
      var M = y2.redSqr(), x = f.redIAdd(f);
      x = x.redIAdd(x), x = x.redIAdd(x), x = x.redIAdd(x);
      var S = p2.redIAdd(y2).redSqr().redISub(m2).redISub(M).redISub(x), E = r6.redMul(S);
      E = E.redIAdd(E), E = E.redIAdd(E);
      var B = this.x.redMul(M).redISub(E);
      B = B.redIAdd(B), B = B.redIAdd(B);
      var q2 = this.y.redMul(S.redMul(x.redISub(S)).redISub(y2.redMul(M)));
      q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2), q2 = q2.redIAdd(q2);
      var L = this.z.redAdd(y2).redSqr().redISub(o2).redISub(M);
      return this.curve.jpoint(B, q2, L);
    };
    Wt.prototype.mul = function(e6, r6) {
      return e6 = new lt(e6, r6), this.curve._wnafMul(this, e6);
    };
    Wt.prototype.eq = function(e6) {
      if (e6.type === "affine")
        return this.eq(e6.toJ());
      if (this === e6)
        return true;
      var r6 = this.z.redSqr(), o2 = e6.z.redSqr();
      if (this.x.redMul(o2).redISub(e6.x.redMul(r6)).cmpn(0) !== 0)
        return false;
      var f = r6.redMul(this.z), p2 = o2.redMul(e6.z);
      return this.y.redMul(p2).redISub(e6.y.redMul(f)).cmpn(0) === 0;
    };
    Wt.prototype.eqXToP = function(e6) {
      var r6 = this.z.redSqr(), o2 = e6.toRed(this.curve.red).redMul(r6);
      if (this.x.cmp(o2) === 0)
        return true;
      for (var f = e6.clone(), p2 = this.curve.redN.redMul(r6);; ) {
        if (f.iadd(this.curve.n), f.cmp(this.curve.p) >= 0)
          return false;
        if (o2.redIAdd(p2), this.x.cmp(o2) === 0)
          return true;
      }
    };
    Wt.prototype.inspect = function() {
      return this.isInfinity() ? "<EC JPoint Infinity>" : "<EC JPoint x: " + this.x.toString(16, 2) + " y: " + this.y.toString(16, 2) + " z: " + this.z.toString(16, 2) + ">";
    };
    Wt.prototype.isInfinity = function() {
      return this.z.cmpn(0) === 0;
    };
  });
  y2 = T((Ek, g2) => {
    var qf = ri(), m2 = Ie(), Gs = Oa(), MA = or();
    function If(t6) {
      Gs.call(this, "mont", t6), this.a = new qf(t6.a, 16).toRed(this.red), this.b = new qf(t6.b, 16).toRed(this.red), this.i4 = new qf(4).toRed(this.red).redInvm(), this.two = new qf(2).toRed(this.red), this.a24 = this.i4.redMul(this.a.redAdd(this.two));
    }
    m2(If, Gs);
    g2.exports = If;
    If.prototype.validate = function(e6) {
      var r6 = e6.normalize().x, o2 = r6.redSqr(), f = o2.redMul(r6).redAdd(o2.redMul(this.a)).redAdd(r6), p2 = f.redSqrt();
      return p2.redSqr().cmp(f) === 0;
    };
    function Ot(t6, e6, r6) {
      Gs.BasePoint.call(this, t6, "projective"), e6 === null && r6 === null ? (this.x = this.curve.one, this.z = this.curve.zero) : (this.x = new qf(e6, 16), this.z = new qf(r6, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)));
    }
    m2(Ot, Gs.BasePoint);
    If.prototype.decodePoint = function(e6, r6) {
      return this.point(MA.toArray(e6, r6), 1);
    };
    If.prototype.point = function(e6, r6) {
      return new Ot(this, e6, r6);
    };
    If.prototype.pointFromJSON = function(e6) {
      return Ot.fromJSON(this, e6);
    };
    Ot.prototype.precompute = function() {
    };
    Ot.prototype._encode = function() {
      return this.getX().toArray("be", this.curve.p.byteLength());
    };
    Ot.fromJSON = function(e6, r6) {
      return new Ot(e6, r6[0], r6[1] || e6.one);
    };
    Ot.prototype.inspect = function() {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    Ot.prototype.isInfinity = function() {
      return this.z.cmpn(0) === 0;
    };
    Ot.prototype.dbl = function() {
      var e6 = this.x.redAdd(this.z), r6 = e6.redSqr(), o2 = this.x.redSub(this.z), f = o2.redSqr(), p2 = r6.redSub(f), m3 = r6.redMul(f), y3 = p2.redMul(f.redAdd(this.curve.a24.redMul(p2)));
      return this.curve.point(m3, y3);
    };
    Ot.prototype.add = function() {
      throw new Error("Not supported on Montgomery curve");
    };
    Ot.prototype.diffAdd = function(e6, r6) {
      var o2 = this.x.redAdd(this.z), f = this.x.redSub(this.z), p2 = e6.x.redAdd(e6.z), m3 = e6.x.redSub(e6.z), y3 = m3.redMul(o2), M = p2.redMul(f), x = r6.z.redMul(y3.redAdd(M).redSqr()), S = r6.x.redMul(y3.redISub(M).redSqr());
      return this.curve.point(x, S);
    };
    Ot.prototype.mul = function(e6) {
      for (var r6 = e6.clone(), o2 = this, f = this.curve.point(null, null), p2 = this, m3 = [];r6.cmpn(0) !== 0; r6.iushrn(1))
        m3.push(r6.andln(1));
      for (var y3 = m3.length - 1;y3 >= 0; y3--)
        m3[y3] === 0 ? (o2 = o2.diffAdd(f, p2), f = f.dbl()) : (f = o2.diffAdd(f, p2), o2 = o2.dbl());
      return f;
    };
    Ot.prototype.mulAdd = function() {
      throw new Error("Not supported on Montgomery curve");
    };
    Ot.prototype.jumlAdd = function() {
      throw new Error("Not supported on Montgomery curve");
    };
    Ot.prototype.eq = function(e6) {
      return this.getX().cmp(e6.getX()) === 0;
    };
    Ot.prototype.normalize = function() {
      return this.x = this.x.redMul(this.z.redInvm()), this.z = this.curve.one, this;
    };
    Ot.prototype.getX = function() {
      return this.normalize(), this.x.fromRed();
    };
  });
  _2 = T((Ak, M2) => {
    var _A = or(), Ai = ri(), w2 = Ie(), Ys = Oa(), xA = _A.assert;
    function ii(t6) {
      this.twisted = (t6.a | 0) !== 1, this.mOneA = this.twisted && (t6.a | 0) === -1, this.extended = this.mOneA, Ys.call(this, "edwards", t6), this.a = new Ai(t6.a, 16).umod(this.red.m), this.a = this.a.toRed(this.red), this.c = new Ai(t6.c, 16).toRed(this.red), this.c2 = this.c.redSqr(), this.d = new Ai(t6.d, 16).toRed(this.red), this.dd = this.d.redAdd(this.d), xA(!this.twisted || this.c.fromRed().cmpn(1) === 0), this.oneC = (t6.c | 0) === 1;
    }
    w2(ii, Ys);
    M2.exports = ii;
    ii.prototype._mulA = function(e6) {
      return this.mOneA ? e6.redNeg() : this.a.redMul(e6);
    };
    ii.prototype._mulC = function(e6) {
      return this.oneC ? e6 : this.c.redMul(e6);
    };
    ii.prototype.jpoint = function(e6, r6, o2, f) {
      return this.point(e6, r6, o2, f);
    };
    ii.prototype.pointFromX = function(e6, r6) {
      e6 = new Ai(e6, 16), e6.red || (e6 = e6.toRed(this.red));
      var o2 = e6.redSqr(), f = this.c2.redSub(this.a.redMul(o2)), p2 = this.one.redSub(this.c2.redMul(this.d).redMul(o2)), m2 = f.redMul(p2.redInvm()), y3 = m2.redSqrt();
      if (y3.redSqr().redSub(m2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      var M = y3.fromRed().isOdd();
      return (r6 && !M || !r6 && M) && (y3 = y3.redNeg()), this.point(e6, y3);
    };
    ii.prototype.pointFromY = function(e6, r6) {
      e6 = new Ai(e6, 16), e6.red || (e6 = e6.toRed(this.red));
      var o2 = e6.redSqr(), f = o2.redSub(this.c2), p2 = o2.redMul(this.d).redMul(this.c2).redSub(this.a), m2 = f.redMul(p2.redInvm());
      if (m2.cmp(this.zero) === 0) {
        if (r6)
          throw new Error("invalid point");
        return this.point(this.zero, e6);
      }
      var y3 = m2.redSqrt();
      if (y3.redSqr().redSub(m2).cmp(this.zero) !== 0)
        throw new Error("invalid point");
      return y3.fromRed().isOdd() !== r6 && (y3 = y3.redNeg()), this.point(y3, e6);
    };
    ii.prototype.validate = function(e6) {
      if (e6.isInfinity())
        return true;
      e6.normalize();
      var r6 = e6.x.redSqr(), o2 = e6.y.redSqr(), f = r6.redMul(this.a).redAdd(o2), p2 = this.c2.redMul(this.one.redAdd(this.d.redMul(r6).redMul(o2)));
      return f.cmp(p2) === 0;
    };
    function at(t6, e6, r6, o2, f) {
      Ys.BasePoint.call(this, t6, "projective"), e6 === null && r6 === null && o2 === null ? (this.x = this.curve.zero, this.y = this.curve.one, this.z = this.curve.one, this.t = this.curve.zero, this.zOne = true) : (this.x = new Ai(e6, 16), this.y = new Ai(r6, 16), this.z = o2 ? new Ai(o2, 16) : this.curve.one, this.t = f && new Ai(f, 16), this.x.red || (this.x = this.x.toRed(this.curve.red)), this.y.red || (this.y = this.y.toRed(this.curve.red)), this.z.red || (this.z = this.z.toRed(this.curve.red)), this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)), this.zOne = this.z === this.curve.one, this.curve.extended && !this.t && (this.t = this.x.redMul(this.y), this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
    }
    w2(at, Ys.BasePoint);
    ii.prototype.pointFromJSON = function(e6) {
      return at.fromJSON(this, e6);
    };
    ii.prototype.point = function(e6, r6, o2, f) {
      return new at(this, e6, r6, o2, f);
    };
    at.fromJSON = function(e6, r6) {
      return new at(e6, r6[0], r6[1], r6[2]);
    };
    at.prototype.inspect = function() {
      return this.isInfinity() ? "<EC Point Infinity>" : "<EC Point x: " + this.x.fromRed().toString(16, 2) + " y: " + this.y.fromRed().toString(16, 2) + " z: " + this.z.fromRed().toString(16, 2) + ">";
    };
    at.prototype.isInfinity = function() {
      return this.x.cmpn(0) === 0 && (this.y.cmp(this.z) === 0 || this.zOne && this.y.cmp(this.curve.c) === 0);
    };
    at.prototype._extDbl = function() {
      var e6 = this.x.redSqr(), r6 = this.y.redSqr(), o2 = this.z.redSqr();
      o2 = o2.redIAdd(o2);
      var f = this.curve._mulA(e6), p2 = this.x.redAdd(this.y).redSqr().redISub(e6).redISub(r6), m2 = f.redAdd(r6), y3 = m2.redSub(o2), M = f.redSub(r6), x = p2.redMul(y3), S = m2.redMul(M), E = p2.redMul(M), B = y3.redMul(m2);
      return this.curve.point(x, S, B, E);
    };
    at.prototype._projDbl = function() {
      var e6 = this.x.redAdd(this.y).redSqr(), r6 = this.x.redSqr(), o2 = this.y.redSqr(), f, p2, m2, y3, M, x;
      if (this.curve.twisted) {
        y3 = this.curve._mulA(r6);
        var S = y3.redAdd(o2);
        this.zOne ? (f = e6.redSub(r6).redSub(o2).redMul(S.redSub(this.curve.two)), p2 = S.redMul(y3.redSub(o2)), m2 = S.redSqr().redSub(S).redSub(S)) : (M = this.z.redSqr(), x = S.redSub(M).redISub(M), f = e6.redSub(r6).redISub(o2).redMul(x), p2 = S.redMul(y3.redSub(o2)), m2 = S.redMul(x));
      } else
        y3 = r6.redAdd(o2), M = this.curve._mulC(this.z).redSqr(), x = y3.redSub(M).redSub(M), f = this.curve._mulC(e6.redISub(y3)).redMul(x), p2 = this.curve._mulC(y3).redMul(r6.redISub(o2)), m2 = y3.redMul(x);
      return this.curve.point(f, p2, m2);
    };
    at.prototype.dbl = function() {
      return this.isInfinity() ? this : this.curve.extended ? this._extDbl() : this._projDbl();
    };
    at.prototype._extAdd = function(e6) {
      var r6 = this.y.redSub(this.x).redMul(e6.y.redSub(e6.x)), o2 = this.y.redAdd(this.x).redMul(e6.y.redAdd(e6.x)), f = this.t.redMul(this.curve.dd).redMul(e6.t), p2 = this.z.redMul(e6.z.redAdd(e6.z)), m2 = o2.redSub(r6), y3 = p2.redSub(f), M = p2.redAdd(f), x = o2.redAdd(r6), S = m2.redMul(y3), E = M.redMul(x), B = m2.redMul(x), q2 = y3.redMul(M);
      return this.curve.point(S, E, q2, B);
    };
    at.prototype._projAdd = function(e6) {
      var r6 = this.z.redMul(e6.z), o2 = r6.redSqr(), f = this.x.redMul(e6.x), p2 = this.y.redMul(e6.y), m2 = this.curve.d.redMul(f).redMul(p2), y3 = o2.redSub(m2), M = o2.redAdd(m2), x = this.x.redAdd(this.y).redMul(e6.x.redAdd(e6.y)).redISub(f).redISub(p2), S = r6.redMul(y3).redMul(x), E, B;
      return this.curve.twisted ? (E = r6.redMul(M).redMul(p2.redSub(this.curve._mulA(f))), B = y3.redMul(M)) : (E = r6.redMul(M).redMul(p2.redSub(f)), B = this.curve._mulC(y3).redMul(M)), this.curve.point(S, E, B);
    };
    at.prototype.add = function(e6) {
      return this.isInfinity() ? e6 : e6.isInfinity() ? this : this.curve.extended ? this._extAdd(e6) : this._projAdd(e6);
    };
    at.prototype.mul = function(e6) {
      return this._hasDoubles(e6) ? this.curve._fixedNafMul(this, e6) : this.curve._wnafMul(this, e6);
    };
    at.prototype.mulAdd = function(e6, r6, o2) {
      return this.curve._wnafMulAdd(1, [this, r6], [e6, o2], 2, false);
    };
    at.prototype.jmulAdd = function(e6, r6, o2) {
      return this.curve._wnafMulAdd(1, [this, r6], [e6, o2], 2, true);
    };
    at.prototype.normalize = function() {
      if (this.zOne)
        return this;
      var e6 = this.z.redInvm();
      return this.x = this.x.redMul(e6), this.y = this.y.redMul(e6), this.t && (this.t = this.t.redMul(e6)), this.z = this.curve.one, this.zOne = true, this;
    };
    at.prototype.neg = function() {
      return this.curve.point(this.x.redNeg(), this.y, this.z, this.t && this.t.redNeg());
    };
    at.prototype.getX = function() {
      return this.normalize(), this.x.fromRed();
    };
    at.prototype.getY = function() {
      return this.normalize(), this.y.fromRed();
    };
    at.prototype.eq = function(e6) {
      return this === e6 || this.getX().cmp(e6.getX()) === 0 && this.getY().cmp(e6.getY()) === 0;
    };
    at.prototype.eqXToP = function(e6) {
      var r6 = e6.toRed(this.curve.red).redMul(this.z);
      if (this.x.cmp(r6) === 0)
        return true;
      for (var o2 = e6.clone(), f = this.curve.redN.redMul(this.z);; ) {
        if (o2.iadd(this.curve.n), o2.cmp(this.curve.p) >= 0)
          return false;
        if (r6.redIAdd(f), this.x.cmp(r6) === 0)
          return true;
      }
    };
    at.prototype.toP = at.prototype.normalize;
    at.prototype.mixedAdd = at.prototype.add;
  });
  Pl = T((x2) => {
    var Xs = x2;
    Xs.base = Oa();
    Xs.short = b2();
    Xs.mont = y2();
    Xs.edwards = _2();
  });
  Cr = T((it) => {
    var SA = ar(), EA = Ie();
    it.inherits = EA;
    function AA(t6, e6) {
      return (t6.charCodeAt(e6) & 64512) !== 55296 || e6 < 0 || e6 + 1 >= t6.length ? false : (t6.charCodeAt(e6 + 1) & 64512) === 56320;
    }
    function RA(t6, e6) {
      if (Array.isArray(t6))
        return t6.slice();
      if (!t6)
        return [];
      var r6 = [];
      if (typeof t6 == "string")
        if (e6) {
          if (e6 === "hex")
            for (t6 = t6.replace(/[^a-z0-9]+/ig, ""), t6.length % 2 !== 0 && (t6 = "0" + t6), f = 0;f < t6.length; f += 2)
              r6.push(parseInt(t6[f] + t6[f + 1], 16));
        } else
          for (var o2 = 0, f = 0;f < t6.length; f++) {
            var p2 = t6.charCodeAt(f);
            p2 < 128 ? r6[o2++] = p2 : p2 < 2048 ? (r6[o2++] = p2 >> 6 | 192, r6[o2++] = p2 & 63 | 128) : AA(t6, f) ? (p2 = 65536 + ((p2 & 1023) << 10) + (t6.charCodeAt(++f) & 1023), r6[o2++] = p2 >> 18 | 240, r6[o2++] = p2 >> 12 & 63 | 128, r6[o2++] = p2 >> 6 & 63 | 128, r6[o2++] = p2 & 63 | 128) : (r6[o2++] = p2 >> 12 | 224, r6[o2++] = p2 >> 6 & 63 | 128, r6[o2++] = p2 & 63 | 128);
          }
      else
        for (f = 0;f < t6.length; f++)
          r6[f] = t6[f] | 0;
      return r6;
    }
    it.toArray = RA;
    function BA(t6) {
      for (var e6 = "", r6 = 0;r6 < t6.length; r6++)
        e6 += E2(t6[r6].toString(16));
      return e6;
    }
    it.toHex = BA;
    function S2(t6) {
      var e6 = t6 >>> 24 | t6 >>> 8 & 65280 | t6 << 8 & 16711680 | (t6 & 255) << 24;
      return e6 >>> 0;
    }
    it.htonl = S2;
    function qA(t6, e6) {
      for (var r6 = "", o2 = 0;o2 < t6.length; o2++) {
        var f = t6[o2];
        e6 === "little" && (f = S2(f)), r6 += A2(f.toString(16));
      }
      return r6;
    }
    it.toHex32 = qA;
    function E2(t6) {
      return t6.length === 1 ? "0" + t6 : t6;
    }
    it.zero2 = E2;
    function A2(t6) {
      return t6.length === 7 ? "0" + t6 : t6.length === 6 ? "00" + t6 : t6.length === 5 ? "000" + t6 : t6.length === 4 ? "0000" + t6 : t6.length === 3 ? "00000" + t6 : t6.length === 2 ? "000000" + t6 : t6.length === 1 ? "0000000" + t6 : t6;
    }
    it.zero8 = A2;
    function IA(t6, e6, r6, o2) {
      var f = r6 - e6;
      SA(f % 4 === 0);
      for (var p2 = new Array(f / 4), m2 = 0, y3 = e6;m2 < p2.length; m2++, y3 += 4) {
        var M;
        o2 === "big" ? M = t6[y3] << 24 | t6[y3 + 1] << 16 | t6[y3 + 2] << 8 | t6[y3 + 3] : M = t6[y3 + 3] << 24 | t6[y3 + 2] << 16 | t6[y3 + 1] << 8 | t6[y3], p2[m2] = M >>> 0;
      }
      return p2;
    }
    it.join32 = IA;
    function TA(t6, e6) {
      for (var r6 = new Array(t6.length * 4), o2 = 0, f = 0;o2 < t6.length; o2++, f += 4) {
        var p2 = t6[o2];
        e6 === "big" ? (r6[f] = p2 >>> 24, r6[f + 1] = p2 >>> 16 & 255, r6[f + 2] = p2 >>> 8 & 255, r6[f + 3] = p2 & 255) : (r6[f + 3] = p2 >>> 24, r6[f + 2] = p2 >>> 16 & 255, r6[f + 1] = p2 >>> 8 & 255, r6[f] = p2 & 255);
      }
      return r6;
    }
    it.split32 = TA;
    function kA(t6, e6) {
      return t6 >>> e6 | t6 << 32 - e6;
    }
    it.rotr32 = kA;
    function LA(t6, e6) {
      return t6 << e6 | t6 >>> 32 - e6;
    }
    it.rotl32 = LA;
    function NA(t6, e6) {
      return t6 + e6 >>> 0;
    }
    it.sum32 = NA;
    function DA(t6, e6, r6) {
      return t6 + e6 + r6 >>> 0;
    }
    it.sum32_3 = DA;
    function PA(t6, e6, r6, o2) {
      return t6 + e6 + r6 + o2 >>> 0;
    }
    it.sum32_4 = PA;
    function CA(t6, e6, r6, o2, f) {
      return t6 + e6 + r6 + o2 + f >>> 0;
    }
    it.sum32_5 = CA;
    function OA(t6, e6, r6, o2) {
      var f = t6[e6], p2 = t6[e6 + 1], m2 = o2 + p2 >>> 0, y3 = (m2 < o2 ? 1 : 0) + r6 + f;
      t6[e6] = y3 >>> 0, t6[e6 + 1] = m2;
    }
    it.sum64 = OA;
    function FA(t6, e6, r6, o2) {
      var f = e6 + o2 >>> 0, p2 = (f < e6 ? 1 : 0) + t6 + r6;
      return p2 >>> 0;
    }
    it.sum64_hi = FA;
    function UA(t6, e6, r6, o2) {
      var f = e6 + o2;
      return f >>> 0;
    }
    it.sum64_lo = UA;
    function zA(t6, e6, r6, o2, f, p2, m2, y3) {
      var M = 0, x = e6;
      x = x + o2 >>> 0, M += x < e6 ? 1 : 0, x = x + p2 >>> 0, M += x < p2 ? 1 : 0, x = x + y3 >>> 0, M += x < y3 ? 1 : 0;
      var S = t6 + r6 + f + m2 + M;
      return S >>> 0;
    }
    it.sum64_4_hi = zA;
    function HA(t6, e6, r6, o2, f, p2, m2, y3) {
      var M = e6 + o2 + p2 + y3;
      return M >>> 0;
    }
    it.sum64_4_lo = HA;
    function WA(t6, e6, r6, o2, f, p2, m2, y3, M, x) {
      var S = 0, E = e6;
      E = E + o2 >>> 0, S += E < e6 ? 1 : 0, E = E + p2 >>> 0, S += E < p2 ? 1 : 0, E = E + y3 >>> 0, S += E < y3 ? 1 : 0, E = E + x >>> 0, S += E < x ? 1 : 0;
      var B = t6 + r6 + f + m2 + M + S;
      return B >>> 0;
    }
    it.sum64_5_hi = WA;
    function KA(t6, e6, r6, o2, f, p2, m2, y3, M, x) {
      var S = e6 + o2 + p2 + y3 + x;
      return S >>> 0;
    }
    it.sum64_5_lo = KA;
    function jA(t6, e6, r6) {
      var o2 = e6 << 32 - r6 | t6 >>> r6;
      return o2 >>> 0;
    }
    it.rotr64_hi = jA;
    function ZA(t6, e6, r6) {
      var o2 = t6 << 32 - r6 | e6 >>> r6;
      return o2 >>> 0;
    }
    it.rotr64_lo = ZA;
    function VA(t6, e6, r6) {
      return t6 >>> r6;
    }
    it.shr64_hi = VA;
    function $A(t6, e6, r6) {
      var o2 = t6 << 32 - r6 | e6 >>> r6;
      return o2 >>> 0;
    }
    it.shr64_lo = $A;
  });
  Tf = T((B2) => {
    var R2 = Cr(), GA = ar();
    function Js() {
      this.pending = null, this.pendingTotal = 0, this.blockSize = this.constructor.blockSize, this.outSize = this.constructor.outSize, this.hmacStrength = this.constructor.hmacStrength, this.padLength = this.constructor.padLength / 8, this.endian = "big", this._delta8 = this.blockSize / 8, this._delta32 = this.blockSize / 32;
    }
    B2.BlockHash = Js;
    Js.prototype.update = function(e6, r6) {
      if (e6 = R2.toArray(e6, r6), this.pending ? this.pending = this.pending.concat(e6) : this.pending = e6, this.pendingTotal += e6.length, this.pending.length >= this._delta8) {
        e6 = this.pending;
        var o2 = e6.length % this._delta8;
        this.pending = e6.slice(e6.length - o2, e6.length), this.pending.length === 0 && (this.pending = null), e6 = R2.join32(e6, 0, e6.length - o2, this.endian);
        for (var f = 0;f < e6.length; f += this._delta32)
          this._update(e6, f, f + this._delta32);
      }
      return this;
    };
    Js.prototype.digest = function(e6) {
      return this.update(this._pad()), GA(this.pending === null), this._digest(e6);
    };
    Js.prototype._pad = function() {
      var e6 = this.pendingTotal, r6 = this._delta8, o2 = r6 - (e6 + this.padLength) % r6, f = new Array(o2 + this.padLength);
      f[0] = 128;
      for (var p2 = 1;p2 < o2; p2++)
        f[p2] = 0;
      if (e6 <<= 3, this.endian === "big") {
        for (var m2 = 8;m2 < this.padLength; m2++)
          f[p2++] = 0;
        f[p2++] = 0, f[p2++] = 0, f[p2++] = 0, f[p2++] = 0, f[p2++] = e6 >>> 24 & 255, f[p2++] = e6 >>> 16 & 255, f[p2++] = e6 >>> 8 & 255, f[p2++] = e6 & 255;
      } else
        for (f[p2++] = e6 & 255, f[p2++] = e6 >>> 8 & 255, f[p2++] = e6 >>> 16 & 255, f[p2++] = e6 >>> 24 & 255, f[p2++] = 0, f[p2++] = 0, f[p2++] = 0, f[p2++] = 0, m2 = 8;m2 < this.padLength; m2++)
          f[p2++] = 0;
      return f;
    };
  });
  Cl = T((Ri) => {
    var YA = Cr(), ni = YA.rotr32;
    function XA(t6, e6, r6, o2) {
      if (t6 === 0)
        return q2(e6, r6, o2);
      if (t6 === 1 || t6 === 3)
        return T2(e6, r6, o2);
      if (t6 === 2)
        return I2(e6, r6, o2);
    }
    Ri.ft_1 = XA;
    function q2(t6, e6, r6) {
      return t6 & e6 ^ ~t6 & r6;
    }
    Ri.ch32 = q2;
    function I2(t6, e6, r6) {
      return t6 & e6 ^ t6 & r6 ^ e6 & r6;
    }
    Ri.maj32 = I2;
    function T2(t6, e6, r6) {
      return t6 ^ e6 ^ r6;
    }
    Ri.p32 = T2;
    function JA(t6) {
      return ni(t6, 2) ^ ni(t6, 13) ^ ni(t6, 22);
    }
    Ri.s0_256 = JA;
    function QA(t6) {
      return ni(t6, 6) ^ ni(t6, 11) ^ ni(t6, 25);
    }
    Ri.s1_256 = QA;
    function eR(t6) {
      return ni(t6, 7) ^ ni(t6, 18) ^ t6 >>> 3;
    }
    Ri.g0_256 = eR;
    function tR(t6) {
      return ni(t6, 17) ^ ni(t6, 19) ^ t6 >>> 10;
    }
    Ri.g1_256 = tR;
  });
  N2 = T((Tk, L2) => {
    var kf = Cr(), rR = Tf(), iR = Cl(), Ol = kf.rotl32, Fa = kf.sum32, nR = kf.sum32_5, fR = iR.ft_1, k2 = rR.BlockHash, aR = [1518500249, 1859775393, 2400959708, 3395469782];
    function fi() {
      if (!(this instanceof fi))
        return new fi;
      k2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.W = new Array(80);
    }
    kf.inherits(fi, k2);
    L2.exports = fi;
    fi.blockSize = 512;
    fi.outSize = 160;
    fi.hmacStrength = 80;
    fi.padLength = 64;
    fi.prototype._update = function(e6, r6) {
      for (var o2 = this.W, f = 0;f < 16; f++)
        o2[f] = e6[r6 + f];
      for (;f < o2.length; f++)
        o2[f] = Ol(o2[f - 3] ^ o2[f - 8] ^ o2[f - 14] ^ o2[f - 16], 1);
      var p2 = this.h[0], m2 = this.h[1], y3 = this.h[2], M = this.h[3], x = this.h[4];
      for (f = 0;f < o2.length; f++) {
        var S = ~~(f / 20), E = nR(Ol(p2, 5), fR(S, m2, y3, M), x, o2[f], aR[S]);
        x = M, M = y3, y3 = Ol(m2, 30), m2 = p2, p2 = E;
      }
      this.h[0] = Fa(this.h[0], p2), this.h[1] = Fa(this.h[1], m2), this.h[2] = Fa(this.h[2], y3), this.h[3] = Fa(this.h[3], M), this.h[4] = Fa(this.h[4], x);
    };
    fi.prototype._digest = function(e6) {
      return e6 === "hex" ? kf.toHex32(this.h, "big") : kf.split32(this.h, "big");
    };
  });
  Fl = T((kk, P2) => {
    var Lf = Cr(), oR = Tf(), Nf = Cl(), sR = ar(), Or = Lf.sum32, hR = Lf.sum32_4, uR = Lf.sum32_5, lR = Nf.ch32, dR = Nf.maj32, cR = Nf.s0_256, pR = Nf.s1_256, vR = Nf.g0_256, bR = Nf.g1_256, D2 = oR.BlockHash, mR = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
    function ai() {
      if (!(this instanceof ai))
        return new ai;
      D2.call(this), this.h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], this.k = mR, this.W = new Array(64);
    }
    Lf.inherits(ai, D2);
    P2.exports = ai;
    ai.blockSize = 512;
    ai.outSize = 256;
    ai.hmacStrength = 192;
    ai.padLength = 64;
    ai.prototype._update = function(e6, r6) {
      for (var o2 = this.W, f = 0;f < 16; f++)
        o2[f] = e6[r6 + f];
      for (;f < o2.length; f++)
        o2[f] = hR(bR(o2[f - 2]), o2[f - 7], vR(o2[f - 15]), o2[f - 16]);
      var p2 = this.h[0], m2 = this.h[1], y3 = this.h[2], M = this.h[3], x = this.h[4], S = this.h[5], E = this.h[6], B = this.h[7];
      for (sR(this.k.length === o2.length), f = 0;f < o2.length; f++) {
        var q2 = uR(B, pR(x), lR(x, S, E), this.k[f], o2[f]), L = Or(cR(p2), dR(p2, m2, y3));
        B = E, E = S, S = x, x = Or(M, q2), M = y3, y3 = m2, m2 = p2, p2 = Or(q2, L);
      }
      this.h[0] = Or(this.h[0], p2), this.h[1] = Or(this.h[1], m2), this.h[2] = Or(this.h[2], y3), this.h[3] = Or(this.h[3], M), this.h[4] = Or(this.h[4], x), this.h[5] = Or(this.h[5], S), this.h[6] = Or(this.h[6], E), this.h[7] = Or(this.h[7], B);
    };
    ai.prototype._digest = function(e6) {
      return e6 === "hex" ? Lf.toHex32(this.h, "big") : Lf.split32(this.h, "big");
    };
  });
  F2 = T((Lk, O2) => {
    var Ul = Cr(), C2 = Fl();
    function Bi() {
      if (!(this instanceof Bi))
        return new Bi;
      C2.call(this), this.h = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428];
    }
    Ul.inherits(Bi, C2);
    O2.exports = Bi;
    Bi.blockSize = 512;
    Bi.outSize = 224;
    Bi.hmacStrength = 192;
    Bi.padLength = 64;
    Bi.prototype._digest = function(e6) {
      return e6 === "hex" ? Ul.toHex32(this.h.slice(0, 7), "big") : Ul.split32(this.h.slice(0, 7), "big");
    };
  });
  Wl = T((Nk, W2) => {
    var ir = Cr(), gR = Tf(), yR = ar(), oi = ir.rotr64_hi, si = ir.rotr64_lo, U2 = ir.shr64_hi, z2 = ir.shr64_lo, Ji = ir.sum64, zl = ir.sum64_hi, Hl = ir.sum64_lo, wR = ir.sum64_4_hi, MR = ir.sum64_4_lo, _R = ir.sum64_5_hi, xR = ir.sum64_5_lo, H2 = gR.BlockHash, SR = [1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591];
    function Fr() {
      if (!(this instanceof Fr))
        return new Fr;
      H2.call(this), this.h = [1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209], this.k = SR, this.W = new Array(160);
    }
    ir.inherits(Fr, H2);
    W2.exports = Fr;
    Fr.blockSize = 1024;
    Fr.outSize = 512;
    Fr.hmacStrength = 192;
    Fr.padLength = 128;
    Fr.prototype._prepareBlock = function(e6, r6) {
      for (var o2 = this.W, f = 0;f < 32; f++)
        o2[f] = e6[r6 + f];
      for (;f < o2.length; f += 2) {
        var p2 = DR(o2[f - 4], o2[f - 3]), m2 = PR(o2[f - 4], o2[f - 3]), y3 = o2[f - 14], M = o2[f - 13], x = LR(o2[f - 30], o2[f - 29]), S = NR(o2[f - 30], o2[f - 29]), E = o2[f - 32], B = o2[f - 31];
        o2[f] = wR(p2, m2, y3, M, x, S, E, B), o2[f + 1] = MR(p2, m2, y3, M, x, S, E, B);
      }
    };
    Fr.prototype._update = function(e6, r6) {
      this._prepareBlock(e6, r6);
      var o2 = this.W, f = this.h[0], p2 = this.h[1], m2 = this.h[2], y3 = this.h[3], M = this.h[4], x = this.h[5], S = this.h[6], E = this.h[7], B = this.h[8], q2 = this.h[9], L = this.h[10], ge = this.h[11], _e = this.h[12], N = this.h[13], we = this.h[14], ye = this.h[15];
      yR(this.k.length === o2.length);
      for (var xe = 0;xe < o2.length; xe += 2) {
        var Re = we, Ee = ye, Ae = TR(B, q2), P = kR(B, q2), Se = ER(B, q2, L, ge, _e, N), v = AR(B, q2, L, ge, _e, N), i3 = this.k[xe], a4 = this.k[xe + 1], h2 = o2[xe], s5 = o2[xe + 1], u2 = _R(Re, Ee, Ae, P, Se, v, i3, a4, h2, s5), c = xR(Re, Ee, Ae, P, Se, v, i3, a4, h2, s5);
        Re = qR(f, p2), Ee = IR(f, p2), Ae = RR(f, p2, m2, y3, M, x), P = BR(f, p2, m2, y3, M, x);
        var b3 = zl(Re, Ee, Ae, P), l = Hl(Re, Ee, Ae, P);
        we = _e, ye = N, _e = L, N = ge, L = B, ge = q2, B = zl(S, E, u2, c), q2 = Hl(E, E, u2, c), S = M, E = x, M = m2, x = y3, m2 = f, y3 = p2, f = zl(u2, c, b3, l), p2 = Hl(u2, c, b3, l);
      }
      Ji(this.h, 0, f, p2), Ji(this.h, 2, m2, y3), Ji(this.h, 4, M, x), Ji(this.h, 6, S, E), Ji(this.h, 8, B, q2), Ji(this.h, 10, L, ge), Ji(this.h, 12, _e, N), Ji(this.h, 14, we, ye);
    };
    Fr.prototype._digest = function(e6) {
      return e6 === "hex" ? ir.toHex32(this.h, "big") : ir.split32(this.h, "big");
    };
    function ER(t6, e6, r6, o2, f) {
      var p2 = t6 & r6 ^ ~t6 & f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function AR(t6, e6, r6, o2, f, p2) {
      var m2 = e6 & o2 ^ ~e6 & p2;
      return m2 < 0 && (m2 += 4294967296), m2;
    }
    function RR(t6, e6, r6, o2, f) {
      var p2 = t6 & r6 ^ t6 & f ^ r6 & f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function BR(t6, e6, r6, o2, f, p2) {
      var m2 = e6 & o2 ^ e6 & p2 ^ o2 & p2;
      return m2 < 0 && (m2 += 4294967296), m2;
    }
    function qR(t6, e6) {
      var r6 = oi(t6, e6, 28), o2 = oi(e6, t6, 2), f = oi(e6, t6, 7), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function IR(t6, e6) {
      var r6 = si(t6, e6, 28), o2 = si(e6, t6, 2), f = si(e6, t6, 7), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function TR(t6, e6) {
      var r6 = oi(t6, e6, 14), o2 = oi(t6, e6, 18), f = oi(e6, t6, 9), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function kR(t6, e6) {
      var r6 = si(t6, e6, 14), o2 = si(t6, e6, 18), f = si(e6, t6, 9), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function LR(t6, e6) {
      var r6 = oi(t6, e6, 1), o2 = oi(t6, e6, 8), f = U2(t6, e6, 7), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function NR(t6, e6) {
      var r6 = si(t6, e6, 1), o2 = si(t6, e6, 8), f = z2(t6, e6, 7), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function DR(t6, e6) {
      var r6 = oi(t6, e6, 19), o2 = oi(e6, t6, 29), f = U2(t6, e6, 6), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
    function PR(t6, e6) {
      var r6 = si(t6, e6, 19), o2 = si(e6, t6, 29), f = z2(t6, e6, 6), p2 = r6 ^ o2 ^ f;
      return p2 < 0 && (p2 += 4294967296), p2;
    }
  });
  Z2 = T((Dk, j2) => {
    var Kl = Cr(), K2 = Wl();
    function qi() {
      if (!(this instanceof qi))
        return new qi;
      K2.call(this), this.h = [3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428];
    }
    Kl.inherits(qi, K2);
    j2.exports = qi;
    qi.blockSize = 1024;
    qi.outSize = 384;
    qi.hmacStrength = 192;
    qi.padLength = 128;
    qi.prototype._digest = function(e6) {
      return e6 === "hex" ? Kl.toHex32(this.h.slice(0, 12), "big") : Kl.split32(this.h.slice(0, 12), "big");
    };
  });
  V2 = T((Df) => {
    Df.sha1 = N2();
    Df.sha224 = F2();
    Df.sha256 = Fl();
    Df.sha384 = Z2();
    Df.sha512 = Wl();
  });
  Q2 = T((J2) => {
    var On = Cr(), CR = Tf(), Qs = On.rotl32, $2 = On.sum32, Ua = On.sum32_3, G2 = On.sum32_4, X2 = CR.BlockHash;
    function hi() {
      if (!(this instanceof hi))
        return new hi;
      X2.call(this), this.h = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.endian = "little";
    }
    On.inherits(hi, X2);
    J2.ripemd160 = hi;
    hi.blockSize = 512;
    hi.outSize = 160;
    hi.hmacStrength = 192;
    hi.padLength = 64;
    hi.prototype._update = function(e6, r6) {
      for (var o2 = this.h[0], f = this.h[1], p2 = this.h[2], m2 = this.h[3], y3 = this.h[4], M = o2, x = f, S = p2, E = m2, B = y3, q2 = 0;q2 < 80; q2++) {
        var L = $2(Qs(G2(o2, Y2(q2, f, p2, m2), e6[UR[q2] + r6], OR(q2)), HR[q2]), y3);
        o2 = y3, y3 = m2, m2 = Qs(p2, 10), p2 = f, f = L, L = $2(Qs(G2(M, Y2(79 - q2, x, S, E), e6[zR[q2] + r6], FR(q2)), WR[q2]), B), M = B, B = E, E = Qs(S, 10), S = x, x = L;
      }
      L = Ua(this.h[1], p2, E), this.h[1] = Ua(this.h[2], m2, B), this.h[2] = Ua(this.h[3], y3, M), this.h[3] = Ua(this.h[4], o2, x), this.h[4] = Ua(this.h[0], f, S), this.h[0] = L;
    };
    hi.prototype._digest = function(e6) {
      return e6 === "hex" ? On.toHex32(this.h, "little") : On.split32(this.h, "little");
    };
    function Y2(t6, e6, r6, o2) {
      return t6 <= 15 ? e6 ^ r6 ^ o2 : t6 <= 31 ? e6 & r6 | ~e6 & o2 : t6 <= 47 ? (e6 | ~r6) ^ o2 : t6 <= 63 ? e6 & o2 | r6 & ~o2 : e6 ^ (r6 | ~o2);
    }
    function OR(t6) {
      return t6 <= 15 ? 0 : t6 <= 31 ? 1518500249 : t6 <= 47 ? 1859775393 : t6 <= 63 ? 2400959708 : 2840853838;
    }
    function FR(t6) {
      return t6 <= 15 ? 1352829926 : t6 <= 31 ? 1548603684 : t6 <= 47 ? 1836072691 : t6 <= 63 ? 2053994217 : 0;
    }
    var UR = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13], zR = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11], HR = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6], WR = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];
  });
  ty = T((Ok, ey) => {
    var KR = Cr(), jR = ar();
    function Pf(t6, e6, r6) {
      if (!(this instanceof Pf))
        return new Pf(t6, e6, r6);
      this.Hash = t6, this.blockSize = t6.blockSize / 8, this.outSize = t6.outSize / 8, this.inner = null, this.outer = null, this._init(KR.toArray(e6, r6));
    }
    ey.exports = Pf;
    Pf.prototype._init = function(e6) {
      e6.length > this.blockSize && (e6 = new this.Hash().update(e6).digest()), jR(e6.length <= this.blockSize);
      for (var r6 = e6.length;r6 < this.blockSize; r6++)
        e6.push(0);
      for (r6 = 0;r6 < e6.length; r6++)
        e6[r6] ^= 54;
      for (this.inner = new this.Hash().update(e6), r6 = 0;r6 < e6.length; r6++)
        e6[r6] ^= 106;
      this.outer = new this.Hash().update(e6);
    };
    Pf.prototype.update = function(e6, r6) {
      return this.inner.update(e6, r6), this;
    };
    Pf.prototype.digest = function(e6) {
      return this.outer.update(this.inner.digest()), this.outer.digest(e6);
    };
  });
  e0 = T((ry) => {
    var Kt = ry;
    Kt.utils = Cr();
    Kt.common = Tf();
    Kt.sha = V2();
    Kt.ripemd = Q2();
    Kt.hmac = ty();
    Kt.sha1 = Kt.sha.sha1;
    Kt.sha256 = Kt.sha.sha256;
    Kt.sha224 = Kt.sha.sha224;
    Kt.sha384 = Kt.sha.sha384;
    Kt.sha512 = Kt.sha.sha512;
    Kt.ripemd160 = Kt.ripemd.ripemd160;
  });
  ny = T((Uk, iy) => {
    iy.exports = { doubles: { step: 4, points: [["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a", "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"], ["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508", "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"], ["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739", "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"], ["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640", "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"], ["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c", "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"], ["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda", "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"], ["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa", "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"], ["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0", "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"], ["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d", "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"], ["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d", "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"], ["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1", "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"], ["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0", "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"], ["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047", "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"], ["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862", "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"], ["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7", "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"], ["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd", "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"], ["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83", "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"], ["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a", "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"], ["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8", "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"], ["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d", "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"], ["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725", "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"], ["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754", "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"], ["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c", "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"], ["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6", "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"], ["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39", "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"], ["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891", "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"], ["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b", "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"], ["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03", "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"], ["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d", "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"], ["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070", "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"], ["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4", "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"], ["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da", "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"], ["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11", "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"], ["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e", "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"], ["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41", "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"], ["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef", "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"], ["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8", "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"], ["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d", "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"], ["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96", "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"], ["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd", "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"], ["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5", "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"], ["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266", "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"], ["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71", "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"], ["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac", "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"], ["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751", "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"], ["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e", "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"], ["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241", "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"], ["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3", "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"], ["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f", "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"], ["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19", "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"], ["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be", "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"], ["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9", "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"], ["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2", "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"], ["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13", "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"], ["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c", "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"], ["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba", "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"], ["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151", "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"], ["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073", "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"], ["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458", "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"], ["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b", "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"], ["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366", "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"], ["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa", "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"], ["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0", "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"], ["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787", "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"], ["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e", "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]] }, naf: { wnd: 7, points: [["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9", "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"], ["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4", "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"], ["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc", "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"], ["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe", "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"], ["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb", "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"], ["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8", "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"], ["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e", "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"], ["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34", "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"], ["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c", "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"], ["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5", "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"], ["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f", "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"], ["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714", "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"], ["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729", "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"], ["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db", "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"], ["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4", "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"], ["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5", "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"], ["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479", "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"], ["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d", "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"], ["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f", "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"], ["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb", "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"], ["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9", "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"], ["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963", "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"], ["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74", "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"], ["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530", "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"], ["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b", "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"], ["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247", "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"], ["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1", "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"], ["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120", "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"], ["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435", "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"], ["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18", "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"], ["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8", "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"], ["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb", "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"], ["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f", "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"], ["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143", "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"], ["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba", "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"], ["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45", "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"], ["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a", "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"], ["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e", "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"], ["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8", "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"], ["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c", "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"], ["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519", "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"], ["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab", "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"], ["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca", "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"], ["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf", "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"], ["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610", "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"], ["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4", "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"], ["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c", "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"], ["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940", "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"], ["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980", "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"], ["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3", "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"], ["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf", "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"], ["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63", "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"], ["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448", "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"], ["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf", "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"], ["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5", "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"], ["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6", "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"], ["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5", "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"], ["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99", "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"], ["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51", "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"], ["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5", "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"], ["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5", "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"], ["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997", "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"], ["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881", "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"], ["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5", "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"], ["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66", "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"], ["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726", "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"], ["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede", "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"], ["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94", "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"], ["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31", "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"], ["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51", "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"], ["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252", "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"], ["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5", "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"], ["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b", "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"], ["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4", "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"], ["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f", "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"], ["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889", "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"], ["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246", "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"], ["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984", "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"], ["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a", "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"], ["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030", "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"], ["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197", "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"], ["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593", "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"], ["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef", "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"], ["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38", "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"], ["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a", "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"], ["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111", "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"], ["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502", "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"], ["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea", "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"], ["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26", "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"], ["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986", "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"], ["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e", "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"], ["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4", "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"], ["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda", "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"], ["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859", "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"], ["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f", "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"], ["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c", "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"], ["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942", "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"], ["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a", "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"], ["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80", "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"], ["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d", "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"], ["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1", "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"], ["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63", "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"], ["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352", "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"], ["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193", "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"], ["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00", "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"], ["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58", "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"], ["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7", "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"], ["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8", "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"], ["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e", "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"], ["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d", "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"], ["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b", "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"], ["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f", "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"], ["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6", "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"], ["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297", "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"], ["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a", "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"], ["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c", "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"], ["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52", "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"], ["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb", "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"], ["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065", "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"], ["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917", "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"], ["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9", "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"], ["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3", "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"], ["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57", "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"], ["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66", "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"], ["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8", "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"], ["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721", "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"], ["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180", "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]] } };
  });
  t0 = T((oy) => {
    var Zl = oy, Qi = e0(), jl = Pl(), ZR = or(), fy = ZR.assert;
    function ay(t6) {
      t6.type === "short" ? this.curve = new jl.short(t6) : t6.type === "edwards" ? this.curve = new jl.edwards(t6) : this.curve = new jl.mont(t6), this.g = this.curve.g, this.n = this.curve.n, this.hash = t6.hash, fy(this.g.validate(), "Invalid curve"), fy(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
    }
    Zl.PresetCurve = ay;
    function en(t6, e6) {
      Object.defineProperty(Zl, t6, { configurable: true, enumerable: true, get: function() {
        var r6 = new ay(e6);
        return Object.defineProperty(Zl, t6, { configurable: true, enumerable: true, value: r6 }), r6;
      } });
    }
    en("p192", { type: "short", prime: "p192", p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff", a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc", b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1", n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831", hash: Qi.sha256, gRed: false, g: ["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012", "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"] });
    en("p224", { type: "short", prime: "p224", p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001", a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe", b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4", n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d", hash: Qi.sha256, gRed: false, g: ["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21", "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"] });
    en("p256", { type: "short", prime: null, p: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff", a: "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc", b: "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b", n: "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551", hash: Qi.sha256, gRed: false, g: ["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296", "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"] });
    en("p384", { type: "short", prime: null, p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff", a: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc", b: "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef", n: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973", hash: Qi.sha384, gRed: false, g: ["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7", "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"] });
    en("p521", { type: "short", prime: null, p: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff", a: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc", b: "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00", n: "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409", hash: Qi.sha512, gRed: false, g: ["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66", "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"] });
    en("curve25519", { type: "mont", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "76d06", b: "1", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: Qi.sha256, gRed: false, g: ["9"] });
    en("ed25519", { type: "edwards", prime: "p25519", p: "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed", a: "-1", c: "1", d: "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3", n: "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed", hash: Qi.sha256, gRed: false, g: ["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a", "6666666666666666666666666666666666666666666666666666666666666658"] });
    var Vl;
    try {
      Vl = ny();
    } catch {
      Vl = undefined;
    }
    en("secp256k1", { type: "short", prime: "k256", p: "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f", a: "0", b: "7", n: "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141", h: "1", hash: Qi.sha256, beta: "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee", lambda: "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72", basis: [{ a: "3086d221a7d46bcde86c90e49284eb15", b: "-e4437ed6010e88286f547fa90abfe4c3" }, { a: "114ca50f7a8e2f3f657c1108d9d44cfd8", b: "3086d221a7d46bcde86c90e49284eb15" }], gRed: false, g: ["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798", "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8", Vl] });
  });
  uy = T((Hk, hy) => {
    var VR = e0(), Fn = Nl(), sy = ar();
    function tn(t6) {
      if (!(this instanceof tn))
        return new tn(t6);
      this.hash = t6.hash, this.predResist = !!t6.predResist, this.outLen = this.hash.outSize, this.minEntropy = t6.minEntropy || this.hash.hmacStrength, this._reseed = null, this.reseedInterval = null, this.K = null, this.V = null;
      var e6 = Fn.toArray(t6.entropy, t6.entropyEnc || "hex"), r6 = Fn.toArray(t6.nonce, t6.nonceEnc || "hex"), o2 = Fn.toArray(t6.pers, t6.persEnc || "hex");
      sy(e6.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._init(e6, r6, o2);
    }
    hy.exports = tn;
    tn.prototype._init = function(e6, r6, o2) {
      var f = e6.concat(r6).concat(o2);
      this.K = new Array(this.outLen / 8), this.V = new Array(this.outLen / 8);
      for (var p2 = 0;p2 < this.V.length; p2++)
        this.K[p2] = 0, this.V[p2] = 1;
      this._update(f), this._reseed = 1, this.reseedInterval = 281474976710656;
    };
    tn.prototype._hmac = function() {
      return new VR.hmac(this.hash, this.K);
    };
    tn.prototype._update = function(e6) {
      var r6 = this._hmac().update(this.V).update([0]);
      e6 && (r6 = r6.update(e6)), this.K = r6.digest(), this.V = this._hmac().update(this.V).digest(), e6 && (this.K = this._hmac().update(this.V).update([1]).update(e6).digest(), this.V = this._hmac().update(this.V).digest());
    };
    tn.prototype.reseed = function(e6, r6, o2, f) {
      typeof r6 != "string" && (f = o2, o2 = r6, r6 = null), e6 = Fn.toArray(e6, r6), o2 = Fn.toArray(o2, f), sy(e6.length >= this.minEntropy / 8, "Not enough entropy. Minimum is: " + this.minEntropy + " bits"), this._update(e6.concat(o2 || [])), this._reseed = 1;
    };
    tn.prototype.generate = function(e6, r6, o2, f) {
      if (this._reseed > this.reseedInterval)
        throw new Error("Reseed is required");
      typeof r6 != "string" && (f = o2, o2 = r6, r6 = null), o2 && (o2 = Fn.toArray(o2, f || "hex"), this._update(o2));
      for (var p2 = [];p2.length < e6; )
        this.V = this._hmac().update(this.V).digest(), p2 = p2.concat(this.V);
      var m2 = p2.slice(0, e6);
      return this._update(o2), this._reseed++, Fn.encode(m2, r6);
    };
  });
  dy = T((Wk, ly) => {
    var $R = ri(), GR = or(), $l = GR.assert;
    function Gt(t6, e6) {
      this.ec = t6, this.priv = null, this.pub = null, e6.priv && this._importPrivate(e6.priv, e6.privEnc), e6.pub && this._importPublic(e6.pub, e6.pubEnc);
    }
    ly.exports = Gt;
    Gt.fromPublic = function(e6, r6, o2) {
      return r6 instanceof Gt ? r6 : new Gt(e6, { pub: r6, pubEnc: o2 });
    };
    Gt.fromPrivate = function(e6, r6, o2) {
      return r6 instanceof Gt ? r6 : new Gt(e6, { priv: r6, privEnc: o2 });
    };
    Gt.prototype.validate = function() {
      var e6 = this.getPublic();
      return e6.isInfinity() ? { result: false, reason: "Invalid public key" } : e6.validate() ? e6.mul(this.ec.curve.n).isInfinity() ? { result: true, reason: null } : { result: false, reason: "Public key * N != O" } : { result: false, reason: "Public key is not a point" };
    };
    Gt.prototype.getPublic = function(e6, r6) {
      return typeof e6 == "string" && (r6 = e6, e6 = null), this.pub || (this.pub = this.ec.g.mul(this.priv)), r6 ? this.pub.encode(r6, e6) : this.pub;
    };
    Gt.prototype.getPrivate = function(e6) {
      return e6 === "hex" ? this.priv.toString(16, 2) : this.priv;
    };
    Gt.prototype._importPrivate = function(e6, r6) {
      this.priv = new $R(e6, r6 || 16), this.priv = this.priv.umod(this.ec.curve.n);
    };
    Gt.prototype._importPublic = function(e6, r6) {
      if (e6.x || e6.y) {
        this.ec.curve.type === "mont" ? $l(e6.x, "Need x coordinate") : (this.ec.curve.type === "short" || this.ec.curve.type === "edwards") && $l(e6.x && e6.y, "Need both x and y coordinate"), this.pub = this.ec.curve.point(e6.x, e6.y);
        return;
      }
      this.pub = this.ec.curve.decodePoint(e6, r6);
    };
    Gt.prototype.derive = function(e6) {
      return e6.validate() || $l(e6.validate(), "public point not validated"), e6.mul(this.priv).getX();
    };
    Gt.prototype.sign = function(e6, r6, o2) {
      return this.ec.sign(e6, this, r6, o2);
    };
    Gt.prototype.verify = function(e6, r6) {
      return this.ec.verify(e6, r6, this);
    };
    Gt.prototype.inspect = function() {
      return "<Key priv: " + (this.priv && this.priv.toString(16, 2)) + " pub: " + (this.pub && this.pub.inspect()) + " >";
    };
  });
  vy = T((Kk, py) => {
    var r0 = ri(), Xl = or(), YR = Xl.assert;
    function i0(t6, e6) {
      if (t6 instanceof i0)
        return t6;
      this._importDER(t6, e6) || (YR(t6.r && t6.s, "Signature without r or s"), this.r = new r0(t6.r, 16), this.s = new r0(t6.s, 16), t6.recoveryParam === undefined ? this.recoveryParam = null : this.recoveryParam = t6.recoveryParam);
    }
    py.exports = i0;
    function XR() {
      this.place = 0;
    }
    function Gl(t6, e6) {
      var r6 = t6[e6.place++];
      if (!(r6 & 128))
        return r6;
      var o2 = r6 & 15;
      if (o2 === 0 || o2 > 4)
        return false;
      for (var f = 0, p2 = 0, m2 = e6.place;p2 < o2; p2++, m2++)
        f <<= 8, f |= t6[m2], f >>>= 0;
      return f <= 127 ? false : (e6.place = m2, f);
    }
    function cy(t6) {
      for (var e6 = 0, r6 = t6.length - 1;!t6[e6] && !(t6[e6 + 1] & 128) && e6 < r6; )
        e6++;
      return e6 === 0 ? t6 : t6.slice(e6);
    }
    i0.prototype._importDER = function(e6, r6) {
      e6 = Xl.toArray(e6, r6);
      var o2 = new XR;
      if (e6[o2.place++] !== 48)
        return false;
      var f = Gl(e6, o2);
      if (f === false || f + o2.place !== e6.length || e6[o2.place++] !== 2)
        return false;
      var p2 = Gl(e6, o2);
      if (p2 === false)
        return false;
      var m2 = e6.slice(o2.place, p2 + o2.place);
      if (o2.place += p2, e6[o2.place++] !== 2)
        return false;
      var y3 = Gl(e6, o2);
      if (y3 === false || e6.length !== y3 + o2.place)
        return false;
      var M = e6.slice(o2.place, y3 + o2.place);
      if (m2[0] === 0)
        if (m2[1] & 128)
          m2 = m2.slice(1);
        else
          return false;
      if (M[0] === 0)
        if (M[1] & 128)
          M = M.slice(1);
        else
          return false;
      return this.r = new r0(m2), this.s = new r0(M), this.recoveryParam = null, true;
    };
    function Yl(t6, e6) {
      if (e6 < 128) {
        t6.push(e6);
        return;
      }
      var r6 = 1 + (Math.log(e6) / Math.LN2 >>> 3);
      for (t6.push(r6 | 128);--r6; )
        t6.push(e6 >>> (r6 << 3) & 255);
      t6.push(e6);
    }
    i0.prototype.toDER = function(e6) {
      var r6 = this.r.toArray(), o2 = this.s.toArray();
      for (r6[0] & 128 && (r6 = [0].concat(r6)), o2[0] & 128 && (o2 = [0].concat(o2)), r6 = cy(r6), o2 = cy(o2);!o2[0] && !(o2[1] & 128); )
        o2 = o2.slice(1);
      var f = [2];
      Yl(f, r6.length), f = f.concat(r6), f.push(2), Yl(f, o2.length);
      var p2 = f.concat(o2), m2 = [48];
      return Yl(m2, p2.length), m2 = m2.concat(p2), Xl.encode(m2, e6);
    };
  });
  yy = T((jk, gy) => {
    var Un = ri(), by = uy(), JR = or(), Jl = t0(), QR = As(), my = JR.assert, Ql = dy(), n0 = vy();
    function Sr(t6) {
      if (!(this instanceof Sr))
        return new Sr(t6);
      typeof t6 == "string" && (my(Object.prototype.hasOwnProperty.call(Jl, t6), "Unknown curve " + t6), t6 = Jl[t6]), t6 instanceof Jl.PresetCurve && (t6 = { curve: t6 }), this.curve = t6.curve.curve, this.n = this.curve.n, this.nh = this.n.ushrn(1), this.g = this.curve.g, this.g = t6.curve.g, this.g.precompute(t6.curve.n.bitLength() + 1), this.hash = t6.hash || t6.curve.hash;
    }
    gy.exports = Sr;
    Sr.prototype.keyPair = function(e6) {
      return new Ql(this, e6);
    };
    Sr.prototype.keyFromPrivate = function(e6, r6) {
      return Ql.fromPrivate(this, e6, r6);
    };
    Sr.prototype.keyFromPublic = function(e6, r6) {
      return Ql.fromPublic(this, e6, r6);
    };
    Sr.prototype.genKeyPair = function(e6) {
      e6 || (e6 = {});
      for (var r6 = new by({ hash: this.hash, pers: e6.pers, persEnc: e6.persEnc || "utf8", entropy: e6.entropy || QR(this.hash.hmacStrength), entropyEnc: e6.entropy && e6.entropyEnc || "utf8", nonce: this.n.toArray() }), o2 = this.n.byteLength(), f = this.n.sub(new Un(2));; ) {
        var p2 = new Un(r6.generate(o2));
        if (!(p2.cmp(f) > 0))
          return p2.iaddn(1), this.keyFromPrivate(p2);
      }
    };
    Sr.prototype._truncateToN = function(e6, r6) {
      var o2 = e6.byteLength() * 8 - this.n.bitLength();
      return o2 > 0 && (e6 = e6.ushrn(o2)), !r6 && e6.cmp(this.n) >= 0 ? e6.sub(this.n) : e6;
    };
    Sr.prototype.sign = function(e6, r6, o2, f) {
      typeof o2 == "object" && (f = o2, o2 = null), f || (f = {}), r6 = this.keyFromPrivate(r6, o2), e6 = this._truncateToN(new Un(e6, 16));
      for (var p2 = this.n.byteLength(), m2 = r6.getPrivate().toArray("be", p2), y3 = e6.toArray("be", p2), M = new by({ hash: this.hash, entropy: m2, nonce: y3, pers: f.pers, persEnc: f.persEnc || "utf8" }), x = this.n.sub(new Un(1)), S = 0;; S++) {
        var E = f.k ? f.k(S) : new Un(M.generate(this.n.byteLength()));
        if (E = this._truncateToN(E, true), !(E.cmpn(1) <= 0 || E.cmp(x) >= 0)) {
          var B = this.g.mul(E);
          if (!B.isInfinity()) {
            var q2 = B.getX(), L = q2.umod(this.n);
            if (L.cmpn(0) !== 0) {
              var ge = E.invm(this.n).mul(L.mul(r6.getPrivate()).iadd(e6));
              if (ge = ge.umod(this.n), ge.cmpn(0) !== 0) {
                var _e = (B.getY().isOdd() ? 1 : 0) | (q2.cmp(L) !== 0 ? 2 : 0);
                return f.canonical && ge.cmp(this.nh) > 0 && (ge = this.n.sub(ge), _e ^= 1), new n0({ r: L, s: ge, recoveryParam: _e });
              }
            }
          }
        }
      }
    };
    Sr.prototype.verify = function(e6, r6, o2, f) {
      e6 = this._truncateToN(new Un(e6, 16)), o2 = this.keyFromPublic(o2, f), r6 = new n0(r6, "hex");
      var { r: p2, s: m2 } = r6;
      if (p2.cmpn(1) < 0 || p2.cmp(this.n) >= 0 || m2.cmpn(1) < 0 || m2.cmp(this.n) >= 0)
        return false;
      var y3 = m2.invm(this.n), M = y3.mul(e6).umod(this.n), x = y3.mul(p2).umod(this.n), S;
      return this.curve._maxwellTrick ? (S = this.g.jmulAdd(M, o2.getPublic(), x), S.isInfinity() ? false : S.eqXToP(p2)) : (S = this.g.mulAdd(M, o2.getPublic(), x), S.isInfinity() ? false : S.getX().umod(this.n).cmp(p2) === 0);
    };
    Sr.prototype.recoverPubKey = function(t6, e6, r6, o2) {
      my((3 & r6) === r6, "The recovery param is more than two bits"), e6 = new n0(e6, o2);
      var f = this.n, p2 = new Un(t6), m2 = e6.r, y3 = e6.s, M = r6 & 1, x = r6 >> 1;
      if (m2.cmp(this.curve.p.umod(this.curve.n)) >= 0 && x)
        throw new Error("Unable to find sencond key candinate");
      x ? m2 = this.curve.pointFromX(m2.add(this.curve.n), M) : m2 = this.curve.pointFromX(m2, M);
      var S = e6.r.invm(f), E = f.sub(p2).mul(S).umod(f), B = y3.mul(S).umod(f);
      return this.g.mulAdd(E, m2, B);
    };
    Sr.prototype.getKeyRecoveryParam = function(t6, e6, r6, o2) {
      if (e6 = new n0(e6, o2), e6.recoveryParam !== null)
        return e6.recoveryParam;
      for (var f = 0;f < 4; f++) {
        var p2;
        try {
          p2 = this.recoverPubKey(t6, e6, f);
        } catch {
          continue;
        }
        if (p2.eq(r6))
          return f;
      }
      throw new Error("Unable to find valid recovery factor");
    };
  });
  xy = T((Zk, _y) => {
    var za = or(), My = za.assert, wy = za.parseBytes, Cf = za.cachedProperty;
    function Ft(t6, e6) {
      this.eddsa = t6, this._secret = wy(e6.secret), t6.isPoint(e6.pub) ? this._pub = e6.pub : this._pubBytes = wy(e6.pub);
    }
    Ft.fromPublic = function(e6, r6) {
      return r6 instanceof Ft ? r6 : new Ft(e6, { pub: r6 });
    };
    Ft.fromSecret = function(e6, r6) {
      return r6 instanceof Ft ? r6 : new Ft(e6, { secret: r6 });
    };
    Ft.prototype.secret = function() {
      return this._secret;
    };
    Cf(Ft, "pubBytes", function() {
      return this.eddsa.encodePoint(this.pub());
    });
    Cf(Ft, "pub", function() {
      return this._pubBytes ? this.eddsa.decodePoint(this._pubBytes) : this.eddsa.g.mul(this.priv());
    });
    Cf(Ft, "privBytes", function() {
      var e6 = this.eddsa, r6 = this.hash(), o2 = e6.encodingLength - 1, f = r6.slice(0, e6.encodingLength);
      return f[0] &= 248, f[o2] &= 127, f[o2] |= 64, f;
    });
    Cf(Ft, "priv", function() {
      return this.eddsa.decodeInt(this.privBytes());
    });
    Cf(Ft, "hash", function() {
      return this.eddsa.hash().update(this.secret()).digest();
    });
    Cf(Ft, "messagePrefix", function() {
      return this.hash().slice(this.eddsa.encodingLength);
    });
    Ft.prototype.sign = function(e6) {
      return My(this._secret, "KeyPair can only verify"), this.eddsa.sign(e6, this);
    };
    Ft.prototype.verify = function(e6, r6) {
      return this.eddsa.verify(e6, r6, this);
    };
    Ft.prototype.getSecret = function(e6) {
      return My(this._secret, "KeyPair is public only"), za.encode(this.secret(), e6);
    };
    Ft.prototype.getPublic = function(e6) {
      return za.encode(this.pubBytes(), e6);
    };
    _y.exports = Ft;
  });
  Ey = T((Vk, Sy) => {
    var eB = ri(), f0 = or(), tB = f0.assert, a0 = f0.cachedProperty, rB = f0.parseBytes;
    function zn(t6, e6) {
      this.eddsa = t6, typeof e6 != "object" && (e6 = rB(e6)), Array.isArray(e6) && (e6 = { R: e6.slice(0, t6.encodingLength), S: e6.slice(t6.encodingLength) }), tB(e6.R && e6.S, "Signature without R or S"), t6.isPoint(e6.R) && (this._R = e6.R), e6.S instanceof eB && (this._S = e6.S), this._Rencoded = Array.isArray(e6.R) ? e6.R : e6.Rencoded, this._Sencoded = Array.isArray(e6.S) ? e6.S : e6.Sencoded;
    }
    a0(zn, "S", function() {
      return this.eddsa.decodeInt(this.Sencoded());
    });
    a0(zn, "R", function() {
      return this.eddsa.decodePoint(this.Rencoded());
    });
    a0(zn, "Rencoded", function() {
      return this.eddsa.encodePoint(this.R());
    });
    a0(zn, "Sencoded", function() {
      return this.eddsa.encodeInt(this.S());
    });
    zn.prototype.toBytes = function() {
      return this.Rencoded().concat(this.Sencoded());
    };
    zn.prototype.toHex = function() {
      return f0.encode(this.toBytes(), "hex").toUpperCase();
    };
    Sy.exports = zn;
  });
  Iy = T(($k, qy) => {
    var iB = e0(), nB = t0(), Of = or(), fB = Of.assert, Ry = Of.parseBytes, By = xy(), Ay = Ey();
    function nr(t6) {
      if (fB(t6 === "ed25519", "only tested with ed25519 so far"), !(this instanceof nr))
        return new nr(t6);
      t6 = nB[t6].curve, this.curve = t6, this.g = t6.g, this.g.precompute(t6.n.bitLength() + 1), this.pointClass = t6.point().constructor, this.encodingLength = Math.ceil(t6.n.bitLength() / 8), this.hash = iB.sha512;
    }
    qy.exports = nr;
    nr.prototype.sign = function(e6, r6) {
      e6 = Ry(e6);
      var o2 = this.keyFromSecret(r6), f = this.hashInt(o2.messagePrefix(), e6), p2 = this.g.mul(f), m2 = this.encodePoint(p2), y3 = this.hashInt(m2, o2.pubBytes(), e6).mul(o2.priv()), M = f.add(y3).umod(this.curve.n);
      return this.makeSignature({ R: p2, S: M, Rencoded: m2 });
    };
    nr.prototype.verify = function(e6, r6, o2) {
      e6 = Ry(e6), r6 = this.makeSignature(r6);
      var f = this.keyFromPublic(o2), p2 = this.hashInt(r6.Rencoded(), f.pubBytes(), e6), m2 = this.g.mul(r6.S()), y3 = r6.R().add(f.pub().mul(p2));
      return y3.eq(m2);
    };
    nr.prototype.hashInt = function() {
      for (var e6 = this.hash(), r6 = 0;r6 < arguments.length; r6++)
        e6.update(arguments[r6]);
      return Of.intFromLE(e6.digest()).umod(this.curve.n);
    };
    nr.prototype.keyFromPublic = function(e6) {
      return By.fromPublic(this, e6);
    };
    nr.prototype.keyFromSecret = function(e6) {
      return By.fromSecret(this, e6);
    };
    nr.prototype.makeSignature = function(e6) {
      return e6 instanceof Ay ? e6 : new Ay(this, e6);
    };
    nr.prototype.encodePoint = function(e6) {
      var r6 = e6.getY().toArray("le", this.encodingLength);
      return r6[this.encodingLength - 1] |= e6.getX().isOdd() ? 128 : 0, r6;
    };
    nr.prototype.decodePoint = function(e6) {
      e6 = Of.parseBytes(e6);
      var r6 = e6.length - 1, o2 = e6.slice(0, r6).concat(e6[r6] & -129), f = (e6[r6] & 128) !== 0, p2 = Of.intFromLE(o2);
      return this.curve.pointFromY(p2, f);
    };
    nr.prototype.encodeInt = function(e6) {
      return e6.toArray("le", this.encodingLength);
    };
    nr.prototype.decodeInt = function(e6) {
      return Of.intFromLE(e6);
    };
    nr.prototype.isPoint = function(e6) {
      return e6 instanceof this.pointClass;
    };
  });
  o0 = T((Ty) => {
    var Hn = Ty;
    Hn.version = s22().version;
    Hn.utils = or();
    Hn.rand = As();
    Hn.curve = Pl();
    Hn.curves = t0();
    Hn.ec = yy();
    Hn.eddsa = Iy();
  });
  td = T((ky, ed) => {
    (function(t6, e6) {
      function r6(v, i3) {
        if (!v)
          throw new Error(i3 || "Assertion failed");
      }
      function o2(v, i3) {
        v.super_ = i3;
        var a4 = function() {
        };
        a4.prototype = i3.prototype, v.prototype = new a4, v.prototype.constructor = v;
      }
      function f(v, i3, a4) {
        if (f.isBN(v))
          return v;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i3 === "le" || i3 === "be") && (a4 = i3, i3 = 10), this._init(v || 0, i3 || 10, a4 || "be"));
      }
      typeof t6 == "object" ? t6.exports = f : e6.BN = f, f.BN = f, f.wordSize = 26;
      var p2;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p2 = window.Buffer : p2 = ji().Buffer;
      } catch {
      }
      f.isBN = function(i3) {
        return i3 instanceof f ? true : i3 !== null && typeof i3 == "object" && i3.constructor.wordSize === f.wordSize && Array.isArray(i3.words);
      }, f.max = function(i3, a4) {
        return i3.cmp(a4) > 0 ? i3 : a4;
      }, f.min = function(i3, a4) {
        return i3.cmp(a4) < 0 ? i3 : a4;
      }, f.prototype._init = function(i3, a4, h2) {
        if (typeof i3 == "number")
          return this._initNumber(i3, a4, h2);
        if (typeof i3 == "object")
          return this._initArray(i3, a4, h2);
        a4 === "hex" && (a4 = 16), r6(a4 === (a4 | 0) && a4 >= 2 && a4 <= 36), i3 = i3.toString().replace(/\s+/g, "");
        var s5 = 0;
        i3[0] === "-" && (s5++, this.negative = 1), s5 < i3.length && (a4 === 16 ? this._parseHex(i3, s5, h2) : (this._parseBase(i3, a4, s5), h2 === "le" && this._initArray(this.toArray(), a4, h2)));
      }, f.prototype._initNumber = function(i3, a4, h2) {
        i3 < 0 && (this.negative = 1, i3 = -i3), i3 < 67108864 ? (this.words = [i3 & 67108863], this.length = 1) : i3 < 4503599627370496 ? (this.words = [i3 & 67108863, i3 / 67108864 & 67108863], this.length = 2) : (r6(i3 < 9007199254740992), this.words = [i3 & 67108863, i3 / 67108864 & 67108863, 1], this.length = 3), h2 === "le" && this._initArray(this.toArray(), a4, h2);
      }, f.prototype._initArray = function(i3, a4, h2) {
        if (r6(typeof i3.length == "number"), i3.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i3.length / 3), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2, c, b3 = 0;
        if (h2 === "be")
          for (s5 = i3.length - 1, u2 = 0;s5 >= 0; s5 -= 3)
            c = i3[s5] | i3[s5 - 1] << 8 | i3[s5 - 2] << 16, this.words[u2] |= c << b3 & 67108863, this.words[u2 + 1] = c >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u2++);
        else if (h2 === "le")
          for (s5 = 0, u2 = 0;s5 < i3.length; s5 += 3)
            c = i3[s5] | i3[s5 + 1] << 8 | i3[s5 + 2] << 16, this.words[u2] |= c << b3 & 67108863, this.words[u2 + 1] = c >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u2++);
        return this.strip();
      };
      function m2(v, i3) {
        var a4 = v.charCodeAt(i3);
        return a4 >= 65 && a4 <= 70 ? a4 - 55 : a4 >= 97 && a4 <= 102 ? a4 - 87 : a4 - 48 & 15;
      }
      function y3(v, i3, a4) {
        var h2 = m2(v, a4);
        return a4 - 1 >= i3 && (h2 |= m2(v, a4 - 1) << 4), h2;
      }
      f.prototype._parseHex = function(i3, a4, h2) {
        this.length = Math.ceil((i3.length - a4) / 6), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2 = 0, c = 0, b3;
        if (h2 === "be")
          for (s5 = i3.length - 1;s5 >= a4; s5 -= 2)
            b3 = y3(i3, a4, s5) << u2, this.words[c] |= b3 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b3 >>> 26) : u2 += 8;
        else {
          var l = i3.length - a4;
          for (s5 = l % 2 === 0 ? a4 + 1 : a4;s5 < i3.length; s5 += 2)
            b3 = y3(i3, a4, s5) << u2, this.words[c] |= b3 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b3 >>> 26) : u2 += 8;
        }
        this.strip();
      };
      function M(v, i3, a4, h2) {
        for (var s5 = 0, u2 = Math.min(v.length, a4), c = i3;c < u2; c++) {
          var b3 = v.charCodeAt(c) - 48;
          s5 *= h2, b3 >= 49 ? s5 += b3 - 49 + 10 : b3 >= 17 ? s5 += b3 - 17 + 10 : s5 += b3;
        }
        return s5;
      }
      f.prototype._parseBase = function(i3, a4, h2) {
        this.words = [0], this.length = 1;
        for (var s5 = 0, u2 = 1;u2 <= 67108863; u2 *= a4)
          s5++;
        s5--, u2 = u2 / a4 | 0;
        for (var c = i3.length - h2, b3 = c % s5, l = Math.min(c, c - b3) + h2, n2 = 0, d2 = h2;d2 < l; d2 += s5)
          n2 = M(i3, d2, d2 + s5, a4), this.imuln(u2), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        if (b3 !== 0) {
          var w = 1;
          for (n2 = M(i3, d2, i3.length, a4), d2 = 0;d2 < b3; d2++)
            w *= a4;
          this.imuln(w), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        }
        this.strip();
      }, f.prototype.copy = function(i3) {
        i3.words = new Array(this.length);
        for (var a4 = 0;a4 < this.length; a4++)
          i3.words[a4] = this.words[a4];
        i3.length = this.length, i3.negative = this.negative, i3.red = this.red;
      }, f.prototype.clone = function() {
        var i3 = new f(null);
        return this.copy(i3), i3;
      }, f.prototype._expand = function(i3) {
        for (;this.length < i3; )
          this.words[this.length++] = 0;
        return this;
      }, f.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f.prototype.toString = function(i3, a4) {
        i3 = i3 || 10, a4 = a4 | 0 || 1;
        var h2;
        if (i3 === 16 || i3 === "hex") {
          h2 = "";
          for (var s5 = 0, u2 = 0, c = 0;c < this.length; c++) {
            var b3 = this.words[c], l = ((b3 << s5 | u2) & 16777215).toString(16);
            u2 = b3 >>> 24 - s5 & 16777215, u2 !== 0 || c !== this.length - 1 ? h2 = x[6 - l.length] + l + h2 : h2 = l + h2, s5 += 2, s5 >= 26 && (s5 -= 26, c--);
          }
          for (u2 !== 0 && (h2 = u2.toString(16) + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        if (i3 === (i3 | 0) && i3 >= 2 && i3 <= 36) {
          var n2 = S[i3], d2 = E[i3];
          h2 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g2 = w.modn(d2).toString(i3);
            w = w.idivn(d2), w.isZero() ? h2 = g2 + h2 : h2 = x[n2 - g2.length] + g2 + h2;
          }
          for (this.isZero() && (h2 = "0" + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        r6(false, "Base should be between 2 and 36");
      }, f.prototype.toNumber = function() {
        var i3 = this.words[0];
        return this.length === 2 ? i3 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i3 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i3 : i3;
      }, f.prototype.toJSON = function() {
        return this.toString(16);
      }, f.prototype.toBuffer = function(i3, a4) {
        return r6(typeof p2 < "u"), this.toArrayLike(p2, i3, a4);
      }, f.prototype.toArray = function(i3, a4) {
        return this.toArrayLike(Array, i3, a4);
      }, f.prototype.toArrayLike = function(i3, a4, h2) {
        var s5 = this.byteLength(), u2 = h2 || Math.max(1, s5);
        r6(s5 <= u2, "byte array longer than desired length"), r6(u2 > 0, "Requested array length <= 0"), this.strip();
        var c = a4 === "le", b3 = new i3(u2), l, n2, d2 = this.clone();
        if (c) {
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b3[n2] = l;
          for (;n2 < u2; n2++)
            b3[n2] = 0;
        } else {
          for (n2 = 0;n2 < u2 - s5; n2++)
            b3[n2] = 0;
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b3[u2 - n2 - 1] = l;
        }
        return b3;
      }, Math.clz32 ? f.prototype._countBits = function(i3) {
        return 32 - Math.clz32(i3);
      } : f.prototype._countBits = function(i3) {
        var a4 = i3, h2 = 0;
        return a4 >= 4096 && (h2 += 13, a4 >>>= 13), a4 >= 64 && (h2 += 7, a4 >>>= 7), a4 >= 8 && (h2 += 4, a4 >>>= 4), a4 >= 2 && (h2 += 2, a4 >>>= 2), h2 + a4;
      }, f.prototype._zeroBits = function(i3) {
        if (i3 === 0)
          return 26;
        var a4 = i3, h2 = 0;
        return (a4 & 8191) === 0 && (h2 += 13, a4 >>>= 13), (a4 & 127) === 0 && (h2 += 7, a4 >>>= 7), (a4 & 15) === 0 && (h2 += 4, a4 >>>= 4), (a4 & 3) === 0 && (h2 += 2, a4 >>>= 2), (a4 & 1) === 0 && h2++, h2;
      }, f.prototype.bitLength = function() {
        var i3 = this.words[this.length - 1], a4 = this._countBits(i3);
        return (this.length - 1) * 26 + a4;
      };
      function B(v) {
        for (var i3 = new Array(v.bitLength()), a4 = 0;a4 < i3.length; a4++) {
          var h2 = a4 / 26 | 0, s5 = a4 % 26;
          i3[a4] = (v.words[h2] & 1 << s5) >>> s5;
        }
        return i3;
      }
      f.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i3 = 0, a4 = 0;a4 < this.length; a4++) {
          var h2 = this._zeroBits(this.words[a4]);
          if (i3 += h2, h2 !== 26)
            break;
        }
        return i3;
      }, f.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f.prototype.toTwos = function(i3) {
        return this.negative !== 0 ? this.abs().inotn(i3).iaddn(1) : this.clone();
      }, f.prototype.fromTwos = function(i3) {
        return this.testn(i3 - 1) ? this.notn(i3).iaddn(1).ineg() : this.clone();
      }, f.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f.prototype.neg = function() {
        return this.clone().ineg();
      }, f.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f.prototype.iuor = function(i3) {
        for (;this.length < i3.length; )
          this.words[this.length++] = 0;
        for (var a4 = 0;a4 < i3.length; a4++)
          this.words[a4] = this.words[a4] | i3.words[a4];
        return this.strip();
      }, f.prototype.ior = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuor(i3);
      }, f.prototype.or = function(i3) {
        return this.length > i3.length ? this.clone().ior(i3) : i3.clone().ior(this);
      }, f.prototype.uor = function(i3) {
        return this.length > i3.length ? this.clone().iuor(i3) : i3.clone().iuor(this);
      }, f.prototype.iuand = function(i3) {
        var a4;
        this.length > i3.length ? a4 = i3 : a4 = this;
        for (var h2 = 0;h2 < a4.length; h2++)
          this.words[h2] = this.words[h2] & i3.words[h2];
        return this.length = a4.length, this.strip();
      }, f.prototype.iand = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuand(i3);
      }, f.prototype.and = function(i3) {
        return this.length > i3.length ? this.clone().iand(i3) : i3.clone().iand(this);
      }, f.prototype.uand = function(i3) {
        return this.length > i3.length ? this.clone().iuand(i3) : i3.clone().iuand(this);
      }, f.prototype.iuxor = function(i3) {
        var a4, h2;
        this.length > i3.length ? (a4 = this, h2 = i3) : (a4 = i3, h2 = this);
        for (var s5 = 0;s5 < h2.length; s5++)
          this.words[s5] = a4.words[s5] ^ h2.words[s5];
        if (this !== a4)
          for (;s5 < a4.length; s5++)
            this.words[s5] = a4.words[s5];
        return this.length = a4.length, this.strip();
      }, f.prototype.ixor = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuxor(i3);
      }, f.prototype.xor = function(i3) {
        return this.length > i3.length ? this.clone().ixor(i3) : i3.clone().ixor(this);
      }, f.prototype.uxor = function(i3) {
        return this.length > i3.length ? this.clone().iuxor(i3) : i3.clone().iuxor(this);
      }, f.prototype.inotn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = Math.ceil(i3 / 26) | 0, h2 = i3 % 26;
        this._expand(a4), h2 > 0 && a4--;
        for (var s5 = 0;s5 < a4; s5++)
          this.words[s5] = ~this.words[s5] & 67108863;
        return h2 > 0 && (this.words[s5] = ~this.words[s5] & 67108863 >> 26 - h2), this.strip();
      }, f.prototype.notn = function(i3) {
        return this.clone().inotn(i3);
      }, f.prototype.setn = function(i3, a4) {
        r6(typeof i3 == "number" && i3 >= 0);
        var h2 = i3 / 26 | 0, s5 = i3 % 26;
        return this._expand(h2 + 1), a4 ? this.words[h2] = this.words[h2] | 1 << s5 : this.words[h2] = this.words[h2] & ~(1 << s5), this.strip();
      }, f.prototype.iadd = function(i3) {
        var a4;
        if (this.negative !== 0 && i3.negative === 0)
          return this.negative = 0, a4 = this.isub(i3), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i3.negative !== 0)
          return i3.negative = 0, a4 = this.isub(i3), i3.negative = 1, a4._normSign();
        var h2, s5;
        this.length > i3.length ? (h2 = this, s5 = i3) : (h2 = i3, s5 = this);
        for (var u2 = 0, c = 0;c < s5.length; c++)
          a4 = (h2.words[c] | 0) + (s5.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        for (;u2 !== 0 && c < h2.length; c++)
          a4 = (h2.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        if (this.length = h2.length, u2 !== 0)
          this.words[this.length] = u2, this.length++;
        else if (h2 !== this)
          for (;c < h2.length; c++)
            this.words[c] = h2.words[c];
        return this;
      }, f.prototype.add = function(i3) {
        var a4;
        return i3.negative !== 0 && this.negative === 0 ? (i3.negative = 0, a4 = this.sub(i3), i3.negative ^= 1, a4) : i3.negative === 0 && this.negative !== 0 ? (this.negative = 0, a4 = i3.sub(this), this.negative = 1, a4) : this.length > i3.length ? this.clone().iadd(i3) : i3.clone().iadd(this);
      }, f.prototype.isub = function(i3) {
        if (i3.negative !== 0) {
          i3.negative = 0;
          var a4 = this.iadd(i3);
          return i3.negative = 1, a4._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i3), this.negative = 1, this._normSign();
        var h2 = this.cmp(i3);
        if (h2 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s5, u2;
        h2 > 0 ? (s5 = this, u2 = i3) : (s5 = i3, u2 = this);
        for (var c = 0, b3 = 0;b3 < u2.length; b3++)
          a4 = (s5.words[b3] | 0) - (u2.words[b3] | 0) + c, c = a4 >> 26, this.words[b3] = a4 & 67108863;
        for (;c !== 0 && b3 < s5.length; b3++)
          a4 = (s5.words[b3] | 0) + c, c = a4 >> 26, this.words[b3] = a4 & 67108863;
        if (c === 0 && b3 < s5.length && s5 !== this)
          for (;b3 < s5.length; b3++)
            this.words[b3] = s5.words[b3];
        return this.length = Math.max(this.length, b3), s5 !== this && (this.negative = 1), this.strip();
      }, f.prototype.sub = function(i3) {
        return this.clone().isub(i3);
      };
      function q2(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative;
        var h2 = v.length + i3.length | 0;
        a4.length = h2, h2 = h2 - 1 | 0;
        var s5 = v.words[0] | 0, u2 = i3.words[0] | 0, c = s5 * u2, b3 = c & 67108863, l = c / 67108864 | 0;
        a4.words[0] = b3;
        for (var n2 = 1;n2 < h2; n2++) {
          for (var d2 = l >>> 26, w = l & 67108863, g2 = Math.min(n2, i3.length - 1), _ = Math.max(0, n2 - v.length + 1);_ <= g2; _++) {
            var A = n2 - _ | 0;
            s5 = v.words[A] | 0, u2 = i3.words[_] | 0, c = s5 * u2 + w, d2 += c / 67108864 | 0, w = c & 67108863;
          }
          a4.words[n2] = w | 0, l = d2 | 0;
        }
        return l !== 0 ? a4.words[n2] = l | 0 : a4.length--, a4.strip();
      }
      var L = function(i3, a4, h2) {
        var s5 = i3.words, u2 = a4.words, c = h2.words, b3 = 0, l, n2, d2, w = s5[0] | 0, g2 = w & 8191, _ = w >>> 13, A = s5[1] | 0, R = A & 8191, I = A >>> 13, Me = s5[2] | 0, k2 = Me & 8191, D = Me >>> 13, nt = s5[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s5[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s5[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s5[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s5[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s5[8] | 0, V = yt & 8191, $2 = yt >>> 13, wt = s5[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u2[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u2[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u2[2] | 0, te = xt & 8191, re = xt >>> 13, St = u2[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u2[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u2[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u2[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u2[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u2[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u2[9] | 0, ve = It & 8191, be = It >>> 13;
        h2.negative = i3.negative ^ a4.negative, h2.length = 19, l = Math.imul(g2, X), n2 = Math.imul(g2, J), n2 = n2 + Math.imul(_, X) | 0, d2 = Math.imul(_, J);
        var ft = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n2 = Math.imul(R, J), n2 = n2 + Math.imul(I, X) | 0, d2 = Math.imul(I, J), l = l + Math.imul(g2, Q) | 0, n2 = n2 + Math.imul(g2, ee) | 0, n2 = n2 + Math.imul(_, Q) | 0, d2 = d2 + Math.imul(_, ee) | 0;
        var Be = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k2, X), n2 = Math.imul(k2, J), n2 = n2 + Math.imul(D, X) | 0, d2 = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n2 = n2 + Math.imul(R, ee) | 0, n2 = n2 + Math.imul(I, Q) | 0, d2 = d2 + Math.imul(I, ee) | 0, l = l + Math.imul(g2, te) | 0, n2 = n2 + Math.imul(g2, re) | 0, n2 = n2 + Math.imul(_, te) | 0, d2 = d2 + Math.imul(_, re) | 0;
        var qe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n2 = Math.imul(C, J), n2 = n2 + Math.imul(O, X) | 0, d2 = Math.imul(O, J), l = l + Math.imul(k2, Q) | 0, n2 = n2 + Math.imul(k2, ee) | 0, n2 = n2 + Math.imul(D, Q) | 0, d2 = d2 + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n2 = n2 + Math.imul(R, re) | 0, n2 = n2 + Math.imul(I, te) | 0, d2 = d2 + Math.imul(I, re) | 0, l = l + Math.imul(g2, ie) | 0, n2 = n2 + Math.imul(g2, ne) | 0, n2 = n2 + Math.imul(_, ie) | 0, d2 = d2 + Math.imul(_, ne) | 0;
        var ze = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n2 = Math.imul(F, J), n2 = n2 + Math.imul(U, X) | 0, d2 = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n2 = n2 + Math.imul(C, ee) | 0, n2 = n2 + Math.imul(O, Q) | 0, d2 = d2 + Math.imul(O, ee) | 0, l = l + Math.imul(k2, te) | 0, n2 = n2 + Math.imul(k2, re) | 0, n2 = n2 + Math.imul(D, te) | 0, d2 = d2 + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n2 = n2 + Math.imul(R, ne) | 0, n2 = n2 + Math.imul(I, ie) | 0, d2 = d2 + Math.imul(I, ne) | 0, l = l + Math.imul(g2, fe) | 0, n2 = n2 + Math.imul(g2, ae) | 0, n2 = n2 + Math.imul(_, fe) | 0, d2 = d2 + Math.imul(_, ae) | 0;
        var He = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n2 = Math.imul(z, J), n2 = n2 + Math.imul(H, X) | 0, d2 = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n2 = n2 + Math.imul(F, ee) | 0, n2 = n2 + Math.imul(U, Q) | 0, d2 = d2 + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n2 = n2 + Math.imul(C, re) | 0, n2 = n2 + Math.imul(O, te) | 0, d2 = d2 + Math.imul(O, re) | 0, l = l + Math.imul(k2, ie) | 0, n2 = n2 + Math.imul(k2, ne) | 0, n2 = n2 + Math.imul(D, ie) | 0, d2 = d2 + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n2 = n2 + Math.imul(R, ae) | 0, n2 = n2 + Math.imul(I, fe) | 0, d2 = d2 + Math.imul(I, ae) | 0, l = l + Math.imul(g2, oe) | 0, n2 = n2 + Math.imul(g2, se) | 0, n2 = n2 + Math.imul(_, oe) | 0, d2 = d2 + Math.imul(_, se) | 0;
        var We = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n2 = Math.imul(W, J), n2 = n2 + Math.imul(K, X) | 0, d2 = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n2 = n2 + Math.imul(z, ee) | 0, n2 = n2 + Math.imul(H, Q) | 0, d2 = d2 + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n2 = n2 + Math.imul(F, re) | 0, n2 = n2 + Math.imul(U, te) | 0, d2 = d2 + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n2 = n2 + Math.imul(C, ne) | 0, n2 = n2 + Math.imul(O, ie) | 0, d2 = d2 + Math.imul(O, ne) | 0, l = l + Math.imul(k2, fe) | 0, n2 = n2 + Math.imul(k2, ae) | 0, n2 = n2 + Math.imul(D, fe) | 0, d2 = d2 + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n2 = n2 + Math.imul(R, se) | 0, n2 = n2 + Math.imul(I, oe) | 0, d2 = d2 + Math.imul(I, se) | 0, l = l + Math.imul(g2, he) | 0, n2 = n2 + Math.imul(g2, ue) | 0, n2 = n2 + Math.imul(_, he) | 0, d2 = d2 + Math.imul(_, ue) | 0;
        var Ke = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n2 = Math.imul(j, J), n2 = n2 + Math.imul(Z, X) | 0, d2 = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n2 = n2 + Math.imul(W, ee) | 0, n2 = n2 + Math.imul(K, Q) | 0, d2 = d2 + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n2 = n2 + Math.imul(z, re) | 0, n2 = n2 + Math.imul(H, te) | 0, d2 = d2 + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n2 = n2 + Math.imul(F, ne) | 0, n2 = n2 + Math.imul(U, ie) | 0, d2 = d2 + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n2 = n2 + Math.imul(C, ae) | 0, n2 = n2 + Math.imul(O, fe) | 0, d2 = d2 + Math.imul(O, ae) | 0, l = l + Math.imul(k2, oe) | 0, n2 = n2 + Math.imul(k2, se) | 0, n2 = n2 + Math.imul(D, oe) | 0, d2 = d2 + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n2 = n2 + Math.imul(R, ue) | 0, n2 = n2 + Math.imul(I, he) | 0, d2 = d2 + Math.imul(I, ue) | 0, l = l + Math.imul(g2, le) | 0, n2 = n2 + Math.imul(g2, de) | 0, n2 = n2 + Math.imul(_, le) | 0, d2 = d2 + Math.imul(_, de) | 0;
        var je = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n2 = Math.imul(V, J), n2 = n2 + Math.imul($2, X) | 0, d2 = Math.imul($2, J), l = l + Math.imul(j, Q) | 0, n2 = n2 + Math.imul(j, ee) | 0, n2 = n2 + Math.imul(Z, Q) | 0, d2 = d2 + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n2 = n2 + Math.imul(W, re) | 0, n2 = n2 + Math.imul(K, te) | 0, d2 = d2 + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n2 = n2 + Math.imul(z, ne) | 0, n2 = n2 + Math.imul(H, ie) | 0, d2 = d2 + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n2 = n2 + Math.imul(F, ae) | 0, n2 = n2 + Math.imul(U, fe) | 0, d2 = d2 + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n2 = n2 + Math.imul(C, se) | 0, n2 = n2 + Math.imul(O, oe) | 0, d2 = d2 + Math.imul(O, se) | 0, l = l + Math.imul(k2, he) | 0, n2 = n2 + Math.imul(k2, ue) | 0, n2 = n2 + Math.imul(D, he) | 0, d2 = d2 + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n2 = n2 + Math.imul(R, de) | 0, n2 = n2 + Math.imul(I, le) | 0, d2 = d2 + Math.imul(I, de) | 0, l = l + Math.imul(g2, ce) | 0, n2 = n2 + Math.imul(g2, pe) | 0, n2 = n2 + Math.imul(_, ce) | 0, d2 = d2 + Math.imul(_, pe) | 0;
        var Ze = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n2 = Math.imul(G, J), n2 = n2 + Math.imul(Y, X) | 0, d2 = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n2 = n2 + Math.imul(V, ee) | 0, n2 = n2 + Math.imul($2, Q) | 0, d2 = d2 + Math.imul($2, ee) | 0, l = l + Math.imul(j, te) | 0, n2 = n2 + Math.imul(j, re) | 0, n2 = n2 + Math.imul(Z, te) | 0, d2 = d2 + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n2 = n2 + Math.imul(W, ne) | 0, n2 = n2 + Math.imul(K, ie) | 0, d2 = d2 + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n2 = n2 + Math.imul(z, ae) | 0, n2 = n2 + Math.imul(H, fe) | 0, d2 = d2 + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n2 = n2 + Math.imul(F, se) | 0, n2 = n2 + Math.imul(U, oe) | 0, d2 = d2 + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n2 = n2 + Math.imul(C, ue) | 0, n2 = n2 + Math.imul(O, he) | 0, d2 = d2 + Math.imul(O, ue) | 0, l = l + Math.imul(k2, le) | 0, n2 = n2 + Math.imul(k2, de) | 0, n2 = n2 + Math.imul(D, le) | 0, d2 = d2 + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n2 = n2 + Math.imul(R, pe) | 0, n2 = n2 + Math.imul(I, ce) | 0, d2 = d2 + Math.imul(I, pe) | 0, l = l + Math.imul(g2, ve) | 0, n2 = n2 + Math.imul(g2, be) | 0, n2 = n2 + Math.imul(_, ve) | 0, d2 = d2 + Math.imul(_, be) | 0;
        var Ve = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n2 = Math.imul(G, ee), n2 = n2 + Math.imul(Y, Q) | 0, d2 = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n2 = n2 + Math.imul(V, re) | 0, n2 = n2 + Math.imul($2, te) | 0, d2 = d2 + Math.imul($2, re) | 0, l = l + Math.imul(j, ie) | 0, n2 = n2 + Math.imul(j, ne) | 0, n2 = n2 + Math.imul(Z, ie) | 0, d2 = d2 + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n2 = n2 + Math.imul(W, ae) | 0, n2 = n2 + Math.imul(K, fe) | 0, d2 = d2 + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n2 = n2 + Math.imul(z, se) | 0, n2 = n2 + Math.imul(H, oe) | 0, d2 = d2 + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n2 = n2 + Math.imul(F, ue) | 0, n2 = n2 + Math.imul(U, he) | 0, d2 = d2 + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n2 = n2 + Math.imul(C, de) | 0, n2 = n2 + Math.imul(O, le) | 0, d2 = d2 + Math.imul(O, de) | 0, l = l + Math.imul(k2, ce) | 0, n2 = n2 + Math.imul(k2, pe) | 0, n2 = n2 + Math.imul(D, ce) | 0, d2 = d2 + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n2 = n2 + Math.imul(R, be) | 0, n2 = n2 + Math.imul(I, ve) | 0, d2 = d2 + Math.imul(I, be) | 0;
        var $e = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n2 = Math.imul(G, re), n2 = n2 + Math.imul(Y, te) | 0, d2 = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n2 = n2 + Math.imul(V, ne) | 0, n2 = n2 + Math.imul($2, ie) | 0, d2 = d2 + Math.imul($2, ne) | 0, l = l + Math.imul(j, fe) | 0, n2 = n2 + Math.imul(j, ae) | 0, n2 = n2 + Math.imul(Z, fe) | 0, d2 = d2 + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n2 = n2 + Math.imul(W, se) | 0, n2 = n2 + Math.imul(K, oe) | 0, d2 = d2 + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n2 = n2 + Math.imul(z, ue) | 0, n2 = n2 + Math.imul(H, he) | 0, d2 = d2 + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n2 = n2 + Math.imul(F, de) | 0, n2 = n2 + Math.imul(U, le) | 0, d2 = d2 + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n2 = n2 + Math.imul(C, pe) | 0, n2 = n2 + Math.imul(O, ce) | 0, d2 = d2 + Math.imul(O, pe) | 0, l = l + Math.imul(k2, ve) | 0, n2 = n2 + Math.imul(k2, be) | 0, n2 = n2 + Math.imul(D, ve) | 0, d2 = d2 + Math.imul(D, be) | 0;
        var Ge = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n2 = Math.imul(G, ne), n2 = n2 + Math.imul(Y, ie) | 0, d2 = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n2 = n2 + Math.imul(V, ae) | 0, n2 = n2 + Math.imul($2, fe) | 0, d2 = d2 + Math.imul($2, ae) | 0, l = l + Math.imul(j, oe) | 0, n2 = n2 + Math.imul(j, se) | 0, n2 = n2 + Math.imul(Z, oe) | 0, d2 = d2 + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n2 = n2 + Math.imul(W, ue) | 0, n2 = n2 + Math.imul(K, he) | 0, d2 = d2 + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n2 = n2 + Math.imul(z, de) | 0, n2 = n2 + Math.imul(H, le) | 0, d2 = d2 + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n2 = n2 + Math.imul(F, pe) | 0, n2 = n2 + Math.imul(U, ce) | 0, d2 = d2 + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n2 = n2 + Math.imul(C, be) | 0, n2 = n2 + Math.imul(O, ve) | 0, d2 = d2 + Math.imul(O, be) | 0;
        var Ye = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n2 = Math.imul(G, ae), n2 = n2 + Math.imul(Y, fe) | 0, d2 = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n2 = n2 + Math.imul(V, se) | 0, n2 = n2 + Math.imul($2, oe) | 0, d2 = d2 + Math.imul($2, se) | 0, l = l + Math.imul(j, he) | 0, n2 = n2 + Math.imul(j, ue) | 0, n2 = n2 + Math.imul(Z, he) | 0, d2 = d2 + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n2 = n2 + Math.imul(W, de) | 0, n2 = n2 + Math.imul(K, le) | 0, d2 = d2 + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n2 = n2 + Math.imul(z, pe) | 0, n2 = n2 + Math.imul(H, ce) | 0, d2 = d2 + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n2 = n2 + Math.imul(F, be) | 0, n2 = n2 + Math.imul(U, ve) | 0, d2 = d2 + Math.imul(U, be) | 0;
        var Xe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n2 = Math.imul(G, se), n2 = n2 + Math.imul(Y, oe) | 0, d2 = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n2 = n2 + Math.imul(V, ue) | 0, n2 = n2 + Math.imul($2, he) | 0, d2 = d2 + Math.imul($2, ue) | 0, l = l + Math.imul(j, le) | 0, n2 = n2 + Math.imul(j, de) | 0, n2 = n2 + Math.imul(Z, le) | 0, d2 = d2 + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n2 = n2 + Math.imul(W, pe) | 0, n2 = n2 + Math.imul(K, ce) | 0, d2 = d2 + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n2 = n2 + Math.imul(z, be) | 0, n2 = n2 + Math.imul(H, ve) | 0, d2 = d2 + Math.imul(H, be) | 0;
        var Je = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n2 = Math.imul(G, ue), n2 = n2 + Math.imul(Y, he) | 0, d2 = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n2 = n2 + Math.imul(V, de) | 0, n2 = n2 + Math.imul($2, le) | 0, d2 = d2 + Math.imul($2, de) | 0, l = l + Math.imul(j, ce) | 0, n2 = n2 + Math.imul(j, pe) | 0, n2 = n2 + Math.imul(Z, ce) | 0, d2 = d2 + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n2 = n2 + Math.imul(W, be) | 0, n2 = n2 + Math.imul(K, ve) | 0, d2 = d2 + Math.imul(K, be) | 0;
        var Qe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n2 = Math.imul(G, de), n2 = n2 + Math.imul(Y, le) | 0, d2 = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n2 = n2 + Math.imul(V, pe) | 0, n2 = n2 + Math.imul($2, ce) | 0, d2 = d2 + Math.imul($2, pe) | 0, l = l + Math.imul(j, ve) | 0, n2 = n2 + Math.imul(j, be) | 0, n2 = n2 + Math.imul(Z, ve) | 0, d2 = d2 + Math.imul(Z, be) | 0;
        var et = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n2 = Math.imul(G, pe), n2 = n2 + Math.imul(Y, ce) | 0, d2 = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n2 = n2 + Math.imul(V, be) | 0, n2 = n2 + Math.imul($2, ve) | 0, d2 = d2 + Math.imul($2, be) | 0;
        var tt = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n2 = Math.imul(G, be), n2 = n2 + Math.imul(Y, ve) | 0, d2 = Math.imul(Y, be);
        var rt = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        return b3 = (d2 + (n2 >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b3 !== 0 && (c[19] = b3, h2.length++), h2;
      };
      Math.imul || (L = q2);
      function ge(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative, a4.length = v.length + i3.length;
        for (var h2 = 0, s5 = 0, u2 = 0;u2 < a4.length - 1; u2++) {
          var c = s5;
          s5 = 0;
          for (var b3 = h2 & 67108863, l = Math.min(u2, i3.length - 1), n2 = Math.max(0, u2 - v.length + 1);n2 <= l; n2++) {
            var d2 = u2 - n2, w = v.words[d2] | 0, g2 = i3.words[n2] | 0, _ = w * g2, A = _ & 67108863;
            c = c + (_ / 67108864 | 0) | 0, A = A + b3 | 0, b3 = A & 67108863, c = c + (A >>> 26) | 0, s5 += c >>> 26, c &= 67108863;
          }
          a4.words[u2] = b3, h2 = c, c = s5;
        }
        return h2 !== 0 ? a4.words[u2] = h2 : a4.length--, a4.strip();
      }
      function _e(v, i3, a4) {
        var h2 = new N;
        return h2.mulp(v, i3, a4);
      }
      f.prototype.mulTo = function(i3, a4) {
        var h2, s5 = this.length + i3.length;
        return this.length === 10 && i3.length === 10 ? h2 = L(this, i3, a4) : s5 < 63 ? h2 = q2(this, i3, a4) : s5 < 1024 ? h2 = ge(this, i3, a4) : h2 = _e(this, i3, a4), h2;
      };
      function N(v, i3) {
        this.x = v, this.y = i3;
      }
      N.prototype.makeRBT = function(i3) {
        for (var a4 = new Array(i3), h2 = f.prototype._countBits(i3) - 1, s5 = 0;s5 < i3; s5++)
          a4[s5] = this.revBin(s5, h2, i3);
        return a4;
      }, N.prototype.revBin = function(i3, a4, h2) {
        if (i3 === 0 || i3 === h2 - 1)
          return i3;
        for (var s5 = 0, u2 = 0;u2 < a4; u2++)
          s5 |= (i3 & 1) << a4 - u2 - 1, i3 >>= 1;
        return s5;
      }, N.prototype.permute = function(i3, a4, h2, s5, u2, c) {
        for (var b3 = 0;b3 < c; b3++)
          s5[b3] = a4[i3[b3]], u2[b3] = h2[i3[b3]];
      }, N.prototype.transform = function(i3, a4, h2, s5, u2, c) {
        this.permute(c, i3, a4, h2, s5, u2);
        for (var b3 = 1;b3 < u2; b3 <<= 1)
          for (var l = b3 << 1, n2 = Math.cos(2 * Math.PI / l), d2 = Math.sin(2 * Math.PI / l), w = 0;w < u2; w += l)
            for (var g2 = n2, _ = d2, A = 0;A < b3; A++) {
              var R = h2[w + A], I = s5[w + A], Me = h2[w + A + b3], k2 = s5[w + A + b3], D = g2 * Me - _ * k2;
              k2 = g2 * k2 + _ * Me, Me = D, h2[w + A] = R + Me, s5[w + A] = I + k2, h2[w + A + b3] = R - Me, s5[w + A + b3] = I - k2, A !== l && (D = n2 * g2 - d2 * _, _ = n2 * _ + d2 * g2, g2 = D);
            }
      }, N.prototype.guessLen13b = function(i3, a4) {
        var h2 = Math.max(a4, i3) | 1, s5 = h2 & 1, u2 = 0;
        for (h2 = h2 / 2 | 0;h2; h2 = h2 >>> 1)
          u2++;
        return 1 << u2 + 1 + s5;
      }, N.prototype.conjugate = function(i3, a4, h2) {
        if (!(h2 <= 1))
          for (var s5 = 0;s5 < h2 / 2; s5++) {
            var u2 = i3[s5];
            i3[s5] = i3[h2 - s5 - 1], i3[h2 - s5 - 1] = u2, u2 = a4[s5], a4[s5] = -a4[h2 - s5 - 1], a4[h2 - s5 - 1] = -u2;
          }
      }, N.prototype.normalize13b = function(i3, a4) {
        for (var h2 = 0, s5 = 0;s5 < a4 / 2; s5++) {
          var u2 = Math.round(i3[2 * s5 + 1] / a4) * 8192 + Math.round(i3[2 * s5] / a4) + h2;
          i3[s5] = u2 & 67108863, u2 < 67108864 ? h2 = 0 : h2 = u2 / 67108864 | 0;
        }
        return i3;
      }, N.prototype.convert13b = function(i3, a4, h2, s5) {
        for (var u2 = 0, c = 0;c < a4; c++)
          u2 = u2 + (i3[c] | 0), h2[2 * c] = u2 & 8191, u2 = u2 >>> 13, h2[2 * c + 1] = u2 & 8191, u2 = u2 >>> 13;
        for (c = 2 * a4;c < s5; ++c)
          h2[c] = 0;
        r6(u2 === 0), r6((u2 & -8192) === 0);
      }, N.prototype.stub = function(i3) {
        for (var a4 = new Array(i3), h2 = 0;h2 < i3; h2++)
          a4[h2] = 0;
        return a4;
      }, N.prototype.mulp = function(i3, a4, h2) {
        var s5 = 2 * this.guessLen13b(i3.length, a4.length), u2 = this.makeRBT(s5), c = this.stub(s5), b3 = new Array(s5), l = new Array(s5), n2 = new Array(s5), d2 = new Array(s5), w = new Array(s5), g2 = new Array(s5), _ = h2.words;
        _.length = s5, this.convert13b(i3.words, i3.length, b3, s5), this.convert13b(a4.words, a4.length, d2, s5), this.transform(b3, c, l, n2, s5, u2), this.transform(d2, c, w, g2, s5, u2);
        for (var A = 0;A < s5; A++) {
          var R = l[A] * w[A] - n2[A] * g2[A];
          n2[A] = l[A] * g2[A] + n2[A] * w[A], l[A] = R;
        }
        return this.conjugate(l, n2, s5), this.transform(l, n2, _, c, s5, u2), this.conjugate(_, c, s5), this.normalize13b(_, s5), h2.negative = i3.negative ^ a4.negative, h2.length = i3.length + a4.length, h2.strip();
      }, f.prototype.mul = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), this.mulTo(i3, a4);
      }, f.prototype.mulf = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), _e(this, i3, a4);
      }, f.prototype.imul = function(i3) {
        return this.clone().mulTo(i3, this);
      }, f.prototype.imuln = function(i3) {
        r6(typeof i3 == "number"), r6(i3 < 67108864);
        for (var a4 = 0, h2 = 0;h2 < this.length; h2++) {
          var s5 = (this.words[h2] | 0) * i3, u2 = (s5 & 67108863) + (a4 & 67108863);
          a4 >>= 26, a4 += s5 / 67108864 | 0, a4 += u2 >>> 26, this.words[h2] = u2 & 67108863;
        }
        return a4 !== 0 && (this.words[h2] = a4, this.length++), this;
      }, f.prototype.muln = function(i3) {
        return this.clone().imuln(i3);
      }, f.prototype.sqr = function() {
        return this.mul(this);
      }, f.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f.prototype.pow = function(i3) {
        var a4 = B(i3);
        if (a4.length === 0)
          return new f(1);
        for (var h2 = this, s5 = 0;s5 < a4.length && a4[s5] === 0; s5++, h2 = h2.sqr())
          ;
        if (++s5 < a4.length)
          for (var u2 = h2.sqr();s5 < a4.length; s5++, u2 = u2.sqr())
            a4[s5] !== 0 && (h2 = h2.mul(u2));
        return h2;
      }, f.prototype.iushln = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 67108863 >>> 26 - a4 << 26 - a4, u2;
        if (a4 !== 0) {
          var c = 0;
          for (u2 = 0;u2 < this.length; u2++) {
            var b3 = this.words[u2] & s5, l = (this.words[u2] | 0) - b3 << a4;
            this.words[u2] = l | c, c = b3 >>> 26 - a4;
          }
          c && (this.words[u2] = c, this.length++);
        }
        if (h2 !== 0) {
          for (u2 = this.length - 1;u2 >= 0; u2--)
            this.words[u2 + h2] = this.words[u2];
          for (u2 = 0;u2 < h2; u2++)
            this.words[u2] = 0;
          this.length += h2;
        }
        return this.strip();
      }, f.prototype.ishln = function(i3) {
        return r6(this.negative === 0), this.iushln(i3);
      }, f.prototype.iushrn = function(i3, a4, h2) {
        r6(typeof i3 == "number" && i3 >= 0);
        var s5;
        a4 ? s5 = (a4 - a4 % 26) / 26 : s5 = 0;
        var u2 = i3 % 26, c = Math.min((i3 - u2) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u2 << u2, l = h2;
        if (s5 -= c, s5 = Math.max(0, s5), l) {
          for (var n2 = 0;n2 < c; n2++)
            l.words[n2] = this.words[n2];
          l.length = c;
        }
        if (c !== 0)
          if (this.length > c)
            for (this.length -= c, n2 = 0;n2 < this.length; n2++)
              this.words[n2] = this.words[n2 + c];
          else
            this.words[0] = 0, this.length = 1;
        var d2 = 0;
        for (n2 = this.length - 1;n2 >= 0 && (d2 !== 0 || n2 >= s5); n2--) {
          var w = this.words[n2] | 0;
          this.words[n2] = d2 << 26 - u2 | w >>> u2, d2 = w & b3;
        }
        return l && d2 !== 0 && (l.words[l.length++] = d2), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f.prototype.ishrn = function(i3, a4, h2) {
        return r6(this.negative === 0), this.iushrn(i3, a4, h2);
      }, f.prototype.shln = function(i3) {
        return this.clone().ishln(i3);
      }, f.prototype.ushln = function(i3) {
        return this.clone().iushln(i3);
      }, f.prototype.shrn = function(i3) {
        return this.clone().ishrn(i3);
      }, f.prototype.ushrn = function(i3) {
        return this.clone().iushrn(i3);
      }, f.prototype.testn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return false;
        var u2 = this.words[h2];
        return !!(u2 & s5);
      }, f.prototype.imaskn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26;
        if (r6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h2)
          return this;
        if (a4 !== 0 && h2++, this.length = Math.min(h2, this.length), a4 !== 0) {
          var s5 = 67108863 ^ 67108863 >>> a4 << a4;
          this.words[this.length - 1] &= s5;
        }
        return this.strip();
      }, f.prototype.maskn = function(i3) {
        return this.clone().imaskn(i3);
      }, f.prototype.iaddn = function(i3) {
        return r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0 ? this.isubn(-i3) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i3 ? (this.words[0] = i3 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i3), this.negative = 1, this) : this._iaddn(i3);
      }, f.prototype._iaddn = function(i3) {
        this.words[0] += i3;
        for (var a4 = 0;a4 < this.length && this.words[a4] >= 67108864; a4++)
          this.words[a4] -= 67108864, a4 === this.length - 1 ? this.words[a4 + 1] = 1 : this.words[a4 + 1]++;
        return this.length = Math.max(this.length, a4 + 1), this;
      }, f.prototype.isubn = function(i3) {
        if (r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0)
          return this.iaddn(-i3);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i3), this.negative = 1, this;
        if (this.words[0] -= i3, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a4 = 0;a4 < this.length && this.words[a4] < 0; a4++)
            this.words[a4] += 67108864, this.words[a4 + 1] -= 1;
        return this.strip();
      }, f.prototype.addn = function(i3) {
        return this.clone().iaddn(i3);
      }, f.prototype.subn = function(i3) {
        return this.clone().isubn(i3);
      }, f.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f.prototype.abs = function() {
        return this.clone().iabs();
      }, f.prototype._ishlnsubmul = function(i3, a4, h2) {
        var s5 = i3.length + h2, u2;
        this._expand(s5);
        var c, b3 = 0;
        for (u2 = 0;u2 < i3.length; u2++) {
          c = (this.words[u2 + h2] | 0) + b3;
          var l = (i3.words[u2] | 0) * a4;
          c -= l & 67108863, b3 = (c >> 26) - (l / 67108864 | 0), this.words[u2 + h2] = c & 67108863;
        }
        for (;u2 < this.length - h2; u2++)
          c = (this.words[u2 + h2] | 0) + b3, b3 = c >> 26, this.words[u2 + h2] = c & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r6(b3 === -1), b3 = 0, u2 = 0;u2 < this.length; u2++)
          c = -(this.words[u2] | 0) + b3, b3 = c >> 26, this.words[u2] = c & 67108863;
        return this.negative = 1, this.strip();
      }, f.prototype._wordDiv = function(i3, a4) {
        var h2 = this.length - i3.length, s5 = this.clone(), u2 = i3, c = u2.words[u2.length - 1] | 0, b3 = this._countBits(c);
        h2 = 26 - b3, h2 !== 0 && (u2 = u2.ushln(h2), s5.iushln(h2), c = u2.words[u2.length - 1] | 0);
        var l = s5.length - u2.length, n2;
        if (a4 !== "mod") {
          n2 = new f(null), n2.length = l + 1, n2.words = new Array(n2.length);
          for (var d2 = 0;d2 < n2.length; d2++)
            n2.words[d2] = 0;
        }
        var w = s5.clone()._ishlnsubmul(u2, 1, l);
        w.negative === 0 && (s5 = w, n2 && (n2.words[l] = 1));
        for (var g2 = l - 1;g2 >= 0; g2--) {
          var _ = (s5.words[u2.length + g2] | 0) * 67108864 + (s5.words[u2.length + g2 - 1] | 0);
          for (_ = Math.min(_ / c | 0, 67108863), s5._ishlnsubmul(u2, _, g2);s5.negative !== 0; )
            _--, s5.negative = 0, s5._ishlnsubmul(u2, 1, g2), s5.isZero() || (s5.negative ^= 1);
          n2 && (n2.words[g2] = _);
        }
        return n2 && n2.strip(), s5.strip(), a4 !== "div" && h2 !== 0 && s5.iushrn(h2), { div: n2 || null, mod: s5 };
      }, f.prototype.divmod = function(i3, a4, h2) {
        if (r6(!i3.isZero()), this.isZero())
          return { div: new f(0), mod: new f(0) };
        var s5, u2, c;
        return this.negative !== 0 && i3.negative === 0 ? (c = this.neg().divmod(i3, a4), a4 !== "mod" && (s5 = c.div.neg()), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.iadd(i3)), { div: s5, mod: u2 }) : this.negative === 0 && i3.negative !== 0 ? (c = this.divmod(i3.neg(), a4), a4 !== "mod" && (s5 = c.div.neg()), { div: s5, mod: c.mod }) : (this.negative & i3.negative) !== 0 ? (c = this.neg().divmod(i3.neg(), a4), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.isub(i3)), { div: c.div, mod: u2 }) : i3.length > this.length || this.cmp(i3) < 0 ? { div: new f(0), mod: this } : i3.length === 1 ? a4 === "div" ? { div: this.divn(i3.words[0]), mod: null } : a4 === "mod" ? { div: null, mod: new f(this.modn(i3.words[0])) } : { div: this.divn(i3.words[0]), mod: new f(this.modn(i3.words[0])) } : this._wordDiv(i3, a4);
      }, f.prototype.div = function(i3) {
        return this.divmod(i3, "div", false).div;
      }, f.prototype.mod = function(i3) {
        return this.divmod(i3, "mod", false).mod;
      }, f.prototype.umod = function(i3) {
        return this.divmod(i3, "mod", true).mod;
      }, f.prototype.divRound = function(i3) {
        var a4 = this.divmod(i3);
        if (a4.mod.isZero())
          return a4.div;
        var h2 = a4.div.negative !== 0 ? a4.mod.isub(i3) : a4.mod, s5 = i3.ushrn(1), u2 = i3.andln(1), c = h2.cmp(s5);
        return c < 0 || u2 === 1 && c === 0 ? a4.div : a4.div.negative !== 0 ? a4.div.isubn(1) : a4.div.iaddn(1);
      }, f.prototype.modn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = (1 << 26) % i3, h2 = 0, s5 = this.length - 1;s5 >= 0; s5--)
          h2 = (a4 * h2 + (this.words[s5] | 0)) % i3;
        return h2;
      }, f.prototype.idivn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = (this.words[h2] | 0) + a4 * 67108864;
          this.words[h2] = s5 / i3 | 0, a4 = s5 % i3;
        }
        return this.strip();
      }, f.prototype.divn = function(i3) {
        return this.clone().idivn(i3);
      }, f.prototype.egcd = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h2 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = new f(0), b3 = new f(1), l = 0;a4.isEven() && h2.isEven(); )
          a4.iushrn(1), h2.iushrn(1), ++l;
        for (var n2 = h2.clone(), d2 = a4.clone();!a4.isZero(); ) {
          for (var w = 0, g2 = 1;(a4.words[0] & g2) === 0 && w < 26; ++w, g2 <<= 1)
            ;
          if (w > 0)
            for (a4.iushrn(w);w-- > 0; )
              (s5.isOdd() || u2.isOdd()) && (s5.iadd(n2), u2.isub(d2)), s5.iushrn(1), u2.iushrn(1);
          for (var _ = 0, A = 1;(h2.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
            ;
          if (_ > 0)
            for (h2.iushrn(_);_-- > 0; )
              (c.isOdd() || b3.isOdd()) && (c.iadd(n2), b3.isub(d2)), c.iushrn(1), b3.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(c), u2.isub(b3)) : (h2.isub(a4), c.isub(s5), b3.isub(u2));
        }
        return { a: c, b: b3, gcd: h2.iushln(l) };
      }, f.prototype._invmp = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h2 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = h2.clone();a4.cmpn(1) > 0 && h2.cmpn(1) > 0; ) {
          for (var b3 = 0, l = 1;(a4.words[0] & l) === 0 && b3 < 26; ++b3, l <<= 1)
            ;
          if (b3 > 0)
            for (a4.iushrn(b3);b3-- > 0; )
              s5.isOdd() && s5.iadd(c), s5.iushrn(1);
          for (var n2 = 0, d2 = 1;(h2.words[0] & d2) === 0 && n2 < 26; ++n2, d2 <<= 1)
            ;
          if (n2 > 0)
            for (h2.iushrn(n2);n2-- > 0; )
              u2.isOdd() && u2.iadd(c), u2.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(u2)) : (h2.isub(a4), u2.isub(s5));
        }
        var w;
        return a4.cmpn(1) === 0 ? w = s5 : w = u2, w.cmpn(0) < 0 && w.iadd(i3), w;
      }, f.prototype.gcd = function(i3) {
        if (this.isZero())
          return i3.abs();
        if (i3.isZero())
          return this.abs();
        var a4 = this.clone(), h2 = i3.clone();
        a4.negative = 0, h2.negative = 0;
        for (var s5 = 0;a4.isEven() && h2.isEven(); s5++)
          a4.iushrn(1), h2.iushrn(1);
        do {
          for (;a4.isEven(); )
            a4.iushrn(1);
          for (;h2.isEven(); )
            h2.iushrn(1);
          var u2 = a4.cmp(h2);
          if (u2 < 0) {
            var c = a4;
            a4 = h2, h2 = c;
          } else if (u2 === 0 || h2.cmpn(1) === 0)
            break;
          a4.isub(h2);
        } while (true);
        return h2.iushln(s5);
      }, f.prototype.invm = function(i3) {
        return this.egcd(i3).a.umod(i3);
      }, f.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f.prototype.andln = function(i3) {
        return this.words[0] & i3;
      }, f.prototype.bincn = function(i3) {
        r6(typeof i3 == "number");
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return this._expand(h2 + 1), this.words[h2] |= s5, this;
        for (var u2 = s5, c = h2;u2 !== 0 && c < this.length; c++) {
          var b3 = this.words[c] | 0;
          b3 += u2, u2 = b3 >>> 26, b3 &= 67108863, this.words[c] = b3;
        }
        return u2 !== 0 && (this.words[c] = u2, this.length++), this;
      }, f.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f.prototype.cmpn = function(i3) {
        var a4 = i3 < 0;
        if (this.negative !== 0 && !a4)
          return -1;
        if (this.negative === 0 && a4)
          return 1;
        this.strip();
        var h2;
        if (this.length > 1)
          h2 = 1;
        else {
          a4 && (i3 = -i3), r6(i3 <= 67108863, "Number is too big");
          var s5 = this.words[0] | 0;
          h2 = s5 === i3 ? 0 : s5 < i3 ? -1 : 1;
        }
        return this.negative !== 0 ? -h2 | 0 : h2;
      }, f.prototype.cmp = function(i3) {
        if (this.negative !== 0 && i3.negative === 0)
          return -1;
        if (this.negative === 0 && i3.negative !== 0)
          return 1;
        var a4 = this.ucmp(i3);
        return this.negative !== 0 ? -a4 | 0 : a4;
      }, f.prototype.ucmp = function(i3) {
        if (this.length > i3.length)
          return 1;
        if (this.length < i3.length)
          return -1;
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = this.words[h2] | 0, u2 = i3.words[h2] | 0;
          if (s5 !== u2) {
            s5 < u2 ? a4 = -1 : s5 > u2 && (a4 = 1);
            break;
          }
        }
        return a4;
      }, f.prototype.gtn = function(i3) {
        return this.cmpn(i3) === 1;
      }, f.prototype.gt = function(i3) {
        return this.cmp(i3) === 1;
      }, f.prototype.gten = function(i3) {
        return this.cmpn(i3) >= 0;
      }, f.prototype.gte = function(i3) {
        return this.cmp(i3) >= 0;
      }, f.prototype.ltn = function(i3) {
        return this.cmpn(i3) === -1;
      }, f.prototype.lt = function(i3) {
        return this.cmp(i3) === -1;
      }, f.prototype.lten = function(i3) {
        return this.cmpn(i3) <= 0;
      }, f.prototype.lte = function(i3) {
        return this.cmp(i3) <= 0;
      }, f.prototype.eqn = function(i3) {
        return this.cmpn(i3) === 0;
      }, f.prototype.eq = function(i3) {
        return this.cmp(i3) === 0;
      }, f.red = function(i3) {
        return new P(i3);
      }, f.prototype.toRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), r6(this.negative === 0, "red works only with positives"), i3.convertTo(this)._forceRed(i3);
      }, f.prototype.fromRed = function() {
        return r6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f.prototype._forceRed = function(i3) {
        return this.red = i3, this;
      }, f.prototype.forceRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), this._forceRed(i3);
      }, f.prototype.redAdd = function(i3) {
        return r6(this.red, "redAdd works only with red numbers"), this.red.add(this, i3);
      }, f.prototype.redIAdd = function(i3) {
        return r6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i3);
      }, f.prototype.redSub = function(i3) {
        return r6(this.red, "redSub works only with red numbers"), this.red.sub(this, i3);
      }, f.prototype.redISub = function(i3) {
        return r6(this.red, "redISub works only with red numbers"), this.red.isub(this, i3);
      }, f.prototype.redShl = function(i3) {
        return r6(this.red, "redShl works only with red numbers"), this.red.shl(this, i3);
      }, f.prototype.redMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.mul(this, i3);
      }, f.prototype.redIMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.imul(this, i3);
      }, f.prototype.redSqr = function() {
        return r6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f.prototype.redISqr = function() {
        return r6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f.prototype.redSqrt = function() {
        return r6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f.prototype.redInvm = function() {
        return r6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f.prototype.redNeg = function() {
        return r6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f.prototype.redPow = function(i3) {
        return r6(this.red && !i3.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i3);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v, i3) {
        this.name = v, this.p = new f(i3, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i3 = new f(null);
        return i3.words = new Array(Math.ceil(this.n / 13)), i3;
      }, ye.prototype.ireduce = function(i3) {
        var a4 = i3, h2;
        do
          this.split(a4, this.tmp), a4 = this.imulK(a4), a4 = a4.iadd(this.tmp), h2 = a4.bitLength();
        while (h2 > this.n);
        var s5 = h2 < this.n ? -1 : a4.ucmp(this.p);
        return s5 === 0 ? (a4.words[0] = 0, a4.length = 1) : s5 > 0 ? a4.isub(this.p) : a4.strip !== undefined ? a4.strip() : a4._strip(), a4;
      }, ye.prototype.split = function(i3, a4) {
        i3.iushrn(this.n, 0, a4);
      }, ye.prototype.imulK = function(i3) {
        return i3.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o2(xe, ye), xe.prototype.split = function(i3, a4) {
        for (var h2 = 4194303, s5 = Math.min(i3.length, 9), u2 = 0;u2 < s5; u2++)
          a4.words[u2] = i3.words[u2];
        if (a4.length = s5, i3.length <= 9) {
          i3.words[0] = 0, i3.length = 1;
          return;
        }
        var c = i3.words[9];
        for (a4.words[a4.length++] = c & h2, u2 = 10;u2 < i3.length; u2++) {
          var b3 = i3.words[u2] | 0;
          i3.words[u2 - 10] = (b3 & h2) << 4 | c >>> 22, c = b3;
        }
        c >>>= 22, i3.words[u2 - 10] = c, c === 0 && i3.length > 10 ? i3.length -= 10 : i3.length -= 9;
      }, xe.prototype.imulK = function(i3) {
        i3.words[i3.length] = 0, i3.words[i3.length + 1] = 0, i3.length += 2;
        for (var a4 = 0, h2 = 0;h2 < i3.length; h2++) {
          var s5 = i3.words[h2] | 0;
          a4 += s5 * 977, i3.words[h2] = a4 & 67108863, a4 = s5 * 64 + (a4 / 67108864 | 0);
        }
        return i3.words[i3.length - 1] === 0 && (i3.length--, i3.words[i3.length - 1] === 0 && i3.length--), i3;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o2(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o2(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o2(Ae, ye), Ae.prototype.imulK = function(i3) {
        for (var a4 = 0, h2 = 0;h2 < i3.length; h2++) {
          var s5 = (i3.words[h2] | 0) * 19 + a4, u2 = s5 & 67108863;
          s5 >>>= 26, i3.words[h2] = u2, a4 = s5;
        }
        return a4 !== 0 && (i3.words[i3.length++] = a4), i3;
      }, f._prime = function(i3) {
        if (we[i3])
          return we[i3];
        var a4;
        if (i3 === "k256")
          a4 = new xe;
        else if (i3 === "p224")
          a4 = new Re;
        else if (i3 === "p192")
          a4 = new Ee;
        else if (i3 === "p25519")
          a4 = new Ae;
        else
          throw new Error("Unknown prime " + i3);
        return we[i3] = a4, a4;
      };
      function P(v) {
        if (typeof v == "string") {
          var i3 = f._prime(v);
          this.m = i3.p, this.prime = i3;
        } else
          r6(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
      }
      P.prototype._verify1 = function(i3) {
        r6(i3.negative === 0, "red works only with positives"), r6(i3.red, "red works only with red numbers");
      }, P.prototype._verify2 = function(i3, a4) {
        r6((i3.negative | a4.negative) === 0, "red works only with positives"), r6(i3.red && i3.red === a4.red, "red works only with red numbers");
      }, P.prototype.imod = function(i3) {
        return this.prime ? this.prime.ireduce(i3)._forceRed(this) : i3.umod(this.m)._forceRed(this);
      }, P.prototype.neg = function(i3) {
        return i3.isZero() ? i3.clone() : this.m.sub(i3)._forceRed(this);
      }, P.prototype.add = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.add(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2._forceRed(this);
      }, P.prototype.iadd = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.iadd(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2;
      }, P.prototype.sub = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.sub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2._forceRed(this);
      }, P.prototype.isub = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.isub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2;
      }, P.prototype.shl = function(i3, a4) {
        return this._verify1(i3), this.imod(i3.ushln(a4));
      }, P.prototype.imul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.imul(a4));
      }, P.prototype.mul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.mul(a4));
      }, P.prototype.isqr = function(i3) {
        return this.imul(i3, i3.clone());
      }, P.prototype.sqr = function(i3) {
        return this.mul(i3, i3);
      }, P.prototype.sqrt = function(i3) {
        if (i3.isZero())
          return i3.clone();
        var a4 = this.m.andln(3);
        if (r6(a4 % 2 === 1), a4 === 3) {
          var h2 = this.m.add(new f(1)).iushrn(2);
          return this.pow(i3, h2);
        }
        for (var s5 = this.m.subn(1), u2 = 0;!s5.isZero() && s5.andln(1) === 0; )
          u2++, s5.iushrn(1);
        r6(!s5.isZero());
        var c = new f(1).toRed(this), b3 = c.redNeg(), l = this.m.subn(1).iushrn(1), n2 = this.m.bitLength();
        for (n2 = new f(2 * n2 * n2).toRed(this);this.pow(n2, l).cmp(b3) !== 0; )
          n2.redIAdd(b3);
        for (var d2 = this.pow(n2, s5), w = this.pow(i3, s5.addn(1).iushrn(1)), g2 = this.pow(i3, s5), _ = u2;g2.cmp(c) !== 0; ) {
          for (var A = g2, R = 0;A.cmp(c) !== 0; R++)
            A = A.redSqr();
          r6(R < _);
          var I = this.pow(d2, new f(1).iushln(_ - R - 1));
          w = w.redMul(I), d2 = I.redSqr(), g2 = g2.redMul(d2), _ = R;
        }
        return w;
      }, P.prototype.invm = function(i3) {
        var a4 = i3._invmp(this.m);
        return a4.negative !== 0 ? (a4.negative = 0, this.imod(a4).redNeg()) : this.imod(a4);
      }, P.prototype.pow = function(i3, a4) {
        if (a4.isZero())
          return new f(1).toRed(this);
        if (a4.cmpn(1) === 0)
          return i3.clone();
        var h2 = 4, s5 = new Array(1 << h2);
        s5[0] = new f(1).toRed(this), s5[1] = i3;
        for (var u2 = 2;u2 < s5.length; u2++)
          s5[u2] = this.mul(s5[u2 - 1], i3);
        var c = s5[0], b3 = 0, l = 0, n2 = a4.bitLength() % 26;
        for (n2 === 0 && (n2 = 26), u2 = a4.length - 1;u2 >= 0; u2--) {
          for (var d2 = a4.words[u2], w = n2 - 1;w >= 0; w--) {
            var g2 = d2 >> w & 1;
            if (c !== s5[0] && (c = this.sqr(c)), g2 === 0 && b3 === 0) {
              l = 0;
              continue;
            }
            b3 <<= 1, b3 |= g2, l++, !(l !== h2 && (u2 !== 0 || w !== 0)) && (c = this.mul(c, s5[b3]), l = 0, b3 = 0);
          }
          n2 = 26;
        }
        return c;
      }, P.prototype.convertTo = function(i3) {
        var a4 = i3.umod(this.m);
        return a4 === i3 ? a4.clone() : a4;
      }, P.prototype.convertFrom = function(i3) {
        var a4 = i3.clone();
        return a4.red = null, a4;
      }, f.mont = function(i3) {
        return new Se(i3);
      };
      function Se(v) {
        P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o2(Se, P), Se.prototype.convertTo = function(i3) {
        return this.imod(i3.ushln(this.shift));
      }, Se.prototype.convertFrom = function(i3) {
        var a4 = this.imod(i3.mul(this.rinv));
        return a4.red = null, a4;
      }, Se.prototype.imul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return i3.words[0] = 0, i3.length = 1, i3;
        var h2 = i3.imul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.mul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return new f(0)._forceRed(this);
        var h2 = i3.mul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.invm = function(i3) {
        var a4 = this.imod(i3._invmp(this.m).mul(this.r2));
        return a4._forceRed(this);
      };
    })(typeof ed > "u" || ed, ky);
  });
  h0 = T((Yk, Ly) => {
    var s0 = Ut(), Ff = s0.Buffer, Er = {}, Ar;
    for (Ar in s0)
      !s0.hasOwnProperty(Ar) || Ar === "SlowBuffer" || Ar === "Buffer" || (Er[Ar] = s0[Ar]);
    var Uf = Er.Buffer = {};
    for (Ar in Ff)
      !Ff.hasOwnProperty(Ar) || Ar === "allocUnsafe" || Ar === "allocUnsafeSlow" || (Uf[Ar] = Ff[Ar]);
    Er.Buffer.prototype = Ff.prototype;
    (!Uf.from || Uf.from === Uint8Array.from) && (Uf.from = function(t6, e6, r6) {
      if (typeof t6 == "number")
        throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof t6);
      if (t6 && typeof t6.length > "u")
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t6);
      return Ff(t6, e6, r6);
    });
    Uf.alloc || (Uf.alloc = function(t6, e6, r6) {
      if (typeof t6 != "number")
        throw new TypeError('The "size" argument must be of type number. Received type ' + typeof t6);
      if (t6 < 0 || t6 >= 2 * (1 << 30))
        throw new RangeError('The value "' + t6 + '" is invalid for option "size"');
      var o2 = Ff(t6);
      return !e6 || e6.length === 0 ? o2.fill(0) : typeof r6 == "string" ? o2.fill(e6, r6) : o2.fill(e6), o2;
    });
    if (!Er.kStringMaxLength)
      try {
        Er.kStringMaxLength = process.binding("buffer").kStringMaxLength;
      } catch {
      }
    Er.constants || (Er.constants = { MAX_LENGTH: Er.kMaxLength }, Er.kStringMaxLength && (Er.constants.MAX_STRING_LENGTH = Er.kStringMaxLength));
    Ly.exports = Er;
  });
  u0 = T((Ny) => {
    var aB = Ie();
    function Rr(t6) {
      this._reporterState = { obj: null, path: [], options: t6 || {}, errors: [] };
    }
    Ny.Reporter = Rr;
    Rr.prototype.isError = function(e6) {
      return e6 instanceof zf;
    };
    Rr.prototype.save = function() {
      let e6 = this._reporterState;
      return { obj: e6.obj, pathLen: e6.path.length };
    };
    Rr.prototype.restore = function(e6) {
      let r6 = this._reporterState;
      r6.obj = e6.obj, r6.path = r6.path.slice(0, e6.pathLen);
    };
    Rr.prototype.enterKey = function(e6) {
      return this._reporterState.path.push(e6);
    };
    Rr.prototype.exitKey = function(e6) {
      let r6 = this._reporterState;
      r6.path = r6.path.slice(0, e6 - 1);
    };
    Rr.prototype.leaveKey = function(e6, r6, o2) {
      let f = this._reporterState;
      this.exitKey(e6), f.obj !== null && (f.obj[r6] = o2);
    };
    Rr.prototype.path = function() {
      return this._reporterState.path.join("/");
    };
    Rr.prototype.enterObject = function() {
      let e6 = this._reporterState, r6 = e6.obj;
      return e6.obj = {}, r6;
    };
    Rr.prototype.leaveObject = function(e6) {
      let r6 = this._reporterState, o2 = r6.obj;
      return r6.obj = e6, o2;
    };
    Rr.prototype.error = function(e6) {
      let r6, o2 = this._reporterState, f = e6 instanceof zf;
      if (f ? r6 = e6 : r6 = new zf(o2.path.map(function(p2) {
        return "[" + JSON.stringify(p2) + "]";
      }).join(""), e6.message || e6, e6.stack), !o2.options.partial)
        throw r6;
      return f || o2.errors.push(r6), r6;
    };
    Rr.prototype.wrapResult = function(e6) {
      let r6 = this._reporterState;
      return r6.options.partial ? { result: this.isError(e6) ? null : e6, errors: r6.errors } : e6;
    };
    function zf(t6, e6) {
      this.path = t6, this.rethrow(e6);
    }
    aB(zf, Error);
    zf.prototype.rethrow = function(e6) {
      if (this.message = e6 + " at: " + (this.path || "(shallow)"), Error.captureStackTrace && Error.captureStackTrace(this, zf), !this.stack)
        try {
          throw new Error(this.message);
        } catch (r6) {
          this.stack = r6.stack;
        }
      return this;
    };
  });
  Kf = T((rd) => {
    var oB = Ie(), l0 = u0().Reporter, Hf = h0().Buffer;
    function Br(t6, e6) {
      if (l0.call(this, e6), !Hf.isBuffer(t6)) {
        this.error("Input not Buffer");
        return;
      }
      this.base = t6, this.offset = 0, this.length = t6.length;
    }
    oB(Br, l0);
    rd.DecoderBuffer = Br;
    Br.isDecoderBuffer = function(e6) {
      return e6 instanceof Br ? true : typeof e6 == "object" && Hf.isBuffer(e6.base) && e6.constructor.name === "DecoderBuffer" && typeof e6.offset == "number" && typeof e6.length == "number" && typeof e6.save == "function" && typeof e6.restore == "function" && typeof e6.isEmpty == "function" && typeof e6.readUInt8 == "function" && typeof e6.skip == "function" && typeof e6.raw == "function";
    };
    Br.prototype.save = function() {
      return { offset: this.offset, reporter: l0.prototype.save.call(this) };
    };
    Br.prototype.restore = function(e6) {
      let r6 = new Br(this.base);
      return r6.offset = e6.offset, r6.length = this.offset, this.offset = e6.offset, l0.prototype.restore.call(this, e6.reporter), r6;
    };
    Br.prototype.isEmpty = function() {
      return this.offset === this.length;
    };
    Br.prototype.readUInt8 = function(e6) {
      return this.offset + 1 <= this.length ? this.base.readUInt8(this.offset++, true) : this.error(e6 || "DecoderBuffer overrun");
    };
    Br.prototype.skip = function(e6, r6) {
      if (!(this.offset + e6 <= this.length))
        return this.error(r6 || "DecoderBuffer overrun");
      let o2 = new Br(this.base);
      return o2._reporterState = this._reporterState, o2.offset = this.offset, o2.length = this.offset + e6, this.offset += e6, o2;
    };
    Br.prototype.raw = function(e6) {
      return this.base.slice(e6 ? e6.offset : this.offset, this.length);
    };
    function Wf(t6, e6) {
      if (Array.isArray(t6))
        this.length = 0, this.value = t6.map(function(r6) {
          return Wf.isEncoderBuffer(r6) || (r6 = new Wf(r6, e6)), this.length += r6.length, r6;
        }, this);
      else if (typeof t6 == "number") {
        if (!(0 <= t6 && t6 <= 255))
          return e6.error("non-byte EncoderBuffer value");
        this.value = t6, this.length = 1;
      } else if (typeof t6 == "string")
        this.value = t6, this.length = Hf.byteLength(t6);
      else if (Hf.isBuffer(t6))
        this.value = t6, this.length = t6.length;
      else
        return e6.error("Unsupported type: " + typeof t6);
    }
    rd.EncoderBuffer = Wf;
    Wf.isEncoderBuffer = function(e6) {
      return e6 instanceof Wf ? true : typeof e6 == "object" && e6.constructor.name === "EncoderBuffer" && typeof e6.length == "number" && typeof e6.join == "function";
    };
    Wf.prototype.join = function(e6, r6) {
      return e6 || (e6 = Hf.alloc(this.length)), r6 || (r6 = 0), this.length === 0 || (Array.isArray(this.value) ? this.value.forEach(function(o2) {
        o2.join(e6, r6), r6 += o2.length;
      }) : (typeof this.value == "number" ? e6[r6] = this.value : typeof this.value == "string" ? e6.write(this.value, r6) : Hf.isBuffer(this.value) && this.value.copy(e6, r6), r6 += this.length)), e6;
    };
  });
  d0 = T((Qk, Py) => {
    var sB = u0().Reporter, hB = Kf().EncoderBuffer, uB = Kf().DecoderBuffer, Qt = ar(), Dy = ["seq", "seqof", "set", "setof", "objid", "bool", "gentime", "utctime", "null_", "enum", "int", "objDesc", "bitstr", "bmpstr", "charstr", "genstr", "graphstr", "ia5str", "iso646str", "numstr", "octstr", "printstr", "t61str", "unistr", "utf8str", "videostr"], lB = ["key", "obj", "use", "optional", "explicit", "implicit", "def", "choice", "any", "contains"].concat(Dy), dB = ["_peekTag", "_decodeTag", "_use", "_decodeStr", "_decodeObjid", "_decodeTime", "_decodeNull", "_decodeInt", "_decodeBool", "_decodeList", "_encodeComposite", "_encodeStr", "_encodeObjid", "_encodeTime", "_encodeNull", "_encodeInt", "_encodeBool"];
    function Ue(t6, e6, r6) {
      let o2 = {};
      this._baseState = o2, o2.name = r6, o2.enc = t6, o2.parent = e6 || null, o2.children = null, o2.tag = null, o2.args = null, o2.reverseArgs = null, o2.choice = null, o2.optional = false, o2.any = false, o2.obj = false, o2.use = null, o2.useDecoder = null, o2.key = null, o2.default = null, o2.explicit = null, o2.implicit = null, o2.contains = null, o2.parent || (o2.children = [], this._wrap());
    }
    Py.exports = Ue;
    var cB = ["enc", "parent", "children", "tag", "args", "reverseArgs", "choice", "optional", "any", "obj", "use", "alteredUse", "key", "default", "explicit", "implicit", "contains"];
    Ue.prototype.clone = function() {
      let e6 = this._baseState, r6 = {};
      cB.forEach(function(f) {
        r6[f] = e6[f];
      });
      let o2 = new this.constructor(r6.parent);
      return o2._baseState = r6, o2;
    };
    Ue.prototype._wrap = function() {
      let e6 = this._baseState;
      lB.forEach(function(r6) {
        this[r6] = function() {
          let f = new this.constructor(this);
          return e6.children.push(f), f[r6].apply(f, arguments);
        };
      }, this);
    };
    Ue.prototype._init = function(e6) {
      let r6 = this._baseState;
      Qt(r6.parent === null), e6.call(this), r6.children = r6.children.filter(function(o2) {
        return o2._baseState.parent === this;
      }, this), Qt.equal(r6.children.length, 1, "Root node can have only one child");
    };
    Ue.prototype._useArgs = function(e6) {
      let r6 = this._baseState, o2 = e6.filter(function(f) {
        return f instanceof this.constructor;
      }, this);
      e6 = e6.filter(function(f) {
        return !(f instanceof this.constructor);
      }, this), o2.length !== 0 && (Qt(r6.children === null), r6.children = o2, o2.forEach(function(f) {
        f._baseState.parent = this;
      }, this)), e6.length !== 0 && (Qt(r6.args === null), r6.args = e6, r6.reverseArgs = e6.map(function(f) {
        if (typeof f != "object" || f.constructor !== Object)
          return f;
        let p2 = {};
        return Object.keys(f).forEach(function(m2) {
          m2 == (m2 | 0) && (m2 |= 0);
          let y3 = f[m2];
          p2[y3] = m2;
        }), p2;
      }));
    };
    dB.forEach(function(t6) {
      Ue.prototype[t6] = function() {
        let r6 = this._baseState;
        throw new Error(t6 + " not implemented for encoding: " + r6.enc);
      };
    });
    Dy.forEach(function(t6) {
      Ue.prototype[t6] = function() {
        let r6 = this._baseState, o2 = Array.prototype.slice.call(arguments);
        return Qt(r6.tag === null), r6.tag = t6, this._useArgs(o2), this;
      };
    });
    Ue.prototype.use = function(e6) {
      Qt(e6);
      let r6 = this._baseState;
      return Qt(r6.use === null), r6.use = e6, this;
    };
    Ue.prototype.optional = function() {
      let e6 = this._baseState;
      return e6.optional = true, this;
    };
    Ue.prototype.def = function(e6) {
      let r6 = this._baseState;
      return Qt(r6.default === null), r6.default = e6, r6.optional = true, this;
    };
    Ue.prototype.explicit = function(e6) {
      let r6 = this._baseState;
      return Qt(r6.explicit === null && r6.implicit === null), r6.explicit = e6, this;
    };
    Ue.prototype.implicit = function(e6) {
      let r6 = this._baseState;
      return Qt(r6.explicit === null && r6.implicit === null), r6.implicit = e6, this;
    };
    Ue.prototype.obj = function() {
      let e6 = this._baseState, r6 = Array.prototype.slice.call(arguments);
      return e6.obj = true, r6.length !== 0 && this._useArgs(r6), this;
    };
    Ue.prototype.key = function(e6) {
      let r6 = this._baseState;
      return Qt(r6.key === null), r6.key = e6, this;
    };
    Ue.prototype.any = function() {
      let e6 = this._baseState;
      return e6.any = true, this;
    };
    Ue.prototype.choice = function(e6) {
      let r6 = this._baseState;
      return Qt(r6.choice === null), r6.choice = e6, this._useArgs(Object.keys(e6).map(function(o2) {
        return e6[o2];
      })), this;
    };
    Ue.prototype.contains = function(e6) {
      let r6 = this._baseState;
      return Qt(r6.use === null), r6.contains = e6, this;
    };
    Ue.prototype._decode = function(e6, r6) {
      let o2 = this._baseState;
      if (o2.parent === null)
        return e6.wrapResult(o2.children[0]._decode(e6, r6));
      let f = o2.default, p2 = true, m2 = null;
      if (o2.key !== null && (m2 = e6.enterKey(o2.key)), o2.optional) {
        let M = null;
        if (o2.explicit !== null ? M = o2.explicit : o2.implicit !== null ? M = o2.implicit : o2.tag !== null && (M = o2.tag), M === null && !o2.any) {
          let x = e6.save();
          try {
            o2.choice === null ? this._decodeGeneric(o2.tag, e6, r6) : this._decodeChoice(e6, r6), p2 = true;
          } catch {
            p2 = false;
          }
          e6.restore(x);
        } else if (p2 = this._peekTag(e6, M, o2.any), e6.isError(p2))
          return p2;
      }
      let y3;
      if (o2.obj && p2 && (y3 = e6.enterObject()), p2) {
        if (o2.explicit !== null) {
          let x = this._decodeTag(e6, o2.explicit);
          if (e6.isError(x))
            return x;
          e6 = x;
        }
        let M = e6.offset;
        if (o2.use === null && o2.choice === null) {
          let x;
          o2.any && (x = e6.save());
          let S = this._decodeTag(e6, o2.implicit !== null ? o2.implicit : o2.tag, o2.any);
          if (e6.isError(S))
            return S;
          o2.any ? f = e6.raw(x) : e6 = S;
        }
        if (r6 && r6.track && o2.tag !== null && r6.track(e6.path(), M, e6.length, "tagged"), r6 && r6.track && o2.tag !== null && r6.track(e6.path(), e6.offset, e6.length, "content"), o2.any || (o2.choice === null ? f = this._decodeGeneric(o2.tag, e6, r6) : f = this._decodeChoice(e6, r6)), e6.isError(f))
          return f;
        if (!o2.any && o2.choice === null && o2.children !== null && o2.children.forEach(function(S) {
          S._decode(e6, r6);
        }), o2.contains && (o2.tag === "octstr" || o2.tag === "bitstr")) {
          let x = new uB(f);
          f = this._getUse(o2.contains, e6._reporterState.obj)._decode(x, r6);
        }
      }
      return o2.obj && p2 && (f = e6.leaveObject(y3)), o2.key !== null && (f !== null || p2 === true) ? e6.leaveKey(m2, o2.key, f) : m2 !== null && e6.exitKey(m2), f;
    };
    Ue.prototype._decodeGeneric = function(e6, r6, o2) {
      let f = this._baseState;
      return e6 === "seq" || e6 === "set" ? null : e6 === "seqof" || e6 === "setof" ? this._decodeList(r6, e6, f.args[0], o2) : /str$/.test(e6) ? this._decodeStr(r6, e6, o2) : e6 === "objid" && f.args ? this._decodeObjid(r6, f.args[0], f.args[1], o2) : e6 === "objid" ? this._decodeObjid(r6, null, null, o2) : e6 === "gentime" || e6 === "utctime" ? this._decodeTime(r6, e6, o2) : e6 === "null_" ? this._decodeNull(r6, o2) : e6 === "bool" ? this._decodeBool(r6, o2) : e6 === "objDesc" ? this._decodeStr(r6, e6, o2) : e6 === "int" || e6 === "enum" ? this._decodeInt(r6, f.args && f.args[0], o2) : f.use !== null ? this._getUse(f.use, r6._reporterState.obj)._decode(r6, o2) : r6.error("unknown tag: " + e6);
    };
    Ue.prototype._getUse = function(e6, r6) {
      let o2 = this._baseState;
      return o2.useDecoder = this._use(e6, r6), Qt(o2.useDecoder._baseState.parent === null), o2.useDecoder = o2.useDecoder._baseState.children[0], o2.implicit !== o2.useDecoder._baseState.implicit && (o2.useDecoder = o2.useDecoder.clone(), o2.useDecoder._baseState.implicit = o2.implicit), o2.useDecoder;
    };
    Ue.prototype._decodeChoice = function(e6, r6) {
      let o2 = this._baseState, f = null, p2 = false;
      return Object.keys(o2.choice).some(function(m2) {
        let y3 = e6.save(), M = o2.choice[m2];
        try {
          let x = M._decode(e6, r6);
          if (e6.isError(x))
            return false;
          f = { type: m2, value: x }, p2 = true;
        } catch {
          return e6.restore(y3), false;
        }
        return true;
      }, this), p2 ? f : e6.error("Choice not matched");
    };
    Ue.prototype._createEncoderBuffer = function(e6) {
      return new hB(e6, this.reporter);
    };
    Ue.prototype._encode = function(e6, r6, o2) {
      let f = this._baseState;
      if (f.default !== null && f.default === e6)
        return;
      let p2 = this._encodeValue(e6, r6, o2);
      if (p2 !== undefined && !this._skipDefault(p2, r6, o2))
        return p2;
    };
    Ue.prototype._encodeValue = function(e6, r6, o2) {
      let f = this._baseState;
      if (f.parent === null)
        return f.children[0]._encode(e6, r6 || new sB);
      let p2 = null;
      if (this.reporter = r6, f.optional && e6 === undefined)
        if (f.default !== null)
          e6 = f.default;
        else
          return;
      let m2 = null, y3 = false;
      if (f.any)
        p2 = this._createEncoderBuffer(e6);
      else if (f.choice)
        p2 = this._encodeChoice(e6, r6);
      else if (f.contains)
        m2 = this._getUse(f.contains, o2)._encode(e6, r6), y3 = true;
      else if (f.children)
        m2 = f.children.map(function(M) {
          if (M._baseState.tag === "null_")
            return M._encode(null, r6, e6);
          if (M._baseState.key === null)
            return r6.error("Child should have a key");
          let x = r6.enterKey(M._baseState.key);
          if (typeof e6 != "object")
            return r6.error("Child expected, but input is not object");
          let S = M._encode(e6[M._baseState.key], r6, e6);
          return r6.leaveKey(x), S;
        }, this).filter(function(M) {
          return M;
        }), m2 = this._createEncoderBuffer(m2);
      else if (f.tag === "seqof" || f.tag === "setof") {
        if (!(f.args && f.args.length === 1))
          return r6.error("Too many args for : " + f.tag);
        if (!Array.isArray(e6))
          return r6.error("seqof/setof, but data is not Array");
        let M = this.clone();
        M._baseState.implicit = null, m2 = this._createEncoderBuffer(e6.map(function(x) {
          let S = this._baseState;
          return this._getUse(S.args[0], e6)._encode(x, r6);
        }, M));
      } else
        f.use !== null ? p2 = this._getUse(f.use, o2)._encode(e6, r6) : (m2 = this._encodePrimitive(f.tag, e6), y3 = true);
      if (!f.any && f.choice === null) {
        let M = f.implicit !== null ? f.implicit : f.tag, x = f.implicit === null ? "universal" : "context";
        M === null ? f.use === null && r6.error("Tag could be omitted only for .use()") : f.use === null && (p2 = this._encodeComposite(M, y3, x, m2));
      }
      return f.explicit !== null && (p2 = this._encodeComposite(f.explicit, false, "context", p2)), p2;
    };
    Ue.prototype._encodeChoice = function(e6, r6) {
      let o2 = this._baseState, f = o2.choice[e6.type];
      return f || Qt(false, e6.type + " not found in " + JSON.stringify(Object.keys(o2.choice))), f._encode(e6.value, r6);
    };
    Ue.prototype._encodePrimitive = function(e6, r6) {
      let o2 = this._baseState;
      if (/str$/.test(e6))
        return this._encodeStr(r6, e6);
      if (e6 === "objid" && o2.args)
        return this._encodeObjid(r6, o2.reverseArgs[0], o2.args[1]);
      if (e6 === "objid")
        return this._encodeObjid(r6, null, null);
      if (e6 === "gentime" || e6 === "utctime")
        return this._encodeTime(r6, e6);
      if (e6 === "null_")
        return this._encodeNull();
      if (e6 === "int" || e6 === "enum")
        return this._encodeInt(r6, o2.args && o2.reverseArgs[0]);
      if (e6 === "bool")
        return this._encodeBool(r6);
      if (e6 === "objDesc")
        return this._encodeStr(r6, e6);
      throw new Error("Unsupported tag: " + e6);
    };
    Ue.prototype._isNumstr = function(e6) {
      return /^[0-9 ]*$/.test(e6);
    };
    Ue.prototype._isPrintstr = function(e6) {
      return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(e6);
    };
  });
  c0 = T((Wn) => {
    function Cy(t6) {
      let e6 = {};
      return Object.keys(t6).forEach(function(r6) {
        (r6 | 0) == r6 && (r6 = r6 | 0);
        let o2 = t6[r6];
        e6[o2] = r6;
      }), e6;
    }
    Wn.tagClass = { 0: "universal", 1: "application", 2: "context", 3: "private" };
    Wn.tagClassByName = Cy(Wn.tagClass);
    Wn.tag = { 0: "end", 1: "bool", 2: "int", 3: "bitstr", 4: "octstr", 5: "null_", 6: "objid", 7: "objDesc", 8: "external", 9: "real", 10: "enum", 11: "embed", 12: "utf8str", 13: "relativeOid", 16: "seq", 17: "set", 18: "numstr", 19: "printstr", 20: "t61str", 21: "videostr", 22: "ia5str", 23: "utctime", 24: "gentime", 25: "graphstr", 26: "iso646str", 27: "genstr", 28: "unistr", 29: "charstr", 30: "bmpstr" };
    Wn.tagByName = Cy(Wn.tag);
  });
  nd = T((tL, Uy) => {
    var pB = Ie(), Ii = h0().Buffer, Oy = d0(), id = c0();
    function Fy(t6) {
      this.enc = "der", this.name = t6.name, this.entity = t6, this.tree = new Ur, this.tree._init(t6.body);
    }
    Uy.exports = Fy;
    Fy.prototype.encode = function(e6, r6) {
      return this.tree._encode(e6, r6).join();
    };
    function Ur(t6) {
      Oy.call(this, "der", t6);
    }
    pB(Ur, Oy);
    Ur.prototype._encodeComposite = function(e6, r6, o2, f) {
      let p2 = vB(e6, r6, o2, this.reporter);
      if (f.length < 128) {
        let M = Ii.alloc(2);
        return M[0] = p2, M[1] = f.length, this._createEncoderBuffer([M, f]);
      }
      let m2 = 1;
      for (let M = f.length;M >= 256; M >>= 8)
        m2++;
      let y3 = Ii.alloc(1 + 1 + m2);
      y3[0] = p2, y3[1] = 128 | m2;
      for (let M = 1 + m2, x = f.length;x > 0; M--, x >>= 8)
        y3[M] = x & 255;
      return this._createEncoderBuffer([y3, f]);
    };
    Ur.prototype._encodeStr = function(e6, r6) {
      if (r6 === "bitstr")
        return this._createEncoderBuffer([e6.unused | 0, e6.data]);
      if (r6 === "bmpstr") {
        let o2 = Ii.alloc(e6.length * 2);
        for (let f = 0;f < e6.length; f++)
          o2.writeUInt16BE(e6.charCodeAt(f), f * 2);
        return this._createEncoderBuffer(o2);
      } else
        return r6 === "numstr" ? this._isNumstr(e6) ? this._createEncoderBuffer(e6) : this.reporter.error("Encoding of string type: numstr supports only digits and space") : r6 === "printstr" ? this._isPrintstr(e6) ? this._createEncoderBuffer(e6) : this.reporter.error("Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark") : /str$/.test(r6) ? this._createEncoderBuffer(e6) : r6 === "objDesc" ? this._createEncoderBuffer(e6) : this.reporter.error("Encoding of string type: " + r6 + " unsupported");
    };
    Ur.prototype._encodeObjid = function(e6, r6, o2) {
      if (typeof e6 == "string") {
        if (!r6)
          return this.reporter.error("string objid given, but no values map found");
        if (!r6.hasOwnProperty(e6))
          return this.reporter.error("objid not found in values map");
        e6 = r6[e6].split(/[\s.]+/g);
        for (let y3 = 0;y3 < e6.length; y3++)
          e6[y3] |= 0;
      } else if (Array.isArray(e6)) {
        e6 = e6.slice();
        for (let y3 = 0;y3 < e6.length; y3++)
          e6[y3] |= 0;
      }
      if (!Array.isArray(e6))
        return this.reporter.error("objid() should be either array or string, got: " + JSON.stringify(e6));
      if (!o2) {
        if (e6[1] >= 40)
          return this.reporter.error("Second objid identifier OOB");
        e6.splice(0, 2, e6[0] * 40 + e6[1]);
      }
      let f = 0;
      for (let y3 = 0;y3 < e6.length; y3++) {
        let M = e6[y3];
        for (f++;M >= 128; M >>= 7)
          f++;
      }
      let p2 = Ii.alloc(f), m2 = p2.length - 1;
      for (let y3 = e6.length - 1;y3 >= 0; y3--) {
        let M = e6[y3];
        for (p2[m2--] = M & 127;(M >>= 7) > 0; )
          p2[m2--] = 128 | M & 127;
      }
      return this._createEncoderBuffer(p2);
    };
    function qr(t6) {
      return t6 < 10 ? "0" + t6 : t6;
    }
    Ur.prototype._encodeTime = function(e6, r6) {
      let o2, f = new Date(e6);
      return r6 === "gentime" ? o2 = [qr(f.getUTCFullYear()), qr(f.getUTCMonth() + 1), qr(f.getUTCDate()), qr(f.getUTCHours()), qr(f.getUTCMinutes()), qr(f.getUTCSeconds()), "Z"].join("") : r6 === "utctime" ? o2 = [qr(f.getUTCFullYear() % 100), qr(f.getUTCMonth() + 1), qr(f.getUTCDate()), qr(f.getUTCHours()), qr(f.getUTCMinutes()), qr(f.getUTCSeconds()), "Z"].join("") : this.reporter.error("Encoding " + r6 + " time is not supported yet"), this._encodeStr(o2, "octstr");
    };
    Ur.prototype._encodeNull = function() {
      return this._createEncoderBuffer("");
    };
    Ur.prototype._encodeInt = function(e6, r6) {
      if (typeof e6 == "string") {
        if (!r6)
          return this.reporter.error("String int or enum given, but no values map");
        if (!r6.hasOwnProperty(e6))
          return this.reporter.error("Values map doesn't contain: " + JSON.stringify(e6));
        e6 = r6[e6];
      }
      if (typeof e6 != "number" && !Ii.isBuffer(e6)) {
        let p2 = e6.toArray();
        !e6.sign && p2[0] & 128 && p2.unshift(0), e6 = Ii.from(p2);
      }
      if (Ii.isBuffer(e6)) {
        let p2 = e6.length;
        e6.length === 0 && p2++;
        let m2 = Ii.alloc(p2);
        return e6.copy(m2), e6.length === 0 && (m2[0] = 0), this._createEncoderBuffer(m2);
      }
      if (e6 < 128)
        return this._createEncoderBuffer(e6);
      if (e6 < 256)
        return this._createEncoderBuffer([0, e6]);
      let o2 = 1;
      for (let p2 = e6;p2 >= 256; p2 >>= 8)
        o2++;
      let f = new Array(o2);
      for (let p2 = f.length - 1;p2 >= 0; p2--)
        f[p2] = e6 & 255, e6 >>= 8;
      return f[0] & 128 && f.unshift(0), this._createEncoderBuffer(Ii.from(f));
    };
    Ur.prototype._encodeBool = function(e6) {
      return this._createEncoderBuffer(e6 ? 255 : 0);
    };
    Ur.prototype._use = function(e6, r6) {
      return typeof e6 == "function" && (e6 = e6(r6)), e6._getEncoder("der").tree;
    };
    Ur.prototype._skipDefault = function(e6, r6, o2) {
      let f = this._baseState, p2;
      if (f.default === null)
        return false;
      let m2 = e6.join();
      if (f.defaultBuffer === undefined && (f.defaultBuffer = this._encodeValue(f.default, r6, o2).join()), m2.length !== f.defaultBuffer.length)
        return false;
      for (p2 = 0;p2 < m2.length; p2++)
        if (m2[p2] !== f.defaultBuffer[p2])
          return false;
      return true;
    };
    function vB(t6, e6, r6, o2) {
      let f;
      if (t6 === "seqof" ? t6 = "seq" : t6 === "setof" && (t6 = "set"), id.tagByName.hasOwnProperty(t6))
        f = id.tagByName[t6];
      else if (typeof t6 == "number" && (t6 | 0) === t6)
        f = t6;
      else
        return o2.error("Unknown tag: " + t6);
      return f >= 31 ? o2.error("Multi-octet tag encoding unsupported") : (e6 || (f |= 32), f |= id.tagClassByName[r6 || "universal"] << 6, f);
    }
  });
  Hy = T((rL, zy) => {
    var bB = Ie(), fd = nd();
    function ad(t6) {
      fd.call(this, t6), this.enc = "pem";
    }
    bB(ad, fd);
    zy.exports = ad;
    ad.prototype.encode = function(e6, r6) {
      let f = fd.prototype.encode.call(this, e6).toString("base64"), p2 = ["-----BEGIN " + r6.label + "-----"];
      for (let m2 = 0;m2 < f.length; m2 += 64)
        p2.push(f.slice(m2, m2 + 64));
      return p2.push("-----END " + r6.label + "-----"), p2.join(`
`);
    };
  });
  od = T((Ky) => {
    var Wy = Ky;
    Wy.der = nd();
    Wy.pem = Hy();
  });
  hd = T((nL, Yy) => {
    var mB = Ie(), gB = td(), jy = Kf().DecoderBuffer, Vy = d0(), Zy = c0();
    function $y(t6) {
      this.enc = "der", this.name = t6.name, this.entity = t6, this.tree = new sr, this.tree._init(t6.body);
    }
    Yy.exports = $y;
    $y.prototype.decode = function(e6, r6) {
      return jy.isDecoderBuffer(e6) || (e6 = new jy(e6, r6)), this.tree._decode(e6, r6);
    };
    function sr(t6) {
      Vy.call(this, "der", t6);
    }
    mB(sr, Vy);
    sr.prototype._peekTag = function(e6, r6, o2) {
      if (e6.isEmpty())
        return false;
      let f = e6.save(), p2 = sd(e6, 'Failed to peek tag: "' + r6 + '"');
      return e6.isError(p2) ? p2 : (e6.restore(f), p2.tag === r6 || p2.tagStr === r6 || p2.tagStr + "of" === r6 || o2);
    };
    sr.prototype._decodeTag = function(e6, r6, o2) {
      let f = sd(e6, 'Failed to decode tag of "' + r6 + '"');
      if (e6.isError(f))
        return f;
      let p2 = Gy(e6, f.primitive, 'Failed to get length of "' + r6 + '"');
      if (e6.isError(p2))
        return p2;
      if (!o2 && f.tag !== r6 && f.tagStr !== r6 && f.tagStr + "of" !== r6)
        return e6.error('Failed to match tag: "' + r6 + '"');
      if (f.primitive || p2 !== null)
        return e6.skip(p2, 'Failed to match body of: "' + r6 + '"');
      let m2 = e6.save(), y3 = this._skipUntilEnd(e6, 'Failed to skip indefinite length body: "' + this.tag + '"');
      return e6.isError(y3) ? y3 : (p2 = e6.offset - m2.offset, e6.restore(m2), e6.skip(p2, 'Failed to match body of: "' + r6 + '"'));
    };
    sr.prototype._skipUntilEnd = function(e6, r6) {
      for (;; ) {
        let o2 = sd(e6, r6);
        if (e6.isError(o2))
          return o2;
        let f = Gy(e6, o2.primitive, r6);
        if (e6.isError(f))
          return f;
        let p2;
        if (o2.primitive || f !== null ? p2 = e6.skip(f) : p2 = this._skipUntilEnd(e6, r6), e6.isError(p2))
          return p2;
        if (o2.tagStr === "end")
          break;
      }
    };
    sr.prototype._decodeList = function(e6, r6, o2, f) {
      let p2 = [];
      for (;!e6.isEmpty(); ) {
        let m2 = this._peekTag(e6, "end");
        if (e6.isError(m2))
          return m2;
        let y3 = o2.decode(e6, "der", f);
        if (e6.isError(y3) && m2)
          break;
        p2.push(y3);
      }
      return p2;
    };
    sr.prototype._decodeStr = function(e6, r6) {
      if (r6 === "bitstr") {
        let o2 = e6.readUInt8();
        return e6.isError(o2) ? o2 : { unused: o2, data: e6.raw() };
      } else if (r6 === "bmpstr") {
        let o2 = e6.raw();
        if (o2.length % 2 === 1)
          return e6.error("Decoding of string type: bmpstr length mismatch");
        let f = "";
        for (let p2 = 0;p2 < o2.length / 2; p2++)
          f += String.fromCharCode(o2.readUInt16BE(p2 * 2));
        return f;
      } else if (r6 === "numstr") {
        let o2 = e6.raw().toString("ascii");
        return this._isNumstr(o2) ? o2 : e6.error("Decoding of string type: numstr unsupported characters");
      } else {
        if (r6 === "octstr")
          return e6.raw();
        if (r6 === "objDesc")
          return e6.raw();
        if (r6 === "printstr") {
          let o2 = e6.raw().toString("ascii");
          return this._isPrintstr(o2) ? o2 : e6.error("Decoding of string type: printstr unsupported characters");
        } else
          return /str$/.test(r6) ? e6.raw().toString() : e6.error("Decoding of string type: " + r6 + " unsupported");
      }
    };
    sr.prototype._decodeObjid = function(e6, r6, o2) {
      let f, p2 = [], m2 = 0, y3 = 0;
      for (;!e6.isEmpty(); )
        y3 = e6.readUInt8(), m2 <<= 7, m2 |= y3 & 127, (y3 & 128) === 0 && (p2.push(m2), m2 = 0);
      y3 & 128 && p2.push(m2);
      let M = p2[0] / 40 | 0, x = p2[0] % 40;
      if (o2 ? f = p2 : f = [M, x].concat(p2.slice(1)), r6) {
        let S = r6[f.join(" ")];
        S === undefined && (S = r6[f.join(".")]), S !== undefined && (f = S);
      }
      return f;
    };
    sr.prototype._decodeTime = function(e6, r6) {
      let o2 = e6.raw().toString(), f, p2, m2, y3, M, x;
      if (r6 === "gentime")
        f = o2.slice(0, 4) | 0, p2 = o2.slice(4, 6) | 0, m2 = o2.slice(6, 8) | 0, y3 = o2.slice(8, 10) | 0, M = o2.slice(10, 12) | 0, x = o2.slice(12, 14) | 0;
      else if (r6 === "utctime")
        f = o2.slice(0, 2) | 0, p2 = o2.slice(2, 4) | 0, m2 = o2.slice(4, 6) | 0, y3 = o2.slice(6, 8) | 0, M = o2.slice(8, 10) | 0, x = o2.slice(10, 12) | 0, f < 70 ? f = 2000 + f : f = 1900 + f;
      else
        return e6.error("Decoding " + r6 + " time is not supported yet");
      return Date.UTC(f, p2 - 1, m2, y3, M, x, 0);
    };
    sr.prototype._decodeNull = function() {
      return null;
    };
    sr.prototype._decodeBool = function(e6) {
      let r6 = e6.readUInt8();
      return e6.isError(r6) ? r6 : r6 !== 0;
    };
    sr.prototype._decodeInt = function(e6, r6) {
      let o2 = e6.raw(), f = new gB(o2);
      return r6 && (f = r6[f.toString(10)] || f), f;
    };
    sr.prototype._use = function(e6, r6) {
      return typeof e6 == "function" && (e6 = e6(r6)), e6._getDecoder("der").tree;
    };
    function sd(t6, e6) {
      let r6 = t6.readUInt8(e6);
      if (t6.isError(r6))
        return r6;
      let o2 = Zy.tagClass[r6 >> 6], f = (r6 & 32) === 0;
      if ((r6 & 31) === 31) {
        let m2 = r6;
        for (r6 = 0;(m2 & 128) === 128; ) {
          if (m2 = t6.readUInt8(e6), t6.isError(m2))
            return m2;
          r6 <<= 7, r6 |= m2 & 127;
        }
      } else
        r6 &= 31;
      let p2 = Zy.tag[r6];
      return { cls: o2, primitive: f, tag: r6, tagStr: p2 };
    }
    function Gy(t6, e6, r6) {
      let o2 = t6.readUInt8(r6);
      if (t6.isError(o2))
        return o2;
      if (!e6 && o2 === 128)
        return null;
      if ((o2 & 128) === 0)
        return o2;
      let f = o2 & 127;
      if (f > 4)
        return t6.error("length octect is too long");
      o2 = 0;
      for (let p2 = 0;p2 < f; p2++) {
        o2 <<= 8;
        let m2 = t6.readUInt8(r6);
        if (t6.isError(m2))
          return m2;
        o2 |= m2;
      }
      return o2;
    }
  });
  Jy = T((fL, Xy) => {
    var yB = Ie(), wB = h0().Buffer, ud = hd();
    function ld(t6) {
      ud.call(this, t6), this.enc = "pem";
    }
    yB(ld, ud);
    Xy.exports = ld;
    ld.prototype.decode = function(e6, r6) {
      let o2 = e6.toString().split(/[\r\n]+/g), f = r6.label.toUpperCase(), p2 = /^-----(BEGIN|END) ([^-]+)-----$/, m2 = -1, y3 = -1;
      for (let S = 0;S < o2.length; S++) {
        let E = o2[S].match(p2);
        if (E !== null && E[2] === f)
          if (m2 === -1) {
            if (E[1] !== "BEGIN")
              break;
            m2 = S;
          } else {
            if (E[1] !== "END")
              break;
            y3 = S;
            break;
          }
      }
      if (m2 === -1 || y3 === -1)
        throw new Error("PEM section not found for: " + f);
      let M = o2.slice(m2 + 1, y3).join("");
      M.replace(/[^a-z0-9+/=]+/gi, "");
      let x = wB.from(M, "base64");
      return ud.prototype.decode.call(this, x, r6);
    };
  });
  dd = T((e32) => {
    var Qy = e32;
    Qy.der = hd();
    Qy.pem = Jy();
  });
  r32 = T((t32) => {
    var MB = od(), _B = dd(), xB = Ie(), SB = t32;
    SB.define = function(e6, r6) {
      return new jf(e6, r6);
    };
    function jf(t6, e6) {
      this.name = t6, this.body = e6, this.decoders = {}, this.encoders = {};
    }
    jf.prototype._createNamed = function(e6) {
      let r6 = this.name;
      function o2(f) {
        this._initNamed(f, r6);
      }
      return xB(o2, e6), o2.prototype._initNamed = function(p2, m2) {
        e6.call(this, p2, m2);
      }, new o2(this);
    };
    jf.prototype._getDecoder = function(e6) {
      return e6 = e6 || "der", this.decoders.hasOwnProperty(e6) || (this.decoders[e6] = this._createNamed(_B[e6])), this.decoders[e6];
    };
    jf.prototype.decode = function(e6, r6, o2) {
      return this._getDecoder(r6).decode(e6, o2);
    };
    jf.prototype._getEncoder = function(e6) {
      return e6 = e6 || "der", this.encoders.hasOwnProperty(e6) || (this.encoders[e6] = this._createNamed(MB[e6])), this.encoders[e6];
    };
    jf.prototype.encode = function(e6, r6, o2) {
      return this._getEncoder(r6).encode(e6, o2);
    };
  });
  n3 = T((i3) => {
    var p0 = i3;
    p0.Reporter = u0().Reporter;
    p0.DecoderBuffer = Kf().DecoderBuffer;
    p0.EncoderBuffer = Kf().EncoderBuffer;
    p0.Node = d0();
  });
  o3 = T((a32) => {
    var f3 = a32;
    f3._reverse = function(e6) {
      let r6 = {};
      return Object.keys(e6).forEach(function(o2) {
        (o2 | 0) == o2 && (o2 = o2 | 0);
        let f = e6[o2];
        r6[f] = o2;
      }), r6;
    };
    f3.der = c0();
  });
  cd = T((s32) => {
    var Zf = s32;
    Zf.bignum = td();
    Zf.define = r32().define;
    Zf.base = n3();
    Zf.constants = o3();
    Zf.decoders = dd();
    Zf.encoders = od();
  });
  d3 = T((lL, l3) => {
    var zr = cd(), h3 = zr.define("Time", function() {
      this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
    }), EB = zr.define("AttributeTypeValue", function() {
      this.seq().obj(this.key("type").objid(), this.key("value").any());
    }), pd = zr.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("parameters").optional(), this.key("curve").objid().optional());
    }), AB = zr.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(pd), this.key("subjectPublicKey").bitstr());
    }), RB = zr.define("RelativeDistinguishedName", function() {
      this.setof(EB);
    }), BB = zr.define("RDNSequence", function() {
      this.seqof(RB);
    }), u3 = zr.define("Name", function() {
      this.choice({ rdnSequence: this.use(BB) });
    }), qB = zr.define("Validity", function() {
      this.seq().obj(this.key("notBefore").use(h3), this.key("notAfter").use(h3));
    }), IB = zr.define("Extension", function() {
      this.seq().obj(this.key("extnID").objid(), this.key("critical").bool().def(false), this.key("extnValue").octstr());
    }), TB = zr.define("TBSCertificate", function() {
      this.seq().obj(this.key("version").explicit(0).int().optional(), this.key("serialNumber").int(), this.key("signature").use(pd), this.key("issuer").use(u3), this.key("validity").use(qB), this.key("subject").use(u3), this.key("subjectPublicKeyInfo").use(AB), this.key("issuerUniqueID").implicit(1).bitstr().optional(), this.key("subjectUniqueID").implicit(2).bitstr().optional(), this.key("extensions").explicit(3).seqof(IB).optional());
    }), kB = zr.define("X509Certificate", function() {
      this.seq().obj(this.key("tbsCertificate").use(TB), this.key("signatureAlgorithm").use(pd), this.key("signatureValue").bitstr());
    });
    l3.exports = kB;
  });
  p3 = T((Wr) => {
    var Hr = cd();
    Wr.certificate = d3();
    var LB = Hr.define("RSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("modulus").int(), this.key("publicExponent").int(), this.key("privateExponent").int(), this.key("prime1").int(), this.key("prime2").int(), this.key("exponent1").int(), this.key("exponent2").int(), this.key("coefficient").int());
    });
    Wr.RSAPrivateKey = LB;
    var NB = Hr.define("RSAPublicKey", function() {
      this.seq().obj(this.key("modulus").int(), this.key("publicExponent").int());
    });
    Wr.RSAPublicKey = NB;
    var DB = Hr.define("SubjectPublicKeyInfo", function() {
      this.seq().obj(this.key("algorithm").use(c3), this.key("subjectPublicKey").bitstr());
    });
    Wr.PublicKey = DB;
    var c3 = Hr.define("AlgorithmIdentifier", function() {
      this.seq().obj(this.key("algorithm").objid(), this.key("none").null_().optional(), this.key("curve").objid().optional(), this.key("params").seq().obj(this.key("p").int(), this.key("q").int(), this.key("g").int()).optional());
    }), PB = Hr.define("PrivateKeyInfo", function() {
      this.seq().obj(this.key("version").int(), this.key("algorithm").use(c3), this.key("subjectPrivateKey").octstr());
    });
    Wr.PrivateKey = PB;
    var CB = Hr.define("EncryptedPrivateKeyInfo", function() {
      this.seq().obj(this.key("algorithm").seq().obj(this.key("id").objid(), this.key("decrypt").seq().obj(this.key("kde").seq().obj(this.key("id").objid(), this.key("kdeparams").seq().obj(this.key("salt").octstr(), this.key("iters").int())), this.key("cipher").seq().obj(this.key("algo").objid(), this.key("iv").octstr()))), this.key("subjectPrivateKey").octstr());
    });
    Wr.EncryptedPrivateKey = CB;
    var OB = Hr.define("DSAPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("p").int(), this.key("q").int(), this.key("g").int(), this.key("pub_key").int(), this.key("priv_key").int());
    });
    Wr.DSAPrivateKey = OB;
    Wr.DSAparam = Hr.define("DSAparam", function() {
      this.int();
    });
    var FB = Hr.define("ECPrivateKey", function() {
      this.seq().obj(this.key("version").int(), this.key("privateKey").octstr(), this.key("parameters").optional().explicit(0).use(UB), this.key("publicKey").optional().explicit(1).bitstr());
    });
    Wr.ECPrivateKey = FB;
    var UB = Hr.define("ECParameters", function() {
      this.choice({ namedCurve: this.objid() });
    });
    Wr.signature = Hr.define("signature", function() {
      this.seq().obj(this.key("r").int(), this.key("s").int());
    });
  });
  v3 = T((cL, zB) => {
    zB.exports = { "2.16.840.1.101.3.4.1.1": "aes-128-ecb", "2.16.840.1.101.3.4.1.2": "aes-128-cbc", "2.16.840.1.101.3.4.1.3": "aes-128-ofb", "2.16.840.1.101.3.4.1.4": "aes-128-cfb", "2.16.840.1.101.3.4.1.21": "aes-192-ecb", "2.16.840.1.101.3.4.1.22": "aes-192-cbc", "2.16.840.1.101.3.4.1.23": "aes-192-ofb", "2.16.840.1.101.3.4.1.24": "aes-192-cfb", "2.16.840.1.101.3.4.1.41": "aes-256-ecb", "2.16.840.1.101.3.4.1.42": "aes-256-cbc", "2.16.840.1.101.3.4.1.43": "aes-256-ofb", "2.16.840.1.101.3.4.1.44": "aes-256-cfb" };
  });
  m3 = T((pL, b3) => {
    var HB = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r+/=]+)[\n\r]+/m, WB = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m, KB = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r+/=]+)-----END \1-----$/m, jB = Ba(), ZB = Es(), v0 = Te().Buffer;
    b3.exports = function(t6, e6) {
      var r6 = t6.toString(), o2 = r6.match(HB), f;
      if (o2) {
        var m2 = "aes" + o2[1], y3 = v0.from(o2[2], "hex"), M = v0.from(o2[3].replace(/[\r\n]/g, ""), "base64"), x = jB(e6, y3.slice(0, 8), parseInt(o2[1], 10)).key, S = [], E = ZB.createDecipheriv(m2, x, y3);
        S.push(E.update(M)), S.push(E.final()), f = v0.concat(S);
      } else {
        var p2 = r6.match(KB);
        f = v0.from(p2[2].replace(/[\r\n]/g, ""), "base64");
      }
      var B = r6.match(WB)[1];
      return { tag: B, data: f };
    };
  });
  Ha = T((vL, y3) => {
    var fr = p3(), VB = v3(), $B = m3(), GB = Es(), YB = Iu(), vd = Te().Buffer;
    y3.exports = g3;
    function g3(t6) {
      var e6;
      typeof t6 == "object" && !vd.isBuffer(t6) && (e6 = t6.passphrase, t6 = t6.key), typeof t6 == "string" && (t6 = vd.from(t6));
      var r6 = $B(t6, e6), o2 = r6.tag, f = r6.data, p2, m2;
      switch (o2) {
        case "CERTIFICATE":
          m2 = fr.certificate.decode(f, "der").tbsCertificate.subjectPublicKeyInfo;
        case "PUBLIC KEY":
          switch (m2 || (m2 = fr.PublicKey.decode(f, "der")), p2 = m2.algorithm.algorithm.join("."), p2) {
            case "1.2.840.113549.1.1.1":
              return fr.RSAPublicKey.decode(m2.subjectPublicKey.data, "der");
            case "1.2.840.10045.2.1":
              return m2.subjectPrivateKey = m2.subjectPublicKey, { type: "ec", data: m2 };
            case "1.2.840.10040.4.1":
              return m2.algorithm.params.pub_key = fr.DSAparam.decode(m2.subjectPublicKey.data, "der"), { type: "dsa", data: m2.algorithm.params };
            default:
              throw new Error("unknown key id " + p2);
          }
        case "ENCRYPTED PRIVATE KEY":
          f = fr.EncryptedPrivateKey.decode(f, "der"), f = XB(f, e6);
        case "PRIVATE KEY":
          switch (m2 = fr.PrivateKey.decode(f, "der"), p2 = m2.algorithm.algorithm.join("."), p2) {
            case "1.2.840.113549.1.1.1":
              return fr.RSAPrivateKey.decode(m2.subjectPrivateKey, "der");
            case "1.2.840.10045.2.1":
              return { curve: m2.algorithm.curve, privateKey: fr.ECPrivateKey.decode(m2.subjectPrivateKey, "der").privateKey };
            case "1.2.840.10040.4.1":
              return m2.algorithm.params.priv_key = fr.DSAparam.decode(m2.subjectPrivateKey, "der"), { type: "dsa", params: m2.algorithm.params };
            default:
              throw new Error("unknown key id " + p2);
          }
        case "RSA PUBLIC KEY":
          return fr.RSAPublicKey.decode(f, "der");
        case "RSA PRIVATE KEY":
          return fr.RSAPrivateKey.decode(f, "der");
        case "DSA PRIVATE KEY":
          return { type: "dsa", params: fr.DSAPrivateKey.decode(f, "der") };
        case "EC PRIVATE KEY":
          return f = fr.ECPrivateKey.decode(f, "der"), { curve: f.parameters.value, privateKey: f.privateKey };
        default:
          throw new Error("unknown key type " + o2);
      }
    }
    g3.signature = fr.signature;
    function XB(t6, e6) {
      var r6 = t6.algorithm.decrypt.kde.kdeparams.salt, o2 = parseInt(t6.algorithm.decrypt.kde.kdeparams.iters.toString(), 10), f = VB[t6.algorithm.decrypt.cipher.algo.join(".")], p2 = t6.algorithm.decrypt.cipher.iv, m2 = t6.subjectPrivateKey, y4 = parseInt(f.split("-")[1], 10) / 8, M = YB.pbkdf2Sync(e6, r6, o2, y4, "sha1"), x = GB.createDecipheriv(f, M, p2), S = [];
      return S.push(x.update(m2)), S.push(x.final()), vd.concat(S);
    }
  });
  bd = T((bL, JB) => {
    JB.exports = { "1.3.132.0.10": "secp256k1", "1.3.132.0.33": "p224", "1.2.840.10045.3.1.1": "p192", "1.2.840.10045.3.1.7": "p256", "1.3.132.0.34": "p384", "1.3.132.0.35": "p521" };
  });
  _3 = T((mL, m0) => {
    var Yt = Te().Buffer, Kn = wu(), QB = Ks(), eq = o0().ec, b0 = Ws(), tq = Ha(), rq = bd();
    function iq(t6, e6, r6, o2, f) {
      var p2 = tq(e6);
      if (p2.curve) {
        if (o2 !== "ecdsa" && o2 !== "ecdsa/rsa")
          throw new Error("wrong private key type");
        return nq(t6, p2);
      } else if (p2.type === "dsa") {
        if (o2 !== "dsa")
          throw new Error("wrong private key type");
        return fq(t6, p2, r6);
      } else if (o2 !== "rsa" && o2 !== "ecdsa/rsa")
        throw new Error("wrong private key type");
      t6 = Yt.concat([f, t6]);
      for (var m2 = p2.modulus.byteLength(), y3 = [0, 1];t6.length + y3.length + 1 < m2; )
        y3.push(255);
      y3.push(0);
      for (var M = -1;++M < t6.length; )
        y3.push(t6[M]);
      var x = QB(y3, p2);
      return x;
    }
    function nq(t6, e6) {
      var r6 = rq[e6.curve.join(".")];
      if (!r6)
        throw new Error("unknown curve " + e6.curve.join("."));
      var o2 = new eq(r6), f = o2.keyFromPrivate(e6.privateKey), p2 = f.sign(t6);
      return Yt.from(p2.toDER());
    }
    function fq(t6, e6, r6) {
      for (var o2 = e6.params.priv_key, f = e6.params.p, p2 = e6.params.q, m2 = e6.params.g, y3 = new b0(0), M, x = md(t6, p2).mod(p2), S = false, E = w3(o2, p2, t6, r6);S === false; )
        M = M3(p2, E, r6), y3 = sq(m2, M, f, p2), S = M.invm(p2).imul(x.add(o2.mul(y3))).mod(p2), S.cmpn(0) === 0 && (S = false, y3 = new b0(0));
      return aq(y3, S);
    }
    function aq(t6, e6) {
      t6 = t6.toArray(), e6 = e6.toArray(), t6[0] & 128 && (t6 = [0].concat(t6)), e6[0] & 128 && (e6 = [0].concat(e6));
      var r6 = t6.length + e6.length + 4, o2 = [48, r6, 2, t6.length];
      return o2 = o2.concat(t6, [2, e6.length], e6), Yt.from(o2);
    }
    function w3(t6, e6, r6, o2) {
      if (t6 = Yt.from(t6.toArray()), t6.length < e6.byteLength()) {
        var f = Yt.alloc(e6.byteLength() - t6.length);
        t6 = Yt.concat([f, t6]);
      }
      var p2 = r6.length, m2 = oq(r6, e6), y3 = Yt.alloc(p2);
      y3.fill(1);
      var M = Yt.alloc(p2);
      return M = Kn(o2, M).update(y3).update(Yt.from([0])).update(t6).update(m2).digest(), y3 = Kn(o2, M).update(y3).digest(), M = Kn(o2, M).update(y3).update(Yt.from([1])).update(t6).update(m2).digest(), y3 = Kn(o2, M).update(y3).digest(), { k: M, v: y3 };
    }
    function md(t6, e6) {
      var r6 = new b0(t6), o2 = (t6.length << 3) - e6.bitLength();
      return o2 > 0 && r6.ishrn(o2), r6;
    }
    function oq(t6, e6) {
      t6 = md(t6, e6), t6 = t6.mod(e6);
      var r6 = Yt.from(t6.toArray());
      if (r6.length < e6.byteLength()) {
        var o2 = Yt.alloc(e6.byteLength() - r6.length);
        r6 = Yt.concat([o2, r6]);
      }
      return r6;
    }
    function M3(t6, e6, r6) {
      var o2, f;
      do {
        for (o2 = Yt.alloc(0);o2.length * 8 < t6.bitLength(); )
          e6.v = Kn(r6, e6.k).update(e6.v).digest(), o2 = Yt.concat([o2, e6.v]);
        f = md(o2, t6), e6.k = Kn(r6, e6.k).update(e6.v).update(Yt.from([0])).digest(), e6.v = Kn(r6, e6.k).update(e6.v).digest();
      } while (f.cmp(t6) !== -1);
      return f;
    }
    function sq(t6, e6, r6, o2) {
      return t6.toRed(b0.mont(r6)).redPow(e6).fromRed().mod(o2);
    }
    m0.exports = iq;
    m0.exports.getKey = w3;
    m0.exports.makeKey = M3;
  });
  A3 = T((gL, E3) => {
    var gd = Te().Buffer, Wa = Ws(), hq = o0().ec, S3 = Ha(), uq = bd();
    function lq(t6, e6, r6, o2, f) {
      var p2 = S3(r6);
      if (p2.type === "ec") {
        if (o2 !== "ecdsa" && o2 !== "ecdsa/rsa")
          throw new Error("wrong public key type");
        return dq(t6, e6, p2);
      } else if (p2.type === "dsa") {
        if (o2 !== "dsa")
          throw new Error("wrong public key type");
        return cq(t6, e6, p2);
      } else if (o2 !== "rsa" && o2 !== "ecdsa/rsa")
        throw new Error("wrong public key type");
      e6 = gd.concat([f, e6]);
      for (var m2 = p2.modulus.byteLength(), y3 = [1], M = 0;e6.length + y3.length + 2 < m2; )
        y3.push(255), M++;
      y3.push(0);
      for (var x = -1;++x < e6.length; )
        y3.push(e6[x]);
      y3 = gd.from(y3);
      var S = Wa.mont(p2.modulus);
      t6 = new Wa(t6).toRed(S), t6 = t6.redPow(new Wa(p2.publicExponent)), t6 = gd.from(t6.fromRed().toArray());
      var E = M < 8 ? 1 : 0;
      for (m2 = Math.min(t6.length, y3.length), t6.length !== y3.length && (E = 1), x = -1;++x < m2; )
        E |= t6[x] ^ y3[x];
      return E === 0;
    }
    function dq(t6, e6, r6) {
      var o2 = uq[r6.data.algorithm.curve.join(".")];
      if (!o2)
        throw new Error("unknown curve " + r6.data.algorithm.curve.join("."));
      var f = new hq(o2), p2 = r6.data.subjectPrivateKey.data;
      return f.verify(e6, t6, p2);
    }
    function cq(t6, e6, r6) {
      var o2 = r6.data.p, f = r6.data.q, p2 = r6.data.g, m2 = r6.data.pub_key, y3 = S3.signature.decode(t6, "der"), M = y3.s, x = y3.r;
      x3(M, f), x3(x, f);
      var S = Wa.mont(o2), E = M.invm(f), B = p2.toRed(S).redPow(new Wa(e6).mul(E).mod(f)).fromRed().mul(m2.toRed(S).redPow(x.mul(E).mod(f)).fromRed()).mod(o2).mod(f);
      return B.cmp(x) === 0;
    }
    function x3(t6, e6) {
      if (t6.cmpn(0) <= 0)
        throw new Error("invalid sig");
      if (t6.cmp(e6) >= e6)
        throw new Error("invalid sig");
    }
    E3.exports = lq;
  });
  k3 = T((yL, T3) => {
    var g0 = Te().Buffer, q3 = bf(), y0 = i2(), I3 = Ie(), pq = _3(), vq = A3(), jn = Mu();
    Object.keys(jn).forEach(function(t6) {
      jn[t6].id = g0.from(jn[t6].id, "hex"), jn[t6.toLowerCase()] = jn[t6];
    });
    function Ka(t6) {
      y0.Writable.call(this);
      var e6 = jn[t6];
      if (!e6)
        throw new Error("Unknown message digest");
      this._hashType = e6.hash, this._hash = q3(e6.hash), this._tag = e6.id, this._signType = e6.sign;
    }
    I3(Ka, y0.Writable);
    Ka.prototype._write = function(e6, r6, o2) {
      this._hash.update(e6), o2();
    };
    Ka.prototype.update = function(e6, r6) {
      return typeof e6 == "string" && (e6 = g0.from(e6, r6)), this._hash.update(e6), this;
    };
    Ka.prototype.sign = function(e6, r6) {
      this.end();
      var o2 = this._hash.digest(), f = pq(o2, e6, this._hashType, this._signType, this._tag);
      return r6 ? f.toString(r6) : f;
    };
    function ja(t6) {
      y0.Writable.call(this);
      var e6 = jn[t6];
      if (!e6)
        throw new Error("Unknown message digest");
      this._hash = q3(e6.hash), this._tag = e6.id, this._signType = e6.sign;
    }
    I3(ja, y0.Writable);
    ja.prototype._write = function(e6, r6, o2) {
      this._hash.update(e6), o2();
    };
    ja.prototype.update = function(e6, r6) {
      return typeof e6 == "string" && (e6 = g0.from(e6, r6)), this._hash.update(e6), this;
    };
    ja.prototype.verify = function(e6, r6, o2) {
      typeof r6 == "string" && (r6 = g0.from(r6, o2)), this.end();
      var f = this._hash.digest();
      return vq(r6, f, e6, this._signType, this._tag);
    };
    function R3(t6) {
      return new Ka(t6);
    }
    function B3(t6) {
      return new ja(t6);
    }
    T3.exports = { Sign: R3, Verify: B3, createSign: R3, createVerify: B3 };
  });
  N3 = T((L3, yd) => {
    (function(t6, e6) {
      function r6(v, i3) {
        if (!v)
          throw new Error(i3 || "Assertion failed");
      }
      function o2(v, i3) {
        v.super_ = i3;
        var a4 = function() {
        };
        a4.prototype = i3.prototype, v.prototype = new a4, v.prototype.constructor = v;
      }
      function f(v, i3, a4) {
        if (f.isBN(v))
          return v;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i3 === "le" || i3 === "be") && (a4 = i3, i3 = 10), this._init(v || 0, i3 || 10, a4 || "be"));
      }
      typeof t6 == "object" ? t6.exports = f : e6.BN = f, f.BN = f, f.wordSize = 26;
      var p2;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p2 = window.Buffer : p2 = ji().Buffer;
      } catch {
      }
      f.isBN = function(i3) {
        return i3 instanceof f ? true : i3 !== null && typeof i3 == "object" && i3.constructor.wordSize === f.wordSize && Array.isArray(i3.words);
      }, f.max = function(i3, a4) {
        return i3.cmp(a4) > 0 ? i3 : a4;
      }, f.min = function(i3, a4) {
        return i3.cmp(a4) < 0 ? i3 : a4;
      }, f.prototype._init = function(i3, a4, h2) {
        if (typeof i3 == "number")
          return this._initNumber(i3, a4, h2);
        if (typeof i3 == "object")
          return this._initArray(i3, a4, h2);
        a4 === "hex" && (a4 = 16), r6(a4 === (a4 | 0) && a4 >= 2 && a4 <= 36), i3 = i3.toString().replace(/\s+/g, "");
        var s5 = 0;
        i3[0] === "-" && (s5++, this.negative = 1), s5 < i3.length && (a4 === 16 ? this._parseHex(i3, s5, h2) : (this._parseBase(i3, a4, s5), h2 === "le" && this._initArray(this.toArray(), a4, h2)));
      }, f.prototype._initNumber = function(i3, a4, h2) {
        i3 < 0 && (this.negative = 1, i3 = -i3), i3 < 67108864 ? (this.words = [i3 & 67108863], this.length = 1) : i3 < 4503599627370496 ? (this.words = [i3 & 67108863, i3 / 67108864 & 67108863], this.length = 2) : (r6(i3 < 9007199254740992), this.words = [i3 & 67108863, i3 / 67108864 & 67108863, 1], this.length = 3), h2 === "le" && this._initArray(this.toArray(), a4, h2);
      }, f.prototype._initArray = function(i3, a4, h2) {
        if (r6(typeof i3.length == "number"), i3.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i3.length / 3), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2, c, b3 = 0;
        if (h2 === "be")
          for (s5 = i3.length - 1, u2 = 0;s5 >= 0; s5 -= 3)
            c = i3[s5] | i3[s5 - 1] << 8 | i3[s5 - 2] << 16, this.words[u2] |= c << b3 & 67108863, this.words[u2 + 1] = c >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u2++);
        else if (h2 === "le")
          for (s5 = 0, u2 = 0;s5 < i3.length; s5 += 3)
            c = i3[s5] | i3[s5 + 1] << 8 | i3[s5 + 2] << 16, this.words[u2] |= c << b3 & 67108863, this.words[u2 + 1] = c >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u2++);
        return this.strip();
      };
      function m2(v, i3) {
        var a4 = v.charCodeAt(i3);
        return a4 >= 65 && a4 <= 70 ? a4 - 55 : a4 >= 97 && a4 <= 102 ? a4 - 87 : a4 - 48 & 15;
      }
      function y3(v, i3, a4) {
        var h2 = m2(v, a4);
        return a4 - 1 >= i3 && (h2 |= m2(v, a4 - 1) << 4), h2;
      }
      f.prototype._parseHex = function(i3, a4, h2) {
        this.length = Math.ceil((i3.length - a4) / 6), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2 = 0, c = 0, b3;
        if (h2 === "be")
          for (s5 = i3.length - 1;s5 >= a4; s5 -= 2)
            b3 = y3(i3, a4, s5) << u2, this.words[c] |= b3 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b3 >>> 26) : u2 += 8;
        else {
          var l = i3.length - a4;
          for (s5 = l % 2 === 0 ? a4 + 1 : a4;s5 < i3.length; s5 += 2)
            b3 = y3(i3, a4, s5) << u2, this.words[c] |= b3 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b3 >>> 26) : u2 += 8;
        }
        this.strip();
      };
      function M(v, i3, a4, h2) {
        for (var s5 = 0, u2 = Math.min(v.length, a4), c = i3;c < u2; c++) {
          var b3 = v.charCodeAt(c) - 48;
          s5 *= h2, b3 >= 49 ? s5 += b3 - 49 + 10 : b3 >= 17 ? s5 += b3 - 17 + 10 : s5 += b3;
        }
        return s5;
      }
      f.prototype._parseBase = function(i3, a4, h2) {
        this.words = [0], this.length = 1;
        for (var s5 = 0, u2 = 1;u2 <= 67108863; u2 *= a4)
          s5++;
        s5--, u2 = u2 / a4 | 0;
        for (var c = i3.length - h2, b3 = c % s5, l = Math.min(c, c - b3) + h2, n2 = 0, d2 = h2;d2 < l; d2 += s5)
          n2 = M(i3, d2, d2 + s5, a4), this.imuln(u2), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        if (b3 !== 0) {
          var w = 1;
          for (n2 = M(i3, d2, i3.length, a4), d2 = 0;d2 < b3; d2++)
            w *= a4;
          this.imuln(w), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        }
        this.strip();
      }, f.prototype.copy = function(i3) {
        i3.words = new Array(this.length);
        for (var a4 = 0;a4 < this.length; a4++)
          i3.words[a4] = this.words[a4];
        i3.length = this.length, i3.negative = this.negative, i3.red = this.red;
      }, f.prototype.clone = function() {
        var i3 = new f(null);
        return this.copy(i3), i3;
      }, f.prototype._expand = function(i3) {
        for (;this.length < i3; )
          this.words[this.length++] = 0;
        return this;
      }, f.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f.prototype.toString = function(i3, a4) {
        i3 = i3 || 10, a4 = a4 | 0 || 1;
        var h2;
        if (i3 === 16 || i3 === "hex") {
          h2 = "";
          for (var s5 = 0, u2 = 0, c = 0;c < this.length; c++) {
            var b3 = this.words[c], l = ((b3 << s5 | u2) & 16777215).toString(16);
            u2 = b3 >>> 24 - s5 & 16777215, u2 !== 0 || c !== this.length - 1 ? h2 = x[6 - l.length] + l + h2 : h2 = l + h2, s5 += 2, s5 >= 26 && (s5 -= 26, c--);
          }
          for (u2 !== 0 && (h2 = u2.toString(16) + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        if (i3 === (i3 | 0) && i3 >= 2 && i3 <= 36) {
          var n2 = S[i3], d2 = E[i3];
          h2 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g2 = w.modn(d2).toString(i3);
            w = w.idivn(d2), w.isZero() ? h2 = g2 + h2 : h2 = x[n2 - g2.length] + g2 + h2;
          }
          for (this.isZero() && (h2 = "0" + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        r6(false, "Base should be between 2 and 36");
      }, f.prototype.toNumber = function() {
        var i3 = this.words[0];
        return this.length === 2 ? i3 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i3 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i3 : i3;
      }, f.prototype.toJSON = function() {
        return this.toString(16);
      }, f.prototype.toBuffer = function(i3, a4) {
        return r6(typeof p2 < "u"), this.toArrayLike(p2, i3, a4);
      }, f.prototype.toArray = function(i3, a4) {
        return this.toArrayLike(Array, i3, a4);
      }, f.prototype.toArrayLike = function(i3, a4, h2) {
        var s5 = this.byteLength(), u2 = h2 || Math.max(1, s5);
        r6(s5 <= u2, "byte array longer than desired length"), r6(u2 > 0, "Requested array length <= 0"), this.strip();
        var c = a4 === "le", b3 = new i3(u2), l, n2, d2 = this.clone();
        if (c) {
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b3[n2] = l;
          for (;n2 < u2; n2++)
            b3[n2] = 0;
        } else {
          for (n2 = 0;n2 < u2 - s5; n2++)
            b3[n2] = 0;
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b3[u2 - n2 - 1] = l;
        }
        return b3;
      }, Math.clz32 ? f.prototype._countBits = function(i3) {
        return 32 - Math.clz32(i3);
      } : f.prototype._countBits = function(i3) {
        var a4 = i3, h2 = 0;
        return a4 >= 4096 && (h2 += 13, a4 >>>= 13), a4 >= 64 && (h2 += 7, a4 >>>= 7), a4 >= 8 && (h2 += 4, a4 >>>= 4), a4 >= 2 && (h2 += 2, a4 >>>= 2), h2 + a4;
      }, f.prototype._zeroBits = function(i3) {
        if (i3 === 0)
          return 26;
        var a4 = i3, h2 = 0;
        return (a4 & 8191) === 0 && (h2 += 13, a4 >>>= 13), (a4 & 127) === 0 && (h2 += 7, a4 >>>= 7), (a4 & 15) === 0 && (h2 += 4, a4 >>>= 4), (a4 & 3) === 0 && (h2 += 2, a4 >>>= 2), (a4 & 1) === 0 && h2++, h2;
      }, f.prototype.bitLength = function() {
        var i3 = this.words[this.length - 1], a4 = this._countBits(i3);
        return (this.length - 1) * 26 + a4;
      };
      function B(v) {
        for (var i3 = new Array(v.bitLength()), a4 = 0;a4 < i3.length; a4++) {
          var h2 = a4 / 26 | 0, s5 = a4 % 26;
          i3[a4] = (v.words[h2] & 1 << s5) >>> s5;
        }
        return i3;
      }
      f.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i3 = 0, a4 = 0;a4 < this.length; a4++) {
          var h2 = this._zeroBits(this.words[a4]);
          if (i3 += h2, h2 !== 26)
            break;
        }
        return i3;
      }, f.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f.prototype.toTwos = function(i3) {
        return this.negative !== 0 ? this.abs().inotn(i3).iaddn(1) : this.clone();
      }, f.prototype.fromTwos = function(i3) {
        return this.testn(i3 - 1) ? this.notn(i3).iaddn(1).ineg() : this.clone();
      }, f.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f.prototype.neg = function() {
        return this.clone().ineg();
      }, f.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f.prototype.iuor = function(i3) {
        for (;this.length < i3.length; )
          this.words[this.length++] = 0;
        for (var a4 = 0;a4 < i3.length; a4++)
          this.words[a4] = this.words[a4] | i3.words[a4];
        return this.strip();
      }, f.prototype.ior = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuor(i3);
      }, f.prototype.or = function(i3) {
        return this.length > i3.length ? this.clone().ior(i3) : i3.clone().ior(this);
      }, f.prototype.uor = function(i3) {
        return this.length > i3.length ? this.clone().iuor(i3) : i3.clone().iuor(this);
      }, f.prototype.iuand = function(i3) {
        var a4;
        this.length > i3.length ? a4 = i3 : a4 = this;
        for (var h2 = 0;h2 < a4.length; h2++)
          this.words[h2] = this.words[h2] & i3.words[h2];
        return this.length = a4.length, this.strip();
      }, f.prototype.iand = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuand(i3);
      }, f.prototype.and = function(i3) {
        return this.length > i3.length ? this.clone().iand(i3) : i3.clone().iand(this);
      }, f.prototype.uand = function(i3) {
        return this.length > i3.length ? this.clone().iuand(i3) : i3.clone().iuand(this);
      }, f.prototype.iuxor = function(i3) {
        var a4, h2;
        this.length > i3.length ? (a4 = this, h2 = i3) : (a4 = i3, h2 = this);
        for (var s5 = 0;s5 < h2.length; s5++)
          this.words[s5] = a4.words[s5] ^ h2.words[s5];
        if (this !== a4)
          for (;s5 < a4.length; s5++)
            this.words[s5] = a4.words[s5];
        return this.length = a4.length, this.strip();
      }, f.prototype.ixor = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuxor(i3);
      }, f.prototype.xor = function(i3) {
        return this.length > i3.length ? this.clone().ixor(i3) : i3.clone().ixor(this);
      }, f.prototype.uxor = function(i3) {
        return this.length > i3.length ? this.clone().iuxor(i3) : i3.clone().iuxor(this);
      }, f.prototype.inotn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = Math.ceil(i3 / 26) | 0, h2 = i3 % 26;
        this._expand(a4), h2 > 0 && a4--;
        for (var s5 = 0;s5 < a4; s5++)
          this.words[s5] = ~this.words[s5] & 67108863;
        return h2 > 0 && (this.words[s5] = ~this.words[s5] & 67108863 >> 26 - h2), this.strip();
      }, f.prototype.notn = function(i3) {
        return this.clone().inotn(i3);
      }, f.prototype.setn = function(i3, a4) {
        r6(typeof i3 == "number" && i3 >= 0);
        var h2 = i3 / 26 | 0, s5 = i3 % 26;
        return this._expand(h2 + 1), a4 ? this.words[h2] = this.words[h2] | 1 << s5 : this.words[h2] = this.words[h2] & ~(1 << s5), this.strip();
      }, f.prototype.iadd = function(i3) {
        var a4;
        if (this.negative !== 0 && i3.negative === 0)
          return this.negative = 0, a4 = this.isub(i3), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i3.negative !== 0)
          return i3.negative = 0, a4 = this.isub(i3), i3.negative = 1, a4._normSign();
        var h2, s5;
        this.length > i3.length ? (h2 = this, s5 = i3) : (h2 = i3, s5 = this);
        for (var u2 = 0, c = 0;c < s5.length; c++)
          a4 = (h2.words[c] | 0) + (s5.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        for (;u2 !== 0 && c < h2.length; c++)
          a4 = (h2.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        if (this.length = h2.length, u2 !== 0)
          this.words[this.length] = u2, this.length++;
        else if (h2 !== this)
          for (;c < h2.length; c++)
            this.words[c] = h2.words[c];
        return this;
      }, f.prototype.add = function(i3) {
        var a4;
        return i3.negative !== 0 && this.negative === 0 ? (i3.negative = 0, a4 = this.sub(i3), i3.negative ^= 1, a4) : i3.negative === 0 && this.negative !== 0 ? (this.negative = 0, a4 = i3.sub(this), this.negative = 1, a4) : this.length > i3.length ? this.clone().iadd(i3) : i3.clone().iadd(this);
      }, f.prototype.isub = function(i3) {
        if (i3.negative !== 0) {
          i3.negative = 0;
          var a4 = this.iadd(i3);
          return i3.negative = 1, a4._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i3), this.negative = 1, this._normSign();
        var h2 = this.cmp(i3);
        if (h2 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s5, u2;
        h2 > 0 ? (s5 = this, u2 = i3) : (s5 = i3, u2 = this);
        for (var c = 0, b3 = 0;b3 < u2.length; b3++)
          a4 = (s5.words[b3] | 0) - (u2.words[b3] | 0) + c, c = a4 >> 26, this.words[b3] = a4 & 67108863;
        for (;c !== 0 && b3 < s5.length; b3++)
          a4 = (s5.words[b3] | 0) + c, c = a4 >> 26, this.words[b3] = a4 & 67108863;
        if (c === 0 && b3 < s5.length && s5 !== this)
          for (;b3 < s5.length; b3++)
            this.words[b3] = s5.words[b3];
        return this.length = Math.max(this.length, b3), s5 !== this && (this.negative = 1), this.strip();
      }, f.prototype.sub = function(i3) {
        return this.clone().isub(i3);
      };
      function q2(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative;
        var h2 = v.length + i3.length | 0;
        a4.length = h2, h2 = h2 - 1 | 0;
        var s5 = v.words[0] | 0, u2 = i3.words[0] | 0, c = s5 * u2, b3 = c & 67108863, l = c / 67108864 | 0;
        a4.words[0] = b3;
        for (var n2 = 1;n2 < h2; n2++) {
          for (var d2 = l >>> 26, w = l & 67108863, g2 = Math.min(n2, i3.length - 1), _ = Math.max(0, n2 - v.length + 1);_ <= g2; _++) {
            var A = n2 - _ | 0;
            s5 = v.words[A] | 0, u2 = i3.words[_] | 0, c = s5 * u2 + w, d2 += c / 67108864 | 0, w = c & 67108863;
          }
          a4.words[n2] = w | 0, l = d2 | 0;
        }
        return l !== 0 ? a4.words[n2] = l | 0 : a4.length--, a4.strip();
      }
      var L = function(i3, a4, h2) {
        var s5 = i3.words, u2 = a4.words, c = h2.words, b3 = 0, l, n2, d2, w = s5[0] | 0, g2 = w & 8191, _ = w >>> 13, A = s5[1] | 0, R = A & 8191, I = A >>> 13, Me = s5[2] | 0, k2 = Me & 8191, D = Me >>> 13, nt = s5[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s5[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s5[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s5[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s5[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s5[8] | 0, V = yt & 8191, $2 = yt >>> 13, wt = s5[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u2[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u2[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u2[2] | 0, te = xt & 8191, re = xt >>> 13, St = u2[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u2[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u2[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u2[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u2[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u2[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u2[9] | 0, ve = It & 8191, be = It >>> 13;
        h2.negative = i3.negative ^ a4.negative, h2.length = 19, l = Math.imul(g2, X), n2 = Math.imul(g2, J), n2 = n2 + Math.imul(_, X) | 0, d2 = Math.imul(_, J);
        var ft = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n2 = Math.imul(R, J), n2 = n2 + Math.imul(I, X) | 0, d2 = Math.imul(I, J), l = l + Math.imul(g2, Q) | 0, n2 = n2 + Math.imul(g2, ee) | 0, n2 = n2 + Math.imul(_, Q) | 0, d2 = d2 + Math.imul(_, ee) | 0;
        var Be = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k2, X), n2 = Math.imul(k2, J), n2 = n2 + Math.imul(D, X) | 0, d2 = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n2 = n2 + Math.imul(R, ee) | 0, n2 = n2 + Math.imul(I, Q) | 0, d2 = d2 + Math.imul(I, ee) | 0, l = l + Math.imul(g2, te) | 0, n2 = n2 + Math.imul(g2, re) | 0, n2 = n2 + Math.imul(_, te) | 0, d2 = d2 + Math.imul(_, re) | 0;
        var qe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n2 = Math.imul(C, J), n2 = n2 + Math.imul(O, X) | 0, d2 = Math.imul(O, J), l = l + Math.imul(k2, Q) | 0, n2 = n2 + Math.imul(k2, ee) | 0, n2 = n2 + Math.imul(D, Q) | 0, d2 = d2 + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n2 = n2 + Math.imul(R, re) | 0, n2 = n2 + Math.imul(I, te) | 0, d2 = d2 + Math.imul(I, re) | 0, l = l + Math.imul(g2, ie) | 0, n2 = n2 + Math.imul(g2, ne) | 0, n2 = n2 + Math.imul(_, ie) | 0, d2 = d2 + Math.imul(_, ne) | 0;
        var ze = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n2 = Math.imul(F, J), n2 = n2 + Math.imul(U, X) | 0, d2 = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n2 = n2 + Math.imul(C, ee) | 0, n2 = n2 + Math.imul(O, Q) | 0, d2 = d2 + Math.imul(O, ee) | 0, l = l + Math.imul(k2, te) | 0, n2 = n2 + Math.imul(k2, re) | 0, n2 = n2 + Math.imul(D, te) | 0, d2 = d2 + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n2 = n2 + Math.imul(R, ne) | 0, n2 = n2 + Math.imul(I, ie) | 0, d2 = d2 + Math.imul(I, ne) | 0, l = l + Math.imul(g2, fe) | 0, n2 = n2 + Math.imul(g2, ae) | 0, n2 = n2 + Math.imul(_, fe) | 0, d2 = d2 + Math.imul(_, ae) | 0;
        var He = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n2 = Math.imul(z, J), n2 = n2 + Math.imul(H, X) | 0, d2 = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n2 = n2 + Math.imul(F, ee) | 0, n2 = n2 + Math.imul(U, Q) | 0, d2 = d2 + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n2 = n2 + Math.imul(C, re) | 0, n2 = n2 + Math.imul(O, te) | 0, d2 = d2 + Math.imul(O, re) | 0, l = l + Math.imul(k2, ie) | 0, n2 = n2 + Math.imul(k2, ne) | 0, n2 = n2 + Math.imul(D, ie) | 0, d2 = d2 + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n2 = n2 + Math.imul(R, ae) | 0, n2 = n2 + Math.imul(I, fe) | 0, d2 = d2 + Math.imul(I, ae) | 0, l = l + Math.imul(g2, oe) | 0, n2 = n2 + Math.imul(g2, se) | 0, n2 = n2 + Math.imul(_, oe) | 0, d2 = d2 + Math.imul(_, se) | 0;
        var We = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n2 = Math.imul(W, J), n2 = n2 + Math.imul(K, X) | 0, d2 = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n2 = n2 + Math.imul(z, ee) | 0, n2 = n2 + Math.imul(H, Q) | 0, d2 = d2 + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n2 = n2 + Math.imul(F, re) | 0, n2 = n2 + Math.imul(U, te) | 0, d2 = d2 + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n2 = n2 + Math.imul(C, ne) | 0, n2 = n2 + Math.imul(O, ie) | 0, d2 = d2 + Math.imul(O, ne) | 0, l = l + Math.imul(k2, fe) | 0, n2 = n2 + Math.imul(k2, ae) | 0, n2 = n2 + Math.imul(D, fe) | 0, d2 = d2 + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n2 = n2 + Math.imul(R, se) | 0, n2 = n2 + Math.imul(I, oe) | 0, d2 = d2 + Math.imul(I, se) | 0, l = l + Math.imul(g2, he) | 0, n2 = n2 + Math.imul(g2, ue) | 0, n2 = n2 + Math.imul(_, he) | 0, d2 = d2 + Math.imul(_, ue) | 0;
        var Ke = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n2 = Math.imul(j, J), n2 = n2 + Math.imul(Z, X) | 0, d2 = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n2 = n2 + Math.imul(W, ee) | 0, n2 = n2 + Math.imul(K, Q) | 0, d2 = d2 + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n2 = n2 + Math.imul(z, re) | 0, n2 = n2 + Math.imul(H, te) | 0, d2 = d2 + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n2 = n2 + Math.imul(F, ne) | 0, n2 = n2 + Math.imul(U, ie) | 0, d2 = d2 + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n2 = n2 + Math.imul(C, ae) | 0, n2 = n2 + Math.imul(O, fe) | 0, d2 = d2 + Math.imul(O, ae) | 0, l = l + Math.imul(k2, oe) | 0, n2 = n2 + Math.imul(k2, se) | 0, n2 = n2 + Math.imul(D, oe) | 0, d2 = d2 + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n2 = n2 + Math.imul(R, ue) | 0, n2 = n2 + Math.imul(I, he) | 0, d2 = d2 + Math.imul(I, ue) | 0, l = l + Math.imul(g2, le) | 0, n2 = n2 + Math.imul(g2, de) | 0, n2 = n2 + Math.imul(_, le) | 0, d2 = d2 + Math.imul(_, de) | 0;
        var je = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n2 = Math.imul(V, J), n2 = n2 + Math.imul($2, X) | 0, d2 = Math.imul($2, J), l = l + Math.imul(j, Q) | 0, n2 = n2 + Math.imul(j, ee) | 0, n2 = n2 + Math.imul(Z, Q) | 0, d2 = d2 + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n2 = n2 + Math.imul(W, re) | 0, n2 = n2 + Math.imul(K, te) | 0, d2 = d2 + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n2 = n2 + Math.imul(z, ne) | 0, n2 = n2 + Math.imul(H, ie) | 0, d2 = d2 + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n2 = n2 + Math.imul(F, ae) | 0, n2 = n2 + Math.imul(U, fe) | 0, d2 = d2 + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n2 = n2 + Math.imul(C, se) | 0, n2 = n2 + Math.imul(O, oe) | 0, d2 = d2 + Math.imul(O, se) | 0, l = l + Math.imul(k2, he) | 0, n2 = n2 + Math.imul(k2, ue) | 0, n2 = n2 + Math.imul(D, he) | 0, d2 = d2 + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n2 = n2 + Math.imul(R, de) | 0, n2 = n2 + Math.imul(I, le) | 0, d2 = d2 + Math.imul(I, de) | 0, l = l + Math.imul(g2, ce) | 0, n2 = n2 + Math.imul(g2, pe) | 0, n2 = n2 + Math.imul(_, ce) | 0, d2 = d2 + Math.imul(_, pe) | 0;
        var Ze = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n2 = Math.imul(G, J), n2 = n2 + Math.imul(Y, X) | 0, d2 = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n2 = n2 + Math.imul(V, ee) | 0, n2 = n2 + Math.imul($2, Q) | 0, d2 = d2 + Math.imul($2, ee) | 0, l = l + Math.imul(j, te) | 0, n2 = n2 + Math.imul(j, re) | 0, n2 = n2 + Math.imul(Z, te) | 0, d2 = d2 + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n2 = n2 + Math.imul(W, ne) | 0, n2 = n2 + Math.imul(K, ie) | 0, d2 = d2 + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n2 = n2 + Math.imul(z, ae) | 0, n2 = n2 + Math.imul(H, fe) | 0, d2 = d2 + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n2 = n2 + Math.imul(F, se) | 0, n2 = n2 + Math.imul(U, oe) | 0, d2 = d2 + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n2 = n2 + Math.imul(C, ue) | 0, n2 = n2 + Math.imul(O, he) | 0, d2 = d2 + Math.imul(O, ue) | 0, l = l + Math.imul(k2, le) | 0, n2 = n2 + Math.imul(k2, de) | 0, n2 = n2 + Math.imul(D, le) | 0, d2 = d2 + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n2 = n2 + Math.imul(R, pe) | 0, n2 = n2 + Math.imul(I, ce) | 0, d2 = d2 + Math.imul(I, pe) | 0, l = l + Math.imul(g2, ve) | 0, n2 = n2 + Math.imul(g2, be) | 0, n2 = n2 + Math.imul(_, ve) | 0, d2 = d2 + Math.imul(_, be) | 0;
        var Ve = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n2 = Math.imul(G, ee), n2 = n2 + Math.imul(Y, Q) | 0, d2 = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n2 = n2 + Math.imul(V, re) | 0, n2 = n2 + Math.imul($2, te) | 0, d2 = d2 + Math.imul($2, re) | 0, l = l + Math.imul(j, ie) | 0, n2 = n2 + Math.imul(j, ne) | 0, n2 = n2 + Math.imul(Z, ie) | 0, d2 = d2 + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n2 = n2 + Math.imul(W, ae) | 0, n2 = n2 + Math.imul(K, fe) | 0, d2 = d2 + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n2 = n2 + Math.imul(z, se) | 0, n2 = n2 + Math.imul(H, oe) | 0, d2 = d2 + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n2 = n2 + Math.imul(F, ue) | 0, n2 = n2 + Math.imul(U, he) | 0, d2 = d2 + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n2 = n2 + Math.imul(C, de) | 0, n2 = n2 + Math.imul(O, le) | 0, d2 = d2 + Math.imul(O, de) | 0, l = l + Math.imul(k2, ce) | 0, n2 = n2 + Math.imul(k2, pe) | 0, n2 = n2 + Math.imul(D, ce) | 0, d2 = d2 + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n2 = n2 + Math.imul(R, be) | 0, n2 = n2 + Math.imul(I, ve) | 0, d2 = d2 + Math.imul(I, be) | 0;
        var $e = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n2 = Math.imul(G, re), n2 = n2 + Math.imul(Y, te) | 0, d2 = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n2 = n2 + Math.imul(V, ne) | 0, n2 = n2 + Math.imul($2, ie) | 0, d2 = d2 + Math.imul($2, ne) | 0, l = l + Math.imul(j, fe) | 0, n2 = n2 + Math.imul(j, ae) | 0, n2 = n2 + Math.imul(Z, fe) | 0, d2 = d2 + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n2 = n2 + Math.imul(W, se) | 0, n2 = n2 + Math.imul(K, oe) | 0, d2 = d2 + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n2 = n2 + Math.imul(z, ue) | 0, n2 = n2 + Math.imul(H, he) | 0, d2 = d2 + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n2 = n2 + Math.imul(F, de) | 0, n2 = n2 + Math.imul(U, le) | 0, d2 = d2 + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n2 = n2 + Math.imul(C, pe) | 0, n2 = n2 + Math.imul(O, ce) | 0, d2 = d2 + Math.imul(O, pe) | 0, l = l + Math.imul(k2, ve) | 0, n2 = n2 + Math.imul(k2, be) | 0, n2 = n2 + Math.imul(D, ve) | 0, d2 = d2 + Math.imul(D, be) | 0;
        var Ge = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n2 = Math.imul(G, ne), n2 = n2 + Math.imul(Y, ie) | 0, d2 = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n2 = n2 + Math.imul(V, ae) | 0, n2 = n2 + Math.imul($2, fe) | 0, d2 = d2 + Math.imul($2, ae) | 0, l = l + Math.imul(j, oe) | 0, n2 = n2 + Math.imul(j, se) | 0, n2 = n2 + Math.imul(Z, oe) | 0, d2 = d2 + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n2 = n2 + Math.imul(W, ue) | 0, n2 = n2 + Math.imul(K, he) | 0, d2 = d2 + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n2 = n2 + Math.imul(z, de) | 0, n2 = n2 + Math.imul(H, le) | 0, d2 = d2 + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n2 = n2 + Math.imul(F, pe) | 0, n2 = n2 + Math.imul(U, ce) | 0, d2 = d2 + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n2 = n2 + Math.imul(C, be) | 0, n2 = n2 + Math.imul(O, ve) | 0, d2 = d2 + Math.imul(O, be) | 0;
        var Ye = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n2 = Math.imul(G, ae), n2 = n2 + Math.imul(Y, fe) | 0, d2 = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n2 = n2 + Math.imul(V, se) | 0, n2 = n2 + Math.imul($2, oe) | 0, d2 = d2 + Math.imul($2, se) | 0, l = l + Math.imul(j, he) | 0, n2 = n2 + Math.imul(j, ue) | 0, n2 = n2 + Math.imul(Z, he) | 0, d2 = d2 + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n2 = n2 + Math.imul(W, de) | 0, n2 = n2 + Math.imul(K, le) | 0, d2 = d2 + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n2 = n2 + Math.imul(z, pe) | 0, n2 = n2 + Math.imul(H, ce) | 0, d2 = d2 + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n2 = n2 + Math.imul(F, be) | 0, n2 = n2 + Math.imul(U, ve) | 0, d2 = d2 + Math.imul(U, be) | 0;
        var Xe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n2 = Math.imul(G, se), n2 = n2 + Math.imul(Y, oe) | 0, d2 = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n2 = n2 + Math.imul(V, ue) | 0, n2 = n2 + Math.imul($2, he) | 0, d2 = d2 + Math.imul($2, ue) | 0, l = l + Math.imul(j, le) | 0, n2 = n2 + Math.imul(j, de) | 0, n2 = n2 + Math.imul(Z, le) | 0, d2 = d2 + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n2 = n2 + Math.imul(W, pe) | 0, n2 = n2 + Math.imul(K, ce) | 0, d2 = d2 + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n2 = n2 + Math.imul(z, be) | 0, n2 = n2 + Math.imul(H, ve) | 0, d2 = d2 + Math.imul(H, be) | 0;
        var Je = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n2 = Math.imul(G, ue), n2 = n2 + Math.imul(Y, he) | 0, d2 = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n2 = n2 + Math.imul(V, de) | 0, n2 = n2 + Math.imul($2, le) | 0, d2 = d2 + Math.imul($2, de) | 0, l = l + Math.imul(j, ce) | 0, n2 = n2 + Math.imul(j, pe) | 0, n2 = n2 + Math.imul(Z, ce) | 0, d2 = d2 + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n2 = n2 + Math.imul(W, be) | 0, n2 = n2 + Math.imul(K, ve) | 0, d2 = d2 + Math.imul(K, be) | 0;
        var Qe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n2 = Math.imul(G, de), n2 = n2 + Math.imul(Y, le) | 0, d2 = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n2 = n2 + Math.imul(V, pe) | 0, n2 = n2 + Math.imul($2, ce) | 0, d2 = d2 + Math.imul($2, pe) | 0, l = l + Math.imul(j, ve) | 0, n2 = n2 + Math.imul(j, be) | 0, n2 = n2 + Math.imul(Z, ve) | 0, d2 = d2 + Math.imul(Z, be) | 0;
        var et = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n2 = Math.imul(G, pe), n2 = n2 + Math.imul(Y, ce) | 0, d2 = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n2 = n2 + Math.imul(V, be) | 0, n2 = n2 + Math.imul($2, ve) | 0, d2 = d2 + Math.imul($2, be) | 0;
        var tt = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n2 = Math.imul(G, be), n2 = n2 + Math.imul(Y, ve) | 0, d2 = Math.imul(Y, be);
        var rt = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        return b3 = (d2 + (n2 >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b3 !== 0 && (c[19] = b3, h2.length++), h2;
      };
      Math.imul || (L = q2);
      function ge(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative, a4.length = v.length + i3.length;
        for (var h2 = 0, s5 = 0, u2 = 0;u2 < a4.length - 1; u2++) {
          var c = s5;
          s5 = 0;
          for (var b3 = h2 & 67108863, l = Math.min(u2, i3.length - 1), n2 = Math.max(0, u2 - v.length + 1);n2 <= l; n2++) {
            var d2 = u2 - n2, w = v.words[d2] | 0, g2 = i3.words[n2] | 0, _ = w * g2, A = _ & 67108863;
            c = c + (_ / 67108864 | 0) | 0, A = A + b3 | 0, b3 = A & 67108863, c = c + (A >>> 26) | 0, s5 += c >>> 26, c &= 67108863;
          }
          a4.words[u2] = b3, h2 = c, c = s5;
        }
        return h2 !== 0 ? a4.words[u2] = h2 : a4.length--, a4.strip();
      }
      function _e(v, i3, a4) {
        var h2 = new N;
        return h2.mulp(v, i3, a4);
      }
      f.prototype.mulTo = function(i3, a4) {
        var h2, s5 = this.length + i3.length;
        return this.length === 10 && i3.length === 10 ? h2 = L(this, i3, a4) : s5 < 63 ? h2 = q2(this, i3, a4) : s5 < 1024 ? h2 = ge(this, i3, a4) : h2 = _e(this, i3, a4), h2;
      };
      function N(v, i3) {
        this.x = v, this.y = i3;
      }
      N.prototype.makeRBT = function(i3) {
        for (var a4 = new Array(i3), h2 = f.prototype._countBits(i3) - 1, s5 = 0;s5 < i3; s5++)
          a4[s5] = this.revBin(s5, h2, i3);
        return a4;
      }, N.prototype.revBin = function(i3, a4, h2) {
        if (i3 === 0 || i3 === h2 - 1)
          return i3;
        for (var s5 = 0, u2 = 0;u2 < a4; u2++)
          s5 |= (i3 & 1) << a4 - u2 - 1, i3 >>= 1;
        return s5;
      }, N.prototype.permute = function(i3, a4, h2, s5, u2, c) {
        for (var b3 = 0;b3 < c; b3++)
          s5[b3] = a4[i3[b3]], u2[b3] = h2[i3[b3]];
      }, N.prototype.transform = function(i3, a4, h2, s5, u2, c) {
        this.permute(c, i3, a4, h2, s5, u2);
        for (var b3 = 1;b3 < u2; b3 <<= 1)
          for (var l = b3 << 1, n2 = Math.cos(2 * Math.PI / l), d2 = Math.sin(2 * Math.PI / l), w = 0;w < u2; w += l)
            for (var g2 = n2, _ = d2, A = 0;A < b3; A++) {
              var R = h2[w + A], I = s5[w + A], Me = h2[w + A + b3], k2 = s5[w + A + b3], D = g2 * Me - _ * k2;
              k2 = g2 * k2 + _ * Me, Me = D, h2[w + A] = R + Me, s5[w + A] = I + k2, h2[w + A + b3] = R - Me, s5[w + A + b3] = I - k2, A !== l && (D = n2 * g2 - d2 * _, _ = n2 * _ + d2 * g2, g2 = D);
            }
      }, N.prototype.guessLen13b = function(i3, a4) {
        var h2 = Math.max(a4, i3) | 1, s5 = h2 & 1, u2 = 0;
        for (h2 = h2 / 2 | 0;h2; h2 = h2 >>> 1)
          u2++;
        return 1 << u2 + 1 + s5;
      }, N.prototype.conjugate = function(i3, a4, h2) {
        if (!(h2 <= 1))
          for (var s5 = 0;s5 < h2 / 2; s5++) {
            var u2 = i3[s5];
            i3[s5] = i3[h2 - s5 - 1], i3[h2 - s5 - 1] = u2, u2 = a4[s5], a4[s5] = -a4[h2 - s5 - 1], a4[h2 - s5 - 1] = -u2;
          }
      }, N.prototype.normalize13b = function(i3, a4) {
        for (var h2 = 0, s5 = 0;s5 < a4 / 2; s5++) {
          var u2 = Math.round(i3[2 * s5 + 1] / a4) * 8192 + Math.round(i3[2 * s5] / a4) + h2;
          i3[s5] = u2 & 67108863, u2 < 67108864 ? h2 = 0 : h2 = u2 / 67108864 | 0;
        }
        return i3;
      }, N.prototype.convert13b = function(i3, a4, h2, s5) {
        for (var u2 = 0, c = 0;c < a4; c++)
          u2 = u2 + (i3[c] | 0), h2[2 * c] = u2 & 8191, u2 = u2 >>> 13, h2[2 * c + 1] = u2 & 8191, u2 = u2 >>> 13;
        for (c = 2 * a4;c < s5; ++c)
          h2[c] = 0;
        r6(u2 === 0), r6((u2 & -8192) === 0);
      }, N.prototype.stub = function(i3) {
        for (var a4 = new Array(i3), h2 = 0;h2 < i3; h2++)
          a4[h2] = 0;
        return a4;
      }, N.prototype.mulp = function(i3, a4, h2) {
        var s5 = 2 * this.guessLen13b(i3.length, a4.length), u2 = this.makeRBT(s5), c = this.stub(s5), b3 = new Array(s5), l = new Array(s5), n2 = new Array(s5), d2 = new Array(s5), w = new Array(s5), g2 = new Array(s5), _ = h2.words;
        _.length = s5, this.convert13b(i3.words, i3.length, b3, s5), this.convert13b(a4.words, a4.length, d2, s5), this.transform(b3, c, l, n2, s5, u2), this.transform(d2, c, w, g2, s5, u2);
        for (var A = 0;A < s5; A++) {
          var R = l[A] * w[A] - n2[A] * g2[A];
          n2[A] = l[A] * g2[A] + n2[A] * w[A], l[A] = R;
        }
        return this.conjugate(l, n2, s5), this.transform(l, n2, _, c, s5, u2), this.conjugate(_, c, s5), this.normalize13b(_, s5), h2.negative = i3.negative ^ a4.negative, h2.length = i3.length + a4.length, h2.strip();
      }, f.prototype.mul = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), this.mulTo(i3, a4);
      }, f.prototype.mulf = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), _e(this, i3, a4);
      }, f.prototype.imul = function(i3) {
        return this.clone().mulTo(i3, this);
      }, f.prototype.imuln = function(i3) {
        r6(typeof i3 == "number"), r6(i3 < 67108864);
        for (var a4 = 0, h2 = 0;h2 < this.length; h2++) {
          var s5 = (this.words[h2] | 0) * i3, u2 = (s5 & 67108863) + (a4 & 67108863);
          a4 >>= 26, a4 += s5 / 67108864 | 0, a4 += u2 >>> 26, this.words[h2] = u2 & 67108863;
        }
        return a4 !== 0 && (this.words[h2] = a4, this.length++), this;
      }, f.prototype.muln = function(i3) {
        return this.clone().imuln(i3);
      }, f.prototype.sqr = function() {
        return this.mul(this);
      }, f.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f.prototype.pow = function(i3) {
        var a4 = B(i3);
        if (a4.length === 0)
          return new f(1);
        for (var h2 = this, s5 = 0;s5 < a4.length && a4[s5] === 0; s5++, h2 = h2.sqr())
          ;
        if (++s5 < a4.length)
          for (var u2 = h2.sqr();s5 < a4.length; s5++, u2 = u2.sqr())
            a4[s5] !== 0 && (h2 = h2.mul(u2));
        return h2;
      }, f.prototype.iushln = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 67108863 >>> 26 - a4 << 26 - a4, u2;
        if (a4 !== 0) {
          var c = 0;
          for (u2 = 0;u2 < this.length; u2++) {
            var b3 = this.words[u2] & s5, l = (this.words[u2] | 0) - b3 << a4;
            this.words[u2] = l | c, c = b3 >>> 26 - a4;
          }
          c && (this.words[u2] = c, this.length++);
        }
        if (h2 !== 0) {
          for (u2 = this.length - 1;u2 >= 0; u2--)
            this.words[u2 + h2] = this.words[u2];
          for (u2 = 0;u2 < h2; u2++)
            this.words[u2] = 0;
          this.length += h2;
        }
        return this.strip();
      }, f.prototype.ishln = function(i3) {
        return r6(this.negative === 0), this.iushln(i3);
      }, f.prototype.iushrn = function(i3, a4, h2) {
        r6(typeof i3 == "number" && i3 >= 0);
        var s5;
        a4 ? s5 = (a4 - a4 % 26) / 26 : s5 = 0;
        var u2 = i3 % 26, c = Math.min((i3 - u2) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u2 << u2, l = h2;
        if (s5 -= c, s5 = Math.max(0, s5), l) {
          for (var n2 = 0;n2 < c; n2++)
            l.words[n2] = this.words[n2];
          l.length = c;
        }
        if (c !== 0)
          if (this.length > c)
            for (this.length -= c, n2 = 0;n2 < this.length; n2++)
              this.words[n2] = this.words[n2 + c];
          else
            this.words[0] = 0, this.length = 1;
        var d2 = 0;
        for (n2 = this.length - 1;n2 >= 0 && (d2 !== 0 || n2 >= s5); n2--) {
          var w = this.words[n2] | 0;
          this.words[n2] = d2 << 26 - u2 | w >>> u2, d2 = w & b3;
        }
        return l && d2 !== 0 && (l.words[l.length++] = d2), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f.prototype.ishrn = function(i3, a4, h2) {
        return r6(this.negative === 0), this.iushrn(i3, a4, h2);
      }, f.prototype.shln = function(i3) {
        return this.clone().ishln(i3);
      }, f.prototype.ushln = function(i3) {
        return this.clone().iushln(i3);
      }, f.prototype.shrn = function(i3) {
        return this.clone().ishrn(i3);
      }, f.prototype.ushrn = function(i3) {
        return this.clone().iushrn(i3);
      }, f.prototype.testn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return false;
        var u2 = this.words[h2];
        return !!(u2 & s5);
      }, f.prototype.imaskn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26;
        if (r6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h2)
          return this;
        if (a4 !== 0 && h2++, this.length = Math.min(h2, this.length), a4 !== 0) {
          var s5 = 67108863 ^ 67108863 >>> a4 << a4;
          this.words[this.length - 1] &= s5;
        }
        return this.strip();
      }, f.prototype.maskn = function(i3) {
        return this.clone().imaskn(i3);
      }, f.prototype.iaddn = function(i3) {
        return r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0 ? this.isubn(-i3) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i3 ? (this.words[0] = i3 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i3), this.negative = 1, this) : this._iaddn(i3);
      }, f.prototype._iaddn = function(i3) {
        this.words[0] += i3;
        for (var a4 = 0;a4 < this.length && this.words[a4] >= 67108864; a4++)
          this.words[a4] -= 67108864, a4 === this.length - 1 ? this.words[a4 + 1] = 1 : this.words[a4 + 1]++;
        return this.length = Math.max(this.length, a4 + 1), this;
      }, f.prototype.isubn = function(i3) {
        if (r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0)
          return this.iaddn(-i3);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i3), this.negative = 1, this;
        if (this.words[0] -= i3, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a4 = 0;a4 < this.length && this.words[a4] < 0; a4++)
            this.words[a4] += 67108864, this.words[a4 + 1] -= 1;
        return this.strip();
      }, f.prototype.addn = function(i3) {
        return this.clone().iaddn(i3);
      }, f.prototype.subn = function(i3) {
        return this.clone().isubn(i3);
      }, f.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f.prototype.abs = function() {
        return this.clone().iabs();
      }, f.prototype._ishlnsubmul = function(i3, a4, h2) {
        var s5 = i3.length + h2, u2;
        this._expand(s5);
        var c, b3 = 0;
        for (u2 = 0;u2 < i3.length; u2++) {
          c = (this.words[u2 + h2] | 0) + b3;
          var l = (i3.words[u2] | 0) * a4;
          c -= l & 67108863, b3 = (c >> 26) - (l / 67108864 | 0), this.words[u2 + h2] = c & 67108863;
        }
        for (;u2 < this.length - h2; u2++)
          c = (this.words[u2 + h2] | 0) + b3, b3 = c >> 26, this.words[u2 + h2] = c & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r6(b3 === -1), b3 = 0, u2 = 0;u2 < this.length; u2++)
          c = -(this.words[u2] | 0) + b3, b3 = c >> 26, this.words[u2] = c & 67108863;
        return this.negative = 1, this.strip();
      }, f.prototype._wordDiv = function(i3, a4) {
        var h2 = this.length - i3.length, s5 = this.clone(), u2 = i3, c = u2.words[u2.length - 1] | 0, b3 = this._countBits(c);
        h2 = 26 - b3, h2 !== 0 && (u2 = u2.ushln(h2), s5.iushln(h2), c = u2.words[u2.length - 1] | 0);
        var l = s5.length - u2.length, n2;
        if (a4 !== "mod") {
          n2 = new f(null), n2.length = l + 1, n2.words = new Array(n2.length);
          for (var d2 = 0;d2 < n2.length; d2++)
            n2.words[d2] = 0;
        }
        var w = s5.clone()._ishlnsubmul(u2, 1, l);
        w.negative === 0 && (s5 = w, n2 && (n2.words[l] = 1));
        for (var g2 = l - 1;g2 >= 0; g2--) {
          var _ = (s5.words[u2.length + g2] | 0) * 67108864 + (s5.words[u2.length + g2 - 1] | 0);
          for (_ = Math.min(_ / c | 0, 67108863), s5._ishlnsubmul(u2, _, g2);s5.negative !== 0; )
            _--, s5.negative = 0, s5._ishlnsubmul(u2, 1, g2), s5.isZero() || (s5.negative ^= 1);
          n2 && (n2.words[g2] = _);
        }
        return n2 && n2.strip(), s5.strip(), a4 !== "div" && h2 !== 0 && s5.iushrn(h2), { div: n2 || null, mod: s5 };
      }, f.prototype.divmod = function(i3, a4, h2) {
        if (r6(!i3.isZero()), this.isZero())
          return { div: new f(0), mod: new f(0) };
        var s5, u2, c;
        return this.negative !== 0 && i3.negative === 0 ? (c = this.neg().divmod(i3, a4), a4 !== "mod" && (s5 = c.div.neg()), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.iadd(i3)), { div: s5, mod: u2 }) : this.negative === 0 && i3.negative !== 0 ? (c = this.divmod(i3.neg(), a4), a4 !== "mod" && (s5 = c.div.neg()), { div: s5, mod: c.mod }) : (this.negative & i3.negative) !== 0 ? (c = this.neg().divmod(i3.neg(), a4), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.isub(i3)), { div: c.div, mod: u2 }) : i3.length > this.length || this.cmp(i3) < 0 ? { div: new f(0), mod: this } : i3.length === 1 ? a4 === "div" ? { div: this.divn(i3.words[0]), mod: null } : a4 === "mod" ? { div: null, mod: new f(this.modn(i3.words[0])) } : { div: this.divn(i3.words[0]), mod: new f(this.modn(i3.words[0])) } : this._wordDiv(i3, a4);
      }, f.prototype.div = function(i3) {
        return this.divmod(i3, "div", false).div;
      }, f.prototype.mod = function(i3) {
        return this.divmod(i3, "mod", false).mod;
      }, f.prototype.umod = function(i3) {
        return this.divmod(i3, "mod", true).mod;
      }, f.prototype.divRound = function(i3) {
        var a4 = this.divmod(i3);
        if (a4.mod.isZero())
          return a4.div;
        var h2 = a4.div.negative !== 0 ? a4.mod.isub(i3) : a4.mod, s5 = i3.ushrn(1), u2 = i3.andln(1), c = h2.cmp(s5);
        return c < 0 || u2 === 1 && c === 0 ? a4.div : a4.div.negative !== 0 ? a4.div.isubn(1) : a4.div.iaddn(1);
      }, f.prototype.modn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = (1 << 26) % i3, h2 = 0, s5 = this.length - 1;s5 >= 0; s5--)
          h2 = (a4 * h2 + (this.words[s5] | 0)) % i3;
        return h2;
      }, f.prototype.idivn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = (this.words[h2] | 0) + a4 * 67108864;
          this.words[h2] = s5 / i3 | 0, a4 = s5 % i3;
        }
        return this.strip();
      }, f.prototype.divn = function(i3) {
        return this.clone().idivn(i3);
      }, f.prototype.egcd = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h2 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = new f(0), b3 = new f(1), l = 0;a4.isEven() && h2.isEven(); )
          a4.iushrn(1), h2.iushrn(1), ++l;
        for (var n2 = h2.clone(), d2 = a4.clone();!a4.isZero(); ) {
          for (var w = 0, g2 = 1;(a4.words[0] & g2) === 0 && w < 26; ++w, g2 <<= 1)
            ;
          if (w > 0)
            for (a4.iushrn(w);w-- > 0; )
              (s5.isOdd() || u2.isOdd()) && (s5.iadd(n2), u2.isub(d2)), s5.iushrn(1), u2.iushrn(1);
          for (var _ = 0, A = 1;(h2.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
            ;
          if (_ > 0)
            for (h2.iushrn(_);_-- > 0; )
              (c.isOdd() || b3.isOdd()) && (c.iadd(n2), b3.isub(d2)), c.iushrn(1), b3.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(c), u2.isub(b3)) : (h2.isub(a4), c.isub(s5), b3.isub(u2));
        }
        return { a: c, b: b3, gcd: h2.iushln(l) };
      }, f.prototype._invmp = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h2 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = h2.clone();a4.cmpn(1) > 0 && h2.cmpn(1) > 0; ) {
          for (var b3 = 0, l = 1;(a4.words[0] & l) === 0 && b3 < 26; ++b3, l <<= 1)
            ;
          if (b3 > 0)
            for (a4.iushrn(b3);b3-- > 0; )
              s5.isOdd() && s5.iadd(c), s5.iushrn(1);
          for (var n2 = 0, d2 = 1;(h2.words[0] & d2) === 0 && n2 < 26; ++n2, d2 <<= 1)
            ;
          if (n2 > 0)
            for (h2.iushrn(n2);n2-- > 0; )
              u2.isOdd() && u2.iadd(c), u2.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(u2)) : (h2.isub(a4), u2.isub(s5));
        }
        var w;
        return a4.cmpn(1) === 0 ? w = s5 : w = u2, w.cmpn(0) < 0 && w.iadd(i3), w;
      }, f.prototype.gcd = function(i3) {
        if (this.isZero())
          return i3.abs();
        if (i3.isZero())
          return this.abs();
        var a4 = this.clone(), h2 = i3.clone();
        a4.negative = 0, h2.negative = 0;
        for (var s5 = 0;a4.isEven() && h2.isEven(); s5++)
          a4.iushrn(1), h2.iushrn(1);
        do {
          for (;a4.isEven(); )
            a4.iushrn(1);
          for (;h2.isEven(); )
            h2.iushrn(1);
          var u2 = a4.cmp(h2);
          if (u2 < 0) {
            var c = a4;
            a4 = h2, h2 = c;
          } else if (u2 === 0 || h2.cmpn(1) === 0)
            break;
          a4.isub(h2);
        } while (true);
        return h2.iushln(s5);
      }, f.prototype.invm = function(i3) {
        return this.egcd(i3).a.umod(i3);
      }, f.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f.prototype.andln = function(i3) {
        return this.words[0] & i3;
      }, f.prototype.bincn = function(i3) {
        r6(typeof i3 == "number");
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return this._expand(h2 + 1), this.words[h2] |= s5, this;
        for (var u2 = s5, c = h2;u2 !== 0 && c < this.length; c++) {
          var b3 = this.words[c] | 0;
          b3 += u2, u2 = b3 >>> 26, b3 &= 67108863, this.words[c] = b3;
        }
        return u2 !== 0 && (this.words[c] = u2, this.length++), this;
      }, f.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f.prototype.cmpn = function(i3) {
        var a4 = i3 < 0;
        if (this.negative !== 0 && !a4)
          return -1;
        if (this.negative === 0 && a4)
          return 1;
        this.strip();
        var h2;
        if (this.length > 1)
          h2 = 1;
        else {
          a4 && (i3 = -i3), r6(i3 <= 67108863, "Number is too big");
          var s5 = this.words[0] | 0;
          h2 = s5 === i3 ? 0 : s5 < i3 ? -1 : 1;
        }
        return this.negative !== 0 ? -h2 | 0 : h2;
      }, f.prototype.cmp = function(i3) {
        if (this.negative !== 0 && i3.negative === 0)
          return -1;
        if (this.negative === 0 && i3.negative !== 0)
          return 1;
        var a4 = this.ucmp(i3);
        return this.negative !== 0 ? -a4 | 0 : a4;
      }, f.prototype.ucmp = function(i3) {
        if (this.length > i3.length)
          return 1;
        if (this.length < i3.length)
          return -1;
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = this.words[h2] | 0, u2 = i3.words[h2] | 0;
          if (s5 !== u2) {
            s5 < u2 ? a4 = -1 : s5 > u2 && (a4 = 1);
            break;
          }
        }
        return a4;
      }, f.prototype.gtn = function(i3) {
        return this.cmpn(i3) === 1;
      }, f.prototype.gt = function(i3) {
        return this.cmp(i3) === 1;
      }, f.prototype.gten = function(i3) {
        return this.cmpn(i3) >= 0;
      }, f.prototype.gte = function(i3) {
        return this.cmp(i3) >= 0;
      }, f.prototype.ltn = function(i3) {
        return this.cmpn(i3) === -1;
      }, f.prototype.lt = function(i3) {
        return this.cmp(i3) === -1;
      }, f.prototype.lten = function(i3) {
        return this.cmpn(i3) <= 0;
      }, f.prototype.lte = function(i3) {
        return this.cmp(i3) <= 0;
      }, f.prototype.eqn = function(i3) {
        return this.cmpn(i3) === 0;
      }, f.prototype.eq = function(i3) {
        return this.cmp(i3) === 0;
      }, f.red = function(i3) {
        return new P(i3);
      }, f.prototype.toRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), r6(this.negative === 0, "red works only with positives"), i3.convertTo(this)._forceRed(i3);
      }, f.prototype.fromRed = function() {
        return r6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f.prototype._forceRed = function(i3) {
        return this.red = i3, this;
      }, f.prototype.forceRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), this._forceRed(i3);
      }, f.prototype.redAdd = function(i3) {
        return r6(this.red, "redAdd works only with red numbers"), this.red.add(this, i3);
      }, f.prototype.redIAdd = function(i3) {
        return r6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i3);
      }, f.prototype.redSub = function(i3) {
        return r6(this.red, "redSub works only with red numbers"), this.red.sub(this, i3);
      }, f.prototype.redISub = function(i3) {
        return r6(this.red, "redISub works only with red numbers"), this.red.isub(this, i3);
      }, f.prototype.redShl = function(i3) {
        return r6(this.red, "redShl works only with red numbers"), this.red.shl(this, i3);
      }, f.prototype.redMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.mul(this, i3);
      }, f.prototype.redIMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.imul(this, i3);
      }, f.prototype.redSqr = function() {
        return r6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f.prototype.redISqr = function() {
        return r6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f.prototype.redSqrt = function() {
        return r6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f.prototype.redInvm = function() {
        return r6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f.prototype.redNeg = function() {
        return r6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f.prototype.redPow = function(i3) {
        return r6(this.red && !i3.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i3);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v, i3) {
        this.name = v, this.p = new f(i3, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i3 = new f(null);
        return i3.words = new Array(Math.ceil(this.n / 13)), i3;
      }, ye.prototype.ireduce = function(i3) {
        var a4 = i3, h2;
        do
          this.split(a4, this.tmp), a4 = this.imulK(a4), a4 = a4.iadd(this.tmp), h2 = a4.bitLength();
        while (h2 > this.n);
        var s5 = h2 < this.n ? -1 : a4.ucmp(this.p);
        return s5 === 0 ? (a4.words[0] = 0, a4.length = 1) : s5 > 0 ? a4.isub(this.p) : a4.strip !== undefined ? a4.strip() : a4._strip(), a4;
      }, ye.prototype.split = function(i3, a4) {
        i3.iushrn(this.n, 0, a4);
      }, ye.prototype.imulK = function(i3) {
        return i3.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o2(xe, ye), xe.prototype.split = function(i3, a4) {
        for (var h2 = 4194303, s5 = Math.min(i3.length, 9), u2 = 0;u2 < s5; u2++)
          a4.words[u2] = i3.words[u2];
        if (a4.length = s5, i3.length <= 9) {
          i3.words[0] = 0, i3.length = 1;
          return;
        }
        var c = i3.words[9];
        for (a4.words[a4.length++] = c & h2, u2 = 10;u2 < i3.length; u2++) {
          var b3 = i3.words[u2] | 0;
          i3.words[u2 - 10] = (b3 & h2) << 4 | c >>> 22, c = b3;
        }
        c >>>= 22, i3.words[u2 - 10] = c, c === 0 && i3.length > 10 ? i3.length -= 10 : i3.length -= 9;
      }, xe.prototype.imulK = function(i3) {
        i3.words[i3.length] = 0, i3.words[i3.length + 1] = 0, i3.length += 2;
        for (var a4 = 0, h2 = 0;h2 < i3.length; h2++) {
          var s5 = i3.words[h2] | 0;
          a4 += s5 * 977, i3.words[h2] = a4 & 67108863, a4 = s5 * 64 + (a4 / 67108864 | 0);
        }
        return i3.words[i3.length - 1] === 0 && (i3.length--, i3.words[i3.length - 1] === 0 && i3.length--), i3;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o2(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o2(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o2(Ae, ye), Ae.prototype.imulK = function(i3) {
        for (var a4 = 0, h2 = 0;h2 < i3.length; h2++) {
          var s5 = (i3.words[h2] | 0) * 19 + a4, u2 = s5 & 67108863;
          s5 >>>= 26, i3.words[h2] = u2, a4 = s5;
        }
        return a4 !== 0 && (i3.words[i3.length++] = a4), i3;
      }, f._prime = function(i3) {
        if (we[i3])
          return we[i3];
        var a4;
        if (i3 === "k256")
          a4 = new xe;
        else if (i3 === "p224")
          a4 = new Re;
        else if (i3 === "p192")
          a4 = new Ee;
        else if (i3 === "p25519")
          a4 = new Ae;
        else
          throw new Error("Unknown prime " + i3);
        return we[i3] = a4, a4;
      };
      function P(v) {
        if (typeof v == "string") {
          var i3 = f._prime(v);
          this.m = i3.p, this.prime = i3;
        } else
          r6(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
      }
      P.prototype._verify1 = function(i3) {
        r6(i3.negative === 0, "red works only with positives"), r6(i3.red, "red works only with red numbers");
      }, P.prototype._verify2 = function(i3, a4) {
        r6((i3.negative | a4.negative) === 0, "red works only with positives"), r6(i3.red && i3.red === a4.red, "red works only with red numbers");
      }, P.prototype.imod = function(i3) {
        return this.prime ? this.prime.ireduce(i3)._forceRed(this) : i3.umod(this.m)._forceRed(this);
      }, P.prototype.neg = function(i3) {
        return i3.isZero() ? i3.clone() : this.m.sub(i3)._forceRed(this);
      }, P.prototype.add = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.add(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2._forceRed(this);
      }, P.prototype.iadd = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.iadd(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2;
      }, P.prototype.sub = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.sub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2._forceRed(this);
      }, P.prototype.isub = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.isub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2;
      }, P.prototype.shl = function(i3, a4) {
        return this._verify1(i3), this.imod(i3.ushln(a4));
      }, P.prototype.imul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.imul(a4));
      }, P.prototype.mul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.mul(a4));
      }, P.prototype.isqr = function(i3) {
        return this.imul(i3, i3.clone());
      }, P.prototype.sqr = function(i3) {
        return this.mul(i3, i3);
      }, P.prototype.sqrt = function(i3) {
        if (i3.isZero())
          return i3.clone();
        var a4 = this.m.andln(3);
        if (r6(a4 % 2 === 1), a4 === 3) {
          var h2 = this.m.add(new f(1)).iushrn(2);
          return this.pow(i3, h2);
        }
        for (var s5 = this.m.subn(1), u2 = 0;!s5.isZero() && s5.andln(1) === 0; )
          u2++, s5.iushrn(1);
        r6(!s5.isZero());
        var c = new f(1).toRed(this), b3 = c.redNeg(), l = this.m.subn(1).iushrn(1), n2 = this.m.bitLength();
        for (n2 = new f(2 * n2 * n2).toRed(this);this.pow(n2, l).cmp(b3) !== 0; )
          n2.redIAdd(b3);
        for (var d2 = this.pow(n2, s5), w = this.pow(i3, s5.addn(1).iushrn(1)), g2 = this.pow(i3, s5), _ = u2;g2.cmp(c) !== 0; ) {
          for (var A = g2, R = 0;A.cmp(c) !== 0; R++)
            A = A.redSqr();
          r6(R < _);
          var I = this.pow(d2, new f(1).iushln(_ - R - 1));
          w = w.redMul(I), d2 = I.redSqr(), g2 = g2.redMul(d2), _ = R;
        }
        return w;
      }, P.prototype.invm = function(i3) {
        var a4 = i3._invmp(this.m);
        return a4.negative !== 0 ? (a4.negative = 0, this.imod(a4).redNeg()) : this.imod(a4);
      }, P.prototype.pow = function(i3, a4) {
        if (a4.isZero())
          return new f(1).toRed(this);
        if (a4.cmpn(1) === 0)
          return i3.clone();
        var h2 = 4, s5 = new Array(1 << h2);
        s5[0] = new f(1).toRed(this), s5[1] = i3;
        for (var u2 = 2;u2 < s5.length; u2++)
          s5[u2] = this.mul(s5[u2 - 1], i3);
        var c = s5[0], b3 = 0, l = 0, n2 = a4.bitLength() % 26;
        for (n2 === 0 && (n2 = 26), u2 = a4.length - 1;u2 >= 0; u2--) {
          for (var d2 = a4.words[u2], w = n2 - 1;w >= 0; w--) {
            var g2 = d2 >> w & 1;
            if (c !== s5[0] && (c = this.sqr(c)), g2 === 0 && b3 === 0) {
              l = 0;
              continue;
            }
            b3 <<= 1, b3 |= g2, l++, !(l !== h2 && (u2 !== 0 || w !== 0)) && (c = this.mul(c, s5[b3]), l = 0, b3 = 0);
          }
          n2 = 26;
        }
        return c;
      }, P.prototype.convertTo = function(i3) {
        var a4 = i3.umod(this.m);
        return a4 === i3 ? a4.clone() : a4;
      }, P.prototype.convertFrom = function(i3) {
        var a4 = i3.clone();
        return a4.red = null, a4;
      }, f.mont = function(i3) {
        return new Se(i3);
      };
      function Se(v) {
        P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o2(Se, P), Se.prototype.convertTo = function(i3) {
        return this.imod(i3.ushln(this.shift));
      }, Se.prototype.convertFrom = function(i3) {
        var a4 = this.imod(i3.mul(this.rinv));
        return a4.red = null, a4;
      }, Se.prototype.imul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return i3.words[0] = 0, i3.length = 1, i3;
        var h2 = i3.imul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.mul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return new f(0)._forceRed(this);
        var h2 = i3.mul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.invm = function(i3) {
        var a4 = this.imod(i3._invmp(this.m).mul(this.r2));
        return a4._forceRed(this);
      };
    })(typeof yd > "u" || yd, L3);
  });
  P3 = T((wL, D3) => {
    var bq = o0(), mq = N3();
    D3.exports = function(e6) {
      return new Zn(e6);
    };
    var hr = { secp256k1: { name: "secp256k1", byteLength: 32 }, secp224r1: { name: "p224", byteLength: 28 }, prime256v1: { name: "p256", byteLength: 32 }, prime192v1: { name: "p192", byteLength: 24 }, ed25519: { name: "ed25519", byteLength: 32 }, secp384r1: { name: "p384", byteLength: 48 }, secp521r1: { name: "p521", byteLength: 66 } };
    hr.p224 = hr.secp224r1;
    hr.p256 = hr.secp256r1 = hr.prime256v1;
    hr.p192 = hr.secp192r1 = hr.prime192v1;
    hr.p384 = hr.secp384r1;
    hr.p521 = hr.secp521r1;
    function Zn(t6) {
      this.curveType = hr[t6], this.curveType || (this.curveType = { name: t6 }), this.curve = new bq.ec(this.curveType.name), this.keys = undefined;
    }
    Zn.prototype.generateKeys = function(t6, e6) {
      return this.keys = this.curve.genKeyPair(), this.getPublicKey(t6, e6);
    };
    Zn.prototype.computeSecret = function(t6, e6, r6) {
      e6 = e6 || "utf8", Buffer.isBuffer(t6) || (t6 = new Buffer(t6, e6));
      var o2 = this.curve.keyFromPublic(t6).getPublic(), f = o2.mul(this.keys.getPrivate()).getX();
      return wd(f, r6, this.curveType.byteLength);
    };
    Zn.prototype.getPublicKey = function(t6, e6) {
      var r6 = this.keys.getPublic(e6 === "compressed", true);
      return e6 === "hybrid" && (r6[r6.length - 1] % 2 ? r6[0] = 7 : r6[0] = 6), wd(r6, t6);
    };
    Zn.prototype.getPrivateKey = function(t6) {
      return wd(this.keys.getPrivate(), t6);
    };
    Zn.prototype.setPublicKey = function(t6, e6) {
      return e6 = e6 || "utf8", Buffer.isBuffer(t6) || (t6 = new Buffer(t6, e6)), this.keys._importPublic(t6), this;
    };
    Zn.prototype.setPrivateKey = function(t6, e6) {
      e6 = e6 || "utf8", Buffer.isBuffer(t6) || (t6 = new Buffer(t6, e6));
      var r6 = new mq(t6);
      return r6 = r6.toString(16), this.keys = this.curve.genKeyPair(), this.keys._importPrivate(r6), this;
    };
    function wd(t6, e6, r6) {
      Array.isArray(t6) || (t6 = t6.toArray());
      var o2 = new Buffer(t6);
      if (r6 && o2.length < r6) {
        var f = new Buffer(r6 - o2.length);
        f.fill(0), o2 = Buffer.concat([f, o2]);
      }
      return e6 ? o2.toString(e6) : o2;
    }
  });
  _d = T((ML, C3) => {
    var gq = bf(), Md = Te().Buffer;
    C3.exports = function(t6, e6) {
      for (var r6 = Md.alloc(0), o2 = 0, f;r6.length < e6; )
        f = yq(o2++), r6 = Md.concat([r6, gq("sha1").update(t6).update(f).digest()]);
      return r6.slice(0, e6);
    };
    function yq(t6) {
      var e6 = Md.allocUnsafe(4);
      return e6.writeUInt32BE(t6, 0), e6;
    }
  });
  xd = T((_L, O3) => {
    O3.exports = function(e6, r6) {
      for (var o2 = e6.length, f = -1;++f < o2; )
        e6[f] ^= r6[f];
      return e6;
    };
  });
  w0 = T((F3, Sd) => {
    (function(t6, e6) {
      function r6(v, i3) {
        if (!v)
          throw new Error(i3 || "Assertion failed");
      }
      function o2(v, i3) {
        v.super_ = i3;
        var a4 = function() {
        };
        a4.prototype = i3.prototype, v.prototype = new a4, v.prototype.constructor = v;
      }
      function f(v, i3, a4) {
        if (f.isBN(v))
          return v;
        this.negative = 0, this.words = null, this.length = 0, this.red = null, v !== null && ((i3 === "le" || i3 === "be") && (a4 = i3, i3 = 10), this._init(v || 0, i3 || 10, a4 || "be"));
      }
      typeof t6 == "object" ? t6.exports = f : e6.BN = f, f.BN = f, f.wordSize = 26;
      var p2;
      try {
        typeof window < "u" && typeof window.Buffer < "u" ? p2 = window.Buffer : p2 = ji().Buffer;
      } catch {
      }
      f.isBN = function(i3) {
        return i3 instanceof f ? true : i3 !== null && typeof i3 == "object" && i3.constructor.wordSize === f.wordSize && Array.isArray(i3.words);
      }, f.max = function(i3, a4) {
        return i3.cmp(a4) > 0 ? i3 : a4;
      }, f.min = function(i3, a4) {
        return i3.cmp(a4) < 0 ? i3 : a4;
      }, f.prototype._init = function(i3, a4, h2) {
        if (typeof i3 == "number")
          return this._initNumber(i3, a4, h2);
        if (typeof i3 == "object")
          return this._initArray(i3, a4, h2);
        a4 === "hex" && (a4 = 16), r6(a4 === (a4 | 0) && a4 >= 2 && a4 <= 36), i3 = i3.toString().replace(/\s+/g, "");
        var s5 = 0;
        i3[0] === "-" && (s5++, this.negative = 1), s5 < i3.length && (a4 === 16 ? this._parseHex(i3, s5, h2) : (this._parseBase(i3, a4, s5), h2 === "le" && this._initArray(this.toArray(), a4, h2)));
      }, f.prototype._initNumber = function(i3, a4, h2) {
        i3 < 0 && (this.negative = 1, i3 = -i3), i3 < 67108864 ? (this.words = [i3 & 67108863], this.length = 1) : i3 < 4503599627370496 ? (this.words = [i3 & 67108863, i3 / 67108864 & 67108863], this.length = 2) : (r6(i3 < 9007199254740992), this.words = [i3 & 67108863, i3 / 67108864 & 67108863, 1], this.length = 3), h2 === "le" && this._initArray(this.toArray(), a4, h2);
      }, f.prototype._initArray = function(i3, a4, h2) {
        if (r6(typeof i3.length == "number"), i3.length <= 0)
          return this.words = [0], this.length = 1, this;
        this.length = Math.ceil(i3.length / 3), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2, c, b3 = 0;
        if (h2 === "be")
          for (s5 = i3.length - 1, u2 = 0;s5 >= 0; s5 -= 3)
            c = i3[s5] | i3[s5 - 1] << 8 | i3[s5 - 2] << 16, this.words[u2] |= c << b3 & 67108863, this.words[u2 + 1] = c >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u2++);
        else if (h2 === "le")
          for (s5 = 0, u2 = 0;s5 < i3.length; s5 += 3)
            c = i3[s5] | i3[s5 + 1] << 8 | i3[s5 + 2] << 16, this.words[u2] |= c << b3 & 67108863, this.words[u2 + 1] = c >>> 26 - b3 & 67108863, b3 += 24, b3 >= 26 && (b3 -= 26, u2++);
        return this.strip();
      };
      function m2(v, i3) {
        var a4 = v.charCodeAt(i3);
        return a4 >= 65 && a4 <= 70 ? a4 - 55 : a4 >= 97 && a4 <= 102 ? a4 - 87 : a4 - 48 & 15;
      }
      function y3(v, i3, a4) {
        var h2 = m2(v, a4);
        return a4 - 1 >= i3 && (h2 |= m2(v, a4 - 1) << 4), h2;
      }
      f.prototype._parseHex = function(i3, a4, h2) {
        this.length = Math.ceil((i3.length - a4) / 6), this.words = new Array(this.length);
        for (var s5 = 0;s5 < this.length; s5++)
          this.words[s5] = 0;
        var u2 = 0, c = 0, b3;
        if (h2 === "be")
          for (s5 = i3.length - 1;s5 >= a4; s5 -= 2)
            b3 = y3(i3, a4, s5) << u2, this.words[c] |= b3 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b3 >>> 26) : u2 += 8;
        else {
          var l = i3.length - a4;
          for (s5 = l % 2 === 0 ? a4 + 1 : a4;s5 < i3.length; s5 += 2)
            b3 = y3(i3, a4, s5) << u2, this.words[c] |= b3 & 67108863, u2 >= 18 ? (u2 -= 18, c += 1, this.words[c] |= b3 >>> 26) : u2 += 8;
        }
        this.strip();
      };
      function M(v, i3, a4, h2) {
        for (var s5 = 0, u2 = Math.min(v.length, a4), c = i3;c < u2; c++) {
          var b3 = v.charCodeAt(c) - 48;
          s5 *= h2, b3 >= 49 ? s5 += b3 - 49 + 10 : b3 >= 17 ? s5 += b3 - 17 + 10 : s5 += b3;
        }
        return s5;
      }
      f.prototype._parseBase = function(i3, a4, h2) {
        this.words = [0], this.length = 1;
        for (var s5 = 0, u2 = 1;u2 <= 67108863; u2 *= a4)
          s5++;
        s5--, u2 = u2 / a4 | 0;
        for (var c = i3.length - h2, b3 = c % s5, l = Math.min(c, c - b3) + h2, n2 = 0, d2 = h2;d2 < l; d2 += s5)
          n2 = M(i3, d2, d2 + s5, a4), this.imuln(u2), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        if (b3 !== 0) {
          var w = 1;
          for (n2 = M(i3, d2, i3.length, a4), d2 = 0;d2 < b3; d2++)
            w *= a4;
          this.imuln(w), this.words[0] + n2 < 67108864 ? this.words[0] += n2 : this._iaddn(n2);
        }
        this.strip();
      }, f.prototype.copy = function(i3) {
        i3.words = new Array(this.length);
        for (var a4 = 0;a4 < this.length; a4++)
          i3.words[a4] = this.words[a4];
        i3.length = this.length, i3.negative = this.negative, i3.red = this.red;
      }, f.prototype.clone = function() {
        var i3 = new f(null);
        return this.copy(i3), i3;
      }, f.prototype._expand = function(i3) {
        for (;this.length < i3; )
          this.words[this.length++] = 0;
        return this;
      }, f.prototype.strip = function() {
        for (;this.length > 1 && this.words[this.length - 1] === 0; )
          this.length--;
        return this._normSign();
      }, f.prototype._normSign = function() {
        return this.length === 1 && this.words[0] === 0 && (this.negative = 0), this;
      }, f.prototype.inspect = function() {
        return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
      };
      var x = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"], S = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], E = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];
      f.prototype.toString = function(i3, a4) {
        i3 = i3 || 10, a4 = a4 | 0 || 1;
        var h2;
        if (i3 === 16 || i3 === "hex") {
          h2 = "";
          for (var s5 = 0, u2 = 0, c = 0;c < this.length; c++) {
            var b3 = this.words[c], l = ((b3 << s5 | u2) & 16777215).toString(16);
            u2 = b3 >>> 24 - s5 & 16777215, u2 !== 0 || c !== this.length - 1 ? h2 = x[6 - l.length] + l + h2 : h2 = l + h2, s5 += 2, s5 >= 26 && (s5 -= 26, c--);
          }
          for (u2 !== 0 && (h2 = u2.toString(16) + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        if (i3 === (i3 | 0) && i3 >= 2 && i3 <= 36) {
          var n2 = S[i3], d2 = E[i3];
          h2 = "";
          var w = this.clone();
          for (w.negative = 0;!w.isZero(); ) {
            var g2 = w.modn(d2).toString(i3);
            w = w.idivn(d2), w.isZero() ? h2 = g2 + h2 : h2 = x[n2 - g2.length] + g2 + h2;
          }
          for (this.isZero() && (h2 = "0" + h2);h2.length % a4 !== 0; )
            h2 = "0" + h2;
          return this.negative !== 0 && (h2 = "-" + h2), h2;
        }
        r6(false, "Base should be between 2 and 36");
      }, f.prototype.toNumber = function() {
        var i3 = this.words[0];
        return this.length === 2 ? i3 += this.words[1] * 67108864 : this.length === 3 && this.words[2] === 1 ? i3 += 4503599627370496 + this.words[1] * 67108864 : this.length > 2 && r6(false, "Number can only safely store up to 53 bits"), this.negative !== 0 ? -i3 : i3;
      }, f.prototype.toJSON = function() {
        return this.toString(16);
      }, f.prototype.toBuffer = function(i3, a4) {
        return r6(typeof p2 < "u"), this.toArrayLike(p2, i3, a4);
      }, f.prototype.toArray = function(i3, a4) {
        return this.toArrayLike(Array, i3, a4);
      }, f.prototype.toArrayLike = function(i3, a4, h2) {
        var s5 = this.byteLength(), u2 = h2 || Math.max(1, s5);
        r6(s5 <= u2, "byte array longer than desired length"), r6(u2 > 0, "Requested array length <= 0"), this.strip();
        var c = a4 === "le", b3 = new i3(u2), l, n2, d2 = this.clone();
        if (c) {
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b3[n2] = l;
          for (;n2 < u2; n2++)
            b3[n2] = 0;
        } else {
          for (n2 = 0;n2 < u2 - s5; n2++)
            b3[n2] = 0;
          for (n2 = 0;!d2.isZero(); n2++)
            l = d2.andln(255), d2.iushrn(8), b3[u2 - n2 - 1] = l;
        }
        return b3;
      }, Math.clz32 ? f.prototype._countBits = function(i3) {
        return 32 - Math.clz32(i3);
      } : f.prototype._countBits = function(i3) {
        var a4 = i3, h2 = 0;
        return a4 >= 4096 && (h2 += 13, a4 >>>= 13), a4 >= 64 && (h2 += 7, a4 >>>= 7), a4 >= 8 && (h2 += 4, a4 >>>= 4), a4 >= 2 && (h2 += 2, a4 >>>= 2), h2 + a4;
      }, f.prototype._zeroBits = function(i3) {
        if (i3 === 0)
          return 26;
        var a4 = i3, h2 = 0;
        return (a4 & 8191) === 0 && (h2 += 13, a4 >>>= 13), (a4 & 127) === 0 && (h2 += 7, a4 >>>= 7), (a4 & 15) === 0 && (h2 += 4, a4 >>>= 4), (a4 & 3) === 0 && (h2 += 2, a4 >>>= 2), (a4 & 1) === 0 && h2++, h2;
      }, f.prototype.bitLength = function() {
        var i3 = this.words[this.length - 1], a4 = this._countBits(i3);
        return (this.length - 1) * 26 + a4;
      };
      function B(v) {
        for (var i3 = new Array(v.bitLength()), a4 = 0;a4 < i3.length; a4++) {
          var h2 = a4 / 26 | 0, s5 = a4 % 26;
          i3[a4] = (v.words[h2] & 1 << s5) >>> s5;
        }
        return i3;
      }
      f.prototype.zeroBits = function() {
        if (this.isZero())
          return 0;
        for (var i3 = 0, a4 = 0;a4 < this.length; a4++) {
          var h2 = this._zeroBits(this.words[a4]);
          if (i3 += h2, h2 !== 26)
            break;
        }
        return i3;
      }, f.prototype.byteLength = function() {
        return Math.ceil(this.bitLength() / 8);
      }, f.prototype.toTwos = function(i3) {
        return this.negative !== 0 ? this.abs().inotn(i3).iaddn(1) : this.clone();
      }, f.prototype.fromTwos = function(i3) {
        return this.testn(i3 - 1) ? this.notn(i3).iaddn(1).ineg() : this.clone();
      }, f.prototype.isNeg = function() {
        return this.negative !== 0;
      }, f.prototype.neg = function() {
        return this.clone().ineg();
      }, f.prototype.ineg = function() {
        return this.isZero() || (this.negative ^= 1), this;
      }, f.prototype.iuor = function(i3) {
        for (;this.length < i3.length; )
          this.words[this.length++] = 0;
        for (var a4 = 0;a4 < i3.length; a4++)
          this.words[a4] = this.words[a4] | i3.words[a4];
        return this.strip();
      }, f.prototype.ior = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuor(i3);
      }, f.prototype.or = function(i3) {
        return this.length > i3.length ? this.clone().ior(i3) : i3.clone().ior(this);
      }, f.prototype.uor = function(i3) {
        return this.length > i3.length ? this.clone().iuor(i3) : i3.clone().iuor(this);
      }, f.prototype.iuand = function(i3) {
        var a4;
        this.length > i3.length ? a4 = i3 : a4 = this;
        for (var h2 = 0;h2 < a4.length; h2++)
          this.words[h2] = this.words[h2] & i3.words[h2];
        return this.length = a4.length, this.strip();
      }, f.prototype.iand = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuand(i3);
      }, f.prototype.and = function(i3) {
        return this.length > i3.length ? this.clone().iand(i3) : i3.clone().iand(this);
      }, f.prototype.uand = function(i3) {
        return this.length > i3.length ? this.clone().iuand(i3) : i3.clone().iuand(this);
      }, f.prototype.iuxor = function(i3) {
        var a4, h2;
        this.length > i3.length ? (a4 = this, h2 = i3) : (a4 = i3, h2 = this);
        for (var s5 = 0;s5 < h2.length; s5++)
          this.words[s5] = a4.words[s5] ^ h2.words[s5];
        if (this !== a4)
          for (;s5 < a4.length; s5++)
            this.words[s5] = a4.words[s5];
        return this.length = a4.length, this.strip();
      }, f.prototype.ixor = function(i3) {
        return r6((this.negative | i3.negative) === 0), this.iuxor(i3);
      }, f.prototype.xor = function(i3) {
        return this.length > i3.length ? this.clone().ixor(i3) : i3.clone().ixor(this);
      }, f.prototype.uxor = function(i3) {
        return this.length > i3.length ? this.clone().iuxor(i3) : i3.clone().iuxor(this);
      }, f.prototype.inotn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = Math.ceil(i3 / 26) | 0, h2 = i3 % 26;
        this._expand(a4), h2 > 0 && a4--;
        for (var s5 = 0;s5 < a4; s5++)
          this.words[s5] = ~this.words[s5] & 67108863;
        return h2 > 0 && (this.words[s5] = ~this.words[s5] & 67108863 >> 26 - h2), this.strip();
      }, f.prototype.notn = function(i3) {
        return this.clone().inotn(i3);
      }, f.prototype.setn = function(i3, a4) {
        r6(typeof i3 == "number" && i3 >= 0);
        var h2 = i3 / 26 | 0, s5 = i3 % 26;
        return this._expand(h2 + 1), a4 ? this.words[h2] = this.words[h2] | 1 << s5 : this.words[h2] = this.words[h2] & ~(1 << s5), this.strip();
      }, f.prototype.iadd = function(i3) {
        var a4;
        if (this.negative !== 0 && i3.negative === 0)
          return this.negative = 0, a4 = this.isub(i3), this.negative ^= 1, this._normSign();
        if (this.negative === 0 && i3.negative !== 0)
          return i3.negative = 0, a4 = this.isub(i3), i3.negative = 1, a4._normSign();
        var h2, s5;
        this.length > i3.length ? (h2 = this, s5 = i3) : (h2 = i3, s5 = this);
        for (var u2 = 0, c = 0;c < s5.length; c++)
          a4 = (h2.words[c] | 0) + (s5.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        for (;u2 !== 0 && c < h2.length; c++)
          a4 = (h2.words[c] | 0) + u2, this.words[c] = a4 & 67108863, u2 = a4 >>> 26;
        if (this.length = h2.length, u2 !== 0)
          this.words[this.length] = u2, this.length++;
        else if (h2 !== this)
          for (;c < h2.length; c++)
            this.words[c] = h2.words[c];
        return this;
      }, f.prototype.add = function(i3) {
        var a4;
        return i3.negative !== 0 && this.negative === 0 ? (i3.negative = 0, a4 = this.sub(i3), i3.negative ^= 1, a4) : i3.negative === 0 && this.negative !== 0 ? (this.negative = 0, a4 = i3.sub(this), this.negative = 1, a4) : this.length > i3.length ? this.clone().iadd(i3) : i3.clone().iadd(this);
      }, f.prototype.isub = function(i3) {
        if (i3.negative !== 0) {
          i3.negative = 0;
          var a4 = this.iadd(i3);
          return i3.negative = 1, a4._normSign();
        } else if (this.negative !== 0)
          return this.negative = 0, this.iadd(i3), this.negative = 1, this._normSign();
        var h2 = this.cmp(i3);
        if (h2 === 0)
          return this.negative = 0, this.length = 1, this.words[0] = 0, this;
        var s5, u2;
        h2 > 0 ? (s5 = this, u2 = i3) : (s5 = i3, u2 = this);
        for (var c = 0, b3 = 0;b3 < u2.length; b3++)
          a4 = (s5.words[b3] | 0) - (u2.words[b3] | 0) + c, c = a4 >> 26, this.words[b3] = a4 & 67108863;
        for (;c !== 0 && b3 < s5.length; b3++)
          a4 = (s5.words[b3] | 0) + c, c = a4 >> 26, this.words[b3] = a4 & 67108863;
        if (c === 0 && b3 < s5.length && s5 !== this)
          for (;b3 < s5.length; b3++)
            this.words[b3] = s5.words[b3];
        return this.length = Math.max(this.length, b3), s5 !== this && (this.negative = 1), this.strip();
      }, f.prototype.sub = function(i3) {
        return this.clone().isub(i3);
      };
      function q2(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative;
        var h2 = v.length + i3.length | 0;
        a4.length = h2, h2 = h2 - 1 | 0;
        var s5 = v.words[0] | 0, u2 = i3.words[0] | 0, c = s5 * u2, b3 = c & 67108863, l = c / 67108864 | 0;
        a4.words[0] = b3;
        for (var n2 = 1;n2 < h2; n2++) {
          for (var d2 = l >>> 26, w = l & 67108863, g2 = Math.min(n2, i3.length - 1), _ = Math.max(0, n2 - v.length + 1);_ <= g2; _++) {
            var A = n2 - _ | 0;
            s5 = v.words[A] | 0, u2 = i3.words[_] | 0, c = s5 * u2 + w, d2 += c / 67108864 | 0, w = c & 67108863;
          }
          a4.words[n2] = w | 0, l = d2 | 0;
        }
        return l !== 0 ? a4.words[n2] = l | 0 : a4.length--, a4.strip();
      }
      var L = function(i3, a4, h2) {
        var s5 = i3.words, u2 = a4.words, c = h2.words, b3 = 0, l, n2, d2, w = s5[0] | 0, g2 = w & 8191, _ = w >>> 13, A = s5[1] | 0, R = A & 8191, I = A >>> 13, Me = s5[2] | 0, k2 = Me & 8191, D = Me >>> 13, nt = s5[3] | 0, C = nt & 8191, O = nt >>> 13, vt = s5[4] | 0, F = vt & 8191, U = vt >>> 13, bt = s5[5] | 0, z = bt & 8191, H = bt >>> 13, mt = s5[6] | 0, W = mt & 8191, K = mt >>> 13, gt = s5[7] | 0, j = gt & 8191, Z = gt >>> 13, yt = s5[8] | 0, V = yt & 8191, $2 = yt >>> 13, wt = s5[9] | 0, G = wt & 8191, Y = wt >>> 13, Mt = u2[0] | 0, X = Mt & 8191, J = Mt >>> 13, _t = u2[1] | 0, Q = _t & 8191, ee = _t >>> 13, xt = u2[2] | 0, te = xt & 8191, re = xt >>> 13, St = u2[3] | 0, ie = St & 8191, ne = St >>> 13, Et = u2[4] | 0, fe = Et & 8191, ae = Et >>> 13, At = u2[5] | 0, oe = At & 8191, se = At >>> 13, Rt = u2[6] | 0, he = Rt & 8191, ue = Rt >>> 13, Bt = u2[7] | 0, le = Bt & 8191, de = Bt >>> 13, qt = u2[8] | 0, ce = qt & 8191, pe = qt >>> 13, It = u2[9] | 0, ve = It & 8191, be = It >>> 13;
        h2.negative = i3.negative ^ a4.negative, h2.length = 19, l = Math.imul(g2, X), n2 = Math.imul(g2, J), n2 = n2 + Math.imul(_, X) | 0, d2 = Math.imul(_, J);
        var ft = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (ft >>> 26) | 0, ft &= 67108863, l = Math.imul(R, X), n2 = Math.imul(R, J), n2 = n2 + Math.imul(I, X) | 0, d2 = Math.imul(I, J), l = l + Math.imul(g2, Q) | 0, n2 = n2 + Math.imul(g2, ee) | 0, n2 = n2 + Math.imul(_, Q) | 0, d2 = d2 + Math.imul(_, ee) | 0;
        var Be = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Be >>> 26) | 0, Be &= 67108863, l = Math.imul(k2, X), n2 = Math.imul(k2, J), n2 = n2 + Math.imul(D, X) | 0, d2 = Math.imul(D, J), l = l + Math.imul(R, Q) | 0, n2 = n2 + Math.imul(R, ee) | 0, n2 = n2 + Math.imul(I, Q) | 0, d2 = d2 + Math.imul(I, ee) | 0, l = l + Math.imul(g2, te) | 0, n2 = n2 + Math.imul(g2, re) | 0, n2 = n2 + Math.imul(_, te) | 0, d2 = d2 + Math.imul(_, re) | 0;
        var qe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (qe >>> 26) | 0, qe &= 67108863, l = Math.imul(C, X), n2 = Math.imul(C, J), n2 = n2 + Math.imul(O, X) | 0, d2 = Math.imul(O, J), l = l + Math.imul(k2, Q) | 0, n2 = n2 + Math.imul(k2, ee) | 0, n2 = n2 + Math.imul(D, Q) | 0, d2 = d2 + Math.imul(D, ee) | 0, l = l + Math.imul(R, te) | 0, n2 = n2 + Math.imul(R, re) | 0, n2 = n2 + Math.imul(I, te) | 0, d2 = d2 + Math.imul(I, re) | 0, l = l + Math.imul(g2, ie) | 0, n2 = n2 + Math.imul(g2, ne) | 0, n2 = n2 + Math.imul(_, ie) | 0, d2 = d2 + Math.imul(_, ne) | 0;
        var ze = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (ze >>> 26) | 0, ze &= 67108863, l = Math.imul(F, X), n2 = Math.imul(F, J), n2 = n2 + Math.imul(U, X) | 0, d2 = Math.imul(U, J), l = l + Math.imul(C, Q) | 0, n2 = n2 + Math.imul(C, ee) | 0, n2 = n2 + Math.imul(O, Q) | 0, d2 = d2 + Math.imul(O, ee) | 0, l = l + Math.imul(k2, te) | 0, n2 = n2 + Math.imul(k2, re) | 0, n2 = n2 + Math.imul(D, te) | 0, d2 = d2 + Math.imul(D, re) | 0, l = l + Math.imul(R, ie) | 0, n2 = n2 + Math.imul(R, ne) | 0, n2 = n2 + Math.imul(I, ie) | 0, d2 = d2 + Math.imul(I, ne) | 0, l = l + Math.imul(g2, fe) | 0, n2 = n2 + Math.imul(g2, ae) | 0, n2 = n2 + Math.imul(_, fe) | 0, d2 = d2 + Math.imul(_, ae) | 0;
        var He = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (He >>> 26) | 0, He &= 67108863, l = Math.imul(z, X), n2 = Math.imul(z, J), n2 = n2 + Math.imul(H, X) | 0, d2 = Math.imul(H, J), l = l + Math.imul(F, Q) | 0, n2 = n2 + Math.imul(F, ee) | 0, n2 = n2 + Math.imul(U, Q) | 0, d2 = d2 + Math.imul(U, ee) | 0, l = l + Math.imul(C, te) | 0, n2 = n2 + Math.imul(C, re) | 0, n2 = n2 + Math.imul(O, te) | 0, d2 = d2 + Math.imul(O, re) | 0, l = l + Math.imul(k2, ie) | 0, n2 = n2 + Math.imul(k2, ne) | 0, n2 = n2 + Math.imul(D, ie) | 0, d2 = d2 + Math.imul(D, ne) | 0, l = l + Math.imul(R, fe) | 0, n2 = n2 + Math.imul(R, ae) | 0, n2 = n2 + Math.imul(I, fe) | 0, d2 = d2 + Math.imul(I, ae) | 0, l = l + Math.imul(g2, oe) | 0, n2 = n2 + Math.imul(g2, se) | 0, n2 = n2 + Math.imul(_, oe) | 0, d2 = d2 + Math.imul(_, se) | 0;
        var We = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (We >>> 26) | 0, We &= 67108863, l = Math.imul(W, X), n2 = Math.imul(W, J), n2 = n2 + Math.imul(K, X) | 0, d2 = Math.imul(K, J), l = l + Math.imul(z, Q) | 0, n2 = n2 + Math.imul(z, ee) | 0, n2 = n2 + Math.imul(H, Q) | 0, d2 = d2 + Math.imul(H, ee) | 0, l = l + Math.imul(F, te) | 0, n2 = n2 + Math.imul(F, re) | 0, n2 = n2 + Math.imul(U, te) | 0, d2 = d2 + Math.imul(U, re) | 0, l = l + Math.imul(C, ie) | 0, n2 = n2 + Math.imul(C, ne) | 0, n2 = n2 + Math.imul(O, ie) | 0, d2 = d2 + Math.imul(O, ne) | 0, l = l + Math.imul(k2, fe) | 0, n2 = n2 + Math.imul(k2, ae) | 0, n2 = n2 + Math.imul(D, fe) | 0, d2 = d2 + Math.imul(D, ae) | 0, l = l + Math.imul(R, oe) | 0, n2 = n2 + Math.imul(R, se) | 0, n2 = n2 + Math.imul(I, oe) | 0, d2 = d2 + Math.imul(I, se) | 0, l = l + Math.imul(g2, he) | 0, n2 = n2 + Math.imul(g2, ue) | 0, n2 = n2 + Math.imul(_, he) | 0, d2 = d2 + Math.imul(_, ue) | 0;
        var Ke = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ke >>> 26) | 0, Ke &= 67108863, l = Math.imul(j, X), n2 = Math.imul(j, J), n2 = n2 + Math.imul(Z, X) | 0, d2 = Math.imul(Z, J), l = l + Math.imul(W, Q) | 0, n2 = n2 + Math.imul(W, ee) | 0, n2 = n2 + Math.imul(K, Q) | 0, d2 = d2 + Math.imul(K, ee) | 0, l = l + Math.imul(z, te) | 0, n2 = n2 + Math.imul(z, re) | 0, n2 = n2 + Math.imul(H, te) | 0, d2 = d2 + Math.imul(H, re) | 0, l = l + Math.imul(F, ie) | 0, n2 = n2 + Math.imul(F, ne) | 0, n2 = n2 + Math.imul(U, ie) | 0, d2 = d2 + Math.imul(U, ne) | 0, l = l + Math.imul(C, fe) | 0, n2 = n2 + Math.imul(C, ae) | 0, n2 = n2 + Math.imul(O, fe) | 0, d2 = d2 + Math.imul(O, ae) | 0, l = l + Math.imul(k2, oe) | 0, n2 = n2 + Math.imul(k2, se) | 0, n2 = n2 + Math.imul(D, oe) | 0, d2 = d2 + Math.imul(D, se) | 0, l = l + Math.imul(R, he) | 0, n2 = n2 + Math.imul(R, ue) | 0, n2 = n2 + Math.imul(I, he) | 0, d2 = d2 + Math.imul(I, ue) | 0, l = l + Math.imul(g2, le) | 0, n2 = n2 + Math.imul(g2, de) | 0, n2 = n2 + Math.imul(_, le) | 0, d2 = d2 + Math.imul(_, de) | 0;
        var je = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (je >>> 26) | 0, je &= 67108863, l = Math.imul(V, X), n2 = Math.imul(V, J), n2 = n2 + Math.imul($2, X) | 0, d2 = Math.imul($2, J), l = l + Math.imul(j, Q) | 0, n2 = n2 + Math.imul(j, ee) | 0, n2 = n2 + Math.imul(Z, Q) | 0, d2 = d2 + Math.imul(Z, ee) | 0, l = l + Math.imul(W, te) | 0, n2 = n2 + Math.imul(W, re) | 0, n2 = n2 + Math.imul(K, te) | 0, d2 = d2 + Math.imul(K, re) | 0, l = l + Math.imul(z, ie) | 0, n2 = n2 + Math.imul(z, ne) | 0, n2 = n2 + Math.imul(H, ie) | 0, d2 = d2 + Math.imul(H, ne) | 0, l = l + Math.imul(F, fe) | 0, n2 = n2 + Math.imul(F, ae) | 0, n2 = n2 + Math.imul(U, fe) | 0, d2 = d2 + Math.imul(U, ae) | 0, l = l + Math.imul(C, oe) | 0, n2 = n2 + Math.imul(C, se) | 0, n2 = n2 + Math.imul(O, oe) | 0, d2 = d2 + Math.imul(O, se) | 0, l = l + Math.imul(k2, he) | 0, n2 = n2 + Math.imul(k2, ue) | 0, n2 = n2 + Math.imul(D, he) | 0, d2 = d2 + Math.imul(D, ue) | 0, l = l + Math.imul(R, le) | 0, n2 = n2 + Math.imul(R, de) | 0, n2 = n2 + Math.imul(I, le) | 0, d2 = d2 + Math.imul(I, de) | 0, l = l + Math.imul(g2, ce) | 0, n2 = n2 + Math.imul(g2, pe) | 0, n2 = n2 + Math.imul(_, ce) | 0, d2 = d2 + Math.imul(_, pe) | 0;
        var Ze = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ze >>> 26) | 0, Ze &= 67108863, l = Math.imul(G, X), n2 = Math.imul(G, J), n2 = n2 + Math.imul(Y, X) | 0, d2 = Math.imul(Y, J), l = l + Math.imul(V, Q) | 0, n2 = n2 + Math.imul(V, ee) | 0, n2 = n2 + Math.imul($2, Q) | 0, d2 = d2 + Math.imul($2, ee) | 0, l = l + Math.imul(j, te) | 0, n2 = n2 + Math.imul(j, re) | 0, n2 = n2 + Math.imul(Z, te) | 0, d2 = d2 + Math.imul(Z, re) | 0, l = l + Math.imul(W, ie) | 0, n2 = n2 + Math.imul(W, ne) | 0, n2 = n2 + Math.imul(K, ie) | 0, d2 = d2 + Math.imul(K, ne) | 0, l = l + Math.imul(z, fe) | 0, n2 = n2 + Math.imul(z, ae) | 0, n2 = n2 + Math.imul(H, fe) | 0, d2 = d2 + Math.imul(H, ae) | 0, l = l + Math.imul(F, oe) | 0, n2 = n2 + Math.imul(F, se) | 0, n2 = n2 + Math.imul(U, oe) | 0, d2 = d2 + Math.imul(U, se) | 0, l = l + Math.imul(C, he) | 0, n2 = n2 + Math.imul(C, ue) | 0, n2 = n2 + Math.imul(O, he) | 0, d2 = d2 + Math.imul(O, ue) | 0, l = l + Math.imul(k2, le) | 0, n2 = n2 + Math.imul(k2, de) | 0, n2 = n2 + Math.imul(D, le) | 0, d2 = d2 + Math.imul(D, de) | 0, l = l + Math.imul(R, ce) | 0, n2 = n2 + Math.imul(R, pe) | 0, n2 = n2 + Math.imul(I, ce) | 0, d2 = d2 + Math.imul(I, pe) | 0, l = l + Math.imul(g2, ve) | 0, n2 = n2 + Math.imul(g2, be) | 0, n2 = n2 + Math.imul(_, ve) | 0, d2 = d2 + Math.imul(_, be) | 0;
        var Ve = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ve >>> 26) | 0, Ve &= 67108863, l = Math.imul(G, Q), n2 = Math.imul(G, ee), n2 = n2 + Math.imul(Y, Q) | 0, d2 = Math.imul(Y, ee), l = l + Math.imul(V, te) | 0, n2 = n2 + Math.imul(V, re) | 0, n2 = n2 + Math.imul($2, te) | 0, d2 = d2 + Math.imul($2, re) | 0, l = l + Math.imul(j, ie) | 0, n2 = n2 + Math.imul(j, ne) | 0, n2 = n2 + Math.imul(Z, ie) | 0, d2 = d2 + Math.imul(Z, ne) | 0, l = l + Math.imul(W, fe) | 0, n2 = n2 + Math.imul(W, ae) | 0, n2 = n2 + Math.imul(K, fe) | 0, d2 = d2 + Math.imul(K, ae) | 0, l = l + Math.imul(z, oe) | 0, n2 = n2 + Math.imul(z, se) | 0, n2 = n2 + Math.imul(H, oe) | 0, d2 = d2 + Math.imul(H, se) | 0, l = l + Math.imul(F, he) | 0, n2 = n2 + Math.imul(F, ue) | 0, n2 = n2 + Math.imul(U, he) | 0, d2 = d2 + Math.imul(U, ue) | 0, l = l + Math.imul(C, le) | 0, n2 = n2 + Math.imul(C, de) | 0, n2 = n2 + Math.imul(O, le) | 0, d2 = d2 + Math.imul(O, de) | 0, l = l + Math.imul(k2, ce) | 0, n2 = n2 + Math.imul(k2, pe) | 0, n2 = n2 + Math.imul(D, ce) | 0, d2 = d2 + Math.imul(D, pe) | 0, l = l + Math.imul(R, ve) | 0, n2 = n2 + Math.imul(R, be) | 0, n2 = n2 + Math.imul(I, ve) | 0, d2 = d2 + Math.imul(I, be) | 0;
        var $e = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + ($e >>> 26) | 0, $e &= 67108863, l = Math.imul(G, te), n2 = Math.imul(G, re), n2 = n2 + Math.imul(Y, te) | 0, d2 = Math.imul(Y, re), l = l + Math.imul(V, ie) | 0, n2 = n2 + Math.imul(V, ne) | 0, n2 = n2 + Math.imul($2, ie) | 0, d2 = d2 + Math.imul($2, ne) | 0, l = l + Math.imul(j, fe) | 0, n2 = n2 + Math.imul(j, ae) | 0, n2 = n2 + Math.imul(Z, fe) | 0, d2 = d2 + Math.imul(Z, ae) | 0, l = l + Math.imul(W, oe) | 0, n2 = n2 + Math.imul(W, se) | 0, n2 = n2 + Math.imul(K, oe) | 0, d2 = d2 + Math.imul(K, se) | 0, l = l + Math.imul(z, he) | 0, n2 = n2 + Math.imul(z, ue) | 0, n2 = n2 + Math.imul(H, he) | 0, d2 = d2 + Math.imul(H, ue) | 0, l = l + Math.imul(F, le) | 0, n2 = n2 + Math.imul(F, de) | 0, n2 = n2 + Math.imul(U, le) | 0, d2 = d2 + Math.imul(U, de) | 0, l = l + Math.imul(C, ce) | 0, n2 = n2 + Math.imul(C, pe) | 0, n2 = n2 + Math.imul(O, ce) | 0, d2 = d2 + Math.imul(O, pe) | 0, l = l + Math.imul(k2, ve) | 0, n2 = n2 + Math.imul(k2, be) | 0, n2 = n2 + Math.imul(D, ve) | 0, d2 = d2 + Math.imul(D, be) | 0;
        var Ge = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ge >>> 26) | 0, Ge &= 67108863, l = Math.imul(G, ie), n2 = Math.imul(G, ne), n2 = n2 + Math.imul(Y, ie) | 0, d2 = Math.imul(Y, ne), l = l + Math.imul(V, fe) | 0, n2 = n2 + Math.imul(V, ae) | 0, n2 = n2 + Math.imul($2, fe) | 0, d2 = d2 + Math.imul($2, ae) | 0, l = l + Math.imul(j, oe) | 0, n2 = n2 + Math.imul(j, se) | 0, n2 = n2 + Math.imul(Z, oe) | 0, d2 = d2 + Math.imul(Z, se) | 0, l = l + Math.imul(W, he) | 0, n2 = n2 + Math.imul(W, ue) | 0, n2 = n2 + Math.imul(K, he) | 0, d2 = d2 + Math.imul(K, ue) | 0, l = l + Math.imul(z, le) | 0, n2 = n2 + Math.imul(z, de) | 0, n2 = n2 + Math.imul(H, le) | 0, d2 = d2 + Math.imul(H, de) | 0, l = l + Math.imul(F, ce) | 0, n2 = n2 + Math.imul(F, pe) | 0, n2 = n2 + Math.imul(U, ce) | 0, d2 = d2 + Math.imul(U, pe) | 0, l = l + Math.imul(C, ve) | 0, n2 = n2 + Math.imul(C, be) | 0, n2 = n2 + Math.imul(O, ve) | 0, d2 = d2 + Math.imul(O, be) | 0;
        var Ye = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Ye >>> 26) | 0, Ye &= 67108863, l = Math.imul(G, fe), n2 = Math.imul(G, ae), n2 = n2 + Math.imul(Y, fe) | 0, d2 = Math.imul(Y, ae), l = l + Math.imul(V, oe) | 0, n2 = n2 + Math.imul(V, se) | 0, n2 = n2 + Math.imul($2, oe) | 0, d2 = d2 + Math.imul($2, se) | 0, l = l + Math.imul(j, he) | 0, n2 = n2 + Math.imul(j, ue) | 0, n2 = n2 + Math.imul(Z, he) | 0, d2 = d2 + Math.imul(Z, ue) | 0, l = l + Math.imul(W, le) | 0, n2 = n2 + Math.imul(W, de) | 0, n2 = n2 + Math.imul(K, le) | 0, d2 = d2 + Math.imul(K, de) | 0, l = l + Math.imul(z, ce) | 0, n2 = n2 + Math.imul(z, pe) | 0, n2 = n2 + Math.imul(H, ce) | 0, d2 = d2 + Math.imul(H, pe) | 0, l = l + Math.imul(F, ve) | 0, n2 = n2 + Math.imul(F, be) | 0, n2 = n2 + Math.imul(U, ve) | 0, d2 = d2 + Math.imul(U, be) | 0;
        var Xe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Xe >>> 26) | 0, Xe &= 67108863, l = Math.imul(G, oe), n2 = Math.imul(G, se), n2 = n2 + Math.imul(Y, oe) | 0, d2 = Math.imul(Y, se), l = l + Math.imul(V, he) | 0, n2 = n2 + Math.imul(V, ue) | 0, n2 = n2 + Math.imul($2, he) | 0, d2 = d2 + Math.imul($2, ue) | 0, l = l + Math.imul(j, le) | 0, n2 = n2 + Math.imul(j, de) | 0, n2 = n2 + Math.imul(Z, le) | 0, d2 = d2 + Math.imul(Z, de) | 0, l = l + Math.imul(W, ce) | 0, n2 = n2 + Math.imul(W, pe) | 0, n2 = n2 + Math.imul(K, ce) | 0, d2 = d2 + Math.imul(K, pe) | 0, l = l + Math.imul(z, ve) | 0, n2 = n2 + Math.imul(z, be) | 0, n2 = n2 + Math.imul(H, ve) | 0, d2 = d2 + Math.imul(H, be) | 0;
        var Je = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Je >>> 26) | 0, Je &= 67108863, l = Math.imul(G, he), n2 = Math.imul(G, ue), n2 = n2 + Math.imul(Y, he) | 0, d2 = Math.imul(Y, ue), l = l + Math.imul(V, le) | 0, n2 = n2 + Math.imul(V, de) | 0, n2 = n2 + Math.imul($2, le) | 0, d2 = d2 + Math.imul($2, de) | 0, l = l + Math.imul(j, ce) | 0, n2 = n2 + Math.imul(j, pe) | 0, n2 = n2 + Math.imul(Z, ce) | 0, d2 = d2 + Math.imul(Z, pe) | 0, l = l + Math.imul(W, ve) | 0, n2 = n2 + Math.imul(W, be) | 0, n2 = n2 + Math.imul(K, ve) | 0, d2 = d2 + Math.imul(K, be) | 0;
        var Qe = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (Qe >>> 26) | 0, Qe &= 67108863, l = Math.imul(G, le), n2 = Math.imul(G, de), n2 = n2 + Math.imul(Y, le) | 0, d2 = Math.imul(Y, de), l = l + Math.imul(V, ce) | 0, n2 = n2 + Math.imul(V, pe) | 0, n2 = n2 + Math.imul($2, ce) | 0, d2 = d2 + Math.imul($2, pe) | 0, l = l + Math.imul(j, ve) | 0, n2 = n2 + Math.imul(j, be) | 0, n2 = n2 + Math.imul(Z, ve) | 0, d2 = d2 + Math.imul(Z, be) | 0;
        var et = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (et >>> 26) | 0, et &= 67108863, l = Math.imul(G, ce), n2 = Math.imul(G, pe), n2 = n2 + Math.imul(Y, ce) | 0, d2 = Math.imul(Y, pe), l = l + Math.imul(V, ve) | 0, n2 = n2 + Math.imul(V, be) | 0, n2 = n2 + Math.imul($2, ve) | 0, d2 = d2 + Math.imul($2, be) | 0;
        var tt = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        b3 = (d2 + (n2 >>> 13) | 0) + (tt >>> 26) | 0, tt &= 67108863, l = Math.imul(G, ve), n2 = Math.imul(G, be), n2 = n2 + Math.imul(Y, ve) | 0, d2 = Math.imul(Y, be);
        var rt = (b3 + l | 0) + ((n2 & 8191) << 13) | 0;
        return b3 = (d2 + (n2 >>> 13) | 0) + (rt >>> 26) | 0, rt &= 67108863, c[0] = ft, c[1] = Be, c[2] = qe, c[3] = ze, c[4] = He, c[5] = We, c[6] = Ke, c[7] = je, c[8] = Ze, c[9] = Ve, c[10] = $e, c[11] = Ge, c[12] = Ye, c[13] = Xe, c[14] = Je, c[15] = Qe, c[16] = et, c[17] = tt, c[18] = rt, b3 !== 0 && (c[19] = b3, h2.length++), h2;
      };
      Math.imul || (L = q2);
      function ge(v, i3, a4) {
        a4.negative = i3.negative ^ v.negative, a4.length = v.length + i3.length;
        for (var h2 = 0, s5 = 0, u2 = 0;u2 < a4.length - 1; u2++) {
          var c = s5;
          s5 = 0;
          for (var b3 = h2 & 67108863, l = Math.min(u2, i3.length - 1), n2 = Math.max(0, u2 - v.length + 1);n2 <= l; n2++) {
            var d2 = u2 - n2, w = v.words[d2] | 0, g2 = i3.words[n2] | 0, _ = w * g2, A = _ & 67108863;
            c = c + (_ / 67108864 | 0) | 0, A = A + b3 | 0, b3 = A & 67108863, c = c + (A >>> 26) | 0, s5 += c >>> 26, c &= 67108863;
          }
          a4.words[u2] = b3, h2 = c, c = s5;
        }
        return h2 !== 0 ? a4.words[u2] = h2 : a4.length--, a4.strip();
      }
      function _e(v, i3, a4) {
        var h2 = new N;
        return h2.mulp(v, i3, a4);
      }
      f.prototype.mulTo = function(i3, a4) {
        var h2, s5 = this.length + i3.length;
        return this.length === 10 && i3.length === 10 ? h2 = L(this, i3, a4) : s5 < 63 ? h2 = q2(this, i3, a4) : s5 < 1024 ? h2 = ge(this, i3, a4) : h2 = _e(this, i3, a4), h2;
      };
      function N(v, i3) {
        this.x = v, this.y = i3;
      }
      N.prototype.makeRBT = function(i3) {
        for (var a4 = new Array(i3), h2 = f.prototype._countBits(i3) - 1, s5 = 0;s5 < i3; s5++)
          a4[s5] = this.revBin(s5, h2, i3);
        return a4;
      }, N.prototype.revBin = function(i3, a4, h2) {
        if (i3 === 0 || i3 === h2 - 1)
          return i3;
        for (var s5 = 0, u2 = 0;u2 < a4; u2++)
          s5 |= (i3 & 1) << a4 - u2 - 1, i3 >>= 1;
        return s5;
      }, N.prototype.permute = function(i3, a4, h2, s5, u2, c) {
        for (var b3 = 0;b3 < c; b3++)
          s5[b3] = a4[i3[b3]], u2[b3] = h2[i3[b3]];
      }, N.prototype.transform = function(i3, a4, h2, s5, u2, c) {
        this.permute(c, i3, a4, h2, s5, u2);
        for (var b3 = 1;b3 < u2; b3 <<= 1)
          for (var l = b3 << 1, n2 = Math.cos(2 * Math.PI / l), d2 = Math.sin(2 * Math.PI / l), w = 0;w < u2; w += l)
            for (var g2 = n2, _ = d2, A = 0;A < b3; A++) {
              var R = h2[w + A], I = s5[w + A], Me = h2[w + A + b3], k2 = s5[w + A + b3], D = g2 * Me - _ * k2;
              k2 = g2 * k2 + _ * Me, Me = D, h2[w + A] = R + Me, s5[w + A] = I + k2, h2[w + A + b3] = R - Me, s5[w + A + b3] = I - k2, A !== l && (D = n2 * g2 - d2 * _, _ = n2 * _ + d2 * g2, g2 = D);
            }
      }, N.prototype.guessLen13b = function(i3, a4) {
        var h2 = Math.max(a4, i3) | 1, s5 = h2 & 1, u2 = 0;
        for (h2 = h2 / 2 | 0;h2; h2 = h2 >>> 1)
          u2++;
        return 1 << u2 + 1 + s5;
      }, N.prototype.conjugate = function(i3, a4, h2) {
        if (!(h2 <= 1))
          for (var s5 = 0;s5 < h2 / 2; s5++) {
            var u2 = i3[s5];
            i3[s5] = i3[h2 - s5 - 1], i3[h2 - s5 - 1] = u2, u2 = a4[s5], a4[s5] = -a4[h2 - s5 - 1], a4[h2 - s5 - 1] = -u2;
          }
      }, N.prototype.normalize13b = function(i3, a4) {
        for (var h2 = 0, s5 = 0;s5 < a4 / 2; s5++) {
          var u2 = Math.round(i3[2 * s5 + 1] / a4) * 8192 + Math.round(i3[2 * s5] / a4) + h2;
          i3[s5] = u2 & 67108863, u2 < 67108864 ? h2 = 0 : h2 = u2 / 67108864 | 0;
        }
        return i3;
      }, N.prototype.convert13b = function(i3, a4, h2, s5) {
        for (var u2 = 0, c = 0;c < a4; c++)
          u2 = u2 + (i3[c] | 0), h2[2 * c] = u2 & 8191, u2 = u2 >>> 13, h2[2 * c + 1] = u2 & 8191, u2 = u2 >>> 13;
        for (c = 2 * a4;c < s5; ++c)
          h2[c] = 0;
        r6(u2 === 0), r6((u2 & -8192) === 0);
      }, N.prototype.stub = function(i3) {
        for (var a4 = new Array(i3), h2 = 0;h2 < i3; h2++)
          a4[h2] = 0;
        return a4;
      }, N.prototype.mulp = function(i3, a4, h2) {
        var s5 = 2 * this.guessLen13b(i3.length, a4.length), u2 = this.makeRBT(s5), c = this.stub(s5), b3 = new Array(s5), l = new Array(s5), n2 = new Array(s5), d2 = new Array(s5), w = new Array(s5), g2 = new Array(s5), _ = h2.words;
        _.length = s5, this.convert13b(i3.words, i3.length, b3, s5), this.convert13b(a4.words, a4.length, d2, s5), this.transform(b3, c, l, n2, s5, u2), this.transform(d2, c, w, g2, s5, u2);
        for (var A = 0;A < s5; A++) {
          var R = l[A] * w[A] - n2[A] * g2[A];
          n2[A] = l[A] * g2[A] + n2[A] * w[A], l[A] = R;
        }
        return this.conjugate(l, n2, s5), this.transform(l, n2, _, c, s5, u2), this.conjugate(_, c, s5), this.normalize13b(_, s5), h2.negative = i3.negative ^ a4.negative, h2.length = i3.length + a4.length, h2.strip();
      }, f.prototype.mul = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), this.mulTo(i3, a4);
      }, f.prototype.mulf = function(i3) {
        var a4 = new f(null);
        return a4.words = new Array(this.length + i3.length), _e(this, i3, a4);
      }, f.prototype.imul = function(i3) {
        return this.clone().mulTo(i3, this);
      }, f.prototype.imuln = function(i3) {
        r6(typeof i3 == "number"), r6(i3 < 67108864);
        for (var a4 = 0, h2 = 0;h2 < this.length; h2++) {
          var s5 = (this.words[h2] | 0) * i3, u2 = (s5 & 67108863) + (a4 & 67108863);
          a4 >>= 26, a4 += s5 / 67108864 | 0, a4 += u2 >>> 26, this.words[h2] = u2 & 67108863;
        }
        return a4 !== 0 && (this.words[h2] = a4, this.length++), this;
      }, f.prototype.muln = function(i3) {
        return this.clone().imuln(i3);
      }, f.prototype.sqr = function() {
        return this.mul(this);
      }, f.prototype.isqr = function() {
        return this.imul(this.clone());
      }, f.prototype.pow = function(i3) {
        var a4 = B(i3);
        if (a4.length === 0)
          return new f(1);
        for (var h2 = this, s5 = 0;s5 < a4.length && a4[s5] === 0; s5++, h2 = h2.sqr())
          ;
        if (++s5 < a4.length)
          for (var u2 = h2.sqr();s5 < a4.length; s5++, u2 = u2.sqr())
            a4[s5] !== 0 && (h2 = h2.mul(u2));
        return h2;
      }, f.prototype.iushln = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 67108863 >>> 26 - a4 << 26 - a4, u2;
        if (a4 !== 0) {
          var c = 0;
          for (u2 = 0;u2 < this.length; u2++) {
            var b3 = this.words[u2] & s5, l = (this.words[u2] | 0) - b3 << a4;
            this.words[u2] = l | c, c = b3 >>> 26 - a4;
          }
          c && (this.words[u2] = c, this.length++);
        }
        if (h2 !== 0) {
          for (u2 = this.length - 1;u2 >= 0; u2--)
            this.words[u2 + h2] = this.words[u2];
          for (u2 = 0;u2 < h2; u2++)
            this.words[u2] = 0;
          this.length += h2;
        }
        return this.strip();
      }, f.prototype.ishln = function(i3) {
        return r6(this.negative === 0), this.iushln(i3);
      }, f.prototype.iushrn = function(i3, a4, h2) {
        r6(typeof i3 == "number" && i3 >= 0);
        var s5;
        a4 ? s5 = (a4 - a4 % 26) / 26 : s5 = 0;
        var u2 = i3 % 26, c = Math.min((i3 - u2) / 26, this.length), b3 = 67108863 ^ 67108863 >>> u2 << u2, l = h2;
        if (s5 -= c, s5 = Math.max(0, s5), l) {
          for (var n2 = 0;n2 < c; n2++)
            l.words[n2] = this.words[n2];
          l.length = c;
        }
        if (c !== 0)
          if (this.length > c)
            for (this.length -= c, n2 = 0;n2 < this.length; n2++)
              this.words[n2] = this.words[n2 + c];
          else
            this.words[0] = 0, this.length = 1;
        var d2 = 0;
        for (n2 = this.length - 1;n2 >= 0 && (d2 !== 0 || n2 >= s5); n2--) {
          var w = this.words[n2] | 0;
          this.words[n2] = d2 << 26 - u2 | w >>> u2, d2 = w & b3;
        }
        return l && d2 !== 0 && (l.words[l.length++] = d2), this.length === 0 && (this.words[0] = 0, this.length = 1), this.strip();
      }, f.prototype.ishrn = function(i3, a4, h2) {
        return r6(this.negative === 0), this.iushrn(i3, a4, h2);
      }, f.prototype.shln = function(i3) {
        return this.clone().ishln(i3);
      }, f.prototype.ushln = function(i3) {
        return this.clone().iushln(i3);
      }, f.prototype.shrn = function(i3) {
        return this.clone().ishrn(i3);
      }, f.prototype.ushrn = function(i3) {
        return this.clone().iushrn(i3);
      }, f.prototype.testn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return false;
        var u2 = this.words[h2];
        return !!(u2 & s5);
      }, f.prototype.imaskn = function(i3) {
        r6(typeof i3 == "number" && i3 >= 0);
        var a4 = i3 % 26, h2 = (i3 - a4) / 26;
        if (r6(this.negative === 0, "imaskn works only with positive numbers"), this.length <= h2)
          return this;
        if (a4 !== 0 && h2++, this.length = Math.min(h2, this.length), a4 !== 0) {
          var s5 = 67108863 ^ 67108863 >>> a4 << a4;
          this.words[this.length - 1] &= s5;
        }
        return this.strip();
      }, f.prototype.maskn = function(i3) {
        return this.clone().imaskn(i3);
      }, f.prototype.iaddn = function(i3) {
        return r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0 ? this.isubn(-i3) : this.negative !== 0 ? this.length === 1 && (this.words[0] | 0) < i3 ? (this.words[0] = i3 - (this.words[0] | 0), this.negative = 0, this) : (this.negative = 0, this.isubn(i3), this.negative = 1, this) : this._iaddn(i3);
      }, f.prototype._iaddn = function(i3) {
        this.words[0] += i3;
        for (var a4 = 0;a4 < this.length && this.words[a4] >= 67108864; a4++)
          this.words[a4] -= 67108864, a4 === this.length - 1 ? this.words[a4 + 1] = 1 : this.words[a4 + 1]++;
        return this.length = Math.max(this.length, a4 + 1), this;
      }, f.prototype.isubn = function(i3) {
        if (r6(typeof i3 == "number"), r6(i3 < 67108864), i3 < 0)
          return this.iaddn(-i3);
        if (this.negative !== 0)
          return this.negative = 0, this.iaddn(i3), this.negative = 1, this;
        if (this.words[0] -= i3, this.length === 1 && this.words[0] < 0)
          this.words[0] = -this.words[0], this.negative = 1;
        else
          for (var a4 = 0;a4 < this.length && this.words[a4] < 0; a4++)
            this.words[a4] += 67108864, this.words[a4 + 1] -= 1;
        return this.strip();
      }, f.prototype.addn = function(i3) {
        return this.clone().iaddn(i3);
      }, f.prototype.subn = function(i3) {
        return this.clone().isubn(i3);
      }, f.prototype.iabs = function() {
        return this.negative = 0, this;
      }, f.prototype.abs = function() {
        return this.clone().iabs();
      }, f.prototype._ishlnsubmul = function(i3, a4, h2) {
        var s5 = i3.length + h2, u2;
        this._expand(s5);
        var c, b3 = 0;
        for (u2 = 0;u2 < i3.length; u2++) {
          c = (this.words[u2 + h2] | 0) + b3;
          var l = (i3.words[u2] | 0) * a4;
          c -= l & 67108863, b3 = (c >> 26) - (l / 67108864 | 0), this.words[u2 + h2] = c & 67108863;
        }
        for (;u2 < this.length - h2; u2++)
          c = (this.words[u2 + h2] | 0) + b3, b3 = c >> 26, this.words[u2 + h2] = c & 67108863;
        if (b3 === 0)
          return this.strip();
        for (r6(b3 === -1), b3 = 0, u2 = 0;u2 < this.length; u2++)
          c = -(this.words[u2] | 0) + b3, b3 = c >> 26, this.words[u2] = c & 67108863;
        return this.negative = 1, this.strip();
      }, f.prototype._wordDiv = function(i3, a4) {
        var h2 = this.length - i3.length, s5 = this.clone(), u2 = i3, c = u2.words[u2.length - 1] | 0, b3 = this._countBits(c);
        h2 = 26 - b3, h2 !== 0 && (u2 = u2.ushln(h2), s5.iushln(h2), c = u2.words[u2.length - 1] | 0);
        var l = s5.length - u2.length, n2;
        if (a4 !== "mod") {
          n2 = new f(null), n2.length = l + 1, n2.words = new Array(n2.length);
          for (var d2 = 0;d2 < n2.length; d2++)
            n2.words[d2] = 0;
        }
        var w = s5.clone()._ishlnsubmul(u2, 1, l);
        w.negative === 0 && (s5 = w, n2 && (n2.words[l] = 1));
        for (var g2 = l - 1;g2 >= 0; g2--) {
          var _ = (s5.words[u2.length + g2] | 0) * 67108864 + (s5.words[u2.length + g2 - 1] | 0);
          for (_ = Math.min(_ / c | 0, 67108863), s5._ishlnsubmul(u2, _, g2);s5.negative !== 0; )
            _--, s5.negative = 0, s5._ishlnsubmul(u2, 1, g2), s5.isZero() || (s5.negative ^= 1);
          n2 && (n2.words[g2] = _);
        }
        return n2 && n2.strip(), s5.strip(), a4 !== "div" && h2 !== 0 && s5.iushrn(h2), { div: n2 || null, mod: s5 };
      }, f.prototype.divmod = function(i3, a4, h2) {
        if (r6(!i3.isZero()), this.isZero())
          return { div: new f(0), mod: new f(0) };
        var s5, u2, c;
        return this.negative !== 0 && i3.negative === 0 ? (c = this.neg().divmod(i3, a4), a4 !== "mod" && (s5 = c.div.neg()), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.iadd(i3)), { div: s5, mod: u2 }) : this.negative === 0 && i3.negative !== 0 ? (c = this.divmod(i3.neg(), a4), a4 !== "mod" && (s5 = c.div.neg()), { div: s5, mod: c.mod }) : (this.negative & i3.negative) !== 0 ? (c = this.neg().divmod(i3.neg(), a4), a4 !== "div" && (u2 = c.mod.neg(), h2 && u2.negative !== 0 && u2.isub(i3)), { div: c.div, mod: u2 }) : i3.length > this.length || this.cmp(i3) < 0 ? { div: new f(0), mod: this } : i3.length === 1 ? a4 === "div" ? { div: this.divn(i3.words[0]), mod: null } : a4 === "mod" ? { div: null, mod: new f(this.modn(i3.words[0])) } : { div: this.divn(i3.words[0]), mod: new f(this.modn(i3.words[0])) } : this._wordDiv(i3, a4);
      }, f.prototype.div = function(i3) {
        return this.divmod(i3, "div", false).div;
      }, f.prototype.mod = function(i3) {
        return this.divmod(i3, "mod", false).mod;
      }, f.prototype.umod = function(i3) {
        return this.divmod(i3, "mod", true).mod;
      }, f.prototype.divRound = function(i3) {
        var a4 = this.divmod(i3);
        if (a4.mod.isZero())
          return a4.div;
        var h2 = a4.div.negative !== 0 ? a4.mod.isub(i3) : a4.mod, s5 = i3.ushrn(1), u2 = i3.andln(1), c = h2.cmp(s5);
        return c < 0 || u2 === 1 && c === 0 ? a4.div : a4.div.negative !== 0 ? a4.div.isubn(1) : a4.div.iaddn(1);
      }, f.prototype.modn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = (1 << 26) % i3, h2 = 0, s5 = this.length - 1;s5 >= 0; s5--)
          h2 = (a4 * h2 + (this.words[s5] | 0)) % i3;
        return h2;
      }, f.prototype.idivn = function(i3) {
        r6(i3 <= 67108863);
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = (this.words[h2] | 0) + a4 * 67108864;
          this.words[h2] = s5 / i3 | 0, a4 = s5 % i3;
        }
        return this.strip();
      }, f.prototype.divn = function(i3) {
        return this.clone().idivn(i3);
      }, f.prototype.egcd = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h2 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = new f(0), b3 = new f(1), l = 0;a4.isEven() && h2.isEven(); )
          a4.iushrn(1), h2.iushrn(1), ++l;
        for (var n2 = h2.clone(), d2 = a4.clone();!a4.isZero(); ) {
          for (var w = 0, g2 = 1;(a4.words[0] & g2) === 0 && w < 26; ++w, g2 <<= 1)
            ;
          if (w > 0)
            for (a4.iushrn(w);w-- > 0; )
              (s5.isOdd() || u2.isOdd()) && (s5.iadd(n2), u2.isub(d2)), s5.iushrn(1), u2.iushrn(1);
          for (var _ = 0, A = 1;(h2.words[0] & A) === 0 && _ < 26; ++_, A <<= 1)
            ;
          if (_ > 0)
            for (h2.iushrn(_);_-- > 0; )
              (c.isOdd() || b3.isOdd()) && (c.iadd(n2), b3.isub(d2)), c.iushrn(1), b3.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(c), u2.isub(b3)) : (h2.isub(a4), c.isub(s5), b3.isub(u2));
        }
        return { a: c, b: b3, gcd: h2.iushln(l) };
      }, f.prototype._invmp = function(i3) {
        r6(i3.negative === 0), r6(!i3.isZero());
        var a4 = this, h2 = i3.clone();
        a4.negative !== 0 ? a4 = a4.umod(i3) : a4 = a4.clone();
        for (var s5 = new f(1), u2 = new f(0), c = h2.clone();a4.cmpn(1) > 0 && h2.cmpn(1) > 0; ) {
          for (var b3 = 0, l = 1;(a4.words[0] & l) === 0 && b3 < 26; ++b3, l <<= 1)
            ;
          if (b3 > 0)
            for (a4.iushrn(b3);b3-- > 0; )
              s5.isOdd() && s5.iadd(c), s5.iushrn(1);
          for (var n2 = 0, d2 = 1;(h2.words[0] & d2) === 0 && n2 < 26; ++n2, d2 <<= 1)
            ;
          if (n2 > 0)
            for (h2.iushrn(n2);n2-- > 0; )
              u2.isOdd() && u2.iadd(c), u2.iushrn(1);
          a4.cmp(h2) >= 0 ? (a4.isub(h2), s5.isub(u2)) : (h2.isub(a4), u2.isub(s5));
        }
        var w;
        return a4.cmpn(1) === 0 ? w = s5 : w = u2, w.cmpn(0) < 0 && w.iadd(i3), w;
      }, f.prototype.gcd = function(i3) {
        if (this.isZero())
          return i3.abs();
        if (i3.isZero())
          return this.abs();
        var a4 = this.clone(), h2 = i3.clone();
        a4.negative = 0, h2.negative = 0;
        for (var s5 = 0;a4.isEven() && h2.isEven(); s5++)
          a4.iushrn(1), h2.iushrn(1);
        do {
          for (;a4.isEven(); )
            a4.iushrn(1);
          for (;h2.isEven(); )
            h2.iushrn(1);
          var u2 = a4.cmp(h2);
          if (u2 < 0) {
            var c = a4;
            a4 = h2, h2 = c;
          } else if (u2 === 0 || h2.cmpn(1) === 0)
            break;
          a4.isub(h2);
        } while (true);
        return h2.iushln(s5);
      }, f.prototype.invm = function(i3) {
        return this.egcd(i3).a.umod(i3);
      }, f.prototype.isEven = function() {
        return (this.words[0] & 1) === 0;
      }, f.prototype.isOdd = function() {
        return (this.words[0] & 1) === 1;
      }, f.prototype.andln = function(i3) {
        return this.words[0] & i3;
      }, f.prototype.bincn = function(i3) {
        r6(typeof i3 == "number");
        var a4 = i3 % 26, h2 = (i3 - a4) / 26, s5 = 1 << a4;
        if (this.length <= h2)
          return this._expand(h2 + 1), this.words[h2] |= s5, this;
        for (var u2 = s5, c = h2;u2 !== 0 && c < this.length; c++) {
          var b3 = this.words[c] | 0;
          b3 += u2, u2 = b3 >>> 26, b3 &= 67108863, this.words[c] = b3;
        }
        return u2 !== 0 && (this.words[c] = u2, this.length++), this;
      }, f.prototype.isZero = function() {
        return this.length === 1 && this.words[0] === 0;
      }, f.prototype.cmpn = function(i3) {
        var a4 = i3 < 0;
        if (this.negative !== 0 && !a4)
          return -1;
        if (this.negative === 0 && a4)
          return 1;
        this.strip();
        var h2;
        if (this.length > 1)
          h2 = 1;
        else {
          a4 && (i3 = -i3), r6(i3 <= 67108863, "Number is too big");
          var s5 = this.words[0] | 0;
          h2 = s5 === i3 ? 0 : s5 < i3 ? -1 : 1;
        }
        return this.negative !== 0 ? -h2 | 0 : h2;
      }, f.prototype.cmp = function(i3) {
        if (this.negative !== 0 && i3.negative === 0)
          return -1;
        if (this.negative === 0 && i3.negative !== 0)
          return 1;
        var a4 = this.ucmp(i3);
        return this.negative !== 0 ? -a4 | 0 : a4;
      }, f.prototype.ucmp = function(i3) {
        if (this.length > i3.length)
          return 1;
        if (this.length < i3.length)
          return -1;
        for (var a4 = 0, h2 = this.length - 1;h2 >= 0; h2--) {
          var s5 = this.words[h2] | 0, u2 = i3.words[h2] | 0;
          if (s5 !== u2) {
            s5 < u2 ? a4 = -1 : s5 > u2 && (a4 = 1);
            break;
          }
        }
        return a4;
      }, f.prototype.gtn = function(i3) {
        return this.cmpn(i3) === 1;
      }, f.prototype.gt = function(i3) {
        return this.cmp(i3) === 1;
      }, f.prototype.gten = function(i3) {
        return this.cmpn(i3) >= 0;
      }, f.prototype.gte = function(i3) {
        return this.cmp(i3) >= 0;
      }, f.prototype.ltn = function(i3) {
        return this.cmpn(i3) === -1;
      }, f.prototype.lt = function(i3) {
        return this.cmp(i3) === -1;
      }, f.prototype.lten = function(i3) {
        return this.cmpn(i3) <= 0;
      }, f.prototype.lte = function(i3) {
        return this.cmp(i3) <= 0;
      }, f.prototype.eqn = function(i3) {
        return this.cmpn(i3) === 0;
      }, f.prototype.eq = function(i3) {
        return this.cmp(i3) === 0;
      }, f.red = function(i3) {
        return new P(i3);
      }, f.prototype.toRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), r6(this.negative === 0, "red works only with positives"), i3.convertTo(this)._forceRed(i3);
      }, f.prototype.fromRed = function() {
        return r6(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this);
      }, f.prototype._forceRed = function(i3) {
        return this.red = i3, this;
      }, f.prototype.forceRed = function(i3) {
        return r6(!this.red, "Already a number in reduction context"), this._forceRed(i3);
      }, f.prototype.redAdd = function(i3) {
        return r6(this.red, "redAdd works only with red numbers"), this.red.add(this, i3);
      }, f.prototype.redIAdd = function(i3) {
        return r6(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, i3);
      }, f.prototype.redSub = function(i3) {
        return r6(this.red, "redSub works only with red numbers"), this.red.sub(this, i3);
      }, f.prototype.redISub = function(i3) {
        return r6(this.red, "redISub works only with red numbers"), this.red.isub(this, i3);
      }, f.prototype.redShl = function(i3) {
        return r6(this.red, "redShl works only with red numbers"), this.red.shl(this, i3);
      }, f.prototype.redMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.mul(this, i3);
      }, f.prototype.redIMul = function(i3) {
        return r6(this.red, "redMul works only with red numbers"), this.red._verify2(this, i3), this.red.imul(this, i3);
      }, f.prototype.redSqr = function() {
        return r6(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this);
      }, f.prototype.redISqr = function() {
        return r6(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this);
      }, f.prototype.redSqrt = function() {
        return r6(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this);
      }, f.prototype.redInvm = function() {
        return r6(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this);
      }, f.prototype.redNeg = function() {
        return r6(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this);
      }, f.prototype.redPow = function(i3) {
        return r6(this.red && !i3.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, i3);
      };
      var we = { k256: null, p224: null, p192: null, p25519: null };
      function ye(v, i3) {
        this.name = v, this.p = new f(i3, 16), this.n = this.p.bitLength(), this.k = new f(1).iushln(this.n).isub(this.p), this.tmp = this._tmp();
      }
      ye.prototype._tmp = function() {
        var i3 = new f(null);
        return i3.words = new Array(Math.ceil(this.n / 13)), i3;
      }, ye.prototype.ireduce = function(i3) {
        var a4 = i3, h2;
        do
          this.split(a4, this.tmp), a4 = this.imulK(a4), a4 = a4.iadd(this.tmp), h2 = a4.bitLength();
        while (h2 > this.n);
        var s5 = h2 < this.n ? -1 : a4.ucmp(this.p);
        return s5 === 0 ? (a4.words[0] = 0, a4.length = 1) : s5 > 0 ? a4.isub(this.p) : a4.strip !== undefined ? a4.strip() : a4._strip(), a4;
      }, ye.prototype.split = function(i3, a4) {
        i3.iushrn(this.n, 0, a4);
      }, ye.prototype.imulK = function(i3) {
        return i3.imul(this.k);
      };
      function xe() {
        ye.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");
      }
      o2(xe, ye), xe.prototype.split = function(i3, a4) {
        for (var h2 = 4194303, s5 = Math.min(i3.length, 9), u2 = 0;u2 < s5; u2++)
          a4.words[u2] = i3.words[u2];
        if (a4.length = s5, i3.length <= 9) {
          i3.words[0] = 0, i3.length = 1;
          return;
        }
        var c = i3.words[9];
        for (a4.words[a4.length++] = c & h2, u2 = 10;u2 < i3.length; u2++) {
          var b3 = i3.words[u2] | 0;
          i3.words[u2 - 10] = (b3 & h2) << 4 | c >>> 22, c = b3;
        }
        c >>>= 22, i3.words[u2 - 10] = c, c === 0 && i3.length > 10 ? i3.length -= 10 : i3.length -= 9;
      }, xe.prototype.imulK = function(i3) {
        i3.words[i3.length] = 0, i3.words[i3.length + 1] = 0, i3.length += 2;
        for (var a4 = 0, h2 = 0;h2 < i3.length; h2++) {
          var s5 = i3.words[h2] | 0;
          a4 += s5 * 977, i3.words[h2] = a4 & 67108863, a4 = s5 * 64 + (a4 / 67108864 | 0);
        }
        return i3.words[i3.length - 1] === 0 && (i3.length--, i3.words[i3.length - 1] === 0 && i3.length--), i3;
      };
      function Re() {
        ye.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");
      }
      o2(Re, ye);
      function Ee() {
        ye.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");
      }
      o2(Ee, ye);
      function Ae() {
        ye.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");
      }
      o2(Ae, ye), Ae.prototype.imulK = function(i3) {
        for (var a4 = 0, h2 = 0;h2 < i3.length; h2++) {
          var s5 = (i3.words[h2] | 0) * 19 + a4, u2 = s5 & 67108863;
          s5 >>>= 26, i3.words[h2] = u2, a4 = s5;
        }
        return a4 !== 0 && (i3.words[i3.length++] = a4), i3;
      }, f._prime = function(i3) {
        if (we[i3])
          return we[i3];
        var a4;
        if (i3 === "k256")
          a4 = new xe;
        else if (i3 === "p224")
          a4 = new Re;
        else if (i3 === "p192")
          a4 = new Ee;
        else if (i3 === "p25519")
          a4 = new Ae;
        else
          throw new Error("Unknown prime " + i3);
        return we[i3] = a4, a4;
      };
      function P(v) {
        if (typeof v == "string") {
          var i3 = f._prime(v);
          this.m = i3.p, this.prime = i3;
        } else
          r6(v.gtn(1), "modulus must be greater than 1"), this.m = v, this.prime = null;
      }
      P.prototype._verify1 = function(i3) {
        r6(i3.negative === 0, "red works only with positives"), r6(i3.red, "red works only with red numbers");
      }, P.prototype._verify2 = function(i3, a4) {
        r6((i3.negative | a4.negative) === 0, "red works only with positives"), r6(i3.red && i3.red === a4.red, "red works only with red numbers");
      }, P.prototype.imod = function(i3) {
        return this.prime ? this.prime.ireduce(i3)._forceRed(this) : i3.umod(this.m)._forceRed(this);
      }, P.prototype.neg = function(i3) {
        return i3.isZero() ? i3.clone() : this.m.sub(i3)._forceRed(this);
      }, P.prototype.add = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.add(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2._forceRed(this);
      }, P.prototype.iadd = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.iadd(a4);
        return h2.cmp(this.m) >= 0 && h2.isub(this.m), h2;
      }, P.prototype.sub = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.sub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2._forceRed(this);
      }, P.prototype.isub = function(i3, a4) {
        this._verify2(i3, a4);
        var h2 = i3.isub(a4);
        return h2.cmpn(0) < 0 && h2.iadd(this.m), h2;
      }, P.prototype.shl = function(i3, a4) {
        return this._verify1(i3), this.imod(i3.ushln(a4));
      }, P.prototype.imul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.imul(a4));
      }, P.prototype.mul = function(i3, a4) {
        return this._verify2(i3, a4), this.imod(i3.mul(a4));
      }, P.prototype.isqr = function(i3) {
        return this.imul(i3, i3.clone());
      }, P.prototype.sqr = function(i3) {
        return this.mul(i3, i3);
      }, P.prototype.sqrt = function(i3) {
        if (i3.isZero())
          return i3.clone();
        var a4 = this.m.andln(3);
        if (r6(a4 % 2 === 1), a4 === 3) {
          var h2 = this.m.add(new f(1)).iushrn(2);
          return this.pow(i3, h2);
        }
        for (var s5 = this.m.subn(1), u2 = 0;!s5.isZero() && s5.andln(1) === 0; )
          u2++, s5.iushrn(1);
        r6(!s5.isZero());
        var c = new f(1).toRed(this), b3 = c.redNeg(), l = this.m.subn(1).iushrn(1), n2 = this.m.bitLength();
        for (n2 = new f(2 * n2 * n2).toRed(this);this.pow(n2, l).cmp(b3) !== 0; )
          n2.redIAdd(b3);
        for (var d2 = this.pow(n2, s5), w = this.pow(i3, s5.addn(1).iushrn(1)), g2 = this.pow(i3, s5), _ = u2;g2.cmp(c) !== 0; ) {
          for (var A = g2, R = 0;A.cmp(c) !== 0; R++)
            A = A.redSqr();
          r6(R < _);
          var I = this.pow(d2, new f(1).iushln(_ - R - 1));
          w = w.redMul(I), d2 = I.redSqr(), g2 = g2.redMul(d2), _ = R;
        }
        return w;
      }, P.prototype.invm = function(i3) {
        var a4 = i3._invmp(this.m);
        return a4.negative !== 0 ? (a4.negative = 0, this.imod(a4).redNeg()) : this.imod(a4);
      }, P.prototype.pow = function(i3, a4) {
        if (a4.isZero())
          return new f(1).toRed(this);
        if (a4.cmpn(1) === 0)
          return i3.clone();
        var h2 = 4, s5 = new Array(1 << h2);
        s5[0] = new f(1).toRed(this), s5[1] = i3;
        for (var u2 = 2;u2 < s5.length; u2++)
          s5[u2] = this.mul(s5[u2 - 1], i3);
        var c = s5[0], b3 = 0, l = 0, n2 = a4.bitLength() % 26;
        for (n2 === 0 && (n2 = 26), u2 = a4.length - 1;u2 >= 0; u2--) {
          for (var d2 = a4.words[u2], w = n2 - 1;w >= 0; w--) {
            var g2 = d2 >> w & 1;
            if (c !== s5[0] && (c = this.sqr(c)), g2 === 0 && b3 === 0) {
              l = 0;
              continue;
            }
            b3 <<= 1, b3 |= g2, l++, !(l !== h2 && (u2 !== 0 || w !== 0)) && (c = this.mul(c, s5[b3]), l = 0, b3 = 0);
          }
          n2 = 26;
        }
        return c;
      }, P.prototype.convertTo = function(i3) {
        var a4 = i3.umod(this.m);
        return a4 === i3 ? a4.clone() : a4;
      }, P.prototype.convertFrom = function(i3) {
        var a4 = i3.clone();
        return a4.red = null, a4;
      }, f.mont = function(i3) {
        return new Se(i3);
      };
      function Se(v) {
        P.call(this, v), this.shift = this.m.bitLength(), this.shift % 26 !== 0 && (this.shift += 26 - this.shift % 26), this.r = new f(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv);
      }
      o2(Se, P), Se.prototype.convertTo = function(i3) {
        return this.imod(i3.ushln(this.shift));
      }, Se.prototype.convertFrom = function(i3) {
        var a4 = this.imod(i3.mul(this.rinv));
        return a4.red = null, a4;
      }, Se.prototype.imul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return i3.words[0] = 0, i3.length = 1, i3;
        var h2 = i3.imul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.mul = function(i3, a4) {
        if (i3.isZero() || a4.isZero())
          return new f(0)._forceRed(this);
        var h2 = i3.mul(a4), s5 = h2.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m), u2 = h2.isub(s5).iushrn(this.shift), c = u2;
        return u2.cmp(this.m) >= 0 ? c = u2.isub(this.m) : u2.cmpn(0) < 0 && (c = u2.iadd(this.m)), c._forceRed(this);
      }, Se.prototype.invm = function(i3) {
        var a4 = this.imod(i3._invmp(this.m).mul(this.r2));
        return a4._forceRed(this);
      };
    })(typeof Sd > "u" || Sd, F3);
  });
  Ed = T((xL, z3) => {
    var U3 = w0(), wq = Te().Buffer;
    function Mq(t6, e6) {
      return wq.from(t6.toRed(U3.mont(e6.modulus)).redPow(new U3(e6.publicExponent)).fromRed().toArray());
    }
    z3.exports = Mq;
  });
  j3 = T((SL, K3) => {
    var _q = Ha(), Ad = on(), xq = bf(), H3 = _d(), W3 = xd(), Rd = w0(), Sq = Ed(), Eq = Ks(), Kr = Te().Buffer;
    K3.exports = function(e6, r6, o2) {
      var f;
      e6.padding ? f = e6.padding : o2 ? f = 1 : f = 4;
      var p2 = _q(e6), m2;
      if (f === 4)
        m2 = Aq(p2, r6);
      else if (f === 1)
        m2 = Rq(p2, r6, o2);
      else if (f === 3) {
        if (m2 = new Rd(r6), m2.cmp(p2.modulus) >= 0)
          throw new Error("data too long for modulus");
      } else
        throw new Error("unknown padding");
      return o2 ? Eq(m2, p2) : Sq(m2, p2);
    };
    function Aq(t6, e6) {
      var r6 = t6.modulus.byteLength(), o2 = e6.length, f = xq("sha1").update(Kr.alloc(0)).digest(), p2 = f.length, m2 = 2 * p2;
      if (o2 > r6 - m2 - 2)
        throw new Error("message too long");
      var y3 = Kr.alloc(r6 - o2 - m2 - 2), M = r6 - p2 - 1, x = Ad(p2), S = W3(Kr.concat([f, y3, Kr.alloc(1, 1), e6], M), H3(x, M)), E = W3(x, H3(S, p2));
      return new Rd(Kr.concat([Kr.alloc(1), E, S], r6));
    }
    function Rq(t6, e6, r6) {
      var o2 = e6.length, f = t6.modulus.byteLength();
      if (o2 > f - 11)
        throw new Error("message too long");
      var p2;
      return r6 ? p2 = Kr.alloc(f - o2 - 3, 255) : p2 = Bq(f - o2 - 3), new Rd(Kr.concat([Kr.from([0, r6 ? 1 : 2]), p2, Kr.alloc(1), e6], f));
    }
    function Bq(t6) {
      for (var e6 = Kr.allocUnsafe(t6), r6 = 0, o2 = Ad(t6 * 2), f = 0, p2;r6 < t6; )
        f === o2.length && (o2 = Ad(t6 * 2), f = 0), p2 = o2[f++], p2 && (e6[r6++] = p2);
      return e6;
    }
  });
  Y3 = T((EL, G3) => {
    var qq = Ha(), Z3 = _d(), V3 = xd(), $3 = w0(), Iq = Ks(), Tq = bf(), kq = Ed(), Za = Te().Buffer;
    G3.exports = function(e6, r6, o2) {
      var f;
      e6.padding ? f = e6.padding : o2 ? f = 1 : f = 4;
      var p2 = qq(e6), m2 = p2.modulus.byteLength();
      if (r6.length > m2 || new $3(r6).cmp(p2.modulus) >= 0)
        throw new Error("decryption error");
      var y3;
      o2 ? y3 = kq(new $3(r6), p2) : y3 = Iq(r6, p2);
      var M = Za.alloc(m2 - y3.length);
      if (y3 = Za.concat([M, y3], m2), f === 4)
        return Lq(p2, y3);
      if (f === 1)
        return Nq(p2, y3, o2);
      if (f === 3)
        return y3;
      throw new Error("unknown padding");
    };
    function Lq(t6, e6) {
      var r6 = t6.modulus.byteLength(), o2 = Tq("sha1").update(Za.alloc(0)).digest(), f = o2.length;
      if (e6[0] !== 0)
        throw new Error("decryption error");
      var p2 = e6.slice(1, f + 1), m2 = e6.slice(f + 1), y3 = V3(p2, Z3(m2, f)), M = V3(m2, Z3(y3, r6 - f - 1));
      if (Dq(o2, M.slice(0, f)))
        throw new Error("decryption error");
      for (var x = f;M[x] === 0; )
        x++;
      if (M[x++] !== 1)
        throw new Error("decryption error");
      return M.slice(x);
    }
    function Nq(t6, e6, r6) {
      for (var o2 = e6.slice(0, 2), f = 2, p2 = 0;e6[f++] !== 0; )
        if (f >= e6.length) {
          p2++;
          break;
        }
      var m2 = e6.slice(2, f - 1);
      if ((o2.toString("hex") !== "0002" && !r6 || o2.toString("hex") !== "0001" && r6) && p2++, m2.length < 8 && p2++, p2)
        throw new Error("decryption error");
      return e6.slice(f);
    }
    function Dq(t6, e6) {
      t6 = Za.from(t6), e6 = Za.from(e6);
      var r6 = 0, o2 = t6.length;
      t6.length !== e6.length && (r6++, o2 = Math.min(t6.length, e6.length));
      for (var f = -1;++f < o2; )
        r6 += t6[f] ^ e6[f];
      return r6;
    }
  });
  X3 = T((Vn) => {
    Vn.publicEncrypt = j3();
    Vn.privateDecrypt = Y3();
    Vn.privateEncrypt = function(e6, r6) {
      return Vn.publicEncrypt(e6, r6, true);
    };
    Vn.publicDecrypt = function(e6, r6) {
      return Vn.privateDecrypt(e6, r6, true);
    };
  });
  ow = T((Va) => {
    function J3() {
      throw new Error(`secure random number generation not supported by this browser
use chrome, FireFox or Internet Explorer 11`);
    }
    var ew = Te(), Q3 = on(), tw = ew.Buffer, rw = ew.kMaxLength, Bd = global.crypto || global.msCrypto, iw = Math.pow(2, 32) - 1;
    function nw(t6, e6) {
      if (typeof t6 != "number" || t6 !== t6)
        throw new TypeError("offset must be a number");
      if (t6 > iw || t6 < 0)
        throw new TypeError("offset must be a uint32");
      if (t6 > rw || t6 > e6)
        throw new RangeError("offset out of range");
    }
    function fw(t6, e6, r6) {
      if (typeof t6 != "number" || t6 !== t6)
        throw new TypeError("size must be a number");
      if (t6 > iw || t6 < 0)
        throw new TypeError("size must be a uint32");
      if (t6 + e6 > r6 || t6 > rw)
        throw new RangeError("buffer too small");
    }
    Bd && Bd.getRandomValues ? (Va.randomFill = Pq, Va.randomFillSync = Cq) : (Va.randomFill = J3, Va.randomFillSync = J3);
    function Pq(t6, e6, r6, o2) {
      if (!tw.isBuffer(t6) && !(t6 instanceof global.Uint8Array))
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      if (typeof e6 == "function")
        o2 = e6, e6 = 0, r6 = t6.length;
      else if (typeof r6 == "function")
        o2 = r6, r6 = t6.length - e6;
      else if (typeof o2 != "function")
        throw new TypeError('"cb" argument must be a function');
      return nw(e6, t6.length), fw(r6, e6, t6.length), aw(t6, e6, r6, o2);
    }
    function aw(t6, e6, r6, o2) {
      if (true) {
        var f = t6.buffer, p2 = new Uint8Array(f, e6, r6);
        if (Bd.getRandomValues(p2), o2) {
          process.nextTick(function() {
            o2(null, t6);
          });
          return;
        }
        return t6;
      }
      if (o2) {
        Q3(r6, function(y3, M) {
          if (y3)
            return o2(y3);
          M.copy(t6, e6), o2(null, t6);
        });
        return;
      }
      var m2 = Q3(r6);
      return m2.copy(t6, e6), t6;
    }
    function Cq(t6, e6, r6) {
      if (typeof e6 > "u" && (e6 = 0), !tw.isBuffer(t6) && !(t6 instanceof global.Uint8Array))
        throw new TypeError('"buf" argument must be a Buffer or Uint8Array');
      return nw(e6, t6.length), r6 === undefined && (r6 = t6.length - e6), fw(r6, e6, t6.length), aw(t6, e6, r6);
    }
  });
  qd = T((ke) => {
    ke.randomBytes = ke.rng = ke.pseudoRandomBytes = ke.prng = on();
    ke.createHash = ke.Hash = bf();
    ke.createHmac = ke.Hmac = wu();
    var Oq = Eb(), Fq = Object.keys(Oq), Uq = ["sha1", "sha224", "sha256", "sha384", "sha512", "md5", "rmd160"].concat(Fq);
    ke.getHashes = function() {
      return Uq;
    };
    var sw = Iu();
    ke.pbkdf2 = sw.pbkdf2;
    ke.pbkdf2Sync = sw.pbkdf2Sync;
    var ui = Vm();
    ke.Cipher = ui.Cipher;
    ke.createCipher = ui.createCipher;
    ke.Cipheriv = ui.Cipheriv;
    ke.createCipheriv = ui.createCipheriv;
    ke.Decipher = ui.Decipher;
    ke.createDecipher = ui.createDecipher;
    ke.Decipheriv = ui.Decipheriv;
    ke.createDecipheriv = ui.createDecipheriv;
    ke.getCiphers = ui.getCiphers;
    ke.listCiphers = ui.listCiphers;
    var $a = hg();
    ke.DiffieHellmanGroup = $a.DiffieHellmanGroup;
    ke.createDiffieHellmanGroup = $a.createDiffieHellmanGroup;
    ke.getDiffieHellman = $a.getDiffieHellman;
    ke.createDiffieHellman = $a.createDiffieHellman;
    ke.DiffieHellman = $a.DiffieHellman;
    var M0 = k3();
    ke.createSign = M0.createSign;
    ke.Sign = M0.Sign;
    ke.createVerify = M0.createVerify;
    ke.Verify = M0.Verify;
    ke.createECDH = P3();
    var _0 = X3();
    ke.publicEncrypt = _0.publicEncrypt;
    ke.privateEncrypt = _0.privateEncrypt;
    ke.publicDecrypt = _0.publicDecrypt;
    ke.privateDecrypt = _0.privateDecrypt;
    var hw = ow();
    ke.randomFill = hw.randomFill;
    ke.randomFillSync = hw.randomFillSync;
    ke.createCredentials = function() {
      throw new Error(["sorry, createCredentials is not implemented yet", "we accept pull requests", "https://github.com/crypto-browserify/crypto-browserify"].join(`
`));
    };
    ke.constants = { DH_CHECK_P_NOT_SAFE_PRIME: 2, DH_CHECK_P_NOT_PRIME: 1, DH_UNABLE_TO_CHECK_GENERATOR: 4, DH_NOT_SUITABLE_GENERATOR: 8, NPN_ENABLED: 1, ALPN_ENABLED: 1, RSA_PKCS1_PADDING: 1, RSA_SSLV23_PADDING: 2, RSA_NO_PADDING: 3, RSA_PKCS1_OAEP_PADDING: 4, RSA_X931_PADDING: 5, RSA_PKCS1_PSS_PADDING: 6, POINT_CONVERSION_COMPRESSED: 2, POINT_CONVERSION_UNCOMPRESSED: 4, POINT_CONVERSION_HYBRID: 6 };
  });
  Xt = {};
  Ja(Xt, { DEFAULT_ENCODING: () => Ga, default: () => Wq, getCurves: () => dw, getRandomValues: () => uw, randomUUID: () => lw, scrypt: () => Td, scryptSync: () => Id, timingSafeEqual: () => x0, webcrypto: () => cw });
  ot(Xt, rn(qd()));
  zq = rn(qd());
  Ga = "buffer";
  uw = (t6) => crypto.getRandomValues(t6);
  lw = () => crypto.randomUUID();
  Hq = ["p192", "p224", "p256", "p384", "p521", "curve25519", "ed25519", "secp256k1", "secp224r1", "prime256v1", "prime192v1", "ed25519", "secp384r1", "secp521r1"];
  x0 = ("timingSafeEqual" in crypto) ? (t6, e6) => {
    let { byteLength: r6 } = t6, { byteLength: o2 } = e6;
    if (typeof r6 != "number" || typeof o2 != "number")
      throw new TypeError("Input must be an array buffer view");
    if (r6 !== o2)
      throw new RangeError("Input buffers must have the same length");
    return crypto.timingSafeEqual(t6, e6);
  } : undefined;
  Id = ("scryptSync" in crypto) ? (t6, e6, r6, o2) => {
    let f = crypto.scryptSync(t6, e6, r6, o2);
    return Ga !== "buffer" ? new Buffer(f).toString(Ga) : new Buffer(f);
  } : undefined;
  Td = ("scryptSync" in crypto) ? function(t6, e6, r6, o2, f) {
    if (typeof o2 == "function" && (f = o2, o2 = undefined), typeof f != "function") {
      var p2 = new TypeError("callback must be a function");
      throw p2.code = "ERR_INVALID_CALLBACK", p2;
    }
    try {
      let m2 = crypto.scryptSync(t6, e6, r6, o2);
      process.nextTick(f, null, Ga !== "buffer" ? new Buffer(m2).toString(Ga) : new Buffer(m2));
    } catch (m2) {
      throw m2;
    }
  } : undefined;
  x0 && (Object.defineProperty(x0, "name", { value: "::bunternal::" }), Object.defineProperty(Td, "name", { value: "::bunternal::" }), Object.defineProperty(Id, "name", { value: "::bunternal::" }));
  cw = crypto;
  Wq = { ...zq, getRandomValues: uw, randomUUID: lw, timingSafeEqual: x0, scryptSync: Id, scrypt: Td, webcrypto: cw, getCurves: dw };
  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <https://feross.org>
   * @license  MIT
   */
  /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
  /*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
});

// node_modules/@prisma/client/runtime/index-browser.js
var require_index_browser = __commonJS((exports, module) => {
  var Me = function(...e6) {
    return (n2) => n2;
  };
  var me = function(e6, n2) {
    Object.defineProperty(e6, "name", { value: n2, configurable: true });
  };
  var Pe = function(e6) {
    return new Proxy(e6, { get(n2, i3) {
      if (i3 in n2)
        return n2[i3];
      if (!Ke.has(i3))
        throw new TypeError("Invalid enum value: ".concat(String(i3)));
    } });
  };
  var O = function(e6) {
    var n2, i3, r6, t6 = e6.length - 1, s5 = "", o2 = e6[0];
    if (t6 > 0) {
      for (s5 += o2, n2 = 1;n2 < t6; n2++)
        r6 = e6[n2] + "", i3 = m2 - r6.length, i3 && (s5 += U(i3)), s5 += r6;
      o2 = e6[n2], r6 = o2 + "", i3 = m2 - r6.length, i3 && (s5 += U(i3));
    } else if (o2 === 0)
      return "0";
    for (;o2 % 10 === 0; )
      o2 /= 10;
    return s5 + o2;
  };
  var q2 = function(e6, n2, i3) {
    if (e6 !== ~~e6 || e6 < n2 || e6 > i3)
      throw Error($2 + e6);
  };
  var Q = function(e6, n2, i3, r6) {
    var t6, s5, o2, u2;
    for (s5 = e6[0];s5 >= 10; s5 /= 10)
      --n2;
    return --n2 < 0 ? (n2 += m2, t6 = 0) : (t6 = Math.ceil((n2 + 1) / m2), n2 %= m2), s5 = M(10, m2 - n2), u2 = e6[t6] % s5 | 0, r6 == null ? n2 < 3 ? (n2 == 0 ? u2 = u2 / 100 | 0 : n2 == 1 && (u2 = u2 / 10 | 0), o2 = i3 < 4 && u2 == 99999 || i3 > 3 && u2 == 49999 || u2 == 50000 || u2 == 0) : o2 = (i3 < 4 && u2 + 1 == s5 || i3 > 3 && u2 + 1 == s5 / 2) && (e6[t6 + 1] / s5 / 100 | 0) == M(10, n2 - 2) - 1 || (u2 == s5 / 2 || u2 == 0) && (e6[t6 + 1] / s5 / 100 | 0) == 0 : n2 < 4 ? (n2 == 0 ? u2 = u2 / 1000 | 0 : n2 == 1 ? u2 = u2 / 100 | 0 : n2 == 2 && (u2 = u2 / 10 | 0), o2 = (r6 || i3 < 4) && u2 == 9999 || !r6 && i3 > 3 && u2 == 4999) : o2 = ((r6 || i3 < 4) && u2 + 1 == s5 || !r6 && i3 > 3 && u2 + 1 == s5 / 2) && (e6[t6 + 1] / s5 / 1000 | 0) == M(10, n2 - 3) - 1, o2;
  };
  var ie = function(e6, n2, i3) {
    for (var r6, t6 = [0], s5, o2 = 0, u2 = e6.length;o2 < u2; ) {
      for (s5 = t6.length;s5--; )
        t6[s5] *= n2;
      for (t6[0] += we.indexOf(e6.charAt(o2++)), r6 = 0;r6 < t6.length; r6++)
        t6[r6] > i3 - 1 && (t6[r6 + 1] === undefined && (t6[r6 + 1] = 0), t6[r6 + 1] += t6[r6] / i3 | 0, t6[r6] %= i3);
    }
    return t6.reverse();
  };
  var en = function(e6, n2) {
    var i3, r6, t6;
    if (n2.isZero())
      return n2;
    r6 = n2.d.length, r6 < 32 ? (i3 = Math.ceil(r6 / 3), t6 = (1 / fe(4, i3)).toString()) : (i3 = 16, t6 = "2.3283064365386962890625e-10"), e6.precision += i3, n2 = J(e6, 1, n2.times(t6), new e6(1));
    for (var s5 = i3;s5--; ) {
      var o2 = n2.times(n2);
      n2 = o2.times(o2).minus(o2).times(8).plus(1);
    }
    return e6.precision -= i3, n2;
  };
  var p2 = function(e6, n2, i3, r6) {
    var t6, s5, o2, u2, l, f, c, a4, h2, g2 = e6.constructor;
    e:
      if (n2 != null) {
        if (a4 = e6.d, !a4)
          return e6;
        for (t6 = 1, u2 = a4[0];u2 >= 10; u2 /= 10)
          t6++;
        if (s5 = n2 - t6, s5 < 0)
          s5 += m2, o2 = n2, c = a4[h2 = 0], l = c / M(10, t6 - o2 - 1) % 10 | 0;
        else if (h2 = Math.ceil((s5 + 1) / m2), u2 = a4.length, h2 >= u2)
          if (r6) {
            for (;u2++ <= h2; )
              a4.push(0);
            c = l = 0, t6 = 1, s5 %= m2, o2 = s5 - m2 + 1;
          } else
            break e;
        else {
          for (c = u2 = a4[h2], t6 = 1;u2 >= 10; u2 /= 10)
            t6++;
          s5 %= m2, o2 = s5 - m2 + t6, l = o2 < 0 ? 0 : c / M(10, t6 - o2 - 1) % 10 | 0;
        }
        if (r6 = r6 || n2 < 0 || a4[h2 + 1] !== undefined || (o2 < 0 ? c : c % M(10, t6 - o2 - 1)), f = i3 < 4 ? (l || r6) && (i3 == 0 || i3 == (e6.s < 0 ? 3 : 2)) : l > 5 || l == 5 && (i3 == 4 || r6 || i3 == 6 && (s5 > 0 ? o2 > 0 ? c / M(10, t6 - o2) : 0 : a4[h2 - 1]) % 10 & 1 || i3 == (e6.s < 0 ? 8 : 7)), n2 < 1 || !a4[0])
          return a4.length = 0, f ? (n2 -= e6.e + 1, a4[0] = M(10, (m2 - n2 % m2) % m2), e6.e = -n2 || 0) : a4[0] = e6.e = 0, e6;
        if (s5 == 0 ? (a4.length = h2, u2 = 1, h2--) : (a4.length = h2 + 1, u2 = M(10, m2 - s5), a4[h2] = o2 > 0 ? (c / M(10, t6 - o2) % M(10, o2) | 0) * u2 : 0), f)
          for (;; )
            if (h2 == 0) {
              for (s5 = 1, o2 = a4[0];o2 >= 10; o2 /= 10)
                s5++;
              for (o2 = a4[0] += u2, u2 = 1;o2 >= 10; o2 /= 10)
                u2++;
              s5 != u2 && (e6.e++, a4[0] == F && (a4[0] = 1));
              break;
            } else {
              if (a4[h2] += u2, a4[h2] != F)
                break;
              a4[h2--] = 0, u2 = 1;
            }
        for (s5 = a4.length;a4[--s5] === 0; )
          a4.pop();
      }
    return w && (e6.e > g2.maxE ? (e6.d = null, e6.e = NaN) : e6.e < g2.minE && (e6.e = 0, e6.d = [0])), e6;
  };
  var I = function(e6, n2, i3) {
    if (!e6.isFinite())
      return Ue(e6);
    var r6, t6 = e6.e, s5 = O(e6.d), o2 = s5.length;
    return n2 ? (i3 && (r6 = i3 - o2) > 0 ? s5 = s5.charAt(0) + "." + s5.slice(1) + U(r6) : o2 > 1 && (s5 = s5.charAt(0) + "." + s5.slice(1)), s5 = s5 + (e6.e < 0 ? "e" : "e+") + e6.e) : t6 < 0 ? (s5 = "0." + U(-t6 - 1) + s5, i3 && (r6 = i3 - o2) > 0 && (s5 += U(r6))) : t6 >= o2 ? (s5 += U(t6 + 1 - o2), i3 && (r6 = i3 - t6 - 1) > 0 && (s5 = s5 + "." + U(r6))) : ((r6 = t6 + 1) < o2 && (s5 = s5.slice(0, r6) + "." + s5.slice(r6)), i3 && (r6 = i3 - o2) > 0 && (t6 + 1 === o2 && (s5 += "."), s5 += U(r6))), s5;
  };
  var ue = function(e6, n2) {
    var i3 = e6[0];
    for (n2 *= m2;i3 >= 10; i3 /= 10)
      n2++;
    return n2;
  };
  var se = function(e6, n2, i3) {
    if (n2 > ye)
      throw w = true, i3 && (e6.precision = i3), Error(Te2);
    return p2(new e6(re), n2, 1, true);
  };
  var R = function(e6, n2, i3) {
    if (n2 > ve)
      throw Error(Te2);
    return p2(new e6(te), n2, i3, true);
  };
  var Ie2 = function(e6) {
    var n2 = e6.length - 1, i3 = n2 * m2 + 1;
    if (n2 = e6[n2], n2) {
      for (;n2 % 10 == 0; n2 /= 10)
        i3--;
      for (n2 = e6[0];n2 >= 10; n2 /= 10)
        i3++;
    }
    return i3;
  };
  var U = function(e6) {
    for (var n2 = "";e6--; )
      n2 += "0";
    return n2;
  };
  var De = function(e6, n2, i3, r6) {
    var t6, s5 = new e6(1), o2 = Math.ceil(r6 / m2 + 4);
    for (w = false;; ) {
      if (i3 % 2 && (s5 = s5.times(n2), Ae(s5.d, o2) && (t6 = true)), i3 = A(i3 / 2), i3 === 0) {
        i3 = s5.d.length - 1, t6 && s5.d[i3] === 0 && ++s5.d[i3];
        break;
      }
      n2 = n2.times(n2), Ae(n2.d, o2);
    }
    return w = true, s5;
  };
  var be = function(e6) {
    return e6.d[e6.d.length - 1] & 1;
  };
  var Ze = function(e6, n2, i3) {
    for (var r6, t6 = new e6(n2[0]), s5 = 0;++s5 < n2.length; )
      if (r6 = new e6(n2[s5]), r6.s)
        t6[i3](r6) && (t6 = r6);
      else {
        t6 = r6;
        break;
      }
    return t6;
  };
  var Ee = function(e6, n2) {
    var i3, r6, t6, s5, o2, u2, l, f = 0, c = 0, a4 = 0, h2 = e6.constructor, g2 = h2.rounding, v = h2.precision;
    if (!e6.d || !e6.d[0] || e6.e > 17)
      return new h2(e6.d ? e6.d[0] ? e6.s < 0 ? 0 : 1 / 0 : 1 : e6.s ? e6.s < 0 ? 0 : e6 : 0 / 0);
    for (n2 == null ? (w = false, l = v) : l = n2, u2 = new h2(0.03125);e6.e > -2; )
      e6 = e6.times(u2), a4 += 5;
    for (r6 = Math.log(M(2, a4)) / Math.LN10 * 2 + 5 | 0, l += r6, i3 = s5 = o2 = new h2(1), h2.precision = l;; ) {
      if (s5 = p2(s5.times(e6), l, 1), i3 = i3.times(++c), u2 = o2.plus(S(s5, i3, l, 1)), O(u2.d).slice(0, l) === O(o2.d).slice(0, l)) {
        for (t6 = a4;t6--; )
          o2 = p2(o2.times(o2), l, 1);
        if (n2 == null)
          if (f < 3 && Q(o2.d, l - r6, g2, f))
            h2.precision = l += 10, i3 = s5 = u2 = new h2(1), c = 0, f++;
          else
            return p2(o2, h2.precision = v, g2, w = true);
        else
          return h2.precision = v, o2;
      }
      o2 = u2;
    }
  };
  var B = function(e6, n2) {
    var i3, r6, t6, s5, o2, u2, l, f, c, a4, h2, g2 = 1, v = 10, N = e6, _ = N.d, C = N.constructor, T2 = C.rounding, E = C.precision;
    if (N.s < 0 || !_ || !_[0] || !N.e && _[0] == 1 && _.length == 1)
      return new C(_ && !_[0] ? -1 / 0 : N.s != 1 ? NaN : _ ? 0 : N);
    if (n2 == null ? (w = false, c = E) : c = n2, C.precision = c += v, i3 = O(_), r6 = i3.charAt(0), Math.abs(s5 = N.e) < 1500000000000000) {
      for (;r6 < 7 && r6 != 1 || r6 == 1 && i3.charAt(1) > 3; )
        N = N.times(e6), i3 = O(N.d), r6 = i3.charAt(0), g2++;
      s5 = N.e, r6 > 1 ? (N = new C("0." + i3), s5++) : N = new C(r6 + "." + i3.slice(1));
    } else
      return f = se(C, c + 2, E).times(s5 + ""), N = B(new C(r6 + "." + i3.slice(1)), c - v).plus(f), C.precision = E, n2 == null ? p2(N, E, T2, w = true) : N;
    for (a4 = N, l = o2 = N = S(N.minus(1), N.plus(1), c, 1), h2 = p2(N.times(N), c, 1), t6 = 3;; ) {
      if (o2 = p2(o2.times(h2), c, 1), f = l.plus(S(o2, new C(t6), c, 1)), O(f.d).slice(0, c) === O(l.d).slice(0, c))
        if (l = l.times(2), s5 !== 0 && (l = l.plus(se(C, c + 2, E).times(s5 + ""))), l = S(l, new C(g2), c, 1), n2 == null)
          if (Q(l.d, c - v, T2, u2))
            C.precision = c += v, f = o2 = N = S(a4.minus(1), a4.plus(1), c, 1), h2 = p2(N.times(N), c, 1), t6 = u2 = 1;
          else
            return p2(l, C.precision = E, T2, w = true);
        else
          return C.precision = E, l;
      l = f, t6 += 2;
    }
  };
  var Ue = function(e6) {
    return String(e6.s * e6.s / 0);
  };
  var Se = function(e6, n2) {
    var i3, r6, t6;
    for ((i3 = n2.indexOf(".")) > -1 && (n2 = n2.replace(".", "")), (r6 = n2.search(/e/i)) > 0 ? (i3 < 0 && (i3 = r6), i3 += +n2.slice(r6 + 1), n2 = n2.substring(0, r6)) : i3 < 0 && (i3 = n2.length), r6 = 0;n2.charCodeAt(r6) === 48; r6++)
      ;
    for (t6 = n2.length;n2.charCodeAt(t6 - 1) === 48; --t6)
      ;
    if (n2 = n2.slice(r6, t6), n2) {
      if (t6 -= r6, e6.e = i3 = i3 - r6 - 1, e6.d = [], r6 = (i3 + 1) % m2, i3 < 0 && (r6 += m2), r6 < t6) {
        for (r6 && e6.d.push(+n2.slice(0, r6)), t6 -= m2;r6 < t6; )
          e6.d.push(+n2.slice(r6, r6 += m2));
        n2 = n2.slice(r6), r6 = m2 - n2.length;
      } else
        r6 -= t6;
      for (;r6--; )
        n2 += "0";
      e6.d.push(+n2), w && (e6.e > e6.constructor.maxE ? (e6.d = null, e6.e = NaN) : e6.e < e6.constructor.minE && (e6.e = 0, e6.d = [0]));
    } else
      e6.e = 0, e6.d = [0];
    return e6;
  };
  var nn = function(e6, n2) {
    var i3, r6, t6, s5, o2, u2, l, f, c;
    if (n2.indexOf("_") > -1) {
      if (n2 = n2.replace(/(\d)_(?=\d)/g, "$1"), Fe.test(n2))
        return Se(e6, n2);
    } else if (n2 === "Infinity" || n2 === "NaN")
      return +n2 || (e6.s = NaN), e6.e = NaN, e6.d = null, e6;
    if (Ye.test(n2))
      i3 = 16, n2 = n2.toLowerCase();
    else if (Qe.test(n2))
      i3 = 2;
    else if (xe.test(n2))
      i3 = 8;
    else
      throw Error($2 + n2);
    for (s5 = n2.search(/p/i), s5 > 0 ? (l = +n2.slice(s5 + 1), n2 = n2.substring(2, s5)) : n2 = n2.slice(2), s5 = n2.indexOf("."), o2 = s5 >= 0, r6 = e6.constructor, o2 && (n2 = n2.replace(".", ""), u2 = n2.length, s5 = u2 - s5, t6 = De(r6, new r6(i3), s5, s5 * 2)), f = ie(n2, i3, F), c = f.length - 1, s5 = c;f[s5] === 0; --s5)
      f.pop();
    return s5 < 0 ? new r6(e6.s * 0) : (e6.e = ue(f, c), e6.d = f, w = false, o2 && (e6 = S(e6, t6, u2 * 4)), l && (e6 = e6.times(Math.abs(l) < 54 ? M(2, l) : Y.pow(2, l))), w = true, e6);
  };
  var rn2 = function(e6, n2) {
    var i3, r6 = n2.d.length;
    if (r6 < 3)
      return n2.isZero() ? n2 : J(e6, 2, n2, n2);
    i3 = 1.4 * Math.sqrt(r6), i3 = i3 > 16 ? 16 : i3 | 0, n2 = n2.times(1 / fe(5, i3)), n2 = J(e6, 2, n2, n2);
    for (var t6, s5 = new e6(5), o2 = new e6(16), u2 = new e6(20);i3--; )
      t6 = n2.times(n2), n2 = n2.times(s5.plus(t6.times(o2.times(t6).minus(u2))));
    return n2;
  };
  var J = function(e6, n2, i3, r6, t6) {
    var s5, o2, u2, l, f = 1, c = e6.precision, a4 = Math.ceil(c / m2);
    for (w = false, l = i3.times(i3), u2 = new e6(r6);; ) {
      if (o2 = S(u2.times(l), new e6(n2++ * n2++), c, 1), u2 = t6 ? r6.plus(o2) : r6.minus(o2), r6 = S(o2.times(l), new e6(n2++ * n2++), c, 1), o2 = u2.plus(r6), o2.d[a4] !== undefined) {
        for (s5 = a4;o2.d[s5] === u2.d[s5] && s5--; )
          ;
        if (s5 == -1)
          break;
      }
      s5 = u2, u2 = r6, r6 = o2, o2 = s5, f++;
    }
    return w = true, o2.d.length = a4 + 1, o2;
  };
  var fe = function(e6, n2) {
    for (var i3 = e6;--n2; )
      i3 *= e6;
    return i3;
  };
  var Be = function(e6, n2) {
    var i3, r6 = n2.s < 0, t6 = R(e6, e6.precision, 1), s5 = t6.times(0.5);
    if (n2 = n2.abs(), n2.lte(s5))
      return Z = r6 ? 4 : 1, n2;
    if (i3 = n2.divToInt(t6), i3.isZero())
      Z = r6 ? 3 : 2;
    else {
      if (n2 = n2.minus(i3.times(t6)), n2.lte(s5))
        return Z = be(i3) ? r6 ? 2 : 3 : r6 ? 4 : 1, n2;
      Z = be(i3) ? r6 ? 1 : 4 : r6 ? 3 : 2;
    }
    return n2.minus(t6).abs();
  };
  var ke = function(e6, n2, i3, r6) {
    var t6, s5, o2, u2, l, f, c, a4, h2, g2 = e6.constructor, v = i3 !== undefined;
    if (v ? (q2(i3, 1, V), r6 === undefined ? r6 = g2.rounding : q2(r6, 0, 8)) : (i3 = g2.precision, r6 = g2.rounding), !e6.isFinite())
      c = Ue(e6);
    else {
      for (c = I(e6), o2 = c.indexOf("."), v ? (t6 = 2, n2 == 16 ? i3 = i3 * 4 - 3 : n2 == 8 && (i3 = i3 * 3 - 2)) : t6 = n2, o2 >= 0 && (c = c.replace(".", ""), h2 = new g2(1), h2.e = c.length - o2, h2.d = ie(I(h2), 10, t6), h2.e = h2.d.length), a4 = ie(c, 10, t6), s5 = l = a4.length;a4[--l] == 0; )
        a4.pop();
      if (!a4[0])
        c = v ? "0p+0" : "0";
      else {
        if (o2 < 0 ? s5-- : (e6 = new g2(e6), e6.d = a4, e6.e = s5, e6 = S(e6, h2, i3, r6, 0, t6), a4 = e6.d, s5 = e6.e, f = qe), o2 = a4[i3], u2 = t6 / 2, f = f || a4[i3 + 1] !== undefined, f = r6 < 4 ? (o2 !== undefined || f) && (r6 === 0 || r6 === (e6.s < 0 ? 3 : 2)) : o2 > u2 || o2 === u2 && (r6 === 4 || f || r6 === 6 && a4[i3 - 1] & 1 || r6 === (e6.s < 0 ? 8 : 7)), a4.length = i3, f)
          for (;++a4[--i3] > t6 - 1; )
            a4[i3] = 0, i3 || (++s5, a4.unshift(1));
        for (l = a4.length;!a4[l - 1]; --l)
          ;
        for (o2 = 0, c = "";o2 < l; o2++)
          c += we.charAt(a4[o2]);
        if (v) {
          if (l > 1)
            if (n2 == 16 || n2 == 8) {
              for (o2 = n2 == 16 ? 4 : 3, --l;l % o2; l++)
                c += "0";
              for (a4 = ie(c, t6, n2), l = a4.length;!a4[l - 1]; --l)
                ;
              for (o2 = 1, c = "1.";o2 < l; o2++)
                c += we.charAt(a4[o2]);
            } else
              c = c.charAt(0) + "." + c.slice(1);
          c = c + (s5 < 0 ? "p" : "p+") + s5;
        } else if (s5 < 0) {
          for (;++s5; )
            c = "0" + c;
          c = "0." + c;
        } else if (++s5 > l)
          for (s5 -= l;s5--; )
            c += "0";
        else
          s5 < l && (c = c.slice(0, s5) + "." + c.slice(s5));
      }
      c = (n2 == 16 ? "0x" : n2 == 2 ? "0b" : n2 == 8 ? "0o" : "") + c;
    }
    return e6.s < 0 ? "-" + c : c;
  };
  var Ae = function(e6, n2) {
    if (e6.length > n2)
      return e6.length = n2, true;
  };
  var tn = function(e6) {
    return new this(e6).abs();
  };
  var sn2 = function(e6) {
    return new this(e6).acos();
  };
  var on2 = function(e6) {
    return new this(e6).acosh();
  };
  var un = function(e6, n2) {
    return new this(e6).plus(n2);
  };
  var fn = function(e6) {
    return new this(e6).asin();
  };
  var ln = function(e6) {
    return new this(e6).asinh();
  };
  var cn = function(e6) {
    return new this(e6).atan();
  };
  var an = function(e6) {
    return new this(e6).atanh();
  };
  var hn2 = function(e6, n2) {
    e6 = new this(e6), n2 = new this(n2);
    var i3, r6 = this.precision, t6 = this.rounding, s5 = r6 + 4;
    return !e6.s || !n2.s ? i3 = new this(NaN) : !e6.d && !n2.d ? (i3 = R(this, s5, 1).times(n2.s > 0 ? 0.25 : 0.75), i3.s = e6.s) : !n2.d || e6.isZero() ? (i3 = n2.s < 0 ? R(this, r6, t6) : new this(0), i3.s = e6.s) : !e6.d || n2.isZero() ? (i3 = R(this, s5, 1).times(0.5), i3.s = e6.s) : n2.s < 0 ? (this.precision = s5, this.rounding = 1, i3 = this.atan(S(e6, n2, s5, 1)), n2 = R(this, s5, 1), this.precision = r6, this.rounding = t6, i3 = e6.s < 0 ? i3.minus(n2) : i3.plus(n2)) : i3 = this.atan(S(e6, n2, s5, 1)), i3;
  };
  var dn = function(e6) {
    return new this(e6).cbrt();
  };
  var pn2 = function(e6) {
    return p2(e6 = new this(e6), e6.e + 1, 2);
  };
  var gn = function(e6, n2, i3) {
    return new this(e6).clamp(n2, i3);
  };
  var mn = function(e6) {
    if (!e6 || typeof e6 != "object")
      throw Error(oe + "Object expected");
    var n2, i3, r6, t6 = e6.defaults === true, s5 = ["precision", 1, V, "rounding", 0, 8, "toExpNeg", -H, 0, "toExpPos", 0, H, "maxE", 0, H, "minE", -H, 0, "modulo", 0, 9];
    for (n2 = 0;n2 < s5.length; n2 += 3)
      if (i3 = s5[n2], t6 && (this[i3] = Ne[i3]), (r6 = e6[i3]) !== undefined)
        if (A(r6) === r6 && r6 >= s5[n2 + 1] && r6 <= s5[n2 + 2])
          this[i3] = r6;
        else
          throw Error($2 + i3 + ": " + r6);
    if (i3 = "crypto", t6 && (this[i3] = Ne[i3]), (r6 = e6[i3]) !== undefined)
      if (r6 === true || r6 === false || r6 === 0 || r6 === 1)
        if (r6)
          if (typeof crypto < "u" && crypto && (crypto.getRandomValues || crypto.randomBytes))
            this[i3] = true;
          else
            throw Error(Le);
        else
          this[i3] = false;
      else
        throw Error($2 + i3 + ": " + r6);
    return this;
  };
  var wn = function(e6) {
    return new this(e6).cos();
  };
  var Nn = function(e6) {
    return new this(e6).cosh();
  };
  var $e = function(e6) {
    var n2, i3, r6;
    function t6(s5) {
      var o2, u2, l, f = this;
      if (!(f instanceof t6))
        return new t6(s5);
      if (f.constructor = t6, _e(s5)) {
        f.s = s5.s, w ? !s5.d || s5.e > t6.maxE ? (f.e = NaN, f.d = null) : s5.e < t6.minE ? (f.e = 0, f.d = [0]) : (f.e = s5.e, f.d = s5.d.slice()) : (f.e = s5.e, f.d = s5.d ? s5.d.slice() : s5.d);
        return;
      }
      if (l = typeof s5, l === "number") {
        if (s5 === 0) {
          f.s = 1 / s5 < 0 ? -1 : 1, f.e = 0, f.d = [0];
          return;
        }
        if (s5 < 0 ? (s5 = -s5, f.s = -1) : f.s = 1, s5 === ~~s5 && s5 < 1e7) {
          for (o2 = 0, u2 = s5;u2 >= 10; u2 /= 10)
            o2++;
          w ? o2 > t6.maxE ? (f.e = NaN, f.d = null) : o2 < t6.minE ? (f.e = 0, f.d = [0]) : (f.e = o2, f.d = [s5]) : (f.e = o2, f.d = [s5]);
          return;
        } else if (s5 * 0 !== 0) {
          s5 || (f.s = NaN), f.e = NaN, f.d = null;
          return;
        }
        return Se(f, s5.toString());
      } else if (l !== "string")
        throw Error($2 + s5);
      return (u2 = s5.charCodeAt(0)) === 45 ? (s5 = s5.slice(1), f.s = -1) : (u2 === 43 && (s5 = s5.slice(1)), f.s = 1), Fe.test(s5) ? Se(f, s5) : nn(f, s5);
    }
    if (t6.prototype = d2, t6.ROUND_UP = 0, t6.ROUND_DOWN = 1, t6.ROUND_CEIL = 2, t6.ROUND_FLOOR = 3, t6.ROUND_HALF_UP = 4, t6.ROUND_HALF_DOWN = 5, t6.ROUND_HALF_EVEN = 6, t6.ROUND_HALF_CEIL = 7, t6.ROUND_HALF_FLOOR = 8, t6.EUCLID = 9, t6.config = t6.set = mn, t6.clone = $e, t6.isDecimal = _e, t6.abs = tn, t6.acos = sn2, t6.acosh = on2, t6.add = un, t6.asin = fn, t6.asinh = ln, t6.atan = cn, t6.atanh = an, t6.atan2 = hn2, t6.cbrt = dn, t6.ceil = pn2, t6.clamp = gn, t6.cos = wn, t6.cosh = Nn, t6.div = vn, t6.exp = En, t6.floor = Sn, t6.hypot = kn2, t6.ln = Cn, t6.log = Mn, t6.log10 = Pn, t6.log2 = On, t6.max = bn, t6.min = An, t6.mod = _n, t6.mul = qn, t6.pow = Tn, t6.random = Ln2, t6.round = Rn, t6.sign = Fn, t6.sin = In, t6.sinh = Dn, t6.sqrt = Zn, t6.sub = Un, t6.sum = Bn, t6.tan = $n, t6.tanh = Vn, t6.trunc = Hn, e6 === undefined && (e6 = {}), e6 && e6.defaults !== true)
      for (r6 = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"], n2 = 0;n2 < r6.length; )
        e6.hasOwnProperty(i3 = r6[n2++]) || (e6[i3] = this[i3]);
    return t6.config(e6), t6;
  };
  var vn = function(e6, n2) {
    return new this(e6).div(n2);
  };
  var En = function(e6) {
    return new this(e6).exp();
  };
  var Sn = function(e6) {
    return p2(e6 = new this(e6), e6.e + 1, 3);
  };
  var kn2 = function() {
    var e6, n2, i3 = new this(0);
    for (w = false, e6 = 0;e6 < arguments.length; )
      if (n2 = new this(arguments[e6++]), n2.d)
        i3.d && (i3 = i3.plus(n2.times(n2)));
      else {
        if (n2.s)
          return w = true, new this(1 / 0);
        i3 = n2;
      }
    return w = true, i3.sqrt();
  };
  var _e = function(e6) {
    return e6 instanceof Y || e6 && e6.toStringTag === Re || false;
  };
  var Cn = function(e6) {
    return new this(e6).ln();
  };
  var Mn = function(e6, n2) {
    return new this(e6).log(n2);
  };
  var On = function(e6) {
    return new this(e6).log(2);
  };
  var Pn = function(e6) {
    return new this(e6).log(10);
  };
  var bn = function() {
    return Ze(this, arguments, "lt");
  };
  var An = function() {
    return Ze(this, arguments, "gt");
  };
  var _n = function(e6, n2) {
    return new this(e6).mod(n2);
  };
  var qn = function(e6, n2) {
    return new this(e6).mul(n2);
  };
  var Tn = function(e6, n2) {
    return new this(e6).pow(n2);
  };
  var Ln2 = function(e6) {
    var n2, i3, r6, t6, s5 = 0, o2 = new this(1), u2 = [];
    if (e6 === undefined ? e6 = this.precision : q2(e6, 1, V), r6 = Math.ceil(e6 / m2), this.crypto)
      if (crypto.getRandomValues)
        for (n2 = crypto.getRandomValues(new Uint32Array(r6));s5 < r6; )
          t6 = n2[s5], t6 >= 4290000000 ? n2[s5] = crypto.getRandomValues(new Uint32Array(1))[0] : u2[s5++] = t6 % 1e7;
      else if (crypto.randomBytes) {
        for (n2 = crypto.randomBytes(r6 *= 4);s5 < r6; )
          t6 = n2[s5] + (n2[s5 + 1] << 8) + (n2[s5 + 2] << 16) + ((n2[s5 + 3] & 127) << 24), t6 >= 2140000000 ? crypto.randomBytes(4).copy(n2, s5) : (u2.push(t6 % 1e7), s5 += 4);
        s5 = r6 / 4;
      } else
        throw Error(Le);
    else
      for (;s5 < r6; )
        u2[s5++] = Math.random() * 1e7 | 0;
    for (r6 = u2[--s5], e6 %= m2, r6 && e6 && (t6 = M(10, m2 - e6), u2[s5] = (r6 / t6 | 0) * t6);u2[s5] === 0; s5--)
      u2.pop();
    if (s5 < 0)
      i3 = 0, u2 = [0];
    else {
      for (i3 = -1;u2[0] === 0; i3 -= m2)
        u2.shift();
      for (r6 = 1, t6 = u2[0];t6 >= 10; t6 /= 10)
        r6++;
      r6 < m2 && (i3 -= m2 - r6);
    }
    return o2.e = i3, o2.d = u2, o2;
  };
  var Rn = function(e6) {
    return p2(e6 = new this(e6), e6.e + 1, this.rounding);
  };
  var Fn = function(e6) {
    return e6 = new this(e6), e6.d ? e6.d[0] ? e6.s : 0 * e6.s : e6.s || NaN;
  };
  var In = function(e6) {
    return new this(e6).sin();
  };
  var Dn = function(e6) {
    return new this(e6).sinh();
  };
  var Zn = function(e6) {
    return new this(e6).sqrt();
  };
  var Un = function(e6, n2) {
    return new this(e6).sub(n2);
  };
  var Bn = function() {
    var e6 = 0, n2 = arguments, i3 = new this(n2[e6]);
    for (w = false;i3.s && ++e6 < n2.length; )
      i3 = i3.plus(n2[e6]);
    return w = true, p2(i3, this.precision, this.rounding);
  };
  var $n = function(e6) {
    return new this(e6).tan();
  };
  var Vn = function(e6) {
    return new this(e6).tanh();
  };
  var Hn = function(e6) {
    return p2(e6 = new this(e6), e6.e + 1, 1);
  };
  var He = function() {
    var e6, n2, i3;
    return typeof Netlify == "object" ? "netlify" : typeof EdgeRuntime == "string" ? "edge-light" : ((e6 = globalThis.navigator) == null ? undefined : e6.userAgent) === Jn ? "workerd" : globalThis.Deno ? "deno" : globalThis.__lagon__ ? "lagon" : ((i3 = (n2 = globalThis.process) == null ? undefined : n2.release) == null ? undefined : i3.name) === Wn ? "node" : globalThis.Bun ? "bun" : globalThis.fastly ? "fastly" : "unknown";
  };
  var he = Object.defineProperty;
  var Je = Object.getOwnPropertyDescriptor;
  var We = Object.getOwnPropertyNames;
  var je = Object.prototype.hasOwnProperty;
  var Ce = (e6, n2) => {
    for (var i3 in n2)
      he(e6, i3, { get: n2[i3], enumerable: true });
  };
  var Ge = (e6, n2, i3, r6) => {
    if (n2 && typeof n2 == "object" || typeof n2 == "function")
      for (let t6 of We(n2))
        !je.call(e6, t6) && t6 !== i3 && he(e6, t6, { get: () => n2[t6], enumerable: !(r6 = Je(n2, t6)) || r6.enumerable });
    return e6;
  };
  var Xe = (e6) => Ge(he({}, "__esModule", { value: true }), e6);
  var jn = {};
  Ce(jn, { Decimal: () => Ve, Public: () => de, detectRuntime: () => He, makeStrictEnum: () => Pe, objectEnumValues: () => Oe });
  module.exports = Xe(jn);
  var de = {};
  Ce(de, { validator: () => Me });
  var ne = Symbol();
  var pe = new WeakMap;
  var ge = class {
    constructor(n2) {
      n2 === ne ? pe.set(this, "Prisma.".concat(this._getName())) : pe.set(this, "new Prisma.".concat(this._getNamespace(), ".").concat(this._getName(), "()"));
    }
    _getName() {
      return this.constructor.name;
    }
    toString() {
      return pe.get(this);
    }
  };
  var j = class extends ge {
    _getNamespace() {
      return "NullTypes";
    }
  };
  var G = class extends j {
  };
  me(G, "DbNull");
  var X = class extends j {
  };
  me(X, "JsonNull");
  var K = class extends j {
  };
  me(K, "AnyNull");
  var Oe = { classes: { DbNull: G, JsonNull: X, AnyNull: K }, instances: { DbNull: new G(ne), JsonNull: new X(ne), AnyNull: new K(ne) } };
  var Ke = new Set(["toJSON", "$$typeof", "asymmetricMatch", Symbol.iterator, Symbol.toStringTag, Symbol.isConcatSpreadable, Symbol.toPrimitive]);
  var H = 9000000000000000;
  var V = 1e9;
  var we = "0123456789abcdef";
  var re = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058";
  var te = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789";
  var Ne = { precision: 20, rounding: 4, modulo: 1, toExpNeg: -7, toExpPos: 21, minE: -H, maxE: H, crypto: false };
  var qe;
  var Z;
  var w = true;
  var oe = "[DecimalError] ";
  var $2 = oe + "Invalid argument: ";
  var Te2 = oe + "Precision limit exceeded";
  var Le = oe + "crypto unavailable";
  var Re = "[object Decimal]";
  var A = Math.floor;
  var M = Math.pow;
  var Qe = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
  var Ye = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
  var xe = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
  var Fe = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
  var F = 1e7;
  var m2 = 7;
  var ze = 9007199254740991;
  var ye = re.length - 1;
  var ve = te.length - 1;
  var d2 = { toStringTag: Re };
  d2.absoluteValue = d2.abs = function() {
    var e6 = new this.constructor(this);
    return e6.s < 0 && (e6.s = 1), p2(e6);
  };
  d2.ceil = function() {
    return p2(new this.constructor(this), this.e + 1, 2);
  };
  d2.clampedTo = d2.clamp = function(e6, n2) {
    var i3, r6 = this, t6 = r6.constructor;
    if (e6 = new t6(e6), n2 = new t6(n2), !e6.s || !n2.s)
      return new t6(NaN);
    if (e6.gt(n2))
      throw Error($2 + n2);
    return i3 = r6.cmp(e6), i3 < 0 ? e6 : r6.cmp(n2) > 0 ? n2 : new t6(r6);
  };
  d2.comparedTo = d2.cmp = function(e6) {
    var n2, i3, r6, t6, s5 = this, o2 = s5.d, u2 = (e6 = new s5.constructor(e6)).d, l = s5.s, f = e6.s;
    if (!o2 || !u2)
      return !l || !f ? NaN : l !== f ? l : o2 === u2 ? 0 : !o2 ^ l < 0 ? 1 : -1;
    if (!o2[0] || !u2[0])
      return o2[0] ? l : u2[0] ? -f : 0;
    if (l !== f)
      return l;
    if (s5.e !== e6.e)
      return s5.e > e6.e ^ l < 0 ? 1 : -1;
    for (r6 = o2.length, t6 = u2.length, n2 = 0, i3 = r6 < t6 ? r6 : t6;n2 < i3; ++n2)
      if (o2[n2] !== u2[n2])
        return o2[n2] > u2[n2] ^ l < 0 ? 1 : -1;
    return r6 === t6 ? 0 : r6 > t6 ^ l < 0 ? 1 : -1;
  };
  d2.cosine = d2.cos = function() {
    var e6, n2, i3 = this, r6 = i3.constructor;
    return i3.d ? i3.d[0] ? (e6 = r6.precision, n2 = r6.rounding, r6.precision = e6 + Math.max(i3.e, i3.sd()) + m2, r6.rounding = 1, i3 = en(r6, Be(r6, i3)), r6.precision = e6, r6.rounding = n2, p2(Z == 2 || Z == 3 ? i3.neg() : i3, e6, n2, true)) : new r6(1) : new r6(NaN);
  };
  d2.cubeRoot = d2.cbrt = function() {
    var e6, n2, i3, r6, t6, s5, o2, u2, l, f, c = this, a4 = c.constructor;
    if (!c.isFinite() || c.isZero())
      return new a4(c);
    for (w = false, s5 = c.s * M(c.s * c, 1 / 3), !s5 || Math.abs(s5) == 1 / 0 ? (i3 = O(c.d), e6 = c.e, (s5 = (e6 - i3.length + 1) % 3) && (i3 += s5 == 1 || s5 == -2 ? "0" : "00"), s5 = M(i3, 1 / 3), e6 = A((e6 + 1) / 3) - (e6 % 3 == (e6 < 0 ? -1 : 2)), s5 == 1 / 0 ? i3 = "5e" + e6 : (i3 = s5.toExponential(), i3 = i3.slice(0, i3.indexOf("e") + 1) + e6), r6 = new a4(i3), r6.s = c.s) : r6 = new a4(s5.toString()), o2 = (e6 = a4.precision) + 3;; )
      if (u2 = r6, l = u2.times(u2).times(u2), f = l.plus(c), r6 = S(f.plus(c).times(u2), f.plus(l), o2 + 2, 1), O(u2.d).slice(0, o2) === (i3 = O(r6.d)).slice(0, o2))
        if (i3 = i3.slice(o2 - 3, o2 + 1), i3 == "9999" || !t6 && i3 == "4999") {
          if (!t6 && (p2(u2, e6 + 1, 0), u2.times(u2).times(u2).eq(c))) {
            r6 = u2;
            break;
          }
          o2 += 4, t6 = 1;
        } else {
          (!+i3 || !+i3.slice(1) && i3.charAt(0) == "5") && (p2(r6, e6 + 1, 1), n2 = !r6.times(r6).times(r6).eq(c));
          break;
        }
    return w = true, p2(r6, e6, a4.rounding, n2);
  };
  d2.decimalPlaces = d2.dp = function() {
    var e6, n2 = this.d, i3 = NaN;
    if (n2) {
      if (e6 = n2.length - 1, i3 = (e6 - A(this.e / m2)) * m2, e6 = n2[e6], e6)
        for (;e6 % 10 == 0; e6 /= 10)
          i3--;
      i3 < 0 && (i3 = 0);
    }
    return i3;
  };
  d2.dividedBy = d2.div = function(e6) {
    return S(this, new this.constructor(e6));
  };
  d2.dividedToIntegerBy = d2.divToInt = function(e6) {
    var n2 = this, i3 = n2.constructor;
    return p2(S(n2, new i3(e6), 0, 1, 1), i3.precision, i3.rounding);
  };
  d2.equals = d2.eq = function(e6) {
    return this.cmp(e6) === 0;
  };
  d2.floor = function() {
    return p2(new this.constructor(this), this.e + 1, 3);
  };
  d2.greaterThan = d2.gt = function(e6) {
    return this.cmp(e6) > 0;
  };
  d2.greaterThanOrEqualTo = d2.gte = function(e6) {
    var n2 = this.cmp(e6);
    return n2 == 1 || n2 === 0;
  };
  d2.hyperbolicCosine = d2.cosh = function() {
    var e6, n2, i3, r6, t6, s5 = this, o2 = s5.constructor, u2 = new o2(1);
    if (!s5.isFinite())
      return new o2(s5.s ? 1 / 0 : NaN);
    if (s5.isZero())
      return u2;
    i3 = o2.precision, r6 = o2.rounding, o2.precision = i3 + Math.max(s5.e, s5.sd()) + 4, o2.rounding = 1, t6 = s5.d.length, t6 < 32 ? (e6 = Math.ceil(t6 / 3), n2 = (1 / fe(4, e6)).toString()) : (e6 = 16, n2 = "2.3283064365386962890625e-10"), s5 = J(o2, 1, s5.times(n2), new o2(1), true);
    for (var l, f = e6, c = new o2(8);f--; )
      l = s5.times(s5), s5 = u2.minus(l.times(c.minus(l.times(c))));
    return p2(s5, o2.precision = i3, o2.rounding = r6, true);
  };
  d2.hyperbolicSine = d2.sinh = function() {
    var e6, n2, i3, r6, t6 = this, s5 = t6.constructor;
    if (!t6.isFinite() || t6.isZero())
      return new s5(t6);
    if (n2 = s5.precision, i3 = s5.rounding, s5.precision = n2 + Math.max(t6.e, t6.sd()) + 4, s5.rounding = 1, r6 = t6.d.length, r6 < 3)
      t6 = J(s5, 2, t6, t6, true);
    else {
      e6 = 1.4 * Math.sqrt(r6), e6 = e6 > 16 ? 16 : e6 | 0, t6 = t6.times(1 / fe(5, e6)), t6 = J(s5, 2, t6, t6, true);
      for (var o2, u2 = new s5(5), l = new s5(16), f = new s5(20);e6--; )
        o2 = t6.times(t6), t6 = t6.times(u2.plus(o2.times(l.times(o2).plus(f))));
    }
    return s5.precision = n2, s5.rounding = i3, p2(t6, n2, i3, true);
  };
  d2.hyperbolicTangent = d2.tanh = function() {
    var e6, n2, i3 = this, r6 = i3.constructor;
    return i3.isFinite() ? i3.isZero() ? new r6(i3) : (e6 = r6.precision, n2 = r6.rounding, r6.precision = e6 + 7, r6.rounding = 1, S(i3.sinh(), i3.cosh(), r6.precision = e6, r6.rounding = n2)) : new r6(i3.s);
  };
  d2.inverseCosine = d2.acos = function() {
    var e6, n2 = this, i3 = n2.constructor, r6 = n2.abs().cmp(1), t6 = i3.precision, s5 = i3.rounding;
    return r6 !== -1 ? r6 === 0 ? n2.isNeg() ? R(i3, t6, s5) : new i3(0) : new i3(NaN) : n2.isZero() ? R(i3, t6 + 4, s5).times(0.5) : (i3.precision = t6 + 6, i3.rounding = 1, n2 = n2.asin(), e6 = R(i3, t6 + 4, s5).times(0.5), i3.precision = t6, i3.rounding = s5, e6.minus(n2));
  };
  d2.inverseHyperbolicCosine = d2.acosh = function() {
    var e6, n2, i3 = this, r6 = i3.constructor;
    return i3.lte(1) ? new r6(i3.eq(1) ? 0 : NaN) : i3.isFinite() ? (e6 = r6.precision, n2 = r6.rounding, r6.precision = e6 + Math.max(Math.abs(i3.e), i3.sd()) + 4, r6.rounding = 1, w = false, i3 = i3.times(i3).minus(1).sqrt().plus(i3), w = true, r6.precision = e6, r6.rounding = n2, i3.ln()) : new r6(i3);
  };
  d2.inverseHyperbolicSine = d2.asinh = function() {
    var e6, n2, i3 = this, r6 = i3.constructor;
    return !i3.isFinite() || i3.isZero() ? new r6(i3) : (e6 = r6.precision, n2 = r6.rounding, r6.precision = e6 + 2 * Math.max(Math.abs(i3.e), i3.sd()) + 6, r6.rounding = 1, w = false, i3 = i3.times(i3).plus(1).sqrt().plus(i3), w = true, r6.precision = e6, r6.rounding = n2, i3.ln());
  };
  d2.inverseHyperbolicTangent = d2.atanh = function() {
    var e6, n2, i3, r6, t6 = this, s5 = t6.constructor;
    return t6.isFinite() ? t6.e >= 0 ? new s5(t6.abs().eq(1) ? t6.s / 0 : t6.isZero() ? t6 : NaN) : (e6 = s5.precision, n2 = s5.rounding, r6 = t6.sd(), Math.max(r6, e6) < 2 * -t6.e - 1 ? p2(new s5(t6), e6, n2, true) : (s5.precision = i3 = r6 - t6.e, t6 = S(t6.plus(1), new s5(1).minus(t6), i3 + e6, 1), s5.precision = e6 + 4, s5.rounding = 1, t6 = t6.ln(), s5.precision = e6, s5.rounding = n2, t6.times(0.5))) : new s5(NaN);
  };
  d2.inverseSine = d2.asin = function() {
    var e6, n2, i3, r6, t6 = this, s5 = t6.constructor;
    return t6.isZero() ? new s5(t6) : (n2 = t6.abs().cmp(1), i3 = s5.precision, r6 = s5.rounding, n2 !== -1 ? n2 === 0 ? (e6 = R(s5, i3 + 4, r6).times(0.5), e6.s = t6.s, e6) : new s5(NaN) : (s5.precision = i3 + 6, s5.rounding = 1, t6 = t6.div(new s5(1).minus(t6.times(t6)).sqrt().plus(1)).atan(), s5.precision = i3, s5.rounding = r6, t6.times(2)));
  };
  d2.inverseTangent = d2.atan = function() {
    var e6, n2, i3, r6, t6, s5, o2, u2, l, f = this, c = f.constructor, a4 = c.precision, h2 = c.rounding;
    if (f.isFinite()) {
      if (f.isZero())
        return new c(f);
      if (f.abs().eq(1) && a4 + 4 <= ve)
        return o2 = R(c, a4 + 4, h2).times(0.25), o2.s = f.s, o2;
    } else {
      if (!f.s)
        return new c(NaN);
      if (a4 + 4 <= ve)
        return o2 = R(c, a4 + 4, h2).times(0.5), o2.s = f.s, o2;
    }
    for (c.precision = u2 = a4 + 10, c.rounding = 1, i3 = Math.min(28, u2 / m2 + 2 | 0), e6 = i3;e6; --e6)
      f = f.div(f.times(f).plus(1).sqrt().plus(1));
    for (w = false, n2 = Math.ceil(u2 / m2), r6 = 1, l = f.times(f), o2 = new c(f), t6 = f;e6 !== -1; )
      if (t6 = t6.times(l), s5 = o2.minus(t6.div(r6 += 2)), t6 = t6.times(l), o2 = s5.plus(t6.div(r6 += 2)), o2.d[n2] !== undefined)
        for (e6 = n2;o2.d[e6] === s5.d[e6] && e6--; )
          ;
    return i3 && (o2 = o2.times(2 << i3 - 1)), w = true, p2(o2, c.precision = a4, c.rounding = h2, true);
  };
  d2.isFinite = function() {
    return !!this.d;
  };
  d2.isInteger = d2.isInt = function() {
    return !!this.d && A(this.e / m2) > this.d.length - 2;
  };
  d2.isNaN = function() {
    return !this.s;
  };
  d2.isNegative = d2.isNeg = function() {
    return this.s < 0;
  };
  d2.isPositive = d2.isPos = function() {
    return this.s > 0;
  };
  d2.isZero = function() {
    return !!this.d && this.d[0] === 0;
  };
  d2.lessThan = d2.lt = function(e6) {
    return this.cmp(e6) < 0;
  };
  d2.lessThanOrEqualTo = d2.lte = function(e6) {
    return this.cmp(e6) < 1;
  };
  d2.logarithm = d2.log = function(e6) {
    var n2, i3, r6, t6, s5, o2, u2, l, f = this, c = f.constructor, a4 = c.precision, h2 = c.rounding, g2 = 5;
    if (e6 == null)
      e6 = new c(10), n2 = true;
    else {
      if (e6 = new c(e6), i3 = e6.d, e6.s < 0 || !i3 || !i3[0] || e6.eq(1))
        return new c(NaN);
      n2 = e6.eq(10);
    }
    if (i3 = f.d, f.s < 0 || !i3 || !i3[0] || f.eq(1))
      return new c(i3 && !i3[0] ? -1 / 0 : f.s != 1 ? NaN : i3 ? 0 : 1 / 0);
    if (n2)
      if (i3.length > 1)
        s5 = true;
      else {
        for (t6 = i3[0];t6 % 10 === 0; )
          t6 /= 10;
        s5 = t6 !== 1;
      }
    if (w = false, u2 = a4 + g2, o2 = B(f, u2), r6 = n2 ? se(c, u2 + 10) : B(e6, u2), l = S(o2, r6, u2, 1), Q(l.d, t6 = a4, h2))
      do
        if (u2 += 10, o2 = B(f, u2), r6 = n2 ? se(c, u2 + 10) : B(e6, u2), l = S(o2, r6, u2, 1), !s5) {
          +O(l.d).slice(t6 + 1, t6 + 15) + 1 == 100000000000000 && (l = p2(l, a4 + 1, 0));
          break;
        }
      while (Q(l.d, t6 += 10, h2));
    return w = true, p2(l, a4, h2);
  };
  d2.minus = d2.sub = function(e6) {
    var n2, i3, r6, t6, s5, o2, u2, l, f, c, a4, h2, g2 = this, v = g2.constructor;
    if (e6 = new v(e6), !g2.d || !e6.d)
      return !g2.s || !e6.s ? e6 = new v(NaN) : g2.d ? e6.s = -e6.s : e6 = new v(e6.d || g2.s !== e6.s ? g2 : NaN), e6;
    if (g2.s != e6.s)
      return e6.s = -e6.s, g2.plus(e6);
    if (f = g2.d, h2 = e6.d, u2 = v.precision, l = v.rounding, !f[0] || !h2[0]) {
      if (h2[0])
        e6.s = -e6.s;
      else if (f[0])
        e6 = new v(g2);
      else
        return new v(l === 3 ? -0 : 0);
      return w ? p2(e6, u2, l) : e6;
    }
    if (i3 = A(e6.e / m2), c = A(g2.e / m2), f = f.slice(), s5 = c - i3, s5) {
      for (a4 = s5 < 0, a4 ? (n2 = f, s5 = -s5, o2 = h2.length) : (n2 = h2, i3 = c, o2 = f.length), r6 = Math.max(Math.ceil(u2 / m2), o2) + 2, s5 > r6 && (s5 = r6, n2.length = 1), n2.reverse(), r6 = s5;r6--; )
        n2.push(0);
      n2.reverse();
    } else {
      for (r6 = f.length, o2 = h2.length, a4 = r6 < o2, a4 && (o2 = r6), r6 = 0;r6 < o2; r6++)
        if (f[r6] != h2[r6]) {
          a4 = f[r6] < h2[r6];
          break;
        }
      s5 = 0;
    }
    for (a4 && (n2 = f, f = h2, h2 = n2, e6.s = -e6.s), o2 = f.length, r6 = h2.length - o2;r6 > 0; --r6)
      f[o2++] = 0;
    for (r6 = h2.length;r6 > s5; ) {
      if (f[--r6] < h2[r6]) {
        for (t6 = r6;t6 && f[--t6] === 0; )
          f[t6] = F - 1;
        --f[t6], f[r6] += F;
      }
      f[r6] -= h2[r6];
    }
    for (;f[--o2] === 0; )
      f.pop();
    for (;f[0] === 0; f.shift())
      --i3;
    return f[0] ? (e6.d = f, e6.e = ue(f, i3), w ? p2(e6, u2, l) : e6) : new v(l === 3 ? -0 : 0);
  };
  d2.modulo = d2.mod = function(e6) {
    var n2, i3 = this, r6 = i3.constructor;
    return e6 = new r6(e6), !i3.d || !e6.s || e6.d && !e6.d[0] ? new r6(NaN) : !e6.d || i3.d && !i3.d[0] ? p2(new r6(i3), r6.precision, r6.rounding) : (w = false, r6.modulo == 9 ? (n2 = S(i3, e6.abs(), 0, 3, 1), n2.s *= e6.s) : n2 = S(i3, e6, 0, r6.modulo, 1), n2 = n2.times(e6), w = true, i3.minus(n2));
  };
  d2.naturalExponential = d2.exp = function() {
    return Ee(this);
  };
  d2.naturalLogarithm = d2.ln = function() {
    return B(this);
  };
  d2.negated = d2.neg = function() {
    var e6 = new this.constructor(this);
    return e6.s = -e6.s, p2(e6);
  };
  d2.plus = d2.add = function(e6) {
    var n2, i3, r6, t6, s5, o2, u2, l, f, c, a4 = this, h2 = a4.constructor;
    if (e6 = new h2(e6), !a4.d || !e6.d)
      return !a4.s || !e6.s ? e6 = new h2(NaN) : a4.d || (e6 = new h2(e6.d || a4.s === e6.s ? a4 : NaN)), e6;
    if (a4.s != e6.s)
      return e6.s = -e6.s, a4.minus(e6);
    if (f = a4.d, c = e6.d, u2 = h2.precision, l = h2.rounding, !f[0] || !c[0])
      return c[0] || (e6 = new h2(a4)), w ? p2(e6, u2, l) : e6;
    if (s5 = A(a4.e / m2), r6 = A(e6.e / m2), f = f.slice(), t6 = s5 - r6, t6) {
      for (t6 < 0 ? (i3 = f, t6 = -t6, o2 = c.length) : (i3 = c, r6 = s5, o2 = f.length), s5 = Math.ceil(u2 / m2), o2 = s5 > o2 ? s5 + 1 : o2 + 1, t6 > o2 && (t6 = o2, i3.length = 1), i3.reverse();t6--; )
        i3.push(0);
      i3.reverse();
    }
    for (o2 = f.length, t6 = c.length, o2 - t6 < 0 && (t6 = o2, i3 = c, c = f, f = i3), n2 = 0;t6; )
      n2 = (f[--t6] = f[t6] + c[t6] + n2) / F | 0, f[t6] %= F;
    for (n2 && (f.unshift(n2), ++r6), o2 = f.length;f[--o2] == 0; )
      f.pop();
    return e6.d = f, e6.e = ue(f, r6), w ? p2(e6, u2, l) : e6;
  };
  d2.precision = d2.sd = function(e6) {
    var n2, i3 = this;
    if (e6 !== undefined && e6 !== !!e6 && e6 !== 1 && e6 !== 0)
      throw Error($2 + e6);
    return i3.d ? (n2 = Ie2(i3.d), e6 && i3.e + 1 > n2 && (n2 = i3.e + 1)) : n2 = NaN, n2;
  };
  d2.round = function() {
    var e6 = this, n2 = e6.constructor;
    return p2(new n2(e6), e6.e + 1, n2.rounding);
  };
  d2.sine = d2.sin = function() {
    var e6, n2, i3 = this, r6 = i3.constructor;
    return i3.isFinite() ? i3.isZero() ? new r6(i3) : (e6 = r6.precision, n2 = r6.rounding, r6.precision = e6 + Math.max(i3.e, i3.sd()) + m2, r6.rounding = 1, i3 = rn2(r6, Be(r6, i3)), r6.precision = e6, r6.rounding = n2, p2(Z > 2 ? i3.neg() : i3, e6, n2, true)) : new r6(NaN);
  };
  d2.squareRoot = d2.sqrt = function() {
    var e6, n2, i3, r6, t6, s5, o2 = this, u2 = o2.d, l = o2.e, f = o2.s, c = o2.constructor;
    if (f !== 1 || !u2 || !u2[0])
      return new c(!f || f < 0 && (!u2 || u2[0]) ? NaN : u2 ? o2 : 1 / 0);
    for (w = false, f = Math.sqrt(+o2), f == 0 || f == 1 / 0 ? (n2 = O(u2), (n2.length + l) % 2 == 0 && (n2 += "0"), f = Math.sqrt(n2), l = A((l + 1) / 2) - (l < 0 || l % 2), f == 1 / 0 ? n2 = "5e" + l : (n2 = f.toExponential(), n2 = n2.slice(0, n2.indexOf("e") + 1) + l), r6 = new c(n2)) : r6 = new c(f.toString()), i3 = (l = c.precision) + 3;; )
      if (s5 = r6, r6 = s5.plus(S(o2, s5, i3 + 2, 1)).times(0.5), O(s5.d).slice(0, i3) === (n2 = O(r6.d)).slice(0, i3))
        if (n2 = n2.slice(i3 - 3, i3 + 1), n2 == "9999" || !t6 && n2 == "4999") {
          if (!t6 && (p2(s5, l + 1, 0), s5.times(s5).eq(o2))) {
            r6 = s5;
            break;
          }
          i3 += 4, t6 = 1;
        } else {
          (!+n2 || !+n2.slice(1) && n2.charAt(0) == "5") && (p2(r6, l + 1, 1), e6 = !r6.times(r6).eq(o2));
          break;
        }
    return w = true, p2(r6, l, c.rounding, e6);
  };
  d2.tangent = d2.tan = function() {
    var e6, n2, i3 = this, r6 = i3.constructor;
    return i3.isFinite() ? i3.isZero() ? new r6(i3) : (e6 = r6.precision, n2 = r6.rounding, r6.precision = e6 + 10, r6.rounding = 1, i3 = i3.sin(), i3.s = 1, i3 = S(i3, new r6(1).minus(i3.times(i3)).sqrt(), e6 + 10, 0), r6.precision = e6, r6.rounding = n2, p2(Z == 2 || Z == 4 ? i3.neg() : i3, e6, n2, true)) : new r6(NaN);
  };
  d2.times = d2.mul = function(e6) {
    var n2, i3, r6, t6, s5, o2, u2, l, f, c = this, a4 = c.constructor, h2 = c.d, g2 = (e6 = new a4(e6)).d;
    if (e6.s *= c.s, !h2 || !h2[0] || !g2 || !g2[0])
      return new a4(!e6.s || h2 && !h2[0] && !g2 || g2 && !g2[0] && !h2 ? NaN : !h2 || !g2 ? e6.s / 0 : e6.s * 0);
    for (i3 = A(c.e / m2) + A(e6.e / m2), l = h2.length, f = g2.length, l < f && (s5 = h2, h2 = g2, g2 = s5, o2 = l, l = f, f = o2), s5 = [], o2 = l + f, r6 = o2;r6--; )
      s5.push(0);
    for (r6 = f;--r6 >= 0; ) {
      for (n2 = 0, t6 = l + r6;t6 > r6; )
        u2 = s5[t6] + g2[r6] * h2[t6 - r6 - 1] + n2, s5[t6--] = u2 % F | 0, n2 = u2 / F | 0;
      s5[t6] = (s5[t6] + n2) % F | 0;
    }
    for (;!s5[--o2]; )
      s5.pop();
    return n2 ? ++i3 : s5.shift(), e6.d = s5, e6.e = ue(s5, i3), w ? p2(e6, a4.precision, a4.rounding) : e6;
  };
  d2.toBinary = function(e6, n2) {
    return ke(this, 2, e6, n2);
  };
  d2.toDecimalPlaces = d2.toDP = function(e6, n2) {
    var i3 = this, r6 = i3.constructor;
    return i3 = new r6(i3), e6 === undefined ? i3 : (q2(e6, 0, V), n2 === undefined ? n2 = r6.rounding : q2(n2, 0, 8), p2(i3, e6 + i3.e + 1, n2));
  };
  d2.toExponential = function(e6, n2) {
    var i3, r6 = this, t6 = r6.constructor;
    return e6 === undefined ? i3 = I(r6, true) : (q2(e6, 0, V), n2 === undefined ? n2 = t6.rounding : q2(n2, 0, 8), r6 = p2(new t6(r6), e6 + 1, n2), i3 = I(r6, true, e6 + 1)), r6.isNeg() && !r6.isZero() ? "-" + i3 : i3;
  };
  d2.toFixed = function(e6, n2) {
    var i3, r6, t6 = this, s5 = t6.constructor;
    return e6 === undefined ? i3 = I(t6) : (q2(e6, 0, V), n2 === undefined ? n2 = s5.rounding : q2(n2, 0, 8), r6 = p2(new s5(t6), e6 + t6.e + 1, n2), i3 = I(r6, false, e6 + r6.e + 1)), t6.isNeg() && !t6.isZero() ? "-" + i3 : i3;
  };
  d2.toFraction = function(e6) {
    var n2, i3, r6, t6, s5, o2, u2, l, f, c, a4, h2, g2 = this, v = g2.d, N = g2.constructor;
    if (!v)
      return new N(g2);
    if (f = i3 = new N(1), r6 = l = new N(0), n2 = new N(r6), s5 = n2.e = Ie2(v) - g2.e - 1, o2 = s5 % m2, n2.d[0] = M(10, o2 < 0 ? m2 + o2 : o2), e6 == null)
      e6 = s5 > 0 ? n2 : f;
    else {
      if (u2 = new N(e6), !u2.isInt() || u2.lt(f))
        throw Error($2 + u2);
      e6 = u2.gt(n2) ? s5 > 0 ? n2 : f : u2;
    }
    for (w = false, u2 = new N(O(v)), c = N.precision, N.precision = s5 = v.length * m2 * 2;a4 = S(u2, n2, 0, 1, 1), t6 = i3.plus(a4.times(r6)), t6.cmp(e6) != 1; )
      i3 = r6, r6 = t6, t6 = f, f = l.plus(a4.times(t6)), l = t6, t6 = n2, n2 = u2.minus(a4.times(t6)), u2 = t6;
    return t6 = S(e6.minus(i3), r6, 0, 1, 1), l = l.plus(t6.times(f)), i3 = i3.plus(t6.times(r6)), l.s = f.s = g2.s, h2 = S(f, r6, s5, 1).minus(g2).abs().cmp(S(l, i3, s5, 1).minus(g2).abs()) < 1 ? [f, r6] : [l, i3], N.precision = c, w = true, h2;
  };
  d2.toHexadecimal = d2.toHex = function(e6, n2) {
    return ke(this, 16, e6, n2);
  };
  d2.toNearest = function(e6, n2) {
    var i3 = this, r6 = i3.constructor;
    if (i3 = new r6(i3), e6 == null) {
      if (!i3.d)
        return i3;
      e6 = new r6(1), n2 = r6.rounding;
    } else {
      if (e6 = new r6(e6), n2 === undefined ? n2 = r6.rounding : q2(n2, 0, 8), !i3.d)
        return e6.s ? i3 : e6;
      if (!e6.d)
        return e6.s && (e6.s = i3.s), e6;
    }
    return e6.d[0] ? (w = false, i3 = S(i3, e6, 0, n2, 1).times(e6), w = true, p2(i3)) : (e6.s = i3.s, i3 = e6), i3;
  };
  d2.toNumber = function() {
    return +this;
  };
  d2.toOctal = function(e6, n2) {
    return ke(this, 8, e6, n2);
  };
  d2.toPower = d2.pow = function(e6) {
    var n2, i3, r6, t6, s5, o2, u2 = this, l = u2.constructor, f = +(e6 = new l(e6));
    if (!u2.d || !e6.d || !u2.d[0] || !e6.d[0])
      return new l(M(+u2, f));
    if (u2 = new l(u2), u2.eq(1))
      return u2;
    if (r6 = l.precision, s5 = l.rounding, e6.eq(1))
      return p2(u2, r6, s5);
    if (n2 = A(e6.e / m2), n2 >= e6.d.length - 1 && (i3 = f < 0 ? -f : f) <= ze)
      return t6 = De(l, u2, i3, r6), e6.s < 0 ? new l(1).div(t6) : p2(t6, r6, s5);
    if (o2 = u2.s, o2 < 0) {
      if (n2 < e6.d.length - 1)
        return new l(NaN);
      if (e6.d[n2] & 1 || (o2 = 1), u2.e == 0 && u2.d[0] == 1 && u2.d.length == 1)
        return u2.s = o2, u2;
    }
    return i3 = M(+u2, f), n2 = i3 == 0 || !isFinite(i3) ? A(f * (Math.log("0." + O(u2.d)) / Math.LN10 + u2.e + 1)) : new l(i3 + "").e, n2 > l.maxE + 1 || n2 < l.minE - 1 ? new l(n2 > 0 ? o2 / 0 : 0) : (w = false, l.rounding = u2.s = 1, i3 = Math.min(12, (n2 + "").length), t6 = Ee(e6.times(B(u2, r6 + i3)), r6), t6.d && (t6 = p2(t6, r6 + 5, 1), Q(t6.d, r6, s5) && (n2 = r6 + 10, t6 = p2(Ee(e6.times(B(u2, n2 + i3)), n2), n2 + 5, 1), +O(t6.d).slice(r6 + 1, r6 + 15) + 1 == 100000000000000 && (t6 = p2(t6, r6 + 1, 0)))), t6.s = o2, w = true, l.rounding = s5, p2(t6, r6, s5));
  };
  d2.toPrecision = function(e6, n2) {
    var i3, r6 = this, t6 = r6.constructor;
    return e6 === undefined ? i3 = I(r6, r6.e <= t6.toExpNeg || r6.e >= t6.toExpPos) : (q2(e6, 1, V), n2 === undefined ? n2 = t6.rounding : q2(n2, 0, 8), r6 = p2(new t6(r6), e6, n2), i3 = I(r6, e6 <= r6.e || r6.e <= t6.toExpNeg, e6)), r6.isNeg() && !r6.isZero() ? "-" + i3 : i3;
  };
  d2.toSignificantDigits = d2.toSD = function(e6, n2) {
    var i3 = this, r6 = i3.constructor;
    return e6 === undefined ? (e6 = r6.precision, n2 = r6.rounding) : (q2(e6, 1, V), n2 === undefined ? n2 = r6.rounding : q2(n2, 0, 8)), p2(new r6(i3), e6, n2);
  };
  d2.toString = function() {
    var e6 = this, n2 = e6.constructor, i3 = I(e6, e6.e <= n2.toExpNeg || e6.e >= n2.toExpPos);
    return e6.isNeg() && !e6.isZero() ? "-" + i3 : i3;
  };
  d2.truncated = d2.trunc = function() {
    return p2(new this.constructor(this), this.e + 1, 1);
  };
  d2.valueOf = d2.toJSON = function() {
    var e6 = this, n2 = e6.constructor, i3 = I(e6, e6.e <= n2.toExpNeg || e6.e >= n2.toExpPos);
    return e6.isNeg() ? "-" + i3 : i3;
  };
  var S = function() {
    function e6(r6, t6, s5) {
      var o2, u2 = 0, l = r6.length;
      for (r6 = r6.slice();l--; )
        o2 = r6[l] * t6 + u2, r6[l] = o2 % s5 | 0, u2 = o2 / s5 | 0;
      return u2 && r6.unshift(u2), r6;
    }
    function n2(r6, t6, s5, o2) {
      var u2, l;
      if (s5 != o2)
        l = s5 > o2 ? 1 : -1;
      else
        for (u2 = l = 0;u2 < s5; u2++)
          if (r6[u2] != t6[u2]) {
            l = r6[u2] > t6[u2] ? 1 : -1;
            break;
          }
      return l;
    }
    function i3(r6, t6, s5, o2) {
      for (var u2 = 0;s5--; )
        r6[s5] -= u2, u2 = r6[s5] < t6[s5] ? 1 : 0, r6[s5] = u2 * o2 + r6[s5] - t6[s5];
      for (;!r6[0] && r6.length > 1; )
        r6.shift();
    }
    return function(r6, t6, s5, o2, u2, l) {
      var f, c, a4, h2, g2, v, N, _, C, T2, E, P, x, D, le, z, W, ce, L, y3, ee = r6.constructor, ae = r6.s == t6.s ? 1 : -1, b3 = r6.d, k2 = t6.d;
      if (!b3 || !b3[0] || !k2 || !k2[0])
        return new ee(!r6.s || !t6.s || (b3 ? k2 && b3[0] == k2[0] : !k2) ? NaN : b3 && b3[0] == 0 || !k2 ? ae * 0 : ae / 0);
      for (l ? (g2 = 1, c = r6.e - t6.e) : (l = F, g2 = m2, c = A(r6.e / g2) - A(t6.e / g2)), L = k2.length, W = b3.length, C = new ee(ae), T2 = C.d = [], a4 = 0;k2[a4] == (b3[a4] || 0); a4++)
        ;
      if (k2[a4] > (b3[a4] || 0) && c--, s5 == null ? (D = s5 = ee.precision, o2 = ee.rounding) : u2 ? D = s5 + (r6.e - t6.e) + 1 : D = s5, D < 0)
        T2.push(1), v = true;
      else {
        if (D = D / g2 + 2 | 0, a4 = 0, L == 1) {
          for (h2 = 0, k2 = k2[0], D++;(a4 < W || h2) && D--; a4++)
            le = h2 * l + (b3[a4] || 0), T2[a4] = le / k2 | 0, h2 = le % k2 | 0;
          v = h2 || a4 < W;
        } else {
          for (h2 = l / (k2[0] + 1) | 0, h2 > 1 && (k2 = e6(k2, h2, l), b3 = e6(b3, h2, l), L = k2.length, W = b3.length), z = L, E = b3.slice(0, L), P = E.length;P < L; )
            E[P++] = 0;
          y3 = k2.slice(), y3.unshift(0), ce = k2[0], k2[1] >= l / 2 && ++ce;
          do
            h2 = 0, f = n2(k2, E, L, P), f < 0 ? (x = E[0], L != P && (x = x * l + (E[1] || 0)), h2 = x / ce | 0, h2 > 1 ? (h2 >= l && (h2 = l - 1), N = e6(k2, h2, l), _ = N.length, P = E.length, f = n2(N, E, _, P), f == 1 && (h2--, i3(N, L < _ ? y3 : k2, _, l))) : (h2 == 0 && (f = h2 = 1), N = k2.slice()), _ = N.length, _ < P && N.unshift(0), i3(E, N, P, l), f == -1 && (P = E.length, f = n2(k2, E, L, P), f < 1 && (h2++, i3(E, L < P ? y3 : k2, P, l))), P = E.length) : f === 0 && (h2++, E = [0]), T2[a4++] = h2, f && E[0] ? E[P++] = b3[z] || 0 : (E = [b3[z]], P = 1);
          while ((z++ < W || E[0] !== undefined) && D--);
          v = E[0] !== undefined;
        }
        T2[0] || T2.shift();
      }
      if (g2 == 1)
        C.e = c, qe = v;
      else {
        for (a4 = 1, h2 = T2[0];h2 >= 10; h2 /= 10)
          a4++;
        C.e = a4 + c * g2 - 1, p2(C, u2 ? s5 + C.e + 1 : s5, o2, v);
      }
      return C;
    };
  }();
  d2[Symbol.for("nodejs.util.inspect.custom")] = d2.toString;
  d2[Symbol.toStringTag] = "Decimal";
  var Y = d2.constructor = $e(Ne);
  re = new Y(re);
  te = new Y(te);
  var Ve = Y;
  var Jn = "Cloudflare-Workers";
  var Wn = "node";
  /*! Bundled license information:
  
  decimal.js/decimal.mjs:
    (*!
     *  decimal.js v10.4.3
     *  An arbitrary-precision Decimal type for JavaScript.
     *  https://github.com/MikeMcl/decimal.js
     *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>
     *  MIT Licence
     *)
  */
});

// node_modules/.prisma/client/index-browser.js
var require_index_browser2 = __commonJS((exports) => {
  Object.defineProperty(exports, "__esModule", { value: true });
  var {
    Decimal: Decimal2,
    objectEnumValues: objectEnumValues2,
    makeStrictEnum: makeStrictEnum2,
    Public: Public2,
    detectRuntime: detectRuntime2
  } = require_index_browser();
  var Prisma = {};
  exports.Prisma = Prisma;
  exports.$Enums = {};
  Prisma.prismaVersion = {
    client: "5.6.0",
    engine: "e95e739751f42d8ca026f6b910f5a2dc5adeaeee"
  };
  Prisma.PrismaClientKnownRequestError = () => {
    throw new Error(`PrismaClientKnownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.PrismaClientUnknownRequestError = () => {
    throw new Error(`PrismaClientUnknownRequestError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.PrismaClientRustPanicError = () => {
    throw new Error(`PrismaClientRustPanicError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.PrismaClientInitializationError = () => {
    throw new Error(`PrismaClientInitializationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.PrismaClientValidationError = () => {
    throw new Error(`PrismaClientValidationError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.NotFoundError = () => {
    throw new Error(`NotFoundError is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.Decimal = Decimal2;
  Prisma.sql = () => {
    throw new Error(`sqltag is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.empty = () => {
    throw new Error(`empty is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.join = () => {
    throw new Error(`join is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.raw = () => {
    throw new Error(`raw is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.validator = Public2.validator;
  Prisma.getExtensionContext = () => {
    throw new Error(`Extensions.getExtensionContext is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.defineExtension = () => {
    throw new Error(`Extensions.defineExtension is unable to be run ${runtimeDescription}.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`);
  };
  Prisma.DbNull = objectEnumValues2.instances.DbNull;
  Prisma.JsonNull = objectEnumValues2.instances.JsonNull;
  Prisma.AnyNull = objectEnumValues2.instances.AnyNull;
  Prisma.NullTypes = {
    DbNull: objectEnumValues2.classes.DbNull,
    JsonNull: objectEnumValues2.classes.JsonNull,
    AnyNull: objectEnumValues2.classes.AnyNull
  };
  exports.Prisma.TransactionIsolationLevel = makeStrictEnum2({
    ReadUncommitted: "ReadUncommitted",
    ReadCommitted: "ReadCommitted",
    RepeatableRead: "RepeatableRead",
    Serializable: "Serializable"
  });
  exports.Prisma.UsersScalarFieldEnum = {
    id: "id",
    email: "email",
    password: "password",
    name: "name",
    role: "role",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.VehiclesScalarFieldEnum = {
    id: "id",
    plate: "plate",
    color: "color",
    brand: "brand",
    chassis: "chassis",
    supplierId: "supplierId",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.VehicleOrdersScalarFieldEnum = {
    id: "id",
    qty: "qty",
    invCode: "invCode",
    plate: "plate",
    supplierOrderId: "supplierOrderId",
    created_at: "created_at",
    updated_at: "updated_at",
    factoryOrdersId: "factoryOrdersId"
  };
  exports.Prisma.ProductsScalarFieldEnum = {
    id: "id",
    code: "code",
    name: "name",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.SuppliersScalarFieldEnum = {
    id: "id",
    code: "code",
    name: "name",
    address: "address",
    productsId: "productsId",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.SupplierOrdersScalarFieldEnum = {
    id: "id",
    invCode: "invCode",
    invDate: "invDate",
    invTotal: "invTotal",
    qty: "qty",
    supplierId: "supplierId",
    factoryPriceId: "factoryPriceId",
    supplierPriceId: "supplierPriceId",
    status: "status",
    factoryOrderId: "factoryOrderId",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.SupplierPricesScalarFieldEnum = {
    id: "id",
    price: "price",
    isPPN: "isPPN",
    supplierId: "supplierId",
    factoryPriceId: "factoryPriceId",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.FactoriesScalarFieldEnum = {
    id: "id",
    code: "code",
    name: "name",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.FactoryOrdersScalarFieldEnum = {
    id: "id",
    invCode: "invCode",
    invDate: "invDate",
    invTotal: "invTotal",
    qty: "qty",
    factoryId: "factoryId",
    noRef: "noRef",
    factoryPriceId: "factoryPriceId",
    status: "status",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.FactoryPricesScalarFieldEnum = {
    id: "id",
    price: "price",
    factoryId: "factoryId",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.FarmersScalarFieldEnum = {
    id: "id",
    code: "code",
    name: "name",
    address: "address",
    phone: "phone",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.FarmerOrderScalarFieldEnum = {
    id: "id",
    transactionCode: "transactionCode",
    transactionDate: "transactionDate",
    transactionTotal: "transactionTotal",
    transactionType: "transactionType",
    farmerId: "farmerId",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.BankAccountsScalarFieldEnum = {
    id: "id",
    accountName: "accountName",
    accountNumber: "accountNumber",
    bankName: "bankName",
    balance: "balance",
    created_at: "created_at",
    updated_at: "updated_at",
    factoriesId: "factoriesId"
  };
  exports.Prisma.BankTransactionsScalarFieldEnum = {
    id: "id",
    transactionDate: "transactionDate",
    transactionCode: "transactionCode",
    transactionType: "transactionType",
    amount: "amount",
    description: "description",
    bankAccountId: "bankAccountId",
    supplierInvCode: "supplierInvCode",
    factoryInvCode: "factoryInvCode",
    farmerOrderId: "farmerOrderId",
    created_at: "created_at",
    updated_at: "updated_at",
    farmerSavingId: "farmerSavingId"
  };
  exports.Prisma.FarmerSavingScalarFieldEnum = {
    id: "id",
    savingDate: "savingDate",
    savingAmount: "savingAmount",
    savingType: "savingType",
    farmerId: "farmerId",
    created_at: "created_at",
    updated_at: "updated_at"
  };
  exports.Prisma.SortOrder = {
    asc: "asc",
    desc: "desc"
  };
  exports.Prisma.NullsOrder = {
    first: "first",
    last: "last"
  };
  exports.Prisma.ModelName = {
    Users: "Users",
    Vehicles: "Vehicles",
    VehicleOrders: "VehicleOrders",
    Products: "Products",
    Suppliers: "Suppliers",
    SupplierOrders: "SupplierOrders",
    SupplierPrices: "SupplierPrices",
    Factories: "Factories",
    FactoryOrders: "FactoryOrders",
    FactoryPrices: "FactoryPrices",
    Farmers: "Farmers",
    FarmerOrder: "FarmerOrder",
    BankAccounts: "BankAccounts",
    BankTransactions: "BankTransactions",
    FarmerSaving: "FarmerSaving"
  };

  class PrismaClient {
    constructor() {
      return new Proxy(this, {
        get(target, prop) {
          const runtime = detectRuntime2();
          const edgeRuntimeName = {
            workerd: "Cloudflare Workers",
            deno: "Deno and Deno Deploy",
            netlify: "Netlify Edge Functions",
            "edge-light": "Vercel Edge Functions"
          }[runtime];
          let message2 = "PrismaClient is unable to run in ";
          if (edgeRuntimeName !== undefined) {
            message2 += edgeRuntimeName + ". As an alternative, try Accelerate: https://pris.ly/d/accelerate.";
          } else {
            message2 += "this browser environment, or has been bundled for the browser (running in `" + runtime + "`).";
          }
          message2 += `
If this is unexpected, please open an issue: https://github.com/prisma/prisma/issues`;
          throw new Error(message2);
        }
      });
    }
  }
  exports.PrismaClient = PrismaClient;
  Object.assign(exports, Prisma);
});

// node_modules/@prisma/client/index-browser.js
var require_index_browser3 = __commonJS((exports, module) => {
  var prisma = require_index_browser2();
  module.exports = prisma;
});

// node_modules/memoirist/dist/index.js
var e = (e2, t) => ({ part: e2, store: null, inert: t !== undefined ? new Map(t.map((e3) => [e3.part.charCodeAt(0), e3])) : null, params: null, wildcardStore: null });
var t = (e2, t2) => ({ ...e2, part: t2 });
var r = (e2) => ({ paramName: e2, store: null, inert: null });

class Memoirist {
  root = {};
  history = [];
  static regex = { static: /:.+?(?=\/|$)/, params: /:.+?(?=\/|$)/g };
  add(a, l, i) {
    let s;
    if (typeof l != "string")
      throw TypeError("Route path must be a string");
    l === "" ? l = "/" : l[0] !== "/" && (l = `/${l}`), this.history.push([a, l, i]);
    let n = l[l.length - 1] === "*";
    n && (l = l.slice(0, -1));
    let o = l.split(Memoirist.regex.static), u = l.match(Memoirist.regex.params) || [];
    o[o.length - 1] === "" && o.pop(), s = this.root[a] ? this.root[a] : this.root[a] = e("/");
    let p = 0;
    for (let a2 = 0;a2 < o.length; ++a2) {
      let i2 = o[a2];
      if (a2 > 0) {
        let t2 = u[p++].slice(1);
        if (s.params === null)
          s.params = r(t2);
        else if (s.params.paramName !== t2)
          throw Error(`Cannot create route "${l}" with parameter "${t2}" because a route already exists with a different parameter name ("${s.params.paramName}") in the same location`);
        let a3 = s.params;
        if (a3.inert === null) {
          s = a3.inert = e(i2);
          continue;
        }
        s = a3.inert;
      }
      for (let r2 = 0;; ) {
        if (r2 === i2.length) {
          if (r2 < s.part.length) {
            let a3 = t(s, s.part.slice(r2));
            Object.assign(s, e(i2, [a3]));
          }
          break;
        }
        if (r2 === s.part.length) {
          if (s.inert === null)
            s.inert = new Map;
          else if (s.inert.has(i2.charCodeAt(r2))) {
            s = s.inert.get(i2.charCodeAt(r2)), i2 = i2.slice(r2), r2 = 0;
            continue;
          }
          let t2 = e(i2.slice(r2));
          s.inert.set(i2.charCodeAt(r2), t2), s = t2;
          break;
        }
        if (i2[r2] !== s.part[r2]) {
          let a3 = t(s, s.part.slice(r2)), l2 = e(i2.slice(r2));
          Object.assign(s, e(s.part.slice(0, r2), [a3, l2])), s = l2;
          break;
        }
        ++r2;
      }
    }
    if (p < u.length) {
      let e2 = u[p], t2 = e2.slice(1);
      if (s.params === null)
        s.params = r(t2);
      else if (s.params.paramName !== t2)
        throw Error(`Cannot create route "${l}" with parameter "${t2}" because a route already exists with a different parameter name ("${s.params.paramName}") in the same location`);
      return s.params.store === null && (s.params.store = i), s.params.store;
    }
    return n ? (s.wildcardStore === null && (s.wildcardStore = i), s.wildcardStore) : (s.store === null && (s.store = i), s.store);
  }
  find(e2, t2) {
    let r2 = this.root[e2];
    return r2 ? a(t2, t2.length, r2, 0) : null;
  }
}
var a = (e2, t2, r2, l) => {
  let i = r2?.part, s = l + i.length;
  if (i.length > 1) {
    if (s > t2)
      return null;
    if (i.length < 15) {
      for (let t3 = 1, r3 = l + 1;t3 < i.length; ++t3, ++r3)
        if (i.charCodeAt(t3) !== e2.charCodeAt(r3))
          return null;
    } else if (e2.substring(l, s) !== i)
      return null;
  }
  if (s === t2)
    return r2.store !== null ? { store: r2.store, params: {} } : r2.wildcardStore !== null ? { store: r2.wildcardStore, params: { "*": "" } } : null;
  if (r2.inert !== null) {
    let l2 = r2.inert.get(e2.charCodeAt(s));
    if (l2 !== undefined) {
      let r3 = a(e2, t2, l2, s);
      if (r3 !== null)
        return r3;
    }
  }
  if (r2.params !== null) {
    let l2 = r2.params, i2 = e2.indexOf("/", s);
    if (i2 !== s) {
      if (i2 === -1 || i2 >= t2) {
        if (l2.store !== null) {
          let r3 = {};
          return r3[l2.paramName] = e2.substring(s, t2), { store: l2.store, params: r3 };
        }
      } else if (l2.inert !== null) {
        let r3 = a(e2, t2, l2.inert, i2);
        if (r3 !== null)
          return r3.params[l2.paramName] = e2.substring(s, i2), r3;
      }
    }
  }
  return r2.wildcardStore !== null ? { store: r2.wildcardStore, params: { "*": e2.substring(s, t2) } } : null;
};

// node_modules/eventemitter3/index.mjs
var import_ = __toESM(require_eventemitter3(), 1);
var eventemitter3_default = import_.default;

// node_modules/elysia/dist/trace.js
var e2 = () => {
  let e3;
  let s = new Promise((s2) => {
    e3 = s2;
  });
  return [s, e3];
};
var s = () => {
  let [s2, n] = e2(), [r2, t2] = e2(), a2 = [], i = [];
  return { signal: s2, consume: (s3) => {
    switch (s3.type) {
      case "begin":
        if (s3.unit && a2.length === 0)
          for (let n2 = 0;n2 < s3.unit; n2++) {
            let [s4, n3] = e2(), [r3, t3] = e2();
            a2.push(s4), i.push([(e3) => {
              n3({ children: [], end: r3, name: e3.name ?? "", skip: false, time: e3.time });
            }, (e3) => {
              t3(e3);
            }]);
          }
        n({ children: a2, end: r2, name: s3.name ?? "", skip: false, time: s3.time });
        break;
      case "end":
        t2(s3.time);
    }
  }, consumeChild(e3) {
    switch (e3.type) {
      case "begin":
        if (!i[0])
          return;
        let [s3] = i[0];
        s3({ children: [], end: r2, name: e3.name ?? "", skip: false, time: e3.time });
        break;
      case "end":
        let n2 = i.shift();
        if (!n2)
          return;
        n2[1](e3.time);
    }
  }, resolve() {
    for (let [e3, s3] of (n({ children: [], end: new Promise((e4) => e4(0)), name: "", skip: true, time: 0 }), i))
      e3({ children: [], end: new Promise((e4) => e4(0)), name: "", skip: true, time: 0 }), s3(0);
    t2(0);
  } };
};
var createTraceListener = (e3, n, r2) => async function(t2) {
  if (t2.event !== "request" || t2.type !== "begin")
    return;
  let a2 = t2.id, i = e3(), o = s(), l = s(), c = s(), m = s(), u = s(), d = s(), b = s(), k = s();
  o.consume(t2);
  let f = (e4) => {
    if (e4.id === a2)
      switch (e4.event) {
        case "request":
          o.consume(e4);
          break;
        case "request.unit":
          o.consumeChild(e4);
          break;
        case "parse":
          l.consume(e4);
          break;
        case "parse.unit":
          l.consumeChild(e4);
          break;
        case "transform":
          c.consume(e4);
          break;
        case "transform.unit":
          c.consumeChild(e4);
          break;
        case "beforeHandle":
          m.consume(e4);
          break;
        case "beforeHandle.unit":
          m.consumeChild(e4);
          break;
        case "handle":
          u.consume(e4);
          break;
        case "afterHandle":
          d.consume(e4);
          break;
        case "afterHandle.unit":
          d.consumeChild(e4);
          break;
        case "error":
          b.consume(e4);
          break;
        case "error.unit":
          b.consumeChild(e4);
          break;
        case "response":
          e4.type === "begin" ? (o.resolve(), l.resolve(), c.resolve(), m.resolve(), u.resolve(), d.resolve(), b.resolve()) : i.off("event", f), k.consume(e4);
          break;
        case "response.unit":
          k.consumeChild(e4);
          break;
        case "exit":
          o.resolve(), l.resolve(), c.resolve(), m.resolve(), u.resolve(), d.resolve(), b.resolve();
      }
  };
  i.on("event", f), await r2({
    id: a2,
    context: t2.ctx,
    set: t2.ctx?.set,
    store: t2.ctx?.store,
    time: t2.time,
    request: o.signal,
    parse: l.signal,
    transform: c.signal,
    beforeHandle: m.signal,
    handle: u.signal,
    afterHandle: d.signal,
    error: b.signal,
    response: k.signal
  }), i.emit(`res${a2}.${n}`, undefined);
};

// node_modules/elysia/dist/error.js
var exports_error = {};
__export(exports_error, {
  isProduction: () => {
    {
      return isProduction;
    }
  },
  ValidationError: () => {
    {
      return ValidationError;
    }
  },
  ParseError: () => {
    {
      return ParseError;
    }
  },
  NotFoundError: () => {
    {
      return NotFoundError;
    }
  },
  InvalidCookieSignature: () => {
    {
      return InvalidCookieSignature;
    }
  },
  InternalServerError: () => {
    {
      return InternalServerError;
    }
  },
  ERROR_CODE: () => {
    {
      return ERROR_CODE;
    }
  }
});
var value = __toESM(require_value2(), 1);
var t2 = typeof Bun != "undefined" ? Bun.env : typeof process != "undefined" ? process?.env : undefined;
var ERROR_CODE = Symbol("ErrorCode");
var isProduction = (t2?.NODE_ENV ?? t2?.ENV) === "production";

class InternalServerError extends Error {
  code = "INTERNAL_SERVER_ERROR";
  status = 500;
  constructor(r3) {
    super(r3 ?? "INTERNAL_SERVER_ERROR");
  }
}

class NotFoundError extends Error {
  code = "NOT_FOUND";
  status = 404;
  constructor(r3) {
    super(r3 ?? "NOT_FOUND");
  }
}

class ParseError extends Error {
  code = "PARSE";
  status = 400;
  constructor(r3) {
    super(r3 ?? "PARSE");
  }
}

class InvalidCookieSignature extends Error {
  key;
  code;
  status;
  constructor(r3, t3) {
    super(t3 ?? `"${r3}" has invalid cookie signature`), this.key = r3, this.code = "INVALID_COOKIE_SIGNATURE", this.status = 400;
  }
}

class ValidationError extends Error {
  type;
  validator;
  value;
  code;
  status;
  constructor(t3, e3, s2) {
    let o = isProduction ? undefined : ("Errors" in e3) ? e3.Errors(s2).First() : value.Value.Errors(e3, s2).First(), i = o?.schema.error ? typeof o.schema.error == "function" ? o.schema.error(t3, e3, s2) : o.schema.error : undefined, a2 = isProduction ? i ?? `Invalid ${t3 ?? o?.schema.error ?? o?.message}` : i ?? `Invalid ${t3}, '${o?.path?.slice(1) || "type"}': ${o?.message}

Expected: ` + JSON.stringify(ValidationError.simplifyModel(e3), null, 2) + "\n\nFound: " + JSON.stringify(s2, null, 2);
    super(a2), this.type = t3, this.validator = e3, this.value = s2, this.code = "VALIDATION", this.status = 400, Object.setPrototypeOf(this, ValidationError.prototype);
  }
  get all() {
    return [...this.validator.Errors(this.value)];
  }
  static simplifyModel(t3) {
    let e3 = "schema" in t3 ? t3.schema : t3;
    try {
      return value.Value.Create(e3);
    } catch {
      return e3;
    }
  }
  get model() {
    return ValidationError.simplifyModel(this.validator);
  }
  toResponse(r3) {
    return new Response(this.message, { status: 400, headers: r3 });
  }
}

// node_modules/elysia/dist/ws/index.js
var websocket = { open(t3) {
  t3.data.open?.(t3);
}, message(t3, r3) {
  t3.data.message?.(t3, r3);
}, drain(t3) {
  t3.data.drain?.(t3);
}, close(t3, r3, e3) {
  t3.data.close?.(t3, r3, e3);
} };

class ElysiaWS {
  raw;
  data;
  id;
  validator;
  constructor(t3, r3) {
    this.raw = t3, this.data = r3, this.validator = t3.data.validator, this.id = Date.now();
  }
  get publish() {
    return (r3, e3, s2) => {
      if (this.validator?.Check(e3) === false)
        throw new ValidationError("message", this.validator, e3);
      return typeof e3 == "object" && (e3 = JSON.stringify(e3)), this.raw.publish(r3, e3, s2), this;
    };
  }
  get send() {
    return (r3) => {
      if (this.validator?.Check(r3) === false)
        throw new ValidationError("message", this.validator, r3);
      return Buffer.isBuffer(r3) || typeof r3 == "object" && (r3 = JSON.stringify(r3)), this.raw.send(r3), this;
    };
  }
  get subscribe() {
    return (t3) => (this.raw.subscribe(t3), this);
  }
  get unsubscribe() {
    return (t3) => (this.raw.unsubscribe(t3), this);
  }
  get cork() {
    return (t3) => (this.raw.cork(t3), this);
  }
  get close() {
    return () => (this.raw.close(), this);
  }
  get terminate() {
    return this.raw.terminate.bind(this.raw);
  }
  get isSubscribed() {
    return this.raw.isSubscribed.bind(this.raw);
  }
  get remoteAddress() {
    return this.raw.remoteAddress;
  }
}

// node_modules/elysia/node_modules/cookie/index.js
var parse = function(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  var obj = {};
  var opt = options || {};
  var dec = opt.decode || decode;
  var index = 0;
  while (index < str.length) {
    var eqIdx = str.indexOf("=", index);
    if (eqIdx === -1) {
      break;
    }
    var endIdx = str.indexOf(";", index);
    if (endIdx === -1) {
      endIdx = str.length;
    } else if (endIdx < eqIdx) {
      index = str.lastIndexOf(";", eqIdx - 1) + 1;
      continue;
    }
    var key = str.slice(index, eqIdx).trim();
    if (obj[key] === undefined) {
      var val = str.slice(eqIdx + 1, endIdx).trim();
      if (val.charCodeAt(0) === 34) {
        val = val.slice(1, -1);
      }
      obj[key] = tryDecode(val, dec);
    }
    index = endIdx + 1;
  }
  return obj;
};
var serialize = function(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;
  if (typeof enc !== "function") {
    throw new TypeError("option encode is invalid");
  }
  if (!fieldContentRegExp.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  var value2 = enc(val);
  if (value2 && !fieldContentRegExp.test(value2)) {
    throw new TypeError("argument val is invalid");
  }
  var str = name + "=" + value2;
  if (opt.maxAge != null) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError("option maxAge is invalid");
    }
    str += "; Max-Age=" + Math.floor(maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=" + opt.domain;
  }
  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=" + opt.path;
  }
  if (opt.expires) {
    var expires = opt.expires;
    if (!isDate(expires) || isNaN(expires.valueOf())) {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=" + expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += "; HttpOnly";
  }
  if (opt.secure) {
    str += "; Secure";
  }
  if (opt.partitioned) {
    str += "; Partitioned";
  }
  if (opt.priority) {
    var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
    switch (priority) {
      case "low":
        str += "; Priority=Low";
        break;
      case "medium":
        str += "; Priority=Medium";
        break;
      case "high":
        str += "; Priority=High";
        break;
      default:
        throw new TypeError("option priority is invalid");
    }
  }
  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true:
        str += "; SameSite=Strict";
        break;
      case "lax":
        str += "; SameSite=Lax";
        break;
      case "strict":
        str += "; SameSite=Strict";
        break;
      case "none":
        str += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  }
  return str;
};
var decode = function(str) {
  return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
};
var encode = function(val) {
  return encodeURIComponent(val);
};
var isDate = function(val) {
  return __toString.call(val) === "[object Date]" || val instanceof Date;
};
var tryDecode = function(str, decode2) {
  try {
    return decode2(str);
  } catch (e3) {
    return str;
  }
};
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
var $parse = parse;
var $serialize = serialize;
var __toString = Object.prototype.toString;
var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

// node_modules/elysia/dist/utils.js
var typebox = __toESM(require_typebox(), 1);
var value2 = __toESM(require_value2(), 1);
var compiler = __toESM(require_compiler2(), 1);
var a2 = (e4) => e4 && typeof e4 == "object" && !Array.isArray(e4);
var getHostname = (e4) => e4.slice(0, e4.indexOf("/", 11));
var n = (e4) => typeof e4 == "function" && /^\s*class\s+/.test(e4.toString()) || e4.toString().startsWith("[object ") || isNotEmpty(Object.getPrototypeOf(e4));
var mergeDeep = (e4, r4, { skipKeys: t4 } = {}) => {
  if (a2(e4) && a2(r4)) {
    for (let [o, s2] of Object.entries(r4))
      if (!t4?.includes(o)) {
        if (!a2(s2) || !(o in e4) || n(s2)) {
          e4[o] = s2;
          continue;
        }
        e4[o] = mergeDeep(e4[o], s2);
      }
  }
  return e4;
};
var mergeCookie = (e4, r4) => mergeDeep(e4, r4, { skipKeys: ["properties"] });
var mergeObjectArray = (e4, r4) => {
  let t4 = [...Array.isArray(e4) ? e4 : [e4]], o = [];
  for (let e5 of t4)
    e5.$elysiaChecksum && o.push(e5.$elysiaChecksum);
  for (let e5 of Array.isArray(r4) ? r4 : [r4])
    o.includes(e5?.$elysiaChecksum) || t4.push(e5);
  return t4;
};
var mergeHook = (e4, r4) => ({
  body: r4?.body ?? e4?.body,
  headers: r4?.headers ?? e4?.headers,
  params: r4?.params ?? e4?.params,
  query: r4?.query ?? e4?.query,
  response: r4?.response ?? e4?.response,
  type: e4?.type || r4?.type,
  detail: mergeDeep(r4?.detail ?? {}, e4?.detail ?? {}),
  parse: mergeObjectArray(e4?.parse ?? [], r4?.parse ?? []),
  transform: mergeObjectArray(e4?.transform ?? [], r4?.transform ?? []),
  beforeHandle: mergeObjectArray(e4?.beforeHandle ?? [], r4?.beforeHandle ?? []),
  afterHandle: mergeObjectArray(e4?.afterHandle ?? [], r4?.afterHandle ?? []),
  onResponse: mergeObjectArray(e4?.onResponse ?? [], r4?.onResponse ?? []),
  trace: mergeObjectArray(e4?.trace ?? [], r4?.trace ?? []),
  error: mergeObjectArray(e4?.error ?? [], r4?.error ?? [])
});
var getSchemaValidator = (e4, { models: o = {}, additionalProperties: a3 = false, dynamic: n2 = false }) => {
  if (!e4 || typeof e4 == "string" && !(e4 in o))
    return;
  let s2 = typeof e4 == "string" ? o[e4] : e4;
  return (s2.type === "object" && ("additionalProperties" in s2) == false && (s2.additionalProperties = a3), n2) ? { schema: s2, references: "", checkFunc: () => {
  }, code: "", Check: (e5) => value2.Value.Check(s2, e5), Errors: (e5) => value2.Value.Errors(s2, e5), Code: () => "" } : compiler.TypeCompiler.Compile(s2, Object.values(o));
};
var getResponseSchemaValidator = (o, { models: a3 = {}, additionalProperties: n2 = false, dynamic: s2 = false }) => {
  if (!o || typeof o == "string" && !(o in a3))
    return;
  let i = typeof o == "string" ? a3[o] : o, l = (e4, o2) => s2 ? { schema: e4, references: "", checkFunc: () => {
  }, code: "", Check: (t4) => value2.Value.Check(e4, t4), Errors: (t4) => value2.Value.Errors(e4, t4), Code: () => "" } : compiler.TypeCompiler.Compile(e4, o2);
  if (typebox.Kind in i)
    return ("additionalProperties" in i) == false && (i.additionalProperties = n2), { 200: l(i, Object.values(a3)) };
  let p = {};
  return Object.keys(i).forEach((r4) => {
    let t4 = i[+r4];
    if (typeof t4 == "string") {
      if (t4 in a3) {
        let o2 = a3[t4];
        o2.type, p[+r4] = (typebox.Kind in o2) ? l(o2, Object.values(a3)) : o2;
      }
      return;
    }
    t4.type === "object" && ("additionalProperties" in t4) == false && (t4.additionalProperties = n2), p[+r4] = (typebox.Kind in t4) ? l(t4, Object.values(a3)) : t4;
  }), p;
};
var checksum = (e4) => {
  let r4 = 9;
  for (let t4 = 0;t4 < e4.length; )
    r4 = Math.imul(r4 ^ e4.charCodeAt(t4++), 387420489);
  return r4 ^ r4 >>> 9;
};
var mergeLifeCycle = (e4, r4, t4) => {
  let o = (e5) => (t4 && !e5.$elysiaChecksum && (e5.$elysiaChecksum = t4), e5);
  return {
    start: mergeObjectArray(e4.start, ("start" in r4 ? r4.start ?? [] : []).map(o)),
    request: mergeObjectArray(e4.request, ("request" in r4 ? r4.request ?? [] : []).map(o)),
    parse: mergeObjectArray(e4.parse, "parse" in r4 ? r4?.parse ?? [] : []).map(o),
    transform: mergeObjectArray(e4.transform, (r4?.transform ?? []).map(o)),
    beforeHandle: mergeObjectArray(e4.beforeHandle, (r4?.beforeHandle ?? []).map(o)),
    afterHandle: mergeObjectArray(e4.afterHandle, (r4?.afterHandle ?? []).map(o)),
    onResponse: mergeObjectArray(e4.onResponse, (r4?.onResponse ?? []).map(o)),
    trace: e4.trace,
    error: mergeObjectArray(e4.error, (r4?.error ?? []).map(o)),
    stop: mergeObjectArray(e4.stop, ("stop" in r4 ? r4.stop ?? [] : []).map(o))
  };
};
var asGlobal = (e4, r4 = true) => e4 ? typeof e4 == "function" ? (r4 ? e4.$elysiaHookType = "global" : e4.$elysiaHookType = undefined, e4) : e4.map((e5) => (r4 ? e5.$elysiaHookType = "global" : e5.$elysiaHookType = undefined, e5)) : e4;
var s2 = (e4) => e4 ? typeof e4 == "function" ? e4.$elysiaHookType === "global" ? e4 : undefined : e4.filter((e5) => e5.$elysiaHookType === "global") : e4;
var filterGlobalHook = (e4) => ({
  ...e4,
  type: e4?.type,
  detail: e4?.detail,
  parse: s2(e4?.parse),
  transform: s2(e4?.transform),
  beforeHandle: s2(e4?.beforeHandle),
  afterHandle: s2(e4?.afterHandle),
  onResponse: s2(e4?.onResponse),
  error: s2(e4?.error)
});
var StatusMap = { Continue: 100, "Switching Protocols": 101, Processing: 102, "Early Hints": 103, OK: 200, Created: 201, Accepted: 202, "Non-Authoritative Information": 203, "No Content": 204, "Reset Content": 205, "Partial Content": 206, "Multi-Status": 207, "Already Reported": 208, "Multiple Choices": 300, "Moved Permanently": 301, Found: 302, "See Other": 303, "Not Modified": 304, "Temporary Redirect": 307, "Permanent Redirect": 308, "Bad Request": 400, Unauthorized: 401, "Payment Required": 402, Forbidden: 403, "Not Found": 404, "Method Not Allowed": 405, "Not Acceptable": 406, "Proxy Authentication Required": 407, "Request Timeout": 408, Conflict: 409, Gone: 410, "Length Required": 411, "Precondition Failed": 412, "Payload Too Large": 413, "URI Too Long": 414, "Unsupported Media Type": 415, "Range Not Satisfiable": 416, "Expectation Failed": 417, "I'm a teapot": 418, "Misdirected Request": 421, "Unprocessable Content": 422, Locked: 423, "Failed Dependency": 424, "Too Early": 425, "Upgrade Required": 426, "Precondition Required": 428, "Too Many Requests": 429, "Request Header Fields Too Large": 431, "Unavailable For Legal Reasons": 451, "Internal Server Error": 500, "Not Implemented": 501, "Bad Gateway": 502, "Service Unavailable": 503, "Gateway Timeout": 504, "HTTP Version Not Supported": 505, "Variant Also Negotiates": 506, "Insufficient Storage": 507, "Loop Detected": 508, "Not Extended": 510, "Network Authentication Required": 511 };
var signCookie = async (e4, r4) => {
  if (typeof e4 != "string")
    throw TypeError("Cookie value must be provided as a string.");
  if (r4 === null)
    throw TypeError("Secret key must be provided.");
  let t4 = new TextEncoder, o = await crypto.subtle.importKey("raw", t4.encode(r4), { name: "HMAC", hash: "SHA-256" }, false, ["sign"]), a3 = await crypto.subtle.sign("HMAC", o, t4.encode(e4)), n2 = Array.from(new Uint8Array(a3)), s3 = btoa(String.fromCharCode(...n2));
  return `${e4}.${s3.replace(/=+$/, "")}`;
};
var unsignCookie = async (e4, r4) => {
  if (typeof e4 != "string")
    throw TypeError("Signed cookie string must be provided.");
  if (r4 === null)
    throw TypeError("Secret key must be provided.");
  let t4 = e4.slice(0, e4.lastIndexOf(".")), o = await signCookie(t4, r4);
  return o === e4 && t4;
};

// node_modules/elysia/dist/cookie.js
class Cookie {
  _value;
  property;
  name;
  setter;
  constructor(e4, t4 = {}) {
    this._value = e4, this.property = t4;
  }
  get() {
    return this._value;
  }
  get value() {
    return this._value;
  }
  set value(e4) {
    if (typeof e4 == "object") {
      if (JSON.stringify(this.value) === JSON.stringify(e4))
        return;
    } else if (this.value === e4)
      return;
    this._value = e4, this.sync();
  }
  add(e4) {
    let t4 = Object.assign(this.property, typeof e4 == "function" ? e4(Object.assign(this.property, this.value)) : e4);
    return ("value" in t4) && (this._value = t4.value, delete t4.value), this.property = t4, this.sync();
  }
  set(e4) {
    let t4 = typeof e4 == "function" ? e4(Object.assign(this.property, this.value)) : e4;
    return ("value" in t4) && (this._value = t4.value, delete t4.value), this.property = t4, this.sync();
  }
  remove(e4) {
    this.value !== undefined && this.set({ domain: e4?.domain, expires: new Date(0), maxAge: 0, path: e4?.path, sameSite: e4?.sameSite, secure: e4?.secure, value: "" });
  }
  get domain() {
    return this.property.domain;
  }
  set domain(e4) {
    this.property.domain !== e4 && (this.property.domain = e4, this.sync());
  }
  get expires() {
    return this.property.expires;
  }
  set expires(e4) {
    this.property.expires?.getTime() !== e4?.getTime() && (this.property.expires = e4, this.sync());
  }
  get httpOnly() {
    return this.property.httpOnly;
  }
  set httpOnly(e4) {
    this.property.domain !== e4 && (this.property.httpOnly = e4, this.sync());
  }
  get maxAge() {
    return this.property.maxAge;
  }
  set maxAge(e4) {
    this.property.maxAge !== e4 && (this.property.maxAge = e4, this.sync());
  }
  get path() {
    return this.property.path;
  }
  set path(e4) {
    this.property.path !== e4 && (this.property.path = e4, this.sync());
  }
  get priority() {
    return this.property.priority;
  }
  set priority(e4) {
    this.property.priority !== e4 && (this.property.priority = e4, this.sync());
  }
  get sameSite() {
    return this.property.sameSite;
  }
  set sameSite(e4) {
    this.property.sameSite !== e4 && (this.property.sameSite = e4, this.sync());
  }
  get secure() {
    return this.property.secure;
  }
  set secure(e4) {
    this.property.secure !== e4 && (this.property.secure = e4, this.sync());
  }
  toString() {
    return typeof this.value == "object" ? JSON.stringify(this.value) : this.value?.toString() ?? "";
  }
  sync() {
    return this.name && this.setter && (this.setter.cookie ? this.setter.cookie[this.name] = Object.assign(this.property, { value: this.toString() }) : this.setter.cookie = { [this.name]: Object.assign(this.property, { value: this.toString() }) }), this;
  }
}
var createCookieJar = (e4, t4, r4) => new Proxy(e4, { get(e5, i) {
  if (i in e5)
    return e5[i];
  let s3 = new Cookie(undefined, r4 ? { ...r4 } : undefined);
  return s3.setter = t4, s3.name = i, s3;
}, set: (e5, r5, i) => i instanceof Cookie && (t4.cookie || (t4.cookie = {}), i.setter = t4, i.name = r5, i.sync(), e5[r5] = i, true) });
var parseCookie = async (i, s3, { secret: o, sign: p, ...n2 } = {}) => {
  if (!s3)
    return createCookieJar({}, i, n2);
  let a3 = {}, h = typeof o == "string";
  p && p !== true && !Array.isArray(p) && (p = [p]);
  let y = Object.keys($parse(s3));
  for (let u = 0;u < y.length; u++) {
    let c = y[u], l = $parse(s3)[c];
    if (p === true || p?.includes(c)) {
      if (!o)
        throw Error("No secret is provided to cookie plugin");
      if (h) {
        if ((l = await unsignCookie(l, o)) === false)
          throw new InvalidCookieSignature(c);
      } else {
        let e4 = true;
        for (let r4 = 0;r4 < o.length; r4++) {
          let i2 = await unsignCookie(l, o[r4]);
          if (i2 !== false) {
            l = i2, e4 = false;
            break;
          }
        }
        if (e4)
          throw new InvalidCookieSignature(c);
      }
    }
    if (l === undefined)
      continue;
    let m = l.charCodeAt(0);
    if (m === 123 || m === 91)
      try {
        let e4 = new Cookie(JSON.parse(l));
        e4.setter = i, e4.name = c, a3[c] = e4;
        continue;
      } catch {
      }
    Number.isNaN(+l) ? l === "true" ? l = true : l === "false" && (l = false) : l = +l;
    let g = new Cookie(l, n2);
    g.setter = i, g.name = c, a3[c] = g;
  }
  return createCookieJar(a3, i);
};

// node_modules/elysia/dist/handler.js
var r4 = "toJSON" in new Headers;
var isNotEmpty = (e4) => {
  for (let s3 in e4)
    return true;
  return false;
};
var parseSetCookies = (e4, s3) => {
  if (!e4 || !Array.isArray(s3))
    return e4;
  e4.delete("Set-Cookie");
  for (let t4 = 0;t4 < s3.length; t4++) {
    let r5 = s3[t4].indexOf("=");
    e4.append("Set-Cookie", `${s3[t4].slice(0, r5)}=${s3[t4].slice(r5 + 1)}`);
  }
  return e4;
};
var cookieToHeader = (s3) => {
  if (!s3 || typeof s3 != "object" || !isNotEmpty(s3))
    return;
  let t4 = [];
  for (let [r5, n2] of Object.entries(s3))
    if (r5 && n2) {
      if (Array.isArray(n2.value))
        for (let s4 = 0;s4 < n2.value.length; s4++) {
          let o = n2.value[s4];
          o != null && (typeof o == "object" && (o = JSON.stringify(o)), t4.push($serialize(r5, o, n2)));
        }
      else {
        let s4 = n2.value;
        if (s4 == null)
          continue;
        typeof s4 == "object" && (s4 = JSON.stringify(s4)), t4.push($serialize(r5, n2.value, n2));
      }
    }
  if (t4.length !== 0)
    return t4.length === 1 ? t4[0] : t4;
};
var mapResponse = (e4, n2) => {
  if (e4?.$passthrough && (e4 = e4[e4.$passthrough]), isNotEmpty(n2.headers) || n2.status !== 200 || n2.redirect || n2.cookie)
    switch (typeof n2.status == "string" && (n2.status = StatusMap[n2.status]), n2.redirect && (n2.headers.Location = n2.redirect, (!n2.status || n2.status < 300 || n2.status >= 400) && (n2.status = 302)), n2.cookie && isNotEmpty(n2.cookie) && (n2.headers["Set-Cookie"] = cookieToHeader(n2.cookie)), n2.headers["Set-Cookie"] && Array.isArray(n2.headers["Set-Cookie"]) && (n2.headers = parseSetCookies(new Headers(n2.headers), n2.headers["Set-Cookie"])), e4?.constructor?.name) {
      case "String":
      case "Blob":
        return new Response(e4, { status: n2.status, headers: n2.headers });
      case "Object":
      case "Array":
        return Response.json(e4, n2);
      case "ReadableStream":
        return n2.headers["content-type"]?.startsWith("text/event-stream") || (n2.headers["content-type"] = "text/event-stream; charset=utf-8"), new Response(e4, n2);
      case undefined:
        if (!e4)
          return new Response("", n2);
        return Response.json(e4, n2);
      case "Response":
        let o = { ...n2.headers };
        if (r4)
          n2.headers = e4.headers.toJSON();
        else
          for (let [s3, t4] of e4.headers.entries())
            (s3 in n2.headers) && (n2.headers[s3] = t4);
        for (let s3 in o)
          e4.headers.append(s3, o[s3]);
        return e4;
      case "Error":
        return errorToResponse(e4, n2);
      case "Promise":
        return e4.then((e5) => mapResponse(e5, n2));
      case "Function":
        return mapResponse(e4(), n2);
      case "Number":
      case "Boolean":
        return new Response(e4.toString(), n2);
      case "Cookie":
        if (e4 instanceof Cookie)
          return new Response(e4.value, n2);
        return new Response(e4?.toString(), n2);
      default:
        let a3 = JSON.stringify(e4);
        if (a3.charCodeAt(0) === 123)
          return n2.headers["Content-Type"] || (n2.headers["Content-Type"] = "application/json"), new Response(JSON.stringify(e4), n2);
        return new Response(a3, n2);
    }
  else
    switch (e4?.constructor?.name) {
      case "String":
      case "Blob":
        return new Response(e4);
      case "Object":
      case "Array":
        return new Response(JSON.stringify(e4), { headers: { "content-type": "application/json" } });
      case "ReadableStream":
        return new Response(e4, { headers: { "Content-Type": "text/event-stream; charset=utf-8" } });
      case undefined:
        if (!e4)
          return new Response("");
        return new Response(JSON.stringify(e4), { headers: { "content-type": "application/json" } });
      case "Response":
        return e4;
      case "Error":
        return errorToResponse(e4, n2);
      case "Promise":
        return e4.then((e5) => {
          let s3 = mapCompactResponse(e5);
          return s3 !== undefined ? s3 : new Response("");
        });
      case "Function":
        return mapCompactResponse(e4());
      case "Number":
      case "Boolean":
        return new Response(e4.toString());
      case "Cookie":
        if (e4 instanceof Cookie)
          return new Response(e4.value, n2);
        return new Response(e4?.toString(), n2);
      default:
        let i = JSON.stringify(e4);
        if (i.charCodeAt(0) === 123)
          return new Response(JSON.stringify(e4), { headers: { "Content-Type": "application/json" } });
        return new Response(i);
    }
};
var mapEarlyResponse = (e4, n2) => {
  if (e4 != null) {
    if (e4?.$passthrough && (e4 = e4[e4.$passthrough]), isNotEmpty(n2.headers) || n2.status !== 200 || n2.redirect || n2.cookie)
      switch (typeof n2.status == "string" && (n2.status = StatusMap[n2.status]), n2.redirect && (n2.headers.Location = n2.redirect, (!n2.status || n2.status < 300 || n2.status >= 400) && (n2.status = 302)), n2.cookie && isNotEmpty(n2.cookie) && (n2.headers["Set-Cookie"] = cookieToHeader(n2.cookie)), n2.headers["Set-Cookie"] && Array.isArray(n2.headers["Set-Cookie"]) && (n2.headers = parseSetCookies(new Headers(n2.headers), n2.headers["Set-Cookie"])), e4?.constructor?.name) {
        case "String":
        case "Blob":
          return new Response(e4, n2);
        case "Object":
        case "Array":
          return Response.json(e4, n2);
        case "ReadableStream":
          return n2.headers["content-type"]?.startsWith("text/event-stream") || (n2.headers["content-type"] = "text/event-stream; charset=utf-8"), new Response(e4, n2);
        case undefined:
          if (!e4)
            return;
          return Response.json(e4, n2);
        case "Response":
          let o = Object.assign({}, n2.headers);
          if (r4)
            n2.headers = e4.headers.toJSON();
          else
            for (let [s3, t4] of e4.headers.entries())
              (s3 in n2.headers) || (n2.headers[s3] = t4);
          for (let s3 in o)
            e4.headers.append(s3, o[s3]);
          return e4.status !== n2.status && (n2.status = e4.status), e4;
        case "Promise":
          return e4.then((e5) => {
            let s3 = mapEarlyResponse(e5, n2);
            if (s3 !== undefined)
              return s3;
          });
        case "Error":
          return errorToResponse(e4, n2);
        case "Function":
          return mapEarlyResponse(e4(), n2);
        case "Number":
        case "Boolean":
          return new Response(e4.toString(), n2);
        case "Cookie":
          if (e4 instanceof Cookie)
            return new Response(e4.value, n2);
          return new Response(e4?.toString(), n2);
        default:
          let a3 = JSON.stringify(e4);
          if (a3.charCodeAt(0) === 123)
            return n2.headers["Content-Type"] || (n2.headers["Content-Type"] = "application/json"), new Response(JSON.stringify(e4), n2);
          return new Response(a3, n2);
      }
    else
      switch (e4?.constructor?.name) {
        case "String":
        case "Blob":
          return new Response(e4);
        case "Object":
        case "Array":
          return new Response(JSON.stringify(e4), { headers: { "content-type": "application/json" } });
        case "ReadableStream":
          return new Response(e4, { headers: { "Content-Type": "text/event-stream; charset=utf-8" } });
        case undefined:
          if (!e4)
            return new Response("");
          return new Response(JSON.stringify(e4), { headers: { "content-type": "application/json" } });
        case "Response":
          return e4;
        case "Promise":
          return e4.then((e5) => {
            let s3 = mapEarlyResponse(e5, n2);
            if (s3 !== undefined)
              return s3;
          });
        case "Error":
          return errorToResponse(e4, n2);
        case "Function":
          return mapCompactResponse(e4());
        case "Number":
        case "Boolean":
          return new Response(e4.toString());
        case "Cookie":
          if (e4 instanceof Cookie)
            return new Response(e4.value, n2);
          return new Response(e4?.toString(), n2);
        default:
          let i = JSON.stringify(e4);
          if (i.charCodeAt(0) === 123)
            return new Response(JSON.stringify(e4), { headers: { "Content-Type": "application/json" } });
          return new Response(i);
      }
  }
};
var mapCompactResponse = (e4) => {
  switch (e4?.$passthrough && (e4 = e4[e4.$passthrough]), e4?.constructor?.name) {
    case "String":
    case "Blob":
      return new Response(e4);
    case "Object":
    case "Array":
      return new Response(JSON.stringify(e4), { headers: { "content-type": "application/json" } });
    case "ReadableStream":
      return new Response(e4, { headers: { "Content-Type": "text/event-stream; charset=utf-8" } });
    case undefined:
      if (!e4)
        return new Response("");
      return new Response(JSON.stringify(e4), { headers: { "content-type": "application/json" } });
    case "Response":
      return e4;
    case "Error":
      return errorToResponse(e4);
    case "Promise":
      return e4.then((e5) => {
        let s4 = mapCompactResponse(e5);
        return s4 !== undefined ? s4 : new Response("");
      });
    case "Function":
      return mapCompactResponse(e4());
    case "Number":
    case "Boolean":
      return new Response(e4.toString());
    default:
      let s3 = JSON.stringify(e4);
      if (s3.charCodeAt(0) === 123)
        return new Response(JSON.stringify(e4), { headers: { "Content-Type": "application/json" } });
      return new Response(s3);
  }
};
var errorToResponse = (e4, s3) => new Response(JSON.stringify({ name: e4?.name, message: e4?.message, cause: e4?.cause }), { status: s3?.status !== 200 ? s3?.status ?? 500 : 500, headers: s3?.headers });

// node_modules/elysia/dist/compose.js
var import_fast_querystring = __toESM(require_lib(), 1);
var u = new Headers().toJSON;
var d = RegExp(" (\\w+) = context", "g");
var p = { value: 0 };
var m = ({ hasTrace: e5, hasTraceSet: t4 = false, addFn: r5, condition: s3 = {} }) => (r5(`
const reporter = getReporter()
`), e5) ? (e6, { name: n2, attribute: o = "", unit: a3 = 0 } = {}) => {
  let i = e6.indexOf("."), c = i === -1;
  if (e6 !== "request" && e6 !== "response" && !s3[c ? e6 : e6.slice(0, i)])
    return () => {
      t4 && e6 === "afterHandle" && (r5("reporter.emit('event',{id,event:'exit',type:'begin',time:0})"), r5(`
await traceDone
`));
    };
  c ? n2 ||= e6 : n2 ||= "anonymous", r5("\n" + `reporter.emit('event', { 
					id,
					event: '${e6}',
					type: 'begin',
					name: '${n2}',
					time: performance.now(),
					${c ? `unit: ${a3},` : ""}
					${o}
				})`.replace(/(\t| |\n)/g, "") + "\n");
  let l = false;
  return () => {
    !l && (l = true, r5("\n" + `reporter.emit('event', {
							id,
							event: '${e6}',
							type: 'end',
							time: performance.now()
						})`.replace(/(\t| |\n)/g, "") + "\n"), t4 && e6 === "afterHandle" && (r5(`
reporter.emit('event',{id,event:'exit',type:'begin',time:0})
`), r5("\nawait traceDone\n")));
  };
} : () => () => {
};
var hasReturn = (e5) => {
  let t4 = e5.indexOf(")");
  return e5.charCodeAt(t4 + 2) === 61 && e5.charCodeAt(t4 + 5) !== 123 || e5.includes("return");
};
var h = (e5, { injectResponse: t4 = "" } = {}) => ({ composeValidation: (t5, r5 = `c.${t5}`) => e5 ? `c.set.status = 400; throw new ValidationError(
'${t5}',
${t5},
${r5}
)` : `c.set.status = 400; return new ValidationError(
	'${t5}',
	${t5},
	${r5}
).toResponse(c.set.headers)`, composeResponseValidation: (r5 = "r") => {
  let s3 = e5 ? `throw new ValidationError(
'response',
response[c.set.status],
${r5}
)` : `return new ValidationError(
'response',
response[c.set.status],
${r5}
).toResponse(c.set.headers)`;
  return `
${t4}
		if(response[c.set.status]?.Check(${r5}) === false) { 
	if(!(response instanceof Error))
		${s3}
}
`;
} });
var isFnUse = (e5, t4) => {
  t4 = (t4 = t4.trimStart()).replaceAll(/^async /g, ""), /^(\w+)\(/g.test(t4) && (t4 = t4.slice(t4.indexOf("(")));
  let r5 = t4.charCodeAt(0) === 40 || t4.startsWith("function") ? t4.slice(t4.indexOf("(") + 1, t4.indexOf(")")) : t4.slice(0, t4.indexOf("=") - 1);
  if (r5 === "")
    return false;
  let s3 = r5.charCodeAt(0) === 123 ? r5.indexOf("...") : -1;
  if (r5.charCodeAt(0) === 123) {
    if (r5.includes(e5))
      return true;
    if (s3 === -1)
      return false;
  }
  if (t4.match(RegExp(`${r5}(.${e5}|\\["${e5}"\\])`)))
    return true;
  let n2 = s3 !== -1 ? r5.slice(s3 + 3, r5.indexOf(" ", s3 + 3)) : undefined;
  if (t4.match(RegExp(`${n2}(.${e5}|\\["${e5}"\\])`)))
    return true;
  let o = [r5];
  for (let e6 of (n2 && o.push(n2), t4.matchAll(d)))
    o.push(e6[1]);
  let a3 = RegExp(`{.*?} = (${o.join("|")})`, "g");
  for (let [r6] of t4.matchAll(a3))
    if (r6.includes(`{ ${e5}`) || r6.includes(`, ${e5}`))
      return true;
  return false;
};
var y = (e5) => {
  e5 = (e5 = e5.trimStart()).replaceAll(/^async /g, ""), /^(\w+)\(/g.test(e5) && (e5 = e5.slice(e5.indexOf("(")));
  let t4 = e5.charCodeAt(0) === 40 || e5.startsWith("function") ? e5.slice(e5.indexOf("(") + 1, e5.indexOf(")")) : e5.slice(0, e5.indexOf("=") - 1);
  if (t4 === "")
    return false;
  let r5 = t4.charCodeAt(0) === 123 ? t4.indexOf("...") : -1, s3 = r5 !== -1 ? t4.slice(r5 + 3, t4.indexOf(" ", r5 + 3)) : undefined, n2 = [t4];
  for (let t5 of (s3 && n2.push(s3), e5.matchAll(d)))
    n2.push(t5[1]);
  for (let t5 of n2)
    if (RegExp(`\\b\\w+\\([^)]*\\b${t5}\\b[^)]*\\)`).test(e5))
      return true;
  let o = RegExp(`{.*?} = (${n2.join("|")})`, "g");
  for (let [t5] of e5.matchAll(o))
    if (RegExp(`\\b\\w+\\([^)]*\\b${t5}\\b[^)]*\\)`).test(e5))
      return true;
  return false;
};
var $ = Symbol.for("TypeBox.Kind");
var hasType = (e5, t4) => {
  if (t4) {
    if (($ in t4) && t4[$] === e5)
      return true;
    if (t4.type === "object") {
      let r5 = t4.properties;
      for (let t5 of Object.keys(r5)) {
        let s3 = r5[t5];
        if (s3.type === "object") {
          if (hasType(e5, s3))
            return true;
        } else if (s3.anyOf) {
          for (let t6 = 0;t6 < s3.anyOf.length; t6++)
            if (hasType(e5, s3.anyOf[t6]))
              return true;
        }
        if (($ in s3) && s3[$] === e5)
          return true;
      }
      return false;
    }
    return t4.properties && ($ in t4.properties) && t4.properties[$] === e5;
  }
};
var g = Symbol.for("TypeBox.Transform");
var hasTransform = (e5) => {
  if (e5) {
    if (e5.type === "object" && e5.properties) {
      let t4 = e5.properties;
      for (let e6 of Object.keys(t4)) {
        let r5 = t4[e6];
        if (r5.type === "object") {
          if (hasTransform(r5))
            return true;
        } else if (r5.anyOf) {
          for (let e7 = 0;e7 < r5.anyOf.length; e7++)
            if (hasTransform(r5.anyOf[e7]))
              return true;
        }
        let s3 = g in r5;
        if (s3)
          return true;
      }
      return false;
    }
    return (g in e5) || e5.properties && (g in e5.properties);
  }
};
var b = (e5) => {
  if (!e5)
    return;
  let t4 = e5?.schema;
  if (t4 && ("anyOf" in t4)) {
    let e6 = false, r5 = t4.anyOf[0].type;
    for (let s3 of t4.anyOf)
      if (s3.type !== r5) {
        e6 = true;
        break;
      }
    if (!e6)
      return r5;
  }
  return e5.schema?.type;
};
var k = /(?:return|=>) \S*\(/g;
var isAsync = (e5) => e5.constructor.name === "AsyncFunction" || e5.toString().match(k);
var composeHandler = ({ path: d2, method: $2, hooks: g2, validator: k2, handler: w, handleError: x, definitions: q, schema: R, onRequest: H, config: v, getReporter: E }) => {
  let A = v.forceErrorEncapsulation || g2.error.length > 0 || typeof Bun == "undefined" || g2.onResponse.length > 0 || !!g2.trace.length, O = g2.onResponse.length ? `
;(async () => {${g2.onResponse.map((e5, t4) => `await res${t4}(c)`).join(";")}})();
` : "", F = g2.trace.map((e5) => e5.toString()), C = false;
  if (y(w.toString()) && (C = true), !C) {
    for (let [e5, t4] of Object.entries(g2))
      if (Array.isArray(t4) && t4.length && ["parse", "transform", "beforeHandle", "afterHandle", "onResponse"].includes(e5)) {
        for (let e6 of t4)
          if (typeof e6 == "function" && y(e6.toString())) {
            C = true;
            break;
          }
        if (C)
          break;
      }
  }
  let T = { parse: F.some((e5) => isFnUse("parse", e5)), transform: F.some((e5) => isFnUse("transform", e5)), handle: F.some((e5) => isFnUse("handle", e5)), beforeHandle: F.some((e5) => isFnUse("beforeHandle", e5)), afterHandle: F.some((e5) => isFnUse("afterHandle", e5)), error: A || F.some((e5) => isFnUse("error", e5)) }, j = g2.trace.length > 0, S = "", U = k2 || $2 !== "GET" && $2 !== "HEAD" ? [w, ...g2.transform, ...g2.beforeHandle, ...g2.afterHandle].map((e5) => e5.toString()) : [], D = $2 !== "GET" && $2 !== "HEAD" && (C || g2.type !== "none" && (!!k2.body || !!g2.type || U.some((e5) => isFnUse("body", e5)))), V = C || k2.headers || U.some((e5) => isFnUse("headers", e5)), I = C || k2.cookie || U.some((e5) => isFnUse("cookie", e5)), N = k2?.cookie?.schema, _ = "";
  if (N?.sign) {
    if (!N.secrets)
      throw Error(`t.Cookie required secret which is not set in (${$2}) ${d2}.`);
    let e5 = N.secrets ? typeof N.secrets == "string" ? N.secrets : N.secrets[0] : undefined;
    if (_ += `const _setCookie = c.set.cookie
		if(_setCookie) {`, N.sign === true)
      _ += `for(const [key, cookie] of Object.entries(_setCookie)) {
				c.set.cookie[key].value = await signCookie(cookie.value, '${e5}')
			}`;
    else
      for (let t4 of N.sign)
        _ += `if(_setCookie['${t4}']?.value) { c.set.cookie['${t4}'].value = await signCookie(_setCookie['${t4}'].value, '${e5}') }
`;
    _ += "}\n";
  }
  let { composeValidation: B, composeResponseValidation: P } = h(A);
  if (V && (S += u ? `c.headers = c.request.headers.toJSON()
` : `c.headers = {}
                for (const [key, value] of c.request.headers.entries())
					c.headers[key] = value
				`), I) {
    let e5 = (e6, t5) => {
      let r5 = N?.[e6] ?? t5;
      return r5 ? typeof r5 == "string" ? `${e6}: '${r5}',` : r5 instanceof Date ? `${e6}: new Date(${r5.getTime()}),` : `${e6}: ${r5},` : typeof t5 == "string" ? `${e6}: "${t5}",` : `${e6}: ${t5},`;
    }, t4 = N ? `{
			secret: ${N.secrets !== undefined ? typeof N.secrets == "string" ? `'${N.secrets}'` : "[" + N.secrets.reduce((e6, t5) => e6 + `'${t5}',`, "") + "]" : "undefined"},
			sign: ${N.sign === true || (N.sign !== undefined ? "[" + N.sign.reduce((e6, t5) => e6 + `'${t5}',`, "") + "]" : "undefined")},
			${e5("domain")}
			${e5("expires")}
			${e5("httpOnly")}
			${e5("maxAge")}
			${e5("path", "/")}
			${e5("priority")}
			${e5("sameSite")}
			${e5("secure")}
		}` : "undefined";
    V ? S += `
c.cookie = await parseCookie(c.set, c.headers.cookie, ${t4})
` : S += `
c.cookie = await parseCookie(c.set, c.request.headers.get('cookie'), ${t4})
`;
  }
  let W = C || k2.query || U.some((e5) => isFnUse("query", e5));
  W && (S += `const url = c.request.url

		if(c.qi !== -1) {
			c.query ??= parseQuery(url.substring(c.qi + 1))
		} else {
			c.query ??= {}
		}
		`);
  let G = g2.trace.map((e5) => e5.toString()), L = G.some((e5) => isFnUse("set", e5) || y(e5));
  C || g2.trace.some((e5) => isFnUse("set", e5.toString()));
  let Q = L || I || U.some((e5) => isFnUse("set", e5)) || H.some((e5) => isFnUse("set", e5.toString()));
  j && (S += "\nconst id = c.$$requestId\n");
  let J = m({ hasTrace: j, hasTraceSet: L, condition: T, addFn: (e5) => {
    S += e5;
  } });
  if (S += A ? "try {\n" : "", j) {
    S += `
const traceDone = Promise.all([`;
    for (let e5 = 0;e5 < g2.trace.length; e5++)
      S += `new Promise(r => { reporter.once(\`res\${id}.${e5}\`, r) }),`;
    S += `])
`;
  }
  let K = I || D || L || isAsync(w) || g2.parse.length > 0 || g2.afterHandle.some(isAsync) || g2.beforeHandle.some(isAsync) || g2.transform.some(isAsync), z = J("parse", { unit: g2.parse.length });
  if (D) {
    let e5 = b(k2?.body);
    if (g2.type && !Array.isArray(g2.type)) {
      if (g2.type)
        switch (g2.type) {
          case "json":
          case "application/json":
            S += `c.body = await c.request.json()
`;
            break;
          case "text":
          case "text/plain":
            S += `c.body = await c.request.text()
`;
            break;
          case "urlencoded":
          case "application/x-www-form-urlencoded":
            S += `c.body = parseQuery(await c.request.text())
`;
            break;
          case "arrayBuffer":
          case "application/octet-stream":
            S += `c.body = await c.request.arrayBuffer()
`;
            break;
          case "formdata":
          case "multipart/form-data":
            S += `c.body = {}

						const form = await c.request.formData()
						for (const key of form.keys()) {
							if (c.body[key])
								continue

							const value = form.getAll(key)
							if (value.length === 1)
								c.body[key] = value[0]
							else c.body[key] = value
						}
`;
        }
      g2.parse.length && (S += "}}");
    } else {
      let t4 = (() => {
        if (g2.parse.length && e5 && !Array.isArray(g2.type)) {
          let t5 = k2?.body?.schema;
          if (e5 === "object" && (hasType("File", t5) || hasType("Files", t5)))
            return `c.body = {}
		
								const form = await c.request.formData()
								for (const key of form.keys()) {
									if (c.body[key])
										continue
			
									const value = form.getAll(key)
									if (value.length === 1)
										c.body[key] = value[0]
									else c.body[key] = value
								}`;
        }
      })();
      if (t4)
        S += t4;
      else {
        if (S += "\n" + (V ? "let contentType = c.headers['content-type']" : "let contentType = c.request.headers.get('content-type')") + `
				if (contentType) {
					const index = contentType.indexOf(';')
					if (index !== -1) contentType = contentType.substring(0, index)
`, g2.parse.length) {
          S += `let used = false
`;
          let e6 = J("parse", { unit: g2.parse.length });
          for (let e7 = 0;e7 < g2.parse.length; e7++) {
            let t5 = J("parse.unit", { name: g2.parse[e7].name }), r5 = `bo${e7}`;
            e7 !== 0 && (S += `if(!used) {
`), S += `let ${r5} = parse[${e7}](c, contentType)
if(${r5} instanceof Promise) ${r5} = await ${r5}
if(${r5} !== undefined) { c.body = ${r5}; used = true }
`, t5(), e7 !== 0 && (S += "}");
          }
          e6();
        }
        g2.parse.length && (S += "if (!used)"), S += `
				switch (contentType) {
					case 'application/json':
						c.body = await c.request.json()
						break
				
					case 'text/plain':
						c.body = await c.request.text()
						break
				
					case 'application/x-www-form-urlencoded':
						c.body = parseQuery(await c.request.text())
						break
				
					case 'application/octet-stream':
						c.body = await c.request.arrayBuffer();
						break
				
					case 'multipart/form-data':
						c.body = {}
				
						const form = await c.request.formData()
						for (const key of form.keys()) {
							if (c.body[key])
								continue
				
							const value = form.getAll(key)
							if (value.length === 1)
								c.body[key] = value[0]
							else c.body[key] = value
						}
				
						break
					}
}
`;
      }
    }
    S += "\n";
  }
  if (z(), g2?.transform) {
    let e5 = J("transform", { unit: g2.transform.length });
    for (let e6 = 0;e6 < g2.transform.length; e6++) {
      let t4 = g2.transform[e6], r5 = J("transform.unit", { name: t4.name });
      t4.$elysia === "derive" ? S += isAsync(g2.transform[e6]) ? `Object.assign(c, await transform[${e6}](c));` : `Object.assign(c, transform[${e6}](c));` : S += isAsync(g2.transform[e6]) ? `await transform[${e6}](c);` : `transform[${e6}](c);`, r5();
    }
    e5();
  }
  if (k2 && (S += "\n", k2.headers && (S += `if(headers.Check(c.headers) === false) {
				${B("headers")}
			}`, hasTransform(k2.headers.schema) && (S += `
c.headers = headers.Decode(c.headers)
`)), k2.params && (S += `if(params.Check(c.params) === false) {
				${B("params")}
			}`, hasTransform(k2.params.schema) && (S += `
c.params = params.Decode(c.params)
`)), k2.query && (S += `if(query.Check(c.query) === false) {
				${B("query")} 
			}`, hasTransform(k2.query.schema) && (S += `
c.query = query.Decode(Object.assign({}, c.query))
`)), k2.body && (S += `if(body.Check(c.body) === false) { 
				${B("body")}
			}`, hasTransform(k2.body.schema) && (S += `
c.body = body.Decode(c.body)
`)), isNotEmpty(k2.cookie?.schema.properties ?? {}) && (S += `const cookieValue = {}
			for(const [key, value] of Object.entries(c.cookie))
				cookieValue[key] = value.value

			if(cookie.Check(cookieValue) === false) {
				${B("cookie", "cookieValue")}
			}`, hasTransform(k2.cookie.schema) && (S += `
c.cookie = params.Decode(c.cookie)
`))), g2?.beforeHandle) {
    let e5 = J("beforeHandle", { unit: g2.beforeHandle.length });
    for (let e6 = 0;e6 < g2.beforeHandle.length; e6++) {
      let t4 = J("beforeHandle.unit", { name: g2.beforeHandle[e6].name }), r5 = `be${e6}`, s3 = hasReturn(g2.beforeHandle[e6].toString());
      if (s3) {
        S += isAsync(g2.beforeHandle[e6]) ? `let ${r5} = await beforeHandle[${e6}](c);
` : `let ${r5} = beforeHandle[${e6}](c);
`, t4(), S += `if(${r5} !== undefined) {
`;
        let s4 = J("afterHandle", { unit: g2.transform.length });
        if (g2.afterHandle)
          for (let e7 = 0;e7 < g2.afterHandle.length; e7++) {
            let t5 = hasReturn(g2.afterHandle[e7].toString()), s5 = J("afterHandle.unit", { name: g2.afterHandle[e7].name });
            if (S += `c.response = ${r5}
`, t5) {
              let t6 = `af${e7}`;
              S += (isAsync(g2.afterHandle[e7]) ? `const ${t6} = await afterHandle[${e7}](c);
` : `const ${t6} = afterHandle[${e7}](c);
`) + `if(${t6} !== undefined) { c.response = ${r5} = ${t6} }
`;
            } else
              S += isAsync(g2.afterHandle[e7]) ? `await afterHandle[${e7}](c, ${r5});
` : `afterHandle[${e7}](c, ${r5});
`;
            s5();
          }
        s4(), k2.response && (S += P(r5)), S += _ + `return mapEarlyResponse(${r5}, c.set)}
`;
      } else
        S += isAsync(g2.beforeHandle[e6]) ? `await beforeHandle[${e6}](c);
` : `beforeHandle[${e6}](c);
`, t4();
    }
    e5();
  }
  if (g2?.afterHandle.length) {
    let e5 = J("handle", { name: w.name });
    g2.afterHandle.length ? S += isAsync(w) ? `let r = c.response = await handler(c);
` : `let r = c.response = handler(c);
` : S += isAsync(w) ? `let r = await handler(c);
` : `let r = handler(c);
`, e5();
    let t4 = J("afterHandle", { unit: g2.afterHandle.length });
    for (let e6 = 0;e6 < g2.afterHandle.length; e6++) {
      let r5 = `af${e6}`, s3 = hasReturn(g2.afterHandle[e6].toString()), n2 = J("afterHandle.unit", { name: g2.afterHandle[e6].name });
      s3 ? (k2.response ? S += isAsync(g2.afterHandle[e6]) ? `let ${r5} = await afterHandle[${e6}](c)
` : `let ${r5} = afterHandle[${e6}](c)
` : S += isAsync(g2.afterHandle[e6]) ? `let ${r5} = mapEarlyResponse(await afterHandle[${e6}](c), c.set)
` : `let ${r5} = mapEarlyResponse(afterHandle[${e6}](c), c.set)
`, n2(), k2.response ? (S += `if(${r5} !== undefined) {` + P(r5) + `${r5} = mapEarlyResponse(${r5}, c.set)
` + `if(${r5}) {`, t4(), L && (S += `${r5} = mapEarlyResponse(${r5}, c.set)
`), S += `return ${r5} } }`) : (S += `if(${r5}) {`, t4(), S += `return ${r5}}
`)) : (S += isAsync(g2.afterHandle[e6]) ? `await afterHandle[${e6}](c)
` : `afterHandle[${e6}](c)
`, n2());
    }
    t4(), S += `r = c.response
`, k2.response && (S += P()), S += _, Q ? S += `return mapResponse(r, c.set)
` : S += `return mapCompactResponse(r)
`;
  } else {
    let e5 = J("handle", { name: w.name });
    if (k2.response)
      S += isAsync(w) ? `const r = await handler(c);
` : `const r = handler(c);
`, e5(), S += P(), J("afterHandle")(), S += _, Q ? S += `return mapResponse(r, c.set)
` : S += `return mapCompactResponse(r)
`;
    else if (T.handle || I)
      S += isAsync(w) ? `let r = await handler(c);
` : `let r = handler(c);
`, e5(), J("afterHandle")(), S += _, Q ? S += `return mapResponse(r, c.set)
` : S += `return mapCompactResponse(r)
`;
    else {
      e5();
      let t4 = isAsync(w) ? "await handler(c) " : "handler(c)";
      J("afterHandle")(), Q ? S += `return mapResponse(${t4}, c.set)
` : S += `return mapCompactResponse(${t4})
`;
    }
  }
  if (A || O) {
    S += `
} catch(error) {`, K || (S += "return (async () => {"), S += `const set = c.set

		if (!set.status || set.status < 300) set.status = error?.status || 500
	`;
    let e5 = J("error", { unit: g2.error.length });
    if (g2.error.length) {
      S += `
				c.error = error
				c.code = error.code ?? error[ERROR_CODE] ?? "UNKNOWN"
			`;
      for (let e6 = 0;e6 < g2.error.length; e6++) {
        let t4 = `er${e6}`, r5 = J("error.unit", { name: g2.error[e6].name });
        S += `
let ${t4} = handleErrors[${e6}](c)
`, isAsync(g2.error[e6]) && (S += `if (${t4} instanceof Promise) ${t4} = await ${t4}
`), r5(), S += `${t4} = mapEarlyResponse(${t4}, set)
if (${t4}) {return ${t4} }
`;
      }
    }
    if (e5(), S += `return handleError(c, error)

`, K || (S += "})()"), S += "}", O || j) {
      S += " finally { ";
      let e6 = J("response", { unit: g2.onResponse.length });
      S += O, e6(), S += "}";
    }
  }
  S = `const { 
		handler,
		handleError,
		hooks: {
			transform,
			beforeHandle,
			afterHandle,
			parse,
			error: handleErrors,
			onResponse
		},
		validator: {
			body,
			headers,
			params,
			query,
			response,
			cookie
		},
		utils: {
			mapResponse,
			mapCompactResponse,
			mapEarlyResponse,
			parseQuery
		},
		error: {
			NotFoundError,
			ValidationError,
			InternalServerError
		},
		schema,
		definitions,
		ERROR_CODE,
		getReporter,
		requestId,
		parseCookie,
		signCookie
	} = hooks

	${g2.onResponse.length ? `const ${g2.onResponse.map((e5, t4) => `res${t4} = onResponse[${t4}]`).join(",")}` : ""}

	return ${K ? "async" : ""} function(c) {
		${R && q ? "c.schema = schema; c.defs = definitions;" : ""}
		${S}
	}`;
  let M = Function("hooks", S);
  return M({ handler: w, hooks: g2, validator: k2, handleError: x, utils: { mapResponse, mapCompactResponse, mapEarlyResponse, parseQuery: import_fast_querystring.parse }, error: { NotFoundError, ValidationError, InternalServerError }, schema: R, definitions: q, ERROR_CODE, getReporter: E, requestId: p, parseCookie, signCookie });
};
var composeGeneralHandler = (e5) => {
  let t4 = "", s3 = "";
  for (let r5 of Object.keys(e5.decorators))
    t4 += `,${r5}: app.decorators.${r5}`;
  let { router: n2, staticRouter: o } = e5, i = e5.event.trace.length > 0, c = `
	const route = find(request.method, path) ${n2.root.ALL ? '?? find("ALL", path)' : ""}
	if (route === null)
		return ${e5.event.error.length ? "app.handleError(ctx, notFound)" : `new Response(error404, {
					status: ctx.set.status === 200 ? 404 : ctx.set.status,
					headers: ctx.set.headers
				})`}

	ctx.params = route.params

	return route.store(ctx)`, l = "";
  for (let [e6, { code: t5, all: r5 }] of Object.entries(o.map))
    l += `case '${e6}':
switch(request.method) {
${t5}
${r5 ?? "default: break map"}}

`;
  let f = e5.event.request.some(isAsync);
  s3 += `const {
		app,
		app: { store, router, staticRouter, wsRouter },
		mapEarlyResponse,
		NotFoundError,
		requestId,
		getReporter
	} = data

	const notFound = new NotFoundError()

	${e5.event.request.length ? "const onRequest = app.event.request" : ""}

	${o.variables}

	const find = router.find.bind(router)
	const findWs = wsRouter.find.bind(wsRouter)
	const handleError = app.handleError.bind(this)

	${e5.event.error.length ? "" : "const error404 = notFound.message.toString()"}

	return ${f ? "async" : ""} function map(request) {
	`;
  let u2 = e5.event.trace.map((e6) => e6.toString()), d2 = m({ hasTrace: i, hasTraceSet: e5.event.trace.some((e6) => {
    let t5 = e6.toString();
    return isFnUse("set", t5) || y(t5);
  }), condition: { request: u2.some((e6) => isFnUse("request", e6) || y(e6)) }, addFn: (e6) => {
    s3 += e6;
  } });
  if (e5.event.request.length) {
    s3 += `
			${i ? "const id = +requestId.value++" : ""}

			const ctx = {
				request,
				store,
				set: {
					cookie: {},
					headers: {},
					status: 200
				}
				${i ? ",$$requestId: +id" : ""}
				${t4}
			}
		`;
    let r5 = d2("request", { attribute: "ctx", unit: e5.event.request.length });
    s3 += `try {
`;
    for (let t5 = 0;t5 < e5.event.request.length; t5++) {
      let r6 = e5.event.request[t5], n3 = hasReturn(r6.toString()), o2 = isAsync(r6), a3 = d2("request.unit", { name: e5.event.request[t5].name }), i2 = `re${t5}`;
      n3 ? (s3 += `const ${i2} = mapEarlyResponse(
					${o2 ? "await" : ""} onRequest[${t5}](ctx),
					ctx.set
				)
`, a3(), s3 += `if(${i2}) return ${i2}
`) : (s3 += `${o2 ? "await" : ""} onRequest[${t5}](ctx)
`, a3());
    }
    s3 += `} catch (error) {
			return app.handleError(ctx, error)
		}`, r5(), s3 += `
		const url = request.url,
		s = url.indexOf('/', 11),
		i = ctx.qi = url.indexOf('?', s + 1),
		path = ctx.path = i === -1 ? url.substring(s) : url.substring(s, i);`;
  } else
    s3 += `
		const url = request.url,
			s = url.indexOf('/', 11),
			qi = url.indexOf('?', s + 1),
			path = qi === -1
				? url.substring(s)
				: url.substring(s, qi)

		${i ? "const id = +requestId.value++" : ""}

		const ctx = {
			request,
			store,
			qi,
			path,
			set: {
				headers: {},
				status: 200
			}
			${i ? ",$$requestId: id" : ""}
			${t4}
		}`, d2("request", { unit: e5.event.request.length, attribute: u2.some((e6) => isFnUse("context", e6)) || u2.some((e6) => isFnUse("store", e6)) || u2.some((e6) => isFnUse("set", e6)) ? "ctx" : "" })();
  let { wsPaths: h2, wsRouter: $2 } = e5;
  if (Object.keys(h2).length || $2.history.length) {
    for (let [e6, t5] of (s3 += `
			if(request.method === 'GET') {
				switch(path) {`, Object.entries(h2)))
      s3 += `
					case '${e6}':
						if(request.headers.get('upgrade') === 'websocket')
							return st${t5}(ctx)
							
						break`;
    s3 += `
				default:
					if(request.headers.get('upgrade') === 'websocket') {
						const route = findWs('ws', path)

						if(route) {
							ctx.params = route.params

							return route.store(ctx)
						}
					}

					break
			}
		}
`;
  }
  return s3 += `
		map: switch(path) {
			${l}

			default:
				break
		}

		${c}
	}`, e5.handleError = composeErrorHandler(e5), Function("data", s3)({
    app: e5,
    mapEarlyResponse,
    NotFoundError,
    getReporter: () => e5.reporter,
    requestId: p
  });
};
var composeErrorHandler = (e5) => {
  let t4 = `const {
		app: { event: { error: onError, onResponse: res } },
		mapResponse,
		ERROR_CODE
	} = inject

	return ${e5.event.error.find(isAsync) ? "async" : ""} function(context, error) {
		const { set } = context

		context.code = error.code
		context.error = error
		`;
  for (let r5 = 0;r5 < e5.event.error.length; r5++) {
    let s3 = e5.event.error[r5], n2 = `${isAsync(s3) ? "await " : ""}onError[${r5}](context)`;
    hasReturn(s3.toString()) ? t4 += `const r${r5} = ${n2}; if(r${r5} !== undefined) {
				if(set.status === 200) set.status = error.status
				return mapResponse(r${r5}, set)
			}
` : t4 += n2 + "\n";
  }
  return Function("inject", t4 += `if(error.constructor.name === "ValidationError" || error.constructor.name === "TransformDecodeError") {
		set.status = error.status ?? 400
		return new Response(
			error.message, 
			{ headers: set.headers, status: set.status }
		)
	} else {
		return new Response(error.message, { headers: set.headers, status: error.status ?? 500 })
	}
}`)({ app: e5, mapResponse, ERROR_CODE });
};

// node_modules/elysia/dist/dynamic-handle.js
var import_fast_querystring2 = __toESM(require_lib(), 1);
var createDynamicHandler = (n2) => async (l) => {
  let f;
  let c = { cookie: {}, status: 200, headers: {} };
  n2.decorators ? ((f = n2.decorators).request = l, f.set = c, f.store = n2.store) : f = { set: c, store: n2.store, request: l };
  let d2 = l.url, u2 = d2.indexOf("/", 11), h2 = d2.indexOf("?", u2 + 1), m2 = h2 === -1 ? d2.substring(u2) : d2.substring(u2, h2);
  try {
    let u3;
    for (let t4 = 0;t4 < n2.event.request.length; t4++) {
      let r5 = n2.event.request[t4], a3 = r5(f);
      if (a3 instanceof Promise && (a3 = await a3), a3 = mapEarlyResponse(a3, c))
        return a3;
    }
    let p2 = n2.dynamicRouter.find(l.method, m2) ?? n2.dynamicRouter.find("ALL", m2);
    if (!p2)
      throw new NotFoundError;
    let { handle: w, hooks: g2, validator: k2, content: y2 } = p2.store;
    if (l.method !== "GET" && l.method !== "HEAD") {
      if (y2)
        switch (y2) {
          case "application/json":
            u3 = await l.json();
            break;
          case "text/plain":
            u3 = await l.text();
            break;
          case "application/x-www-form-urlencoded":
            u3 = import_fast_querystring2.parse(await l.text());
            break;
          case "application/octet-stream":
            u3 = await l.arrayBuffer();
            break;
          case "multipart/form-data":
            u3 = {};
            let e5 = await l.formData();
            for (let t4 of e5.keys()) {
              if (u3[t4])
                continue;
              let r5 = e5.getAll(t4);
              r5.length === 1 ? u3[t4] = r5[0] : u3[t4] = r5;
            }
        }
      else {
        let e5 = l.headers.get("content-type");
        if (e5) {
          let t4 = e5.indexOf(";");
          t4 !== -1 && (e5 = e5.slice(0, t4));
          for (let t5 = 0;t5 < n2.event.parse.length; t5++) {
            let r5 = n2.event.parse[t5](f, e5);
            if (r5 instanceof Promise && (r5 = await r5), r5) {
              u3 = r5;
              break;
            }
          }
          if (u3 === undefined)
            switch (e5) {
              case "application/json":
                u3 = await l.json();
                break;
              case "text/plain":
                u3 = await l.text();
                break;
              case "application/x-www-form-urlencoded":
                u3 = import_fast_querystring2.parse(await l.text());
                break;
              case "application/octet-stream":
                u3 = await l.arrayBuffer();
                break;
              case "multipart/form-data":
                u3 = {};
                let r5 = await l.formData();
                for (let e6 of r5.keys()) {
                  if (u3[e6])
                    continue;
                  let t5 = r5.getAll(e6);
                  t5.length === 1 ? u3[e6] = t5[0] : u3[e6] = t5;
                }
            }
        }
      }
    }
    for (let [e5, t4] of (f.body = u3, f.params = p2?.params || undefined, f.query = h2 === -1 ? {} : import_fast_querystring2.parse(d2.substring(h2 + 1)), f.headers = {}, l.headers.entries()))
      f.headers[e5] = t4;
    let v = k2?.cookie?.schema;
    f.cookie = await parseCookie(f.set, f.headers.cookie, v ? { secret: v.secrets !== undefined ? typeof v.secrets == "string" ? v.secrets : v.secrets.join(",") : undefined, sign: v.sign === true || (v.sign !== undefined ? typeof v.sign == "string" ? v.sign : v.sign.join(",") : undefined) } : undefined);
    for (let e5 = 0;e5 < g2.transform.length; e5++) {
      let t4 = g2.transform[e5](f);
      g2.transform[e5].$elysia === "derive" ? t4 instanceof Promise ? Object.assign(f, await t4) : Object.assign(f, t4) : t4 instanceof Promise && await t4;
    }
    if (k2) {
      if (k2.headers) {
        let e5 = {};
        for (let t4 in l.headers)
          e5[t4] = l.headers.get(t4);
        if (k2.headers.Check(e5) === false)
          throw new ValidationError("header", k2.headers, e5);
      }
      if (k2.params?.Check(f.params) === false)
        throw new ValidationError("params", k2.params, f.params);
      if (k2.query?.Check(f.query) === false)
        throw new ValidationError("query", k2.query, f.query);
      if (k2.cookie) {
        let e5 = {};
        for (let [t4, r5] of Object.entries(f.cookie))
          e5[t4] = r5.value;
        if (k2.cookie?.Check(e5) === false)
          throw new ValidationError("cookie", k2.cookie, e5);
      }
      if (k2.body?.Check(u3) === false)
        throw new ValidationError("body", k2.body, u3);
    }
    for (let t4 = 0;t4 < g2.beforeHandle.length; t4++) {
      let r5 = g2.beforeHandle[t4](f);
      if (r5 instanceof Promise && (r5 = await r5), r5 !== undefined) {
        f.response = r5;
        for (let e5 = 0;e5 < g2.afterHandle.length; e5++) {
          let t6 = g2.afterHandle[e5](f);
          t6 instanceof Promise && (t6 = await t6), t6 && (r5 = t6);
        }
        let t5 = mapEarlyResponse(r5, f.set);
        if (t5)
          return t5;
      }
    }
    let b2 = w(f);
    if (b2 instanceof Promise && (b2 = await b2), g2.afterHandle.length) {
      f.response = b2;
      for (let t4 = 0;t4 < g2.afterHandle.length; t4++) {
        let r5 = g2.afterHandle[t4](f);
        r5 instanceof Promise && (r5 = await r5);
        let s4 = mapEarlyResponse(r5, f.set);
        if (s4 !== undefined) {
          let e5 = k2?.response?.[b2.status];
          if (e5?.Check(s4) === false)
            throw new ValidationError("response", e5, s4);
          return s4;
        }
      }
    } else {
      let e5 = k2?.response?.[b2.status];
      if (e5?.Check(b2) === false)
        throw new ValidationError("response", e5, b2);
    }
    if (f.set.cookie && v?.sign) {
      let e5 = v.secrets ? typeof v.secrets == "string" ? v.secrets : v.secrets[0] : undefined;
      if (v.sign === true)
        for (let [e6, t4] of Object.entries(f.set.cookie))
          f.set.cookie[e6].value = await signCookie(t4.value, "${secret}");
      else
        for (let t4 of v.sign)
          (t4 in v.properties) && f.set.cookie[t4]?.value && (f.set.cookie[t4].value = await signCookie(f.set.cookie[t4].value, e5));
    }
    return mapResponse(b2, f.set);
  } catch (e5) {
    return e5.status && (c.status = e5.status), n2.handleError(f, e5);
  } finally {
    for (let e5 of n2.event.onResponse)
      await e5(f);
  }
};
var createDynamicErrorHandler = (e5) => async (r5, a3) => {
  let s4 = Object.assign(r5, { error: a3, code: a3.code });
  s4.set = r5.set;
  for (let a4 = 0;a4 < e5.event.error.length; a4++) {
    let o = e5.event.error[a4](s4);
    if (o instanceof Promise && (o = await o), o != null)
      return mapResponse(o, r5.set);
  }
  return new Response(typeof a3.cause == "string" ? a3.cause : a3.message, { headers: r5.set.headers, status: a3.status ?? 500 });
};

// node_modules/elysia/dist/type-system.js
var exports_type_system = {};
__export(exports_type_system, {
  t: () => {
    {
      return typebox2.Type;
    }
  },
  ElysiaType: () => {
    {
      return ElysiaType;
    }
  }
});
var system = __toESM(require_system2(), 1);
var typebox2 = __toESM(require_typebox(), 1);
var value3 = __toESM(require_value2(), 1);
__reExport(exports_type_system, __toESM(require_system2(), 1));
__reExport(exports_type_system, __toESM(require_compiler2(), 1));
try {
  system.TypeSystem.Format("email", (e6) => /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i.test(e6)), system.TypeSystem.Format("uuid", (e6) => /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e6)), system.TypeSystem.Format("date", (e6) => !Number.isNaN(new Date(e6).getTime())), system.TypeSystem.Format("date-time", (e6) => !Number.isNaN(new Date(e6).getTime()));
} catch (e6) {
}
var a3 = (e6) => {
  if (typeof e6 == "string")
    switch (e6.slice(-1)) {
      case "k":
        return 1024 * +e6.slice(0, e6.length - 1);
      case "m":
        return 1048576 * +e6.slice(0, e6.length - 1);
      default:
        return +e6;
    }
  return e6;
};
var s4 = (e6, t5) => {
  if (!(t5 instanceof Blob) || e6.minSize && t5.size < a3(e6.minSize) || e6.maxSize && t5.size > a3(e6.maxSize))
    return false;
  if (e6.extension) {
    if (typeof e6.extension == "string") {
      if (!t5.type.startsWith(e6.extension))
        return false;
    } else {
      for (let r6 = 0;r6 < e6.extension.length; r6++)
        if (t5.type.startsWith(e6.extension[r6]))
          return true;
      return false;
    }
  }
  return true;
};
var o = system.TypeSystem.Type("Files", (e6, t5) => {
  if (!Array.isArray(t5))
    return s4(e6, t5);
  if (e6.minItems && t5.length < e6.minItems || e6.maxItems && t5.length > e6.maxItems)
    return false;
  for (let r6 = 0;r6 < t5.length; r6++)
    if (!s4(e6, t5[r6]))
      return false;
  return true;
});
typebox2.FormatRegistry.Set("numeric", (e6) => !!e6 && !isNaN(+e6)), typebox2.FormatRegistry.Set("ObjectString", (e6) => {
  let t5 = e6.charCodeAt(0);
  if ((t5 === 9 || t5 === 10 || t5 === 32) && (t5 = e6.trimStart().charCodeAt(0)), t5 !== 123 && t5 !== 91)
    return false;
  try {
    return JSON.parse(e6), true;
  } catch {
    return false;
  }
});
var ElysiaType = {
  Numeric: (e6) => {
    let r6 = typebox2.Type.Number(e6);
    return typebox2.Type.Transform(typebox2.Type.Union([typebox2.Type.String({ format: "numeric", default: 0 }), r6])).Decode((t5) => {
      let a4 = +t5;
      if (isNaN(a4))
        return t5;
      if (e6 && !value3.Value.Check(r6, a4))
        throw new ValidationError("property", r6, a4);
      return a4;
    }).Encode((e7) => e7);
  },
  ObjectString: (e6, r6) => typebox2.Type.Transform(typebox2.Type.Union([typebox2.Type.String({ format: "ObjectString", default: "" }), typebox2.Type.Object(e6, r6)])).Decode((e7) => {
    if (typeof e7 == "string")
      try {
        return JSON.parse(e7);
      } catch {
      }
    return e7;
  }).Encode((e7) => JSON.stringify(e7)),
  File: system.TypeSystem.Type("File", s4),
  Files: (e6 = {}) => typebox2.Type.Transform(o(e6)).Decode((e7) => Array.isArray(e7) ? e7 : [e7]).Encode((e7) => e7),
  Nullable: (e6) => typebox2.Type.Union([typebox2.Type.Null(), e6]),
  MaybeEmpty: (e6) => typebox2.Type.Union([typebox2.Type.Null(), typebox2.Type.Undefined(), e6]),
  Cookie: (e6, r6) => typebox2.Type.Object(e6, r6)
};
typebox2.Type.ObjectString = ElysiaType.ObjectString, typebox2.Type.Numeric = ElysiaType.Numeric, typebox2.Type.File = (e6 = {}) => ElysiaType.File({ default: "File", ...e6, extension: e6?.type, type: "string", format: "binary" }), typebox2.Type.Files = (e6 = {}) => ElysiaType.Files({ ...e6, elysiaMeta: "Files", default: "Files", extension: e6?.type, type: "array", items: { ...e6, default: "Files", type: "string", format: "binary" } }), typebox2.Type.Nullable = (e6) => ElysiaType.Nullable(e6), typebox2.Type.MaybeEmpty = ElysiaType.MaybeEmpty, typebox2.Type.Cookie = ElysiaType.Cookie;

// node_modules/elysia/dist/index.js
class q {
  config;
  dependencies = {};
  store = {};
  decorators = {};
  definitions = { type: {}, error: {} };
  schema = {};
  event = { start: [], request: [], parse: [], transform: [], beforeHandle: [], afterHandle: [], onResponse: [], trace: [], error: [], stop: [] };
  reporter = new eventemitter3_default;
  server = null;
  getServer() {
    return this.server;
  }
  validator = null;
  router = new Memoirist;
  wsRouter = new Memoirist;
  routes = [];
  staticRouter = { handlers: [], variables: "", map: {}, all: "" };
  wsPaths = {};
  dynamicRouter = new Memoirist;
  lazyLoadModules = [];
  path = "";
  constructor(e6) {
    this.config = { forceErrorEncapsulation: true, prefix: "", aot: true, strictPath: false, scoped: false, cookie: {}, ...e6, seed: e6?.seed === undefined ? "" : e6?.seed };
  }
  add(e6, t5, r6, s5, { allowMeta: i2 = false, skipPrefix: a4 = false } = { allowMeta: false, skipPrefix: false }) {
    for (let h2 of (typeof t5 == "string" && (t5 = [t5]), t5)) {
      if (h2 = h2 === "" ? h2 : h2.charCodeAt(0) === 47 ? h2 : `/${h2}`, this.config.prefix && !a4 && (h2 = this.config.prefix + h2), s5?.type)
        switch (s5.type) {
          case "text":
            s5.type = "text/plain";
            break;
          case "json":
            s5.type = "application/json";
            break;
          case "formdata":
            s5.type = "multipart/form-data";
            break;
          case "urlencoded":
            s5.type = "application/x-www-form-urlencoded";
            break;
          case "arrayBuffer":
            s5.type = "application/octet-stream";
        }
      let t6 = this.definitions.type, l = getSchemaValidator(s5?.cookie ?? this.validator?.cookie, { dynamic: !this.config.aot, models: t6, additionalProperties: true });
      isNotEmpty(this.config.cookie ?? {}) && (l ? l.schema = mergeCookie(l.schema, this.config.cookie ?? {}) : l = getSchemaValidator(typebox2.Type.Cookie({}, this.config.cookie), { dynamic: !this.config.aot, models: t6, additionalProperties: true }));
      let p2 = { body: getSchemaValidator(s5?.body ?? this.validator?.body, { dynamic: !this.config.aot, models: t6 }), headers: getSchemaValidator(s5?.headers ?? this.validator?.headers, { dynamic: !this.config.aot, models: t6, additionalProperties: true }), params: getSchemaValidator(s5?.params ?? this.validator?.params, { dynamic: !this.config.aot, models: t6 }), query: getSchemaValidator(s5?.query ?? this.validator?.query, { dynamic: !this.config.aot, models: t6 }), cookie: l, response: getResponseSchemaValidator(s5?.response ?? this.validator?.response, { dynamic: !this.config.aot, models: t6 }) }, m2 = mergeHook(this.event, s5), v = h2.endsWith("/") ? h2.slice(0, h2.length - 1) : h2 + "/";
      if (this.config.aot === false) {
        this.dynamicRouter.add(e6, h2, { validator: p2, hooks: m2, content: s5?.type, handle: r6 }), this.config.strictPath === false && this.dynamicRouter.add(e6, v, { validator: p2, hooks: m2, content: s5?.type, handle: r6 }), this.routes.push({ method: e6, path: h2, composed: null, handler: r6, hooks: m2 });
        return;
      }
      let y2 = composeHandler({ path: h2, method: e6, hooks: m2, validator: p2, handler: r6, handleError: this.handleError, onRequest: this.event.request, config: this.config, definitions: i2 ? this.definitions.type : undefined, schema: i2 ? this.schema : undefined, getReporter: () => this.reporter }), g2 = this.routes.findIndex((t7) => t7.path === h2 && t7.method === e6);
      if (g2 !== -1 && this.routes.splice(g2, 1), this.routes.push({ method: e6, path: h2, composed: y2, handler: r6, hooks: m2 }), e6 === "$INTERNALWS") {
        let e7 = this.config.strictPath ? undefined : h2.endsWith("/") ? h2.slice(0, h2.length - 1) : h2 + "/";
        if (h2.indexOf(":") === -1 && h2.indexOf("*") === -1) {
          let t7 = this.staticRouter.handlers.length;
          this.staticRouter.handlers.push(y2), this.staticRouter.variables += `const st${t7} = staticRouter.handlers[${t7}]
`, this.wsPaths[h2] = t7, e7 && (this.wsPaths[e7] = t7);
        } else
          this.wsRouter.add("ws", h2, y2), e7 && this.wsRouter.add("ws", e7, y2);
        return;
      }
      if (h2.indexOf(":") === -1 && h2.indexOf("*") === -1) {
        let t7 = this.staticRouter.handlers.length;
        this.staticRouter.handlers.push(y2), this.staticRouter.variables += `const st${t7} = staticRouter.handlers[${t7}]
`, this.staticRouter.map[h2] || (this.staticRouter.map[h2] = { code: "" }), e6 === "ALL" ? this.staticRouter.map[h2].all = `default: return st${t7}(ctx)
` : this.staticRouter.map[h2].code = `case '${e6}': return st${t7}(ctx)
${this.staticRouter.map[h2].code}`, this.config.strictPath || (this.staticRouter.map[v] || (this.staticRouter.map[v] = { code: "" }), e6 === "ALL" ? this.staticRouter.map[v].all = `default: return st${t7}(ctx)
` : this.staticRouter.map[v].code = `case '${e6}': return st${t7}(ctx)
${this.staticRouter.map[v].code}`);
      } else
        this.router.add(e6, h2, y2), this.config.strictPath || this.router.add(e6, h2.endsWith("/") ? h2.slice(0, h2.length - 1) : h2 + "/", y2);
    }
  }
  onStart(e6) {
    return this.on("start", e6), this;
  }
  onRequest(e6) {
    return this.on("request", e6), this;
  }
  onParse(e6) {
    return this.on("parse", e6), this;
  }
  onTransform(e6) {
    return this.on("transform", e6), this;
  }
  onBeforeHandle(e6) {
    return this.on("beforeHandle", e6), this;
  }
  onAfterHandle(e6) {
    return this.on("afterHandle", e6), this;
  }
  onResponse(e6) {
    return this.on("response", e6), this;
  }
  trace(e6) {
    return this.reporter.on("event", createTraceListener(() => this.reporter, this.event.trace.length, e6)), this.on("trace", e6), this;
  }
  addError(e6, t5) {
    return this.error(e6, t5);
  }
  error(e6, t5) {
    switch (typeof e6) {
      case "string":
        return t5.prototype[ERROR_CODE] = e6, this.definitions.error[e6] = t5, this;
      case "function":
        return this.definitions.error = e6(this.definitions.error), this;
    }
    for (let [t6, r6] of Object.entries(e6))
      r6.prototype[ERROR_CODE] = t6, this.definitions.error[t6] = r6;
    return this;
  }
  onError(e6) {
    return this.on("error", e6), this;
  }
  onStop(e6) {
    return this.on("stop", e6), this;
  }
  on(e6, t5) {
    for (let r6 of Array.isArray(t5) ? t5 : [t5])
      switch (r6 = asGlobal(r6), e6) {
        case "start":
          this.event.start.push(r6);
          break;
        case "request":
          this.event.request.push(r6);
          break;
        case "response":
          this.event.onResponse.push(r6);
          break;
        case "parse":
          this.event.parse.splice(this.event.parse.length - 1, 0, r6);
          break;
        case "transform":
          this.event.transform.push(r6);
          break;
        case "beforeHandle":
          this.event.beforeHandle.push(r6);
          break;
        case "afterHandle":
          this.event.afterHandle.push(r6);
          break;
        case "trace":
          this.event.trace.push(r6);
          break;
        case "error":
          this.event.error.push(r6);
          break;
        case "stop":
          this.event.stop.push(r6);
      }
    return this;
  }
  group(e6, t5, r6) {
    let s5 = new q({ ...this.config, prefix: "" });
    s5.store = this.store, s5.getServer = () => this.server;
    let i2 = typeof t5 == "object", o2 = (i2 ? r6 : t5)(s5);
    return this.decorators = mergeDeep(this.decorators, s5.decorators), o2.event.request.length && (this.event.request = [...this.event.request, ...o2.event.request]), o2.event.onResponse.length && (this.event.onResponse = [...this.event.onResponse, ...o2.event.onResponse]), this.model(o2.definitions.type), Object.values(s5.routes).forEach(({ method: r7, path: s6, handler: n2, hooks: a4 }) => {
      s6 = (i2 ? "" : this.config.prefix) + e6 + s6, i2 ? this.add(r7, s6, n2, mergeHook(t5, { ...a4, error: a4.error ? Array.isArray(a4.error) ? [...a4.error, ...o2.event.error] : [a4.error, ...o2.event.error] : o2.event.error })) : this.add(r7, s6, n2, mergeHook(a4, { error: o2.event.error }), { skipPrefix: true });
    }), this;
  }
  guard(e6, t5) {
    if (!t5)
      return this.event = mergeLifeCycle(this.event, e6), this.validator = { body: e6.body, headers: e6.headers, params: e6.params, query: e6.query, response: e6.response }, this;
    let r6 = new q;
    r6.store = this.store;
    let s5 = t5(r6);
    return this.decorators = mergeDeep(this.decorators, r6.decorators), s5.event.request.length && (this.event.request = [...this.event.request, ...s5.event.request]), s5.event.onResponse.length && (this.event.onResponse = [...this.event.onResponse, ...s5.event.onResponse]), this.model(s5.definitions.type), Object.values(r6.routes).forEach(({ method: t6, path: r7, handler: i2, hooks: o2 }) => {
      this.add(t6, r7, i2, mergeHook(e6, { ...o2, error: o2.error ? Array.isArray(o2.error) ? [...o2.error, ...s5.event.error] : [o2.error, ...s5.event.error] : s5.event.error }));
    }), this;
  }
  use(e6) {
    return e6 instanceof Promise ? (this.lazyLoadModules.push(e6.then((e7) => typeof e7 == "function" ? e7(this) : typeof e7.default == "function" ? e7.default(this) : this._use(e7)).then((e7) => e7.compile())), this) : this._use(e6);
  }
  _use(e6) {
    if (typeof e6 == "function") {
      let t6 = e6(this);
      return t6 instanceof Promise ? (this.lazyLoadModules.push(t6.then((e7) => {
        if (e7 instanceof q) {
          for (let { method: t7, path: r7, handler: s6, hooks: i2 } of (this.compile(), Object.values(e7.routes)))
            this.add(t7, r7, s6, mergeHook(i2, { error: e7.event.error }));
          return e7;
        }
        return typeof e7 == "function" ? e7(this) : typeof e7.default == "function" ? e7.default(this) : this._use(e7);
      }).then((e7) => e7.compile())), this) : t6;
    }
    let { name: t5, seed: r6 } = e6.config;
    e6.getServer = () => this.getServer();
    let s5 = e6.config.scoped;
    if (s5) {
      if (t5) {
        (t5 in this.dependencies) || (this.dependencies[t5] = []);
        let e7 = r6 !== undefined ? checksum(t5 + JSON.stringify(r6)) : 0;
        if (this.dependencies[t5].some((t6) => e7 === t6))
          return this;
        this.dependencies[t5].push(e7);
      }
      e6.model(this.definitions.type), e6.error(this.definitions.error), e6.onRequest((e7) => {
        Object.assign(e7, this.decorators), Object.assign(e7.store, this.store);
      }), e6.event.trace = [...this.event.trace, ...e6.event.trace], e6.config.aot && e6.compile();
      let s6 = this.mount(e6.fetch);
      return this.routes = this.routes.concat(s6.routes), this;
    }
    for (let t6 of (e6.reporter = this.reporter, e6.event.trace))
      this.trace(t6);
    for (let { method: t6, path: r7, handler: s6, hooks: i2 } of (this.decorate(e6.decorators), this.state(e6.store), this.model(e6.definitions.type), this.error(e6.definitions.error), Object.values(e6.routes)))
      this.add(t6, r7, s6, mergeHook(i2, { error: e6.event.error }));
    if (!s5) {
      if (t5) {
        (t5 in this.dependencies) || (this.dependencies[t5] = []);
        let s6 = r6 !== undefined ? checksum(t5 + JSON.stringify(r6)) : 0;
        if (this.dependencies[t5].some((e7) => s6 === e7))
          return this;
        this.dependencies[t5].push(s6), this.event = mergeLifeCycle(this.event, filterGlobalHook(e6.event), s6);
      } else
        this.event = mergeLifeCycle(this.event, filterGlobalHook(e6.event));
    }
    return this;
  }
  mount(e6, t5) {
    if (typeof e6 == "function" || e6.length === 0 || e6 === "/") {
      let r7 = typeof e6 == "function" ? e6 : t5, s6 = async ({ request: e7, path: t6 }) => r7(new Request(getHostname(e7.url) + t6 || "/", e7));
      return this.all("/", s6, { type: "none" }), this.all("/*", s6, { type: "none" }), this;
    }
    let r6 = e6.length, s5 = async ({ request: e7, path: s6 }) => t5(new Request(getHostname(e7.url) + s6.slice(r6) || "/", e7));
    return this.all(e6, s5, { type: "none" }), this.all(e6 + (e6.endsWith("/") ? "*" : "/*"), s5, { type: "none" }), this;
  }
  get(e6, t5, r6) {
    return this.add("GET", e6, t5, r6), this;
  }
  post(e6, t5, r6) {
    return this.add("POST", e6, t5, r6), this;
  }
  put(e6, t5, r6) {
    return this.add("PUT", e6, t5, r6), this;
  }
  patch(e6, t5, r6) {
    return this.add("PATCH", e6, t5, r6), this;
  }
  delete(e6, t5, r6) {
    return this.add("DELETE", e6, t5, r6), this;
  }
  options(e6, t5, r6) {
    return this.add("OPTIONS", e6, t5, r6), this;
  }
  all(e6, t5, r6) {
    return this.add("ALL", e6, t5, r6), this;
  }
  head(e6, t5, r6) {
    return this.add("HEAD", e6, t5, r6), this;
  }
  connect(e6, t5, r6) {
    return this.add("CONNECT", e6, t5, r6), this;
  }
  ws(e6, t5) {
    let r6 = t5.transformMessage ? Array.isArray(t5.transformMessage) ? t5.transformMessage : [t5.transformMessage] : undefined, i2 = null, o2 = getSchemaValidator(t5?.body, { models: this.definitions.type }), n2 = getSchemaValidator(t5?.response, { models: this.definitions.type }), a4 = (e7) => {
      if (typeof e7 == "string") {
        let t6 = e7?.charCodeAt(0);
        if (t6 === 47 || t6 === 123)
          try {
            e7 = JSON.parse(e7);
          } catch {
          }
        else
          Number.isNaN(+e7) || (e7 = +e7);
      }
      if (r6?.length)
        for (let t6 = 0;t6 < r6.length; t6++) {
          let s5 = r6[t6](e7);
          s5 !== undefined && (e7 = s5);
        }
      return e7;
    };
    return this.route("$INTERNALWS", e6, (e7) => {
      let { set: r7, path: h2, qi: c, headers: d2, query: f, params: l } = e7;
      if (i2 === null && (i2 = this.getServer()), !i2?.upgrade(e7.request, { headers: typeof t5.upgrade == "function" ? t5.upgrade(e7) : t5.upgrade, data: { validator: n2, open(r8) {
        t5.open?.(new ElysiaWS(r8, e7));
      }, message: (r8, i3) => {
        let n3 = a4(i3);
        if (o2?.Check(n3) === false)
          return void r8.send(new ValidationError("message", o2, n3).message);
        t5.message?.(new ElysiaWS(r8, e7), n3);
      }, drain(r8) {
        t5.drain?.(new ElysiaWS(r8, e7));
      }, close(r8, i3, o3) {
        t5.close?.(new ElysiaWS(r8, e7), i3, o3);
      } } }))
        return r7.status = 400, "Expected a websocket connection";
    }, { beforeHandle: t5.beforeHandle, transform: t5.transform, headers: t5.headers, params: t5.params, query: t5.query }), this;
  }
  route(e6, t5, r6, { config: s5, ...i2 } = { config: { allowMeta: false } }) {
    return this.add(e6, t5, r6, i2, s5), this;
  }
  state(e6, t5) {
    switch (typeof e6) {
      case "object":
        return this.store = mergeDeep(this.store, e6), this;
      case "function":
        return this.store = e6(this.store), this;
    }
    return (e6 in this.store) || (this.store[e6] = t5), this;
  }
  decorate(e6, t5) {
    switch (typeof e6) {
      case "object":
        return this.decorators = mergeDeep(this.decorators, e6), this;
      case "function":
        return this.decorators = e6(this.decorators), this;
    }
    return (e6 in this.decorators) || (this.decorators[e6] = t5), this;
  }
  derive(e6) {
    return e6.$elysia = "derive", this.onTransform(e6);
  }
  model(e6, t5) {
    switch (typeof e6) {
      case "object":
        return Object.entries(e6).forEach(([e7, t6]) => {
          (e7 in this.definitions.type) || (this.definitions.type[e7] = t6);
        }), this;
      case "function":
        return this.definitions.type = e6(this.definitions.type), this;
    }
    return this.definitions.type[e6] = t5, this;
  }
  mapDerive(e6) {
    return e6.$elysia = "derive", this.onTransform(e6);
  }
  affix(e6, t5, r6) {
    if (r6 === "")
      return this;
    let s5 = ["_", "-", " "], i2 = (e7) => e7[0].toUpperCase() + e7.slice(1), o2 = e6 === "prefix" ? (e7, t6) => s5.includes(e7.at(-1) ?? "") ? e7 + t6 : e7 + i2(t6) : s5.includes(r6.at(-1) ?? "") ? (e7, t6) => t6 + e7 : (e7, t6) => t6 + i2(e7), n2 = (e7) => {
      let t6 = {};
      switch (e7) {
        case "decorator":
          for (let e8 in this.decorators)
            t6[o2(r6, e8)] = this.decorators[e8];
          this.decorators = t6;
          break;
        case "state":
          for (let e8 in this.store)
            t6[o2(r6, e8)] = this.store[e8];
          this.store = t6;
          break;
        case "model":
          for (let e8 in this.definitions.type)
            t6[o2(r6, e8)] = this.definitions.type[e8];
          this.definitions.type = t6;
          break;
        case "error":
          for (let e8 in this.definitions.error)
            t6[o2(r6, e8)] = this.definitions.error[e8];
          this.definitions.error = t6;
      }
    }, a4 = Array.isArray(t5) ? t5 : [t5];
    for (let e7 of a4.some((e8) => e8 === "all") ? ["decorator", "state", "model", "error"] : a4)
      n2(e7);
    return this;
  }
  prefix(e6, t5) {
    return this.affix("prefix", e6, t5);
  }
  suffix(e6, t5) {
    return this.affix("suffix", e6, t5);
  }
  compile() {
    return this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this), typeof this.server?.reload == "function" && this.server.reload({ ...this.server, fetch: this.fetch }), this;
  }
  handle = async (e6) => this.fetch(e6);
  fetch = (e6) => (this.fetch = this.config.aot ? composeGeneralHandler(this) : createDynamicHandler(this))(e6);
  handleError = async (e6, t5) => (this.handleError = this.config.aot ? composeErrorHandler(this) : createDynamicErrorHandler(this))(e6, t5);
  outerErrorHandler = (e6) => new Response(e6.message || e6.name || "Error", {
    status: e6?.status ?? 500
  });
  listen = (e6, t5) => {
    if (!Bun)
      throw Error("Bun to run");
    if (this.compile(), typeof e6 == "string" && Number.isNaN(e6 = +e6.trim()))
      throw Error("Port must be a numeric value");
    let r6 = this.fetch, s5 = typeof e6 == "object" ? { development: !isProduction, ...this.config.serve, ...e6, websocket: { ...this.config.websocket, ...websocket }, fetch: r6, error: this.outerErrorHandler } : { development: !isProduction, ...this.config.serve, websocket: { ...this.config.websocket, ...websocket }, port: e6, fetch: r6, error: this.outerErrorHandler };
    if (typeof Bun == "undefined")
      throw Error(".listen() is designed to run on Bun only. If you are running Elysia in other environment please use a dedicated plugin or export the handler via Elysia.fetch");
    return this.server = Bun?.serve(s5), this.event.start.length && (async () => {
      let e7 = Object.assign(this.decorators, { store: this.store, app: this });
      for (let t6 = 0;t6 < this.event.transform.length; t6++) {
        let r7 = this.event.transform[t6](e7);
        this.event.transform[t6].$elysia === "derive" && (r7 instanceof Promise ? Object.assign(e7, await r7) : Object.assign(e7, r7));
      }
      for (let t6 = 0;t6 < this.event.start.length; t6++)
        this.event.start[t6](e7);
    })(), t5 && t5(this.server), Promise.all(this.lazyLoadModules).then(() => {
      Bun?.gc(false);
    }), this;
  };
  stop = async () => {
    if (!this.server)
      throw Error("Elysia isn't running. Call `app.listen` to start the server.");
    this.server.stop(), this.event.stop.length && (async () => {
      let e6 = Object.assign(this.decorators, { store: this.store, app: this });
      for (let t5 = 0;t5 < this.event.transform.length; t5++) {
        let r6 = this.event.transform[t5](e6);
        this.event.transform[t5].$elysia === "derive" && (r6 instanceof Promise ? Object.assign(e6, await r6) : Object.assign(e6, r6));
      }
      for (let t5 = 0;t5 < this.event.stop.length; t5++)
        this.event.stop[t5](e6);
    })();
  };
  get modules() {
    return Promise.all(this.lazyLoadModules);
  }
}

// node_modules/@elysiajs/swagger/dist/utils.js
var typebox3 = __toESM(require_typebox(), 1);
var import_lodash = __toESM(require_lodash(), 1);
var toOpenAPIPath = (path) => path.split("/").map((x) => x.startsWith(":") ? `{${x.slice(1, x.length)}}` : x).join("/");
var mapProperties = (name, schema, models) => {
  if (schema === undefined)
    return [];
  if (typeof schema === "string")
    if (schema in models)
      schema = models[schema];
    else
      throw new Error(`Can't find model ${schema}`);
  return Object.entries(schema?.properties ?? []).map(([key, value4]) => {
    const { type: valueType = undefined, ...rest } = value4;
    return {
      ...rest,
      schema: { type: valueType },
      in: name,
      name: key,
      required: schema.required?.includes(key) ?? false
    };
  });
};
var mapTypesResponse = (types, schema) => {
  if (typeof schema === "object" && ["void", "undefined", "null"].includes(schema.type))
    return;
  const responses = {};
  for (const type of types)
    responses[type] = {
      schema: typeof schema === "string" ? {
        $ref: `#/components/schemas/${schema}`
      } : { ...schema }
    };
  return responses;
};
var capitalize = (word) => word.charAt(0).toUpperCase() + word.slice(1);
var generateOperationId = (method, paths) => {
  let operationId = method.toLowerCase();
  if (paths === "/")
    return operationId + "Index";
  for (const path of paths.split("/")) {
    if (path.charCodeAt(0) === 123) {
      operationId += "By" + capitalize(path.slice(1, -1));
    } else {
      operationId += capitalize(path);
    }
  }
  return operationId;
};
var registerSchemaPath = ({ schema, path, method, hook, models }) => {
  if (hook)
    hook = import_lodash.default(hook);
  const contentType = hook?.type ?? [
    "application/json",
    "multipart/form-data",
    "text/plain"
  ];
  path = toOpenAPIPath(path);
  const contentTypes = typeof contentType === "string" ? [contentType] : contentType ?? ["application/json"];
  const bodySchema = hook?.body;
  const paramsSchema = hook?.params;
  const headerSchema = hook?.headers;
  const querySchema = hook?.query;
  let responseSchema = hook?.response;
  if (typeof responseSchema === "object") {
    if (typebox3.Kind in responseSchema) {
      const { type, properties, required, additionalProperties, ...rest } = responseSchema;
      responseSchema = {
        "200": {
          ...rest,
          description: rest.description,
          content: mapTypesResponse(contentTypes, type === "object" || type === "array" ? {
            type,
            properties,
            required
          } : responseSchema)
        }
      };
    } else {
      Object.entries(responseSchema).forEach(([key, value4]) => {
        if (typeof value4 === "string") {
          if (!models[value4])
            return;
          const { type, properties, required, additionalProperties: _, ...rest } = models[value4];
          responseSchema[key] = {
            ...rest,
            description: rest.description,
            content: mapTypesResponse(contentTypes, value4)
          };
        } else {
          const { type, properties, required, additionalProperties, ...rest } = value4;
          responseSchema[key] = {
            ...rest,
            description: rest.description,
            content: mapTypesResponse(contentTypes, {
              type,
              properties,
              required
            })
          };
        }
      });
    }
  } else if (typeof responseSchema === "string") {
    if (!(responseSchema in models))
      return;
    const { type, properties, required, additionalProperties: _, ...rest } = models[responseSchema];
    responseSchema = {
      "200": {
        ...rest,
        content: mapTypesResponse(contentTypes, responseSchema)
      }
    };
  }
  const parameters = [
    ...mapProperties("header", headerSchema, models),
    ...mapProperties("path", paramsSchema, models),
    ...mapProperties("query", querySchema, models)
  ];
  schema[path] = {
    ...schema[path] ? schema[path] : {},
    [method.toLowerCase()]: {
      ...headerSchema || paramsSchema || querySchema || bodySchema ? { parameters } : {},
      ...responseSchema ? {
        responses: responseSchema
      } : {},
      operationId: hook?.detail?.operationId ?? generateOperationId(method, path),
      ...hook?.detail,
      ...bodySchema ? {
        requestBody: {
          content: mapTypesResponse(contentTypes, typeof bodySchema === "string" ? {
            $ref: `#/components/schemas/${bodySchema}`
          } : bodySchema)
        }
      } : null
    }
  };
};
var filterPaths = (paths, { excludeStaticFile = true, exclude = [] }) => {
  const newPaths = {};
  for (const [key, value4] of Object.entries(paths))
    if (!exclude.some((x) => {
      if (typeof x === "string")
        return key === x;
      return x.test(key);
    }) && !key.includes("/swagger") && !key.includes("*") && (excludeStaticFile ? !key.includes(".") : true)) {
      Object.keys(value4).forEach((method) => {
        const schema = value4[method];
        if (key.includes("{")) {
          if (!schema.parameters)
            schema.parameters = [];
          schema.parameters = [
            ...key.split("/").filter((x) => x.startsWith("{") && !schema.parameters.find((params) => params.in === "path" && params.name === x.slice(1, x.length - 1))).map((x) => ({
              schema: { type: "string" },
              in: "path",
              name: x.slice(1, x.length - 1),
              required: true
            })),
            ...schema.parameters
          ];
        }
        if (!schema.responses)
          schema.responses = {
            200: {}
          };
      });
      newPaths[key] = value4;
    }
  return newPaths;
};

// node_modules/@elysiajs/swagger/dist/index.js
var swagger = ({ documentation = {}, version = "5.9.0", excludeStaticFile = true, path = "/swagger", exclude = [], swaggerOptions = {}, theme = `https://unpkg.com/swagger-ui-dist@${version}/swagger-ui.css`, autoDarkMode = true } = {
  documentation: {},
  version: "5.9.0",
  excludeStaticFile: true,
  path: "/swagger",
  exclude: [],
  swaggerOptions: {},
  autoDarkMode: true
}) => (app) => {
  const schema = {};
  let totalRoutes = 0;
  if (!version)
    version = `https://unpkg.com/swagger-ui-dist@${version}/swagger-ui.css`;
  const info = {
    title: "Elysia Documentation",
    description: "Development documentation",
    version: "0.0.0",
    ...documentation.info
  };
  const pathWithPrefix = `${app.config.prefix}${path}`;
  app.get(path, () => {
    const combinedSwaggerOptions = {
      url: `${pathWithPrefix}/json`,
      dom_id: "#swagger-ui",
      ...swaggerOptions
    };
    const stringifiedSwaggerOptions = JSON.stringify(combinedSwaggerOptions, (key, value4) => {
      if (typeof value4 == "function") {
        return;
      } else {
        return value4;
      }
    });
    return new Response(`<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>${info.title}</title>
    <meta
        name="description"
        content="${info.description}"
    />
    <meta
        name="og:description"
        content="${info.description}"
    />
    ${autoDarkMode && typeof theme === "string" ? `
    <style>
        @media (prefers-color-scheme: dark) {
            body {
                background-color: #222;
                color: #faf9a;
            }
            .swagger-ui {
                filter: invert(92%) hue-rotate(180deg);
            }

            .swagger-ui .microlight {
                filter: invert(100%) hue-rotate(180deg);
            }
        }
    </style>` : ""}
    ${typeof theme === "string" ? `<link rel="stylesheet" href="${theme}" />` : `<link rel="stylesheet" media="(prefers-color-scheme: light)" href="${theme.light}" />
<link rel="stylesheet" media="(prefers-color-scheme: dark)" href="${theme.dark}" />`}
</head>
<body>
    <div id="swagger-ui"></div>
    <script src="https://unpkg.com/swagger-ui-dist@${version}/swagger-ui-bundle.js" crossorigin></script>
    <script>
        window.onload = () => {
            window.ui = SwaggerUIBundle(${stringifiedSwaggerOptions});
        };
    </script>
</body>
</html>`, {
      headers: {
        "content-type": "text/html; charset=utf8"
      }
    });
  }).get(`${path}/json`, () => {
    const routes = app.routes;
    if (routes.length !== totalRoutes) {
      totalRoutes = routes.length;
      routes.forEach((route) => {
        registerSchemaPath({
          schema,
          hook: route.hooks,
          method: route.method,
          path: route.path,
          models: app.definitions?.type,
          contentType: route.hooks.type
        });
      });
    }
    return {
      openapi: "3.0.3",
      ...{
        ...documentation,
        info: {
          title: "Elysia Documentation",
          description: "Development documentation",
          version: "0.0.0",
          ...documentation.info
        }
      },
      paths: filterPaths(schema, {
        excludeStaticFile,
        exclude: Array.isArray(exclude) ? exclude : [exclude]
      }),
      components: {
        ...documentation.components,
        schemas: {
          ...app.definitions?.type,
          ...documentation.components?.schemas
        }
      }
    };
  });
  return app;
};

// node_modules/jose/dist/browser/runtime/webcrypto.js
var webcrypto_default = crypto;
var isCryptoKey = (key) => key instanceof CryptoKey;

// node_modules/jose/dist/browser/lib/buffer_utils.js
function concat(...buffers) {
  const size = buffers.reduce((acc, { length }) => acc + length, 0);
  const buf = new Uint8Array(size);
  let i2 = 0;
  buffers.forEach((buffer) => {
    buf.set(buffer, i2);
    i2 += buffer.length;
  });
  return buf;
}
var encoder = new TextEncoder;
var decoder = new TextDecoder;
var MAX_INT32 = 2 ** 32;

// node_modules/jose/dist/browser/runtime/base64url.js
var encodeBase64 = (input) => {
  let unencoded = input;
  if (typeof unencoded === "string") {
    unencoded = encoder.encode(unencoded);
  }
  const CHUNK_SIZE = 32768;
  const arr = [];
  for (let i2 = 0;i2 < unencoded.length; i2 += CHUNK_SIZE) {
    arr.push(String.fromCharCode.apply(null, unencoded.subarray(i2, i2 + CHUNK_SIZE)));
  }
  return btoa(arr.join(""));
};
var encode2 = (input) => {
  return encodeBase64(input).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
};
var decodeBase64 = (encoded) => {
  const binary = atob(encoded);
  const bytes = new Uint8Array(binary.length);
  for (let i2 = 0;i2 < binary.length; i2++) {
    bytes[i2] = binary.charCodeAt(i2);
  }
  return bytes;
};
var decode2 = (input) => {
  let encoded = input;
  if (encoded instanceof Uint8Array) {
    encoded = decoder.decode(encoded);
  }
  encoded = encoded.replace(/-/g, "+").replace(/_/g, "/").replace(/\s/g, "");
  try {
    return decodeBase64(encoded);
  } catch (_a) {
    throw new TypeError("The input to be decoded is not correctly encoded.");
  }
};

// node_modules/jose/dist/browser/util/errors.js
class JOSEError extends Error {
  static get code() {
    return "ERR_JOSE_GENERIC";
  }
  constructor(message) {
    var _a;
    super(message);
    this.code = "ERR_JOSE_GENERIC";
    this.name = this.constructor.name;
    (_a = Error.captureStackTrace) === null || _a === undefined || _a.call(Error, this, this.constructor);
  }
}

class JWTClaimValidationFailed extends JOSEError {
  static get code() {
    return "ERR_JWT_CLAIM_VALIDATION_FAILED";
  }
  constructor(message, claim = "unspecified", reason = "unspecified") {
    super(message);
    this.code = "ERR_JWT_CLAIM_VALIDATION_FAILED";
    this.claim = claim;
    this.reason = reason;
  }
}

class JWTExpired extends JOSEError {
  static get code() {
    return "ERR_JWT_EXPIRED";
  }
  constructor(message, claim = "unspecified", reason = "unspecified") {
    super(message);
    this.code = "ERR_JWT_EXPIRED";
    this.claim = claim;
    this.reason = reason;
  }
}

class JOSEAlgNotAllowed extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JOSE_ALG_NOT_ALLOWED";
  }
  static get code() {
    return "ERR_JOSE_ALG_NOT_ALLOWED";
  }
}

class JOSENotSupported extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JOSE_NOT_SUPPORTED";
  }
  static get code() {
    return "ERR_JOSE_NOT_SUPPORTED";
  }
}
class JWSInvalid extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JWS_INVALID";
  }
  static get code() {
    return "ERR_JWS_INVALID";
  }
}

class JWTInvalid extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JWT_INVALID";
  }
  static get code() {
    return "ERR_JWT_INVALID";
  }
}
Symbol.asyncIterator;
class JWSSignatureVerificationFailed extends JOSEError {
  constructor() {
    super(...arguments);
    this.code = "ERR_JWS_SIGNATURE_VERIFICATION_FAILED";
    this.message = "signature verification failed";
  }
  static get code() {
    return "ERR_JWS_SIGNATURE_VERIFICATION_FAILED";
  }
}

// node_modules/jose/dist/browser/lib/crypto_key.js
var unusable = function(name, prop = "algorithm.name") {
  return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);
};
var isAlgorithm = function(algorithm, name) {
  return algorithm.name === name;
};
var getHashLength = function(hash) {
  return parseInt(hash.name.slice(4), 10);
};
var getNamedCurve = function(alg) {
  switch (alg) {
    case "ES256":
      return "P-256";
    case "ES384":
      return "P-384";
    case "ES512":
      return "P-521";
    default:
      throw new Error("unreachable");
  }
};
var checkUsage = function(key, usages) {
  if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {
    let msg = "CryptoKey does not support this operation, its usages must include ";
    if (usages.length > 2) {
      const last = usages.pop();
      msg += `one of ${usages.join(", ")}, or ${last}.`;
    } else if (usages.length === 2) {
      msg += `one of ${usages[0]} or ${usages[1]}.`;
    } else {
      msg += `${usages[0]}.`;
    }
    throw new TypeError(msg);
  }
};
function checkSigCryptoKey(key, alg, ...usages) {
  switch (alg) {
    case "HS256":
    case "HS384":
    case "HS512": {
      if (!isAlgorithm(key.algorithm, "HMAC"))
        throw unusable("HMAC");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "RS256":
    case "RS384":
    case "RS512": {
      if (!isAlgorithm(key.algorithm, "RSASSA-PKCS1-v1_5"))
        throw unusable("RSASSA-PKCS1-v1_5");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "PS256":
    case "PS384":
    case "PS512": {
      if (!isAlgorithm(key.algorithm, "RSA-PSS"))
        throw unusable("RSA-PSS");
      const expected = parseInt(alg.slice(2), 10);
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    case "EdDSA": {
      if (key.algorithm.name !== "Ed25519" && key.algorithm.name !== "Ed448") {
        throw unusable("Ed25519 or Ed448");
      }
      break;
    }
    case "ES256":
    case "ES384":
    case "ES512": {
      if (!isAlgorithm(key.algorithm, "ECDSA"))
        throw unusable("ECDSA");
      const expected = getNamedCurve(alg);
      const actual = key.algorithm.namedCurve;
      if (actual !== expected)
        throw unusable(expected, "algorithm.namedCurve");
      break;
    }
    default:
      throw new TypeError("CryptoKey does not support this operation");
  }
  checkUsage(key, usages);
}

// node_modules/jose/dist/browser/lib/invalid_key_input.js
var message = function(msg, actual, ...types) {
  if (types.length > 2) {
    const last = types.pop();
    msg += `one of type ${types.join(", ")}, or ${last}.`;
  } else if (types.length === 2) {
    msg += `one of type ${types[0]} or ${types[1]}.`;
  } else {
    msg += `of type ${types[0]}.`;
  }
  if (actual == null) {
    msg += ` Received ${actual}`;
  } else if (typeof actual === "function" && actual.name) {
    msg += ` Received function ${actual.name}`;
  } else if (typeof actual === "object" && actual != null) {
    if (actual.constructor && actual.constructor.name) {
      msg += ` Received an instance of ${actual.constructor.name}`;
    }
  }
  return msg;
};
function withAlg(alg, actual, ...types) {
  return message(`Key for the ${alg} algorithm must be `, actual, ...types);
}
var invalid_key_input_default = (actual, ...types) => {
  return message("Key must be ", actual, ...types);
};

// node_modules/jose/dist/browser/runtime/is_key_like.js
var is_key_like_default = (key) => {
  return isCryptoKey(key);
};
var types = ["CryptoKey"];

// node_modules/jose/dist/browser/lib/is_disjoint.js
var isDisjoint = (...headers) => {
  const sources = headers.filter(Boolean);
  if (sources.length === 0 || sources.length === 1) {
    return true;
  }
  let acc;
  for (const header of sources) {
    const parameters = Object.keys(header);
    if (!acc || acc.size === 0) {
      acc = new Set(parameters);
      continue;
    }
    for (const parameter of parameters) {
      if (acc.has(parameter)) {
        return false;
      }
      acc.add(parameter);
    }
  }
  return true;
};
var is_disjoint_default = isDisjoint;

// node_modules/jose/dist/browser/lib/is_object.js
var isObjectLike = function(value4) {
  return typeof value4 === "object" && value4 !== null;
};
function isObject(input) {
  if (!isObjectLike(input) || Object.prototype.toString.call(input) !== "[object Object]") {
    return false;
  }
  if (Object.getPrototypeOf(input) === null) {
    return true;
  }
  let proto = input;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(input) === proto;
}

// node_modules/jose/dist/browser/runtime/check_key_length.js
var check_key_length_default = (alg, key) => {
  if (alg.startsWith("RS") || alg.startsWith("PS")) {
    const { modulusLength } = key.algorithm;
    if (typeof modulusLength !== "number" || modulusLength < 2048) {
      throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);
    }
  }
};

// node_modules/jose/dist/browser/lib/check_key_type.js
var symmetricTypeCheck = (alg, key) => {
  if (key instanceof Uint8Array)
    return;
  if (!is_key_like_default(key)) {
    throw new TypeError(withAlg(alg, key, ...types, "Uint8Array"));
  }
  if (key.type !== "secret") {
    throw new TypeError(`${types.join(" or ")} instances for symmetric algorithms must be of type "secret"`);
  }
};
var asymmetricTypeCheck = (alg, key, usage) => {
  if (!is_key_like_default(key)) {
    throw new TypeError(withAlg(alg, key, ...types));
  }
  if (key.type === "secret") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);
  }
  if (usage === "sign" && key.type === "public") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);
  }
  if (usage === "decrypt" && key.type === "public") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);
  }
  if (key.algorithm && usage === "verify" && key.type === "private") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);
  }
  if (key.algorithm && usage === "encrypt" && key.type === "private") {
    throw new TypeError(`${types.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`);
  }
};
var checkKeyType = (alg, key, usage) => {
  const symmetric = alg.startsWith("HS") || alg === "dir" || alg.startsWith("PBES2") || /^A\d{3}(?:GCM)?KW$/.test(alg);
  if (symmetric) {
    symmetricTypeCheck(alg, key);
  } else {
    asymmetricTypeCheck(alg, key, usage);
  }
};
var check_key_type_default = checkKeyType;

// node_modules/jose/dist/browser/lib/validate_crit.js
var validateCrit = function(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {
  if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {
    throw new Err('"crit" (Critical) Header Parameter MUST be integrity protected');
  }
  if (!protectedHeader || protectedHeader.crit === undefined) {
    return new Set;
  }
  if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some((input) => typeof input !== "string" || input.length === 0)) {
    throw new Err('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');
  }
  let recognized;
  if (recognizedOption !== undefined) {
    recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);
  } else {
    recognized = recognizedDefault;
  }
  for (const parameter of protectedHeader.crit) {
    if (!recognized.has(parameter)) {
      throw new JOSENotSupported(`Extension Header Parameter "${parameter}" is not recognized`);
    }
    if (joseHeader[parameter] === undefined) {
      throw new Err(`Extension Header Parameter "${parameter}" is missing`);
    } else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {
      throw new Err(`Extension Header Parameter "${parameter}" MUST be integrity protected`);
    }
  }
  return new Set(protectedHeader.crit);
};
var validate_crit_default = validateCrit;

// node_modules/jose/dist/browser/lib/validate_algorithms.js
var validateAlgorithms = (option, algorithms) => {
  if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some((s5) => typeof s5 !== "string"))) {
    throw new TypeError(`"${option}" option must be an array of strings`);
  }
  if (!algorithms) {
    return;
  }
  return new Set(algorithms);
};
var validate_algorithms_default = validateAlgorithms;

// node_modules/jose/dist/browser/runtime/subtle_dsa.js
function subtleDsa(alg, algorithm) {
  const hash = `SHA-${alg.slice(-3)}`;
  switch (alg) {
    case "HS256":
    case "HS384":
    case "HS512":
      return { hash, name: "HMAC" };
    case "PS256":
    case "PS384":
    case "PS512":
      return { hash, name: "RSA-PSS", saltLength: alg.slice(-3) >> 3 };
    case "RS256":
    case "RS384":
    case "RS512":
      return { hash, name: "RSASSA-PKCS1-v1_5" };
    case "ES256":
    case "ES384":
    case "ES512":
      return { hash, name: "ECDSA", namedCurve: algorithm.namedCurve };
    case "EdDSA":
      return { name: algorithm.name };
    default:
      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);
  }
}

// node_modules/jose/dist/browser/runtime/get_sign_verify_key.js
function getCryptoKey(alg, key, usage) {
  if (isCryptoKey(key)) {
    checkSigCryptoKey(key, alg, usage);
    return key;
  }
  if (key instanceof Uint8Array) {
    if (!alg.startsWith("HS")) {
      throw new TypeError(invalid_key_input_default(key, ...types));
    }
    return webcrypto_default.subtle.importKey("raw", key, { hash: `SHA-${alg.slice(-3)}`, name: "HMAC" }, false, [usage]);
  }
  throw new TypeError(invalid_key_input_default(key, ...types, "Uint8Array"));
}

// node_modules/jose/dist/browser/runtime/verify.js
var verify = async (alg, key, signature, data) => {
  const cryptoKey = await getCryptoKey(alg, key, "verify");
  check_key_length_default(alg, cryptoKey);
  const algorithm = subtleDsa(alg, cryptoKey.algorithm);
  try {
    return await webcrypto_default.subtle.verify(algorithm, cryptoKey, signature, data);
  } catch (_a) {
    return false;
  }
};
var verify_default = verify;

// node_modules/jose/dist/browser/jws/flattened/verify.js
async function flattenedVerify(jws, key, options) {
  var _a;
  if (!isObject(jws)) {
    throw new JWSInvalid("Flattened JWS must be an object");
  }
  if (jws.protected === undefined && jws.header === undefined) {
    throw new JWSInvalid('Flattened JWS must have either of the "protected" or "header" members');
  }
  if (jws.protected !== undefined && typeof jws.protected !== "string") {
    throw new JWSInvalid("JWS Protected Header incorrect type");
  }
  if (jws.payload === undefined) {
    throw new JWSInvalid("JWS Payload missing");
  }
  if (typeof jws.signature !== "string") {
    throw new JWSInvalid("JWS Signature missing or incorrect type");
  }
  if (jws.header !== undefined && !isObject(jws.header)) {
    throw new JWSInvalid("JWS Unprotected Header incorrect type");
  }
  let parsedProt = {};
  if (jws.protected) {
    try {
      const protectedHeader = decode2(jws.protected);
      parsedProt = JSON.parse(decoder.decode(protectedHeader));
    } catch (_b) {
      throw new JWSInvalid("JWS Protected Header is invalid");
    }
  }
  if (!is_disjoint_default(parsedProt, jws.header)) {
    throw new JWSInvalid("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
  }
  const joseHeader = {
    ...parsedProt,
    ...jws.header
  };
  const extensions = validate_crit_default(JWSInvalid, new Map([["b64", true]]), options === null || options === undefined ? undefined : options.crit, parsedProt, joseHeader);
  let b64 = true;
  if (extensions.has("b64")) {
    b64 = parsedProt.b64;
    if (typeof b64 !== "boolean") {
      throw new JWSInvalid('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
    }
  }
  const { alg } = joseHeader;
  if (typeof alg !== "string" || !alg) {
    throw new JWSInvalid('JWS "alg" (Algorithm) Header Parameter missing or invalid');
  }
  const algorithms = options && validate_algorithms_default("algorithms", options.algorithms);
  if (algorithms && !algorithms.has(alg)) {
    throw new JOSEAlgNotAllowed('"alg" (Algorithm) Header Parameter not allowed');
  }
  if (b64) {
    if (typeof jws.payload !== "string") {
      throw new JWSInvalid("JWS Payload must be a string");
    }
  } else if (typeof jws.payload !== "string" && !(jws.payload instanceof Uint8Array)) {
    throw new JWSInvalid("JWS Payload must be a string or an Uint8Array instance");
  }
  let resolvedKey = false;
  if (typeof key === "function") {
    key = await key(parsedProt, jws);
    resolvedKey = true;
  }
  check_key_type_default(alg, key, "verify");
  const data = concat(encoder.encode((_a = jws.protected) !== null && _a !== undefined ? _a : ""), encoder.encode("."), typeof jws.payload === "string" ? encoder.encode(jws.payload) : jws.payload);
  let signature;
  try {
    signature = decode2(jws.signature);
  } catch (_c) {
    throw new JWSInvalid("Failed to base64url decode the signature");
  }
  const verified = await verify_default(alg, key, signature, data);
  if (!verified) {
    throw new JWSSignatureVerificationFailed;
  }
  let payload;
  if (b64) {
    try {
      payload = decode2(jws.payload);
    } catch (_d) {
      throw new JWSInvalid("Failed to base64url decode the payload");
    }
  } else if (typeof jws.payload === "string") {
    payload = encoder.encode(jws.payload);
  } else {
    payload = jws.payload;
  }
  const result = { payload };
  if (jws.protected !== undefined) {
    result.protectedHeader = parsedProt;
  }
  if (jws.header !== undefined) {
    result.unprotectedHeader = jws.header;
  }
  if (resolvedKey) {
    return { ...result, key };
  }
  return result;
}

// node_modules/jose/dist/browser/jws/compact/verify.js
async function compactVerify(jws, key, options) {
  if (jws instanceof Uint8Array) {
    jws = decoder.decode(jws);
  }
  if (typeof jws !== "string") {
    throw new JWSInvalid("Compact JWS must be a string or Uint8Array");
  }
  const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split(".");
  if (length !== 3) {
    throw new JWSInvalid("Invalid Compact JWS");
  }
  const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);
  const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: verified.key };
  }
  return result;
}

// node_modules/jose/dist/browser/lib/epoch.js
var epoch_default = (date) => Math.floor(date.getTime() / 1000);

// node_modules/jose/dist/browser/lib/secs.js
var minute = 60;
var hour = minute * 60;
var day = hour * 24;
var week = day * 7;
var year = day * 365.25;
var REGEX = /^(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;
var secs_default = (str) => {
  const matched = REGEX.exec(str);
  if (!matched) {
    throw new TypeError("Invalid time period format");
  }
  const value4 = parseFloat(matched[1]);
  const unit = matched[2].toLowerCase();
  switch (unit) {
    case "sec":
    case "secs":
    case "second":
    case "seconds":
    case "s":
      return Math.round(value4);
    case "minute":
    case "minutes":
    case "min":
    case "mins":
    case "m":
      return Math.round(value4 * minute);
    case "hour":
    case "hours":
    case "hr":
    case "hrs":
    case "h":
      return Math.round(value4 * hour);
    case "day":
    case "days":
    case "d":
      return Math.round(value4 * day);
    case "week":
    case "weeks":
    case "w":
      return Math.round(value4 * week);
    default:
      return Math.round(value4 * year);
  }
};

// node_modules/jose/dist/browser/lib/jwt_claims_set.js
var normalizeTyp = (value4) => value4.toLowerCase().replace(/^application\//, "");
var checkAudiencePresence = (audPayload, audOption) => {
  if (typeof audPayload === "string") {
    return audOption.includes(audPayload);
  }
  if (Array.isArray(audPayload)) {
    return audOption.some(Set.prototype.has.bind(new Set(audPayload)));
  }
  return false;
};
var jwt_claims_set_default = (protectedHeader, encodedPayload, options = {}) => {
  const { typ } = options;
  if (typ && (typeof protectedHeader.typ !== "string" || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {
    throw new JWTClaimValidationFailed('unexpected "typ" JWT header value', "typ", "check_failed");
  }
  let payload;
  try {
    payload = JSON.parse(decoder.decode(encodedPayload));
  } catch (_a) {
  }
  if (!isObject(payload)) {
    throw new JWTInvalid("JWT Claims Set must be a top-level JSON object");
  }
  const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;
  if (maxTokenAge !== undefined)
    requiredClaims.push("iat");
  if (audience !== undefined)
    requiredClaims.push("aud");
  if (subject !== undefined)
    requiredClaims.push("sub");
  if (issuer !== undefined)
    requiredClaims.push("iss");
  for (const claim of new Set(requiredClaims.reverse())) {
    if (!(claim in payload)) {
      throw new JWTClaimValidationFailed(`missing required "${claim}" claim`, claim, "missing");
    }
  }
  if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {
    throw new JWTClaimValidationFailed('unexpected "iss" claim value', "iss", "check_failed");
  }
  if (subject && payload.sub !== subject) {
    throw new JWTClaimValidationFailed('unexpected "sub" claim value', "sub", "check_failed");
  }
  if (audience && !checkAudiencePresence(payload.aud, typeof audience === "string" ? [audience] : audience)) {
    throw new JWTClaimValidationFailed('unexpected "aud" claim value', "aud", "check_failed");
  }
  let tolerance;
  switch (typeof options.clockTolerance) {
    case "string":
      tolerance = secs_default(options.clockTolerance);
      break;
    case "number":
      tolerance = options.clockTolerance;
      break;
    case "undefined":
      tolerance = 0;
      break;
    default:
      throw new TypeError("Invalid clockTolerance option type");
  }
  const { currentDate } = options;
  const now = epoch_default(currentDate || new Date);
  if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== "number") {
    throw new JWTClaimValidationFailed('"iat" claim must be a number', "iat", "invalid");
  }
  if (payload.nbf !== undefined) {
    if (typeof payload.nbf !== "number") {
      throw new JWTClaimValidationFailed('"nbf" claim must be a number', "nbf", "invalid");
    }
    if (payload.nbf > now + tolerance) {
      throw new JWTClaimValidationFailed('"nbf" claim timestamp check failed', "nbf", "check_failed");
    }
  }
  if (payload.exp !== undefined) {
    if (typeof payload.exp !== "number") {
      throw new JWTClaimValidationFailed('"exp" claim must be a number', "exp", "invalid");
    }
    if (payload.exp <= now - tolerance) {
      throw new JWTExpired('"exp" claim timestamp check failed', "exp", "check_failed");
    }
  }
  if (maxTokenAge) {
    const age = now - payload.iat;
    const max = typeof maxTokenAge === "number" ? maxTokenAge : secs_default(maxTokenAge);
    if (age - tolerance > max) {
      throw new JWTExpired('"iat" claim timestamp check failed (too far in the past)', "iat", "check_failed");
    }
    if (age < 0 - tolerance) {
      throw new JWTClaimValidationFailed('"iat" claim timestamp check failed (it should be in the past)', "iat", "check_failed");
    }
  }
  return payload;
};

// node_modules/jose/dist/browser/jwt/verify.js
async function jwtVerify(jwt, key, options) {
  var _a;
  const verified = await compactVerify(jwt, key, options);
  if (((_a = verified.protectedHeader.crit) === null || _a === undefined ? undefined : _a.includes("b64")) && verified.protectedHeader.b64 === false) {
    throw new JWTInvalid("JWTs MUST NOT use unencoded payload");
  }
  const payload = jwt_claims_set_default(verified.protectedHeader, verified.payload, options);
  const result = { payload, protectedHeader: verified.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: verified.key };
  }
  return result;
}
// node_modules/jose/dist/browser/runtime/sign.js
var sign = async (alg, key, data) => {
  const cryptoKey = await getCryptoKey(alg, key, "sign");
  check_key_length_default(alg, cryptoKey);
  const signature = await webcrypto_default.subtle.sign(subtleDsa(alg, cryptoKey.algorithm), cryptoKey, data);
  return new Uint8Array(signature);
};
var sign_default = sign;

// node_modules/jose/dist/browser/jws/flattened/sign.js
class FlattenedSign {
  constructor(payload) {
    if (!(payload instanceof Uint8Array)) {
      throw new TypeError("payload must be an instance of Uint8Array");
    }
    this._payload = payload;
  }
  setProtectedHeader(protectedHeader) {
    if (this._protectedHeader) {
      throw new TypeError("setProtectedHeader can only be called once");
    }
    this._protectedHeader = protectedHeader;
    return this;
  }
  setUnprotectedHeader(unprotectedHeader) {
    if (this._unprotectedHeader) {
      throw new TypeError("setUnprotectedHeader can only be called once");
    }
    this._unprotectedHeader = unprotectedHeader;
    return this;
  }
  async sign(key, options) {
    if (!this._protectedHeader && !this._unprotectedHeader) {
      throw new JWSInvalid("either setProtectedHeader or setUnprotectedHeader must be called before #sign()");
    }
    if (!is_disjoint_default(this._protectedHeader, this._unprotectedHeader)) {
      throw new JWSInvalid("JWS Protected and JWS Unprotected Header Parameter names must be disjoint");
    }
    const joseHeader = {
      ...this._protectedHeader,
      ...this._unprotectedHeader
    };
    const extensions = validate_crit_default(JWSInvalid, new Map([["b64", true]]), options === null || options === undefined ? undefined : options.crit, this._protectedHeader, joseHeader);
    let b64 = true;
    if (extensions.has("b64")) {
      b64 = this._protectedHeader.b64;
      if (typeof b64 !== "boolean") {
        throw new JWSInvalid('The "b64" (base64url-encode payload) Header Parameter must be a boolean');
      }
    }
    const { alg } = joseHeader;
    if (typeof alg !== "string" || !alg) {
      throw new JWSInvalid('JWS "alg" (Algorithm) Header Parameter missing or invalid');
    }
    check_key_type_default(alg, key, "sign");
    let payload = this._payload;
    if (b64) {
      payload = encoder.encode(encode2(payload));
    }
    let protectedHeader;
    if (this._protectedHeader) {
      protectedHeader = encoder.encode(encode2(JSON.stringify(this._protectedHeader)));
    } else {
      protectedHeader = encoder.encode("");
    }
    const data = concat(protectedHeader, encoder.encode("."), payload);
    const signature = await sign_default(alg, key, data);
    const jws = {
      signature: encode2(signature),
      payload: ""
    };
    if (b64) {
      jws.payload = decoder.decode(payload);
    }
    if (this._unprotectedHeader) {
      jws.header = this._unprotectedHeader;
    }
    if (this._protectedHeader) {
      jws.protected = decoder.decode(protectedHeader);
    }
    return jws;
  }
}

// node_modules/jose/dist/browser/jws/compact/sign.js
class CompactSign {
  constructor(payload) {
    this._flattened = new FlattenedSign(payload);
  }
  setProtectedHeader(protectedHeader) {
    this._flattened.setProtectedHeader(protectedHeader);
    return this;
  }
  async sign(key, options) {
    const jws = await this._flattened.sign(key, options);
    if (jws.payload === undefined) {
      throw new TypeError("use the flattened module for creating JWS with b64: false");
    }
    return `${jws.protected}.${jws.payload}.${jws.signature}`;
  }
}

// node_modules/jose/dist/browser/jwt/produce.js
class ProduceJWT {
  constructor(payload) {
    if (!isObject(payload)) {
      throw new TypeError("JWT Claims Set MUST be an object");
    }
    this._payload = payload;
  }
  setIssuer(issuer) {
    this._payload = { ...this._payload, iss: issuer };
    return this;
  }
  setSubject(subject) {
    this._payload = { ...this._payload, sub: subject };
    return this;
  }
  setAudience(audience) {
    this._payload = { ...this._payload, aud: audience };
    return this;
  }
  setJti(jwtId) {
    this._payload = { ...this._payload, jti: jwtId };
    return this;
  }
  setNotBefore(input) {
    if (typeof input === "number") {
      this._payload = { ...this._payload, nbf: input };
    } else {
      this._payload = { ...this._payload, nbf: epoch_default(new Date) + secs_default(input) };
    }
    return this;
  }
  setExpirationTime(input) {
    if (typeof input === "number") {
      this._payload = { ...this._payload, exp: input };
    } else {
      this._payload = { ...this._payload, exp: epoch_default(new Date) + secs_default(input) };
    }
    return this;
  }
  setIssuedAt(input) {
    if (typeof input === "undefined") {
      this._payload = { ...this._payload, iat: epoch_default(new Date) };
    } else {
      this._payload = { ...this._payload, iat: input };
    }
    return this;
  }
}

// node_modules/jose/dist/browser/jwt/sign.js
class SignJWT extends ProduceJWT {
  setProtectedHeader(protectedHeader) {
    this._protectedHeader = protectedHeader;
    return this;
  }
  async sign(key, options) {
    var _a;
    const sig = new CompactSign(encoder.encode(JSON.stringify(this._payload)));
    sig.setProtectedHeader(this._protectedHeader);
    if (Array.isArray((_a = this._protectedHeader) === null || _a === undefined ? undefined : _a.crit) && this._protectedHeader.crit.includes("b64") && this._protectedHeader.b64 === false) {
      throw new JWTInvalid("JWTs MUST NOT use unencoded payload");
    }
    return sig.sign(key, options);
  }
}
// node_modules/@elysiajs/jwt/dist/index.js
var typebox4 = __toESM(require_typebox(), 1);
var jwt = ({ name = "jwt", secret, alg = "HS256", crit, schema, nbf, exp, ...payload }) => {
  if (!secret)
    throw new Error("Secret can't be empty");
  const key = typeof secret === "string" ? new TextEncoder().encode(secret) : secret;
  const validator = schema ? getSchemaValidator(typebox4.Type.Intersect([
    schema,
    typebox4.Type.Object({
      iss: typebox4.Type.Optional(typebox4.Type.String()),
      sub: typebox4.Type.Optional(typebox4.Type.String()),
      aud: typebox4.Type.Optional(typebox4.Type.Union([typebox4.Type.String(), typebox4.Type.Array(typebox4.Type.String())])),
      jti: typebox4.Type.Optional(typebox4.Type.String()),
      nbf: typebox4.Type.Optional(typebox4.Type.Union([typebox4.Type.String(), typebox4.Type.Number()])),
      exp: typebox4.Type.Optional(typebox4.Type.Union([typebox4.Type.String(), typebox4.Type.Number()])),
      iat: typebox4.Type.Optional(typebox4.Type.String())
    })
  ]), {}) : undefined;
  return new q({
    name: "@elysiajs/jwt",
    seed: {
      name,
      secret,
      alg,
      crit,
      schema,
      nbf,
      exp,
      ...payload
    }
  }).decorate(name, {
    sign: (morePayload) => {
      let jwt2 = new SignJWT({
        ...payload,
        ...morePayload,
        nbf: undefined,
        exp: undefined
      }).setProtectedHeader({
        alg,
        crit
      });
      if (nbf)
        jwt2 = jwt2.setNotBefore(nbf);
      if (exp)
        jwt2 = jwt2.setExpirationTime(exp);
      return jwt2.sign(key);
    },
    verify: async (jwt2) => {
      if (!jwt2)
        return false;
      try {
        const data = (await jwtVerify(jwt2, key)).payload;
        if (validator && !validator.Check(data))
          throw new ValidationError("JWT", validator, data);
        return data;
      } catch (_) {
        return false;
      }
    }
  });
};

// node_modules/cookie/index.js
var parse2 = function(str, options) {
  if (typeof str !== "string") {
    throw new TypeError("argument str must be a string");
  }
  var obj = {};
  var opt = options || {};
  var dec = opt.decode || decode3;
  var index = 0;
  while (index < str.length) {
    var eqIdx = str.indexOf("=", index);
    if (eqIdx === -1) {
      break;
    }
    var endIdx = str.indexOf(";", index);
    if (endIdx === -1) {
      endIdx = str.length;
    } else if (endIdx < eqIdx) {
      index = str.lastIndexOf(";", eqIdx - 1) + 1;
      continue;
    }
    var key = str.slice(index, eqIdx).trim();
    if (obj[key] === undefined) {
      var val = str.slice(eqIdx + 1, endIdx).trim();
      if (val.charCodeAt(0) === 34) {
        val = val.slice(1, -1);
      }
      obj[key] = tryDecode2(val, dec);
    }
    index = endIdx + 1;
  }
  return obj;
};
var serialize2 = function(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode3;
  if (typeof enc !== "function") {
    throw new TypeError("option encode is invalid");
  }
  if (!fieldContentRegExp2.test(name)) {
    throw new TypeError("argument name is invalid");
  }
  var value4 = enc(val);
  if (value4 && !fieldContentRegExp2.test(value4)) {
    throw new TypeError("argument val is invalid");
  }
  var str = name + "=" + value4;
  if (opt.maxAge != null) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge) || !isFinite(maxAge)) {
      throw new TypeError("option maxAge is invalid");
    }
    str += "; Max-Age=" + Math.floor(maxAge);
  }
  if (opt.domain) {
    if (!fieldContentRegExp2.test(opt.domain)) {
      throw new TypeError("option domain is invalid");
    }
    str += "; Domain=" + opt.domain;
  }
  if (opt.path) {
    if (!fieldContentRegExp2.test(opt.path)) {
      throw new TypeError("option path is invalid");
    }
    str += "; Path=" + opt.path;
  }
  if (opt.expires) {
    var expires = opt.expires;
    if (!isDate2(expires) || isNaN(expires.valueOf())) {
      throw new TypeError("option expires is invalid");
    }
    str += "; Expires=" + expires.toUTCString();
  }
  if (opt.httpOnly) {
    str += "; HttpOnly";
  }
  if (opt.secure) {
    str += "; Secure";
  }
  if (opt.priority) {
    var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
    switch (priority) {
      case "low":
        str += "; Priority=Low";
        break;
      case "medium":
        str += "; Priority=Medium";
        break;
      case "high":
        str += "; Priority=High";
        break;
      default:
        throw new TypeError("option priority is invalid");
    }
  }
  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
    switch (sameSite) {
      case true:
        str += "; SameSite=Strict";
        break;
      case "lax":
        str += "; SameSite=Lax";
        break;
      case "strict":
        str += "; SameSite=Strict";
        break;
      case "none":
        str += "; SameSite=None";
        break;
      default:
        throw new TypeError("option sameSite is invalid");
    }
  }
  return str;
};
var decode3 = function(str) {
  return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
};
var encode3 = function(val) {
  return encodeURIComponent(val);
};
var isDate2 = function(val) {
  return __toString2.call(val) === "[object Date]" || val instanceof Date;
};
var tryDecode2 = function(str, decode4) {
  try {
    return decode4(str);
  } catch (e6) {
    return str;
  }
};
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
var $parse2 = parse2;
var $serialize2 = serialize2;
var __toString2 = Object.prototype.toString;
var fieldContentRegExp2 = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

// node_modules/cookie-signature/index.js
var crypto2 = (init_crypto(), __toCommonJS(exports_crypto));
var $sign = function(val, secret) {
  if (typeof val != "string")
    throw new TypeError("Cookie value must be provided as a string.");
  if (secret == null)
    throw new TypeError("Secret key must be provided.");
  return val + "." + crypto2.createHmac("sha256", secret).update(val).digest("base64").replace(/\=+$/, "");
};
var $unsign = function(input, secret) {
  if (typeof input != "string")
    throw new TypeError("Signed cookie string must be provided.");
  if (secret == null)
    throw new TypeError("Secret key must be provided.");
  var tentativeValue = input.slice(0, input.lastIndexOf(".")), expectedInput = $sign(tentativeValue, secret), expectedBuffer = Buffer.from(expectedInput), inputBuffer = Buffer.from(input);
  return expectedBuffer.length === inputBuffer.length && crypto2.timingSafeEqual(expectedBuffer, inputBuffer) ? tentativeValue : false;
};

// node_modules/@elysiajs/cookie/dist/index.js
var cookie4 = (options = {}) => {
  const { signed, secret: secretKey, ...defaultOptions } = options;
  const secret = !secretKey ? undefined : typeof secretKey === "string" ? secretKey : secretKey[0];
  const isStringKey = typeof secret === "string";
  return new q({
    name: "@elysiajs/cookie",
    seed: options
  }).decorate("unsignCookie", (value4) => {
    if (!secret)
      throw new Error("No secret is provided to cookie plugin");
    let unsigned = isStringKey ? $unsign(value4, secret) : false;
    if (isStringKey === false)
      for (let i3 = 0;i3 < secret.length; i3++) {
        const temp = $unsign(value4, secret[i3]);
        if (temp) {
          unsigned = temp;
          break;
        }
      }
    return {
      valid: unsigned !== false,
      value: unsigned || undefined
    };
  }).derive((context) => {
    let _cookie;
    const getCookie = () => {
      if (_cookie)
        return _cookie;
      try {
        const headerCookie = context.request.headers.get("cookie");
        _cookie = headerCookie ? $parse2(headerCookie) : {};
      } catch (error7) {
        _cookie = {};
      }
      return _cookie;
    };
    return {
      get cookie() {
        return getCookie();
      },
      setCookie(name, value4, { signed: signed2 = false, ...options2 } = {}) {
        if (signed2) {
          if (!secret)
            throw new Error("No secret is provided to cookie plugin");
          value4 = $sign(value4, secret);
        }
        if (!Array.isArray(context.set.headers["Set-Cookie"]))
          context.set.headers["Set-Cookie"] = [];
        context.set.headers["Set-Cookie"].push($serialize2(name, value4, {
          path: "/",
          ...defaultOptions,
          ...options2
        }));
        if (!_cookie)
          getCookie();
        _cookie[name] = value4;
      },
      removeCookie(name) {
        if (!getCookie()[name])
          return;
        context.set.headers["Set-Cookie"] = $serialize2(name, "", {
          expires: new Date("Thu, Jan 01 1970 00:00:00 UTC")
        });
        delete _cookie[name];
      }
    };
  });
};
var dist_default = cookie4;

// node_modules/@elysiajs/cors/dist/index.js
var cors = (config = {
  origin: true,
  methods: "*",
  allowedHeaders: "*",
  exposedHeaders: "*",
  credentials: false,
  maxAge: 5,
  preflight: true
}) => {
  const { origin = true, methods = "*", allowedHeaders = "*", exposedHeaders = "*", credentials = false, maxAge = 5, preflight = true } = config;
  const app = new q({
    name: "@elysiajs/cors",
    seed: config
  });
  const origins = typeof origin === "boolean" ? undefined : Array.isArray(origin) ? origin : [origin];
  const processOrigin = (origin2, request, from) => {
    switch (typeof origin2) {
      case "string":
        const protocolStart = from.indexOf("://");
        if (protocolStart === -1)
          return false;
        return origin2 === from.slice(protocolStart + 3);
      case "function":
        return origin2(request);
      case "object":
        return origin2.test(from);
    }
  };
  const handleOrigin = (set, request) => {
    if (origin === true) {
      set.headers["Vary"] = "*";
      set.headers["Access-Control-Allow-Origin"] = request.headers.get("Origin") || "*";
      return;
    }
    if (!origins?.length)
      return;
    const headers = [];
    if (origins.length) {
      const from = request.headers.get("Origin") ?? "";
      for (let i3 = 0;i3 < origins.length; i3++) {
        const value4 = processOrigin(origins[i3], request, from);
        if (value4 === true) {
          set.headers["Vary"] = origin ? "Origin" : "*";
          set.headers["Access-Control-Allow-Origin"] = request.headers.get("Origin") || "*";
          return;
        }
        if (value4)
          headers.push(value4);
      }
    }
    set.headers["Vary"] = "Origin";
    set.headers["Access-Control-Allow-Origin"] = headers.join(", ");
  };
  const handleMethod = (set) => {
    if (!methods?.length)
      return;
    if (methods === "*")
      return set.headers["Access-Control-Allow-Methods"] = "*";
    if (!Array.isArray(methods))
      return set.headers["Access-Control-Allow-Methods"] = methods;
    set.headers["Access-Control-Allow-Methods"] = methods.join(", ");
  };
  if (preflight)
    app.options("/", ({ set, request }) => {
      handleOrigin(set, request);
      handleMethod(set);
      if (exposedHeaders.length)
        set.headers["Access-Control-Allow-Headers"] = typeof allowedHeaders === "string" ? allowedHeaders : allowedHeaders.join(", ");
      if (maxAge)
        set.headers["Access-Control-Max-Age"] = maxAge.toString();
      return new Response("", {
        status: 204
      });
    }).options("/*", ({ set, request }) => {
      handleOrigin(set, request);
      handleMethod(set);
      if (exposedHeaders.length)
        set.headers["Access-Control-Allow-Headers"] = typeof allowedHeaders === "string" ? allowedHeaders : allowedHeaders.join(", ");
      if (maxAge)
        set.headers["Access-Control-Max-Age"] = maxAge.toString();
      return new Response("", {
        status: 204
      });
    });
  return app.onRequest(({ set, request }) => {
    handleOrigin(set, request);
    handleMethod(set);
    if (allowedHeaders.length)
      set.headers["Access-Control-Allow-Headers"] = typeof allowedHeaders === "string" ? allowedHeaders : allowedHeaders.join(", ");
    if (exposedHeaders.length)
      set.headers["Access-Control-Exposed-Headers"] = typeof exposedHeaders === "string" ? exposedHeaders : exposedHeaders.join(", ");
    if (credentials)
      set.headers["Access-Control-Allow-Credentials"] = "true";
  });
};

// src/context/context.ts
var client = __toESM(require_index_browser3(), 1);
var db2 = new client.PrismaClient;
var now = new Date;
var invCodeHelper = `${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, "0")}${now.getDate().toString().padStart(2, "0")}${now.getHours().toString().padStart(2, "0")}`;
var ctx = new q({
  name: "@app/ctx"
}).decorate("db", db2).decorate("invoiceCode", invCodeHelper);

// src/model/model.ts
var userODT = {
  sign: typebox2.Type.Object({
    email: typebox2.Type.String(),
    password: typebox2.Type.String()
  }),
  create: typebox2.Type.Object({
    email: typebox2.Type.String(),
    password: typebox2.Type.String({
      minLength: 8
    }),
    name: typebox2.Type.String(),
    role: typebox2.Type.String({
      enum: ["admin", "user"]
    })
  }),
  response: typebox2.Type.Object({
    id: typebox2.Type.Number(),
    email: typebox2.Type.String(),
    name: typebox2.Type.String(),
    role: typebox2.Type.String({
      enum: ["admin", "user"]
    })
  }),
  update: typebox2.Type.Object({
    email: typebox2.Type.Optional(typebox2.Type.String()),
    password: typebox2.Type.Optional(typebox2.Type.String({
      minLength: 8
    })),
    name: typebox2.Type.Optional(typebox2.Type.String()),
    role: typebox2.Type.Optional(typebox2.Type.String({
      enum: ["admin", "user"]
    }))
  })
};
var vehicleODT = {
  create: typebox2.Type.Object({
    plate: typebox2.Type.String(),
    color: typebox2.Type.Union([typebox2.Type.String(), typebox2.Type.Null()]),
    brand: typebox2.Type.String(),
    chassis: typebox2.Type.Union([typebox2.Type.String(), typebox2.Type.Null()]),
    supplierId: typebox2.Type.Number()
  }),
  response: typebox2.Type.Object({
    id: typebox2.Type.Number(),
    plate: typebox2.Type.String(),
    color: typebox2.Type.Union([typebox2.Type.String(), typebox2.Type.Null()]),
    brand: typebox2.Type.String(),
    chassis: typebox2.Type.Union([typebox2.Type.String(), typebox2.Type.Null()]),
    supplierId: typebox2.Type.Number()
  })
};
var supplierODT = {
  create: typebox2.Type.Object({
    code: typebox2.Type.String(),
    name: typebox2.Type.String()
  }),
  response: typebox2.Type.Object({
    id: typebox2.Type.Number(),
    code: typebox2.Type.String(),
    name: typebox2.Type.String()
  })
};
var factoryODT = {
  create: typebox2.Type.Object({
    code: typebox2.Type.String(),
    name: typebox2.Type.String()
  }),
  response: typebox2.Type.Object({
    id: typebox2.Type.Number(),
    code: typebox2.Type.String(),
    name: typebox2.Type.String()
  })
};
var farmerODT = {
  create: typebox2.Type.Object({
    code: typebox2.Type.String(),
    name: typebox2.Type.String(),
    address: typebox2.Type.String(),
    phone: typebox2.Type.String()
  }),
  response: typebox2.Type.Object({
    id: typebox2.Type.Number(),
    code: typebox2.Type.String(),
    name: typebox2.Type.String(),
    address: typebox2.Type.String(),
    phone: typebox2.Type.String()
  })
};
var transactionODT = {
  create: typebox2.Type.Object({
    code: typebox2.Type.String()
  }),
  response: typebox2.Type.Object({
    id: typebox2.Type.Number(),
    code: typebox2.Type.String()
  })
};

// src/routes/auth.routes.ts
var authRoutes = new q().model(userODT).group("/auth", (app) => {
  return app.use(ctx).use(jwt({
    name: "jwt",
    secret: "Fischl von Luftschloss Narfidort",
    exp: "7d"
  })).use(dist_default()).post("/login", async ({ db: db3, body, jwt: jwt3, setCookie }) => {
    const user = await db3.users.findUnique({
      where: {
        email: body.email
      }
    });
    if (!user) {
      throw new Error("User tidak ditemukan");
    }
    const match = await Bun.password.verify(body.password, user.password);
    if (!match) {
      throw new Error("Password salah");
    }
    const tokenData = {
      id: user.id.toString(),
      name: user.name,
      email: user.email,
      role: user.role
    };
    const accessToken = await jwt3.sign({
      ...tokenData
    });
    const refreshToken = await jwt3.sign({
      ...tokenData
    });
    setCookie("access_token", accessToken, {
      maxAge: 604800,
      path: "/"
    });
    setCookie("refresh_token", refreshToken, {
      maxAge: 604800,
      path: "/"
    });
    return {
      id: user.id,
      name: user.name,
      email: user.email,
      role: user.role,
      access_token: accessToken,
      refresh_token: refreshToken
    };
  }, {
    body: userODT.sign,
    detail: {
      tags: ["Auth"]
    }
  }).post("/register", async ({ db: db3, body }) => {
    const hashedBody = {
      ...body,
      password: await Bun.password.hash(body.password, {
        algorithm: "argon2id",
        memoryCost: 4,
        timeCost: 3
      })
    };
    const user = await db3.users.create({
      data: hashedBody
    });
    return user;
  }, {
    body: userODT.create,
    response: {
      200: userODT.response
    },
    detail: {
      tags: ["Auth"]
    }
  }).get("/refresh", async ({ jwt: jwt3, cookie: cookie6 }) => {
    const { id } = await jwt3.verify(cookie6.refresh_token);
    if (!id) {
      throw new Error("Unauthorized");
    }
    const accessToken = await jwt3.sign({
      userId: id.toString()
    });
    return {
      access_token: accessToken
    };
  }, {
    response: {
      200: typebox2.Type.Object({
        access_token: typebox2.Type.String()
      })
    },
    detail: {
      tags: ["Auth"]
    }
  }).get("/logout", async ({ setCookie }) => {
    setCookie("access_token", "", {
      maxAge: 0,
      path: "/"
    });
    setCookie("refresh_token", "", {
      maxAge: 0,
      path: "/"
    });
    return {
      success: true,
      message: "Berhasil logout"
    };
  }, {
    response: {
      200: typebox2.Type.Object({
        success: typebox2.Type.Boolean(),
        message: typebox2.Type.String()
      })
    },
    detail: {
      tags: ["Auth"]
    }
  });
});
// node_modules/@elysiajs/bearer/dist/index.js
var bearer = ({ extract: { body = "access_token", query = "access_token", header = "Bearer" } = {
  body: "access_token",
  query: "access_token",
  header: "Bearer"
} } = {
  extract: {
    body: "access_token",
    query: "access_token",
    header: "Bearer"
  }
}) => new q({
  name: "@elysiajs/bearer",
  seed: {
    body,
    query,
    header
  }
}).derive(({ query: queries, headers: { authorization } }) => ({
  get bearer() {
    if (authorization?.startsWith(header))
      return authorization.slice(header.length + 1);
    const q2 = queries[query];
    if (q2)
      return q2;
  }
}));
var dist_default2 = bearer;

// src/routes/user.routes.ts
var usersRoutes = new q().use(dist_default2()).model(userODT).group("/users", (app) => {
  return app.use(ctx).get("/", async ({ db: db3, query, set }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const users = await db3.users.findMany({
      orderBy,
      skip: offset,
      take: limit,
      where: {
        OR: [
          {
            email: {
              contains: q2 ?? ""
            }
          },
          {
            name: {
              contains: q2 ?? ""
            }
          }
        ]
      },
      select: {
        id: true,
        email: true,
        name: true,
        role: true,
        created_at: true
      }
    });
    return users;
  }, {
    detail: {
      tags: ["Users"]
    }
  }).get("/show/:id", async ({ db: db3, params }) => {
    const user = await db3.users.findUnique({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        email: true,
        name: true,
        role: true
      }
    });
    return user;
  }, {
    detail: {
      tags: ["Users"]
    }
  }).put("/:id", async ({ db: db3, body, params }) => {
    const user = await db3.users.update({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        email: true,
        name: true,
        role: true
      },
      data: body
    });
    return user;
  }, {
    body: userODT.update,
    response: {
      200: userODT.response
    },
    detail: {
      tags: ["Users"]
    }
  }).delete("/:id", async ({ db: db3, params }) => {
    const user = await db3.users.delete({
      where: {
        id: parseInt(params.id)
      }
    });
    return user;
  }, {
    response: {
      200: userODT.response
    },
    detail: {
      tags: ["Users"]
    }
  });
});
// src/routes/factory.routes.ts
var factoryRoutes = new q().model(factoryODT).group("/factories", (app) => {
  return app.use(ctx).get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const factories = await db3.factories.findMany({
      orderBy,
      skip: offset,
      take: limit,
      where: {
        OR: [
          {
            code: {
              contains: q2 ?? ""
            }
          },
          {
            name: {
              contains: q2 ?? ""
            }
          },
          {
            suppliers: {
              some: {
                name: {
                  contains: q2 ?? ""
                }
              }
            }
          },
          {
            orders: {
              some: {
                invCode: {
                  contains: q2 ?? ""
                }
              }
            }
          }
        ]
      },
      select: {
        id: true,
        code: true,
        name: true,
        suppliers: true,
        prices: true,
        orders: true
      }
    });
    return factories;
  }, {
    detail: {
      tags: ["Factories"]
    }
  }).post("/", async ({ db: db3, body }) => {
    const { code, name, price } = body;
    const factory = await db3.factories.create({
      data: {
        code,
        name,
        prices: {
          create: {
            price: body.price
          }
        }
      }
    });
    return factory;
  }, {
    body: typebox2.Type.Object({
      code: typebox2.Type.String(),
      name: typebox2.Type.String(),
      price: typebox2.Type.Number()
    }),
    detail: {
      tags: ["Factories"]
    }
  }).get("/:id", async ({ db: db3, params }) => {
    const factory = await db3.factories.findUnique({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        code: true,
        name: true,
        suppliers: true,
        prices: true,
        orders: true,
        bankAccounts: true
      }
    });
    return factory;
  }, {
    detail: {
      tags: ["Factories"]
    }
  }).put("/:id", async ({ db: db3, body, params }) => {
    const factory = await db3.factories.update({
      where: {
        id: parseInt(params.id)
      },
      data: body
    });
    return factory;
  }, {
    body: factoryODT.create,
    response: {
      200: factoryODT.response
    },
    detail: {
      tags: ["Factories"]
    }
  }).delete("/:id", async ({ db: db3, params }) => {
    const factory = await db3.factories.delete({
      where: {
        id: parseInt(params.id)
      }
    });
    return factory;
  }, {
    response: {
      200: factoryODT.response
    },
    detail: {
      tags: ["Factories"]
    }
  }).post("/:id/price", async ({ db: db3, params, body }) => {
    const { id } = params;
    const factory = await db3.factories.update({
      where: {
        id: parseInt(id)
      },
      data: {
        prices: {
          create: {
            price: body.price
          }
        }
      },
      select: {
        id: true,
        code: true,
        name: true,
        prices: true
      }
    });
    return factory;
  }, {
    body: typebox2.Type.Object({
      price: typebox2.Type.Number()
    }),
    detail: {
      tags: ["Factories"]
    }
  });
});
// src/routes/farmer.routes.ts
var farmersRoutes = new q().model(farmerODT).group("/farmers", (app) => {
  return app.use(ctx).get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const farmers = await db3.farmers.findMany({
      orderBy,
      skip: offset,
      take: limit,
      where: {
        OR: [
          {
            code: {
              contains: q2 ?? ""
            }
          },
          {
            name: {
              contains: q2 ?? ""
            }
          },
          {
            address: {
              contains: q2 ?? ""
            }
          },
          {
            phone: {
              contains: q2 ?? ""
            }
          }
        ]
      },
      select: {
        id: true,
        code: true,
        name: true,
        address: true,
        phone: true,
        created_at: true
      }
    });
    return farmers;
  }, {
    detail: {
      tags: ["Farmers"]
    }
  }).post("/", async ({ db: db3, body }) => {
    const { email, name, address, phone } = body;
    const isEmailExist = await db3.farmers.findUnique({
      where: {
        code: email
      }
    });
    if (isEmailExist) {
      throw new Error("Email already exist");
    }
    const farmer = await db3.farmers.create({
      data: {
        name,
        address,
        phone,
        code: email
      }
    });
    return farmer;
  }, {
    body: typebox2.Type.Object({
      email: typebox2.Type.String(),
      name: typebox2.Type.String(),
      address: typebox2.Type.String(),
      phone: typebox2.Type.String()
    }),
    detail: {
      tags: ["Farmers"]
    }
  }).get("/:id", async ({ db: db3, params }) => {
    const farmer = await db3.farmers.findUnique({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        code: true,
        name: true,
        address: true,
        phone: true,
        farmer_orders: {
          select: {
            id: true,
            transactionCode: true,
            transactionTotal: true,
            transactionType: true,
            transactionDate: true,
            bankTransactions: {
              select: {
                id: true,
                amount: true,
                transactionType: true,
                description: true,
                transactionDate: true
              }
            }
          }
        },
        created_at: true
      }
    });
    if (farmer) {
      const { farmer_orders: farmerOrders, ...otherProps } = farmer;
      const bankTransactions = farmerOrders.flatMap((order) => order.bankTransactions);
      const bankTransactionDescriptions = bankTransactions.map((transaction) => transaction.description);
      return { ...otherProps, farmerOrders, description: bankTransactionDescriptions, bankTransactions };
    }
    return null;
  }, {
    detail: {
      tags: ["Farmers"]
    }
  }).get("/:id/transactions", async ({ db: db3, params }) => {
    const { id } = params;
    const transactions = await db3.farmerOrder.findMany({
      where: {
        farmerId: parseInt(id)
      },
      select: {
        id: true,
        transactionCode: true,
        transactionTotal: true,
        transactionType: true,
        transactionDate: true,
        bankTransactions: {
          select: {
            id: true,
            amount: true,
            transactionType: true,
            description: true,
            transactionDate: true
          }
        },
        created_at: true
      }
    });
    return transactions.map((transaction) => ({
      ...transaction,
      description: transaction.bankTransactions[0]?.description
    }));
  }, {
    detail: {
      tags: ["Farmers"]
    }
  }).put("/:id", async ({ db: db3, body, params }) => {
    const farmer = await db3.farmers.update({
      where: {
        id: parseInt(params.id)
      },
      data: body
    });
    return farmer;
  }, {
    body: farmerODT.create,
    response: {
      200: farmerODT.response
    },
    detail: {
      tags: ["Farmers"]
    }
  }).delete("/:id", async ({ db: db3, params }) => {
    const farmer = await db3.farmers.delete({
      where: {
        id: parseInt(params.id)
      }
    });
    return farmer;
  }, {
    response: {
      200: farmerODT.response
    },
    detail: {
      tags: ["Farmers"]
    }
  }).post("/:id/order", async ({ db: db3, params, body, invoiceCode }) => {
    const { transactionTotal, transactionType, bankAccountId } = body;
    const farmer = await db3.farmers.findUnique({
      where: {
        id: parseInt(params.id)
      }
    });
    if (!farmer) {
      throw new Error("Farmer not found");
    }
    const transactionCode = `INV-FAR-${farmer.name}-${invoiceCode}-${Math.floor(Math.random() * 1000) + 1}}`;
    const farmerOrder = await db3.farmerOrder.create({
      data: {
        transactionTotal,
        transactionType,
        farmerId: farmer.id,
        transactionCode,
        transactionDate: new Date
      }
    });
    const bankAccount = await db3.bankAccounts.findUnique({
      where: {
        id: bankAccountId
      }
    });
    if (!bankAccount) {
      throw new Error("Bank Account not found");
    }
    let newBalance = bankAccount.balance;
    if (transactionType === "Saving") {
      newBalance += transactionTotal;
    } else if (transactionType === "Loan") {
      newBalance -= transactionTotal;
    } else if (transactionType === "Loan Payment") {
      newBalance += transactionTotal;
    } else if (transactionType === "Saving Withdrawal") {
      newBalance -= transactionTotal;
    }
    const bankTransaction = await db3.bankTransactions.create({
      data: {
        amount: transactionTotal,
        transactionType,
        bankAccountId: bankAccount.id,
        description: `Transaction for ${farmer.name}`,
        transactionDate: new Date,
        transactionCode,
        farmerOrderId: farmerOrder.id
      }
    });
    await db3.bankAccounts.update({
      where: {
        id: bankAccount.id
      },
      data: {
        balance: newBalance
      }
    });
    return { farmerOrder, bankTransaction };
  }, {
    body: typebox2.Type.Object({
      farmerId: typebox2.Type.Number(),
      transactionTotal: typebox2.Type.Number(),
      transactionType: typebox2.Type.Union([typebox2.Type.Literal("Saving"), typebox2.Type.Literal("Loan"), typebox2.Type.Literal("Loan Payment"), typebox2.Type.Literal("Saving Withdrawal")]),
      bankAccountId: typebox2.Type.Number()
    }),
    detail: {
      tags: ["Farmers"]
    }
  });
});
// src/routes/supplier.routes.ts
var suppliersRoutes = new q().model(supplierODT).group("/suppliers", (app) => {
  return app.use(ctx).get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const suppliers = await db3.suppliers.findMany({
      orderBy,
      skip: offset,
      take: limit,
      where: {
        OR: [
          {
            code: {
              contains: q2 ?? "",
              mode: "insensitive"
            }
          },
          {
            name: {
              contains: q2 ?? "",
              mode: "insensitive"
            }
          }
        ]
      },
      select: {
        id: true,
        code: true,
        name: true,
        created_at: true,
        factories: true,
        vehicles: true,
        prices: true,
        supplierOrders: true
      }
    });
    const data = suppliers.map((supplier) => {
      const lastCreatedPrice = supplier.prices.slice(-1)[0];
      const isPPN = lastCreatedPrice?.isPPN ?? false;
      return {
        ...supplier,
        isPPN,
        lastCreatedPrice
      };
    });
    return data;
  }, {
    detail: {
      tags: ["Suppliers"]
    }
  }).get("/:id", async ({ db: db3, params }) => {
    const supplier = await db3.suppliers.findUnique({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        code: true,
        name: true,
        supplierOrders: true,
        prices: true,
        vehicles: true,
        created_at: true
      }
    });
    return supplier;
  }, {
    detail: {
      tags: ["Suppliers"]
    }
  }).get("/:id/orders", async ({ db: db3, params }) => {
    const { id } = params;
    const orders = await db3.supplierOrders.findMany({
      where: {
        supplierId: parseInt(id)
      },
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        status: true,
        supplier: {
          select: {
            id: true,
            name: true,
            code: true
          }
        },
        supplierPrice: {
          select: {
            id: true,
            price: true
          }
        },
        created_at: true
      }
    });
    return orders;
  }, {
    detail: {
      tags: ["Suppliers"]
    }
  }).post("/", async ({ db: db3, body }) => {
    const { code, name, factoryId, address, price, isPPN, productId } = body;
    const latestFactoryPrice = await db3.factoryPrices.findFirst({
      where: {
        factoryId
      },
      orderBy: {
        created_at: "desc"
      }
    });
    if (latestFactoryPrice.price < body.price) {
      throw new Error("Supplier price is higher than factory price");
    }
    const supplier = await db3.suppliers.create({
      data: {
        code,
        name,
        prices: {
          create: {
            price,
            isPPN,
            factoryPrice: {
              connect: {
                id: latestFactoryPrice.id
              }
            }
          }
        },
        address,
        factories: {
          connect: {
            id: factoryId
          }
        },
        products: {
          connect: {
            id: productId
          }
        }
      }
    });
    return supplier;
  }, {
    body: typebox2.Type.Object({
      code: typebox2.Type.String(),
      name: typebox2.Type.String(),
      address: typebox2.Type.String(),
      price: typebox2.Type.Number(),
      isPPN: typebox2.Type.Boolean(),
      productId: typebox2.Type.Number(),
      factoryId: typebox2.Type.Number()
    }),
    detail: {
      tags: ["Suppliers"]
    }
  }).patch("/:id", async ({ db: db3, body, params }) => {
    const { code, name, factoryId, productId } = body;
    const supplier = await db3.suppliers.update({
      where: {
        id: parseInt(params.id)
      },
      data: {
        code,
        name,
        factories: {
          connect: {
            id: factoryId
          }
        },
        products: {
          connect: {
            id: productId
          }
        }
      }
    });
    return supplier;
  }, {
    body: typebox2.Type.Object({
      code: typebox2.Type.String(),
      name: typebox2.Type.String(),
      factoryId: typebox2.Type.Number(),
      productId: typebox2.Type.Number()
    }),
    detail: {
      tags: ["Suppliers"]
    }
  }).delete("/:id", ({ db: db3, params }) => {
    return db3.suppliers.delete({
      where: {
        id: parseInt(params.id)
      }
    });
  }, {
    detail: {
      tags: ["Suppliers"]
    }
  }).post("/:id/price", async ({ db: db3, params, body }) => {
    const { id } = params;
    const relatedFactory = await db3.factories.findFirst({
      where: {
        suppliers: {
          some: {
            id: parseInt(id)
          }
        }
      }
    });
    if (!relatedFactory) {
      throw new Error("No related factory found for this supplier");
    }
    const latestFactoryPrice = await db3.factoryPrices.findFirst({
      where: {
        factoryId: relatedFactory.id
      },
      orderBy: {
        created_at: "desc"
      }
    });
    if (latestFactoryPrice.price < body.price) {
      throw new Error("Supplier price is higher than factory price");
    }
    const supplierPrice = await db3.supplierPrices.create({
      data: {
        ...body,
        factoryPriceId: latestFactoryPrice.id,
        supplierId: parseInt(id)
      }
    });
    return supplierPrice;
  }, {
    body: typebox2.Type.Object({
      price: typebox2.Type.Number(),
      isPPN: typebox2.Type.Boolean()
    }),
    detail: {
      tags: ["Suppliers"]
    }
  });
});
// src/routes/vehicle.routes.ts
var vehiclesRoutes = new q().model(vehicleODT).group("/vehicles", (app) => {
  return app.use(ctx).get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const vehicles = await db3.vehicles.findMany({
      orderBy,
      skip: offset,
      take: limit,
      where: {
        OR: [
          {
            plate: {
              contains: q2 ?? "",
              mode: "insensitive"
            }
          }
        ]
      },
      select: {
        id: true,
        plate: true,
        color: true,
        brand: true,
        chassis: true,
        supplier: {
          select: {
            id: true,
            code: true,
            name: true,
            prices: {
              select: {
                id: true,
                price: true,
                isPPN: true,
                created_at: true
              },
              orderBy: {
                created_at: "desc"
              },
              take: 1
            }
          }
        }
      }
    });
    const vehiclesWithPrice = vehicles.map((vehicle) => {
      const { supplier: { id, code, name, prices: [price] }, ...rest } = vehicle;
      return { ...rest, supplier: { id, code, name }, price };
    });
    return vehiclesWithPrice;
  }, {
    detail: {
      tags: ["Vehicles"]
    }
  }).get("/:id", async ({ db: db3, params }) => {
    const vehicle = await db3.vehicles.findUnique({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        plate: true,
        color: true,
        brand: true,
        chassis: true,
        supplier: {
          select: {
            id: true,
            code: true,
            name: true,
            prices: {
              select: {
                id: true,
                price: true,
                isPPN: true,
                created_at: true
              },
              orderBy: {
                created_at: "desc"
              },
              take: 1
            }
          }
        }
      }
    });
    return vehicle;
  }, {
    detail: {
      tags: ["Vehicles"]
    }
  }).post("/", async ({ db: db3, body }) => {
    const { plate, color, brand, chassis, supplierId } = body;
    const supplier = await db3.suppliers.findUnique({
      where: {
        id: supplierId
      }
    });
    if (!supplier) {
      throw new Error("Supplier not found");
    }
    const vehicleExist = await db3.vehicles.findFirst({
      where: {
        plate
      }
    });
    if (vehicleExist) {
      throw new Error("Vehicle already exists");
    }
    const vehicle = await db3.vehicles.create({
      data: body
    });
    return vehicle;
  }, {
    body: typebox2.Type.Object({
      plate: typebox2.Type.String(),
      color: typebox2.Type.String(),
      brand: typebox2.Type.String(),
      chassis: typebox2.Type.String(),
      supplierId: typebox2.Type.Number()
    }),
    detail: {
      tags: ["Vehicles"]
    }
  }).put("/:id", async ({ db: db3, body, params }) => {
    const vehicle = await db3.vehicles.update({
      where: {
        id: parseInt(params.id)
      },
      data: body
    });
    return vehicle;
  }, {
    body: vehicleODT.create,
    response: {
      200: vehicleODT.response
    },
    detail: {
      tags: ["Vehicles"]
    }
  }).delete("/:id", async ({ db: db3, params }) => {
    const vehicle = await db3.vehicles.delete({
      where: {
        id: parseInt(params.id)
      }
    });
    return vehicle;
  }, {
    response: {
      200: vehicleODT.response
    },
    detail: {
      tags: ["Vehicles"]
    }
  });
});
// src/routes/factory.invoices.routes.ts
var factoryInvoicesRoutes = new q().use(ctx).group("/invoices/factory", (app) => {
  return app.get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, _status, created_at_gte, created_at_lte, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const whereConditions = [];
    if (q2) {
      const invTotalNumber = parseInt(q2);
      if (!isNaN(invTotalNumber)) {
        whereConditions.push({ invTotal: { equals: invTotalNumber } });
      }
      whereConditions.push({ invCode: { contains: q2, mode: "insensitive" } });
    }
    if (_status) {
      whereConditions.push({ status: { equals: _status, mode: "insensitive" } });
    }
    if (created_at_lte || created_at_gte) {
      whereConditions.push({
        invDate: {
          lte: created_at_lte ? new Date(created_at_lte) : undefined,
          gte: created_at_gte ? new Date(created_at_gte) : undefined
        }
      });
    }
    const invoices = await db3.factoryOrders.findMany({
      orderBy,
      skip: offset,
      take: limit,
      where: whereConditions.length > 0 ? { OR: whereConditions } : {},
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        status: true,
        factory: {
          select: {
            id: true,
            name: true,
            code: true
          }
        },
        factoryPrice: {
          select: {
            id: true,
            price: true
          }
        },
        vehicleOrders: {
          select: {
            id: true,
            qty: true,
            plate: true
          }
        }
      }
    });
    return invoices;
  }, {
    detail: {
      tags: ["Invoices Factory"]
    }
  }).get("/:id", async ({ db: db3, params }) => {
    const invoice = await db3.factoryOrders.findUnique({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        factory: {
          select: {
            id: true,
            name: true,
            code: true
          }
        },
        factoryPrice: {
          select: {
            id: true,
            price: true
          }
        },
        vehicleOrders: {
          select: {
            id: true,
            vehicle: {
              select: {
                id: true,
                plate: true,
                color: true
              }
            }
          }
        },
        qty: true
      }
    });
    return invoice;
  }, {
    detail: {
      tags: ["Invoices Factory"]
    }
  }).post("/:invCode", async ({ set, db: db3, params, body }) => {
    const { ...rest } = body;
    const decodedInvCode = decodeURIComponent(params.invCode);
    const factoryOrder = await db3.factoryOrders.findUnique({
      where: {
        invCode: decodedInvCode
      },
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        status: true,
        factory: {
          select: {
            id: true,
            name: true,
            code: true
          }
        }
      }
    });
    if (factoryOrder.status === "Paid") {
      set.status = 404;
      throw new Error("Invoice already Paid");
    }
    const newBankTransaction = await db3.bankTransactions.create({
      data: {
        bankAccountId: rest.bankAccountId,
        amount: factoryOrder.invTotal,
        transactionCode: "TRS/" + factoryOrder.invCode + "/" + Math.floor(Math.random() * 1000),
        transactionDate: rest.transactionDate ? new Date(rest.transactionDate) : new Date,
        transactionType: "Credit",
        description: "Pembayaran Dari Pabrik " + factoryOrder.factory.name + " Untuk Invoice " + factoryOrder.invCode,
        factoryInvCode: factoryOrder.invCode
      }
    });
    const updateFactoryOrderStatus = await db3.factoryOrders.update({
      where: {
        invCode: decodedInvCode
      },
      data: {
        status: "Paid"
      }
    });
    const updateBankAccountBalance = await db3.bankAccounts.update({
      where: {
        id: rest.bankAccountId
      },
      data: {
        balance: {
          increment: factoryOrder.invTotal
        }
      }
    });
    return newBankTransaction;
  }, {
    detail: {
      tags: ["Invoices Factory"]
    },
    body: typebox2.Type.Object({
      bankAccountId: typebox2.Type.Number(),
      transactionDate: typebox2.Type.Optional(typebox2.Type.String())
    })
  }).delete("/:invCode", async ({ db: db3, params }) => {
    const decodedInvCode = decodeURIComponent(params.invCode);
    const deleteFactoryOrder = await db3.factoryOrders.delete({
      where: {
        invCode: decodedInvCode
      }
    });
    return deleteFactoryOrder;
  }, {
    detail: {
      tags: ["Invoices Factory"]
    }
  }).post("/", async ({ db: db3, invoiceCode, body }) => {
    const { ...rest } = body;
    const factoryPricePromise = rest.factoryPriceId ? db3.factoryPrices.findUnique({ where: { id: rest.factoryPriceId } }) : db3.factoryPrices.findFirst({
      where: { factoryId: rest.factoryId },
      orderBy: { created_at: "desc" }
    });
    const factoryPromise = db3.factories.findUnique({ where: { id: rest.factoryId } });
    const [factoryPrice, factory] = await Promise.all([factoryPricePromise, factoryPromise]);
    const factoryInvoiceCode = `INV-${factory.code}-${invoiceCode}-${Math.random().toString(36).substring(2, 15)}`;
    const vehicleOrderQty = rest.vehicleOrders.reduce((acc, cur) => acc + cur.qty, 0);
    const createOrUpdateFactoryOrderPromise = db3.factoryOrders.upsert({
      where: { invCode: factoryInvoiceCode },
      create: {
        invCode: factoryInvoiceCode,
        invDate: rest.transactionDate ? new Date(rest.transactionDate) : new Date,
        noRef: rest.noRef,
        invTotal: factoryPrice.price * vehicleOrderQty,
        factoryId: factory.id,
        factoryPriceId: factoryPrice.id,
        qty: vehicleOrderQty,
        status: "Pending"
      },
      update: { status: "Pending" }
    });
    const [createOrUpdateFactoryOrder] = await Promise.all([createOrUpdateFactoryOrderPromise]);
    const newBankTransactionPromise = db3.bankTransactions.create({
      data: {
        bankAccountId: rest.bankAccountId,
        amount: createOrUpdateFactoryOrder.invTotal,
        transactionCode: `TRS/${createOrUpdateFactoryOrder.invCode}/${Math.floor(Math.random() * 1000)}`,
        transactionDate: rest.transactionDate ? new Date(rest.transactionDate) : new Date,
        transactionType: "Debit",
        description: "Pembayaran Dari Pabrik " + factory?.name + " Untuk Invoice " + factoryInvoiceCode,
        factoryInvCode: createOrUpdateFactoryOrder.invCode
      }
    });
    const vehicleOrders = rest.vehicleOrders;
    const vehiclePromises = vehicleOrders.map((order) => db3.vehicles.findUnique({ where: { id: order.vehicleId } }));
    const vehicles = await Promise.all(vehiclePromises);
    const groupedVehicleOrders = vehicles.reduce((acc, vehicle, index) => {
      const existingOrders = acc[vehicle.supplierId] || [];
      existingOrders.push(vehicleOrders[index]);
      acc[vehicle.supplierId] = existingOrders;
      return acc;
    }, {});
    const createSupplierOrders = Object.entries(groupedVehicleOrders).map(async ([supplierId, vehicleOrders2]) => {
      const supplierPromise = db3.suppliers.findUnique({ where: { id: Number(supplierId) } });
      const supplierPricePromise = await db3.supplierPrices.findFirst({
        where: {
          supplierId: Number(supplierId),
          OR: [
            { created_at: { lte: rest.transactionDate ? new Date(rest.transactionDate) : new Date } },
            { created_at: { gte: rest.transactionDate ? new Date(rest.transactionDate) : new Date } }
          ]
        },
        orderBy: { created_at: "desc" }
      }).catch(async () => {
        return await db3.supplierPrices.findFirst({
          where: {
            supplierId: Number(supplierId)
          },
          orderBy: { created_at: "desc" }
        });
      });
      const [supplier, supplierPrice] = await Promise.all([supplierPromise, supplierPricePromise]);
      const supplierInvoiceCode = `INV-${supplier.code}-${invoiceCode}-${Math.random().toString(36).substring(2, 15)}`;
      const supplierOrderQty = vehicleOrders2.reduce((acc, cur) => acc + cur.qty, 0);
      if (!supplierPrice || supplierPrice.isPPN === null) {
        throw new Error("Supplier price is null or isPPN is null");
      }
      const createOrUpdateSupplierOrderPromise = db3.supplierOrders.upsert({
        where: { invCode: supplierInvoiceCode },
        create: {
          invCode: supplierInvoiceCode,
          invDate: new Date,
          invTotal: !supplierPrice.isPPN ? supplierPrice.price * supplierOrderQty : supplierPrice.price * supplierOrderQty * 1.11,
          supplierId: supplier.id,
          supplierPriceId: supplierPrice.id,
          factoryPriceId: factoryPrice.id,
          factoryOrderId: createOrUpdateFactoryOrder.id,
          qty: supplierOrderQty,
          status: "Pending"
        },
        update: { status: "Pending" }
      });
      const [createOrUpdateSupplierOrder] = await Promise.all([createOrUpdateSupplierOrderPromise]);
      const createVehicleOrderPromises = vehicleOrders2.map(async (vehicleOrder) => {
        const vehicleInvCode = `INV-VOR-${vehicleOrder.vehicleId}-${invoiceCode}-${Math.random().toString(36).substring(2, 15)}`;
        const vehicle = await db3.vehicles.findUnique({ where: { id: vehicleOrder.vehicleId } });
        return db3.vehicleOrders.upsert({
          where: { invCode: vehicleInvCode },
          create: {
            factoryOrdersId: createOrUpdateFactoryOrder.id,
            supplierOrderId: createOrUpdateSupplierOrder.id,
            qty: vehicleOrder.qty,
            invCode: vehicleInvCode,
            plate: vehicle?.plate ?? ""
          },
          update: {}
        });
      });
      const resolvedVehicleOrders = await Promise.all(createVehicleOrderPromises);
      return { createOrUpdateSupplierOrder, resolvedVehicleOrders };
    });
    const resolvedSupplierOrders = await Promise.all(createSupplierOrders);
    const updateFactoryOrderStatusPromise = db3.factoryOrders.update({
      where: { invCode: createOrUpdateFactoryOrder.invCode },
      data: { status: "Paid" }
    });
    const updateBankAccountBalancePromise = db3.bankAccounts.update({
      where: { id: rest.bankAccountId },
      data: { balance: { increment: createOrUpdateFactoryOrder.invTotal } }
    });
    const [newBankTransaction, updateFactoryOrderStatus, updateBankAccountBalance] = await Promise.all([
      newBankTransactionPromise,
      updateFactoryOrderStatusPromise,
      updateBankAccountBalancePromise
    ]);
    const formattedData = resolvedSupplierOrders.map(({ createOrUpdateSupplierOrder, resolvedVehicleOrders }) => {
      return {
        supplierOrder: {
          invCode: createOrUpdateSupplierOrder.invCode,
          invTotal: createOrUpdateSupplierOrder.invTotal,
          vehicleOrders: resolvedVehicleOrders.filter(Boolean).map((vehicleOrder) => ({
            invCode: vehicleOrder.invCode
          }))
        }
      };
    });
    return {
      message: "success",
      data: {
        invCode: factoryInvoiceCode,
        suppliers: formattedData
      }
    };
  }, {
    detail: {
      tags: ["Invoices Factory"]
    },
    body: typebox2.Type.Object({
      factoryId: typebox2.Type.Number(),
      factoryPriceId: typebox2.Type.Optional(typebox2.Type.Number()),
      vehicleOrders: typebox2.Type.Array(typebox2.Type.Object({
        vehicleId: typebox2.Type.Number(),
        qty: typebox2.Type.Number()
      })),
      noRef: typebox2.Type.String(),
      transactionDate: typebox2.Type.String(),
      bankAccountId: typebox2.Type.Number()
    })
  });
});
// src/routes/supplier.invoices.routes.ts
var supplierInvoiceRoutes = new q().use(ctx).group("/invoices/supplier", (app) => {
  return app.onError(({ code, error: error7, set }) => {
    if (code === "NOT_FOUND") {
      set.status = 404;
      return new Response(error7.toString());
    }
  }).get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, _status, created_at_gte, created_at_lte, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const whereConditions = [];
    const invoiceSupplier = [];
    if (q2) {
      const invTotalNumber = parseInt(q2);
      if (!isNaN(invTotalNumber)) {
        whereConditions.push({ invTotal: { equals: invTotalNumber } });
      }
      whereConditions.push({ invCode: { contains: q2, mode: "insensitive" } });
    }
    if (_status) {
      whereConditions.push({ status: { equals: _status, mode: "insensitive" } });
    }
    if (created_at_lte || created_at_gte) {
      whereConditions.push({
        invDate: {
          lte: created_at_lte ? new Date(created_at_lte) : undefined,
          gte: created_at_gte ? new Date(created_at_gte) : undefined
        }
      });
    }
    const invoices = await db3.supplierOrders.findMany({
      orderBy,
      skip: offset,
      take: limit,
      where: whereConditions.length > 0 ? { OR: whereConditions } : {},
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        status: true,
        supplier: {
          select: {
            id: true,
            name: true,
            code: true
          }
        },
        supplierPrice: {
          select: {
            id: true,
            price: true,
            isPPN: true,
            factoryPrice: {
              select: {
                id: true,
                price: true,
                factory: {
                  select: {
                    id: true,
                    name: true,
                    code: true
                  }
                }
              }
            }
          }
        },
        vehicleOrders: true,
        factoryOrder: true,
        qty: true
      }
    });
    const invoicesWithProfits = invoices.map((invoice) => {
      const noRef = invoice.factoryOrder.noRef;
      const invRef = invoice.factoryOrder.invCode;
      const isPPN = invoice.supplierPrice.isPPN;
      const priceAfterPPN = isPPN ? invoice.supplierPrice.price * 1.1 : invoice.supplierPrice.price;
      const profit = (invoice.supplierPrice.factoryPrice.price - priceAfterPPN) * invoice.qty;
      return {
        ...invoice,
        profit,
        noRef,
        invRef
      };
    });
    return invoicesWithProfits;
  }, {
    detail: {
      tags: ["Invoices Supplier"]
    }
  }).get("/:id", async ({ db: db3, params }) => {
    const invoice = await db3.supplierOrders.findUnique({
      where: {
        id: parseInt(params.id)
      },
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        supplier: {
          select: {
            id: true,
            name: true,
            address: true,
            products: true,
            code: true
          }
        },
        supplierPrice: {
          select: {
            id: true,
            price: true,
            isPPN: true
          }
        },
        vehicleOrders: {
          select: {
            id: true,
            qty: true,
            vehicle: {
              select: {
                id: true,
                plate: true
              }
            }
          }
        },
        BankTransactions: {
          select: {
            id: true,
            amount: true,
            transactionCode: true,
            transactionDate: true,
            transactionType: true,
            bankAccounts: {
              select: {
                id: true,
                bankName: true,
                accountName: true,
                accountNumber: true
              }
            }
          }
        },
        qty: true
      }
    });
    return invoice;
  }, {
    detail: {
      tags: ["Invoices Supplier"]
    }
  }).post("/:invCode", async ({ set, db: db3, params, body }) => {
    const { ...rest } = body;
    const decodedInvCode = decodeURIComponent(params.invCode);
    const supplierOrder = await db3.supplierOrders.findUnique({
      where: {
        invCode: decodedInvCode
      },
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        status: true,
        supplier: {
          select: {
            id: true,
            name: true,
            address: true,
            products: true,
            code: true
          }
        },
        supplierPrice: {
          select: {
            id: true,
            price: true,
            isPPN: true
          }
        },
        vehicleOrders: {
          select: {
            id: true,
            qty: true,
            vehicle: {
              select: {
                id: true,
                plate: true
              }
            }
          }
        },
        BankTransactions: {
          select: {
            id: true,
            amount: true,
            transactionCode: true,
            transactionDate: true,
            transactionType: true,
            bankAccounts: {
              select: {
                id: true,
                bankName: true,
                accountName: true,
                accountNumber: true
              }
            }
          }
        },
        qty: true
      }
    });
    if (supplierOrder.status === "Paid") {
      set.status = 404;
      throw new Error("Invoice already Paid");
    }
    const bankAccount = await db3.bankAccounts.findUnique({
      where: {
        id: rest.bankAccountId
      }
    });
    if ((await bankAccount).balance < supplierOrder.invTotal) {
      set.status = 404;
      throw new Error("Insufficient Balance");
    }
    const newBankTransaction = await db3.bankTransactions.create({
      data: {
        bankAccountId: rest.bankAccountId,
        amount: supplierOrder.invTotal,
        transactionCode: "TRS/" + supplierOrder.invCode + "/" + Math.floor(Math.random() * 1000),
        transactionDate: rest.transactionDate ? new Date(rest.transactionDate) : new Date,
        transactionType: "Credit",
        description: "Pembayaran Produk " + supplierOrder?.supplier.products?.name + " Kepada " + supplierOrder.supplier.name,
        supplierInvCode: supplierOrder.invCode
      }
    });
    const updateSupplierOrderStatus = await db3.supplierOrders.update({
      where: {
        invCode: decodedInvCode
      },
      data: {
        status: "Paid",
        invDate: new Date
      }
    });
    const updateBankAccountBalance = await db3.bankAccounts.update({
      where: {
        id: rest.bankAccountId
      },
      data: {
        balance: {
          decrement: supplierOrder.invTotal
        }
      }
    });
    return {
      message: "success",
      balance: (await bankAccount).balance - supplierOrder.invTotal,
      data: newBankTransaction
    };
  }, {
    detail: {
      tags: ["Invoices Supplier"]
    },
    body: typebox2.Type.Object({
      bankAccountId: typebox2.Type.Number(),
      transactionDate: typebox2.Type.String()
    }),
    error({ error: error7 }) {
      return error7;
    }
  }).delete("/:invCode", async ({ db: db3, params }) => {
    const decodedInvCode = decodeURIComponent(params.invCode);
    const invoice = await db3.supplierOrders.delete({
      where: {
        invCode: decodedInvCode
      }
    });
    return invoice;
  }, {
    detail: {
      tags: ["Invoices Supplier"]
    }
  });
});
// node_modules/moment/dist/moment.js
var hooks = function() {
  return hookCallback.apply(null, arguments);
};
var setHookCallback = function(callback) {
  hookCallback = callback;
};
var isArray = function(input) {
  return input instanceof Array || Object.prototype.toString.call(input) === "[object Array]";
};
var isObject2 = function(input) {
  return input != null && Object.prototype.toString.call(input) === "[object Object]";
};
var hasOwnProp = function(a4, b3) {
  return Object.prototype.hasOwnProperty.call(a4, b3);
};
var isObjectEmpty = function(obj) {
  if (Object.getOwnPropertyNames) {
    return Object.getOwnPropertyNames(obj).length === 0;
  } else {
    var k2;
    for (k2 in obj) {
      if (hasOwnProp(obj, k2)) {
        return false;
      }
    }
    return true;
  }
};
var isUndefined = function(input) {
  return input === undefined;
};
var isNumber = function(input) {
  return typeof input === "number" || Object.prototype.toString.call(input) === "[object Number]";
};
var isDate3 = function(input) {
  return input instanceof Date || Object.prototype.toString.call(input) === "[object Date]";
};
var map = function(arr, fn) {
  var res = [], i3, arrLen = arr.length;
  for (i3 = 0;i3 < arrLen; ++i3) {
    res.push(fn(arr[i3], i3));
  }
  return res;
};
var extend = function(a4, b3) {
  for (var i3 in b3) {
    if (hasOwnProp(b3, i3)) {
      a4[i3] = b3[i3];
    }
  }
  if (hasOwnProp(b3, "toString")) {
    a4.toString = b3.toString;
  }
  if (hasOwnProp(b3, "valueOf")) {
    a4.valueOf = b3.valueOf;
  }
  return a4;
};
var createUTC = function(input, format, locale, strict) {
  return createLocalOrUTC(input, format, locale, strict, true).utc();
};
var defaultParsingFlags = function() {
  return {
    empty: false,
    unusedTokens: [],
    unusedInput: [],
    overflow: -2,
    charsLeftOver: 0,
    nullInput: false,
    invalidEra: null,
    invalidMonth: null,
    invalidFormat: false,
    userInvalidated: false,
    iso: false,
    parsedDateParts: [],
    era: null,
    meridiem: null,
    rfc2822: false,
    weekdayMismatch: false
  };
};
var getParsingFlags = function(m2) {
  if (m2._pf == null) {
    m2._pf = defaultParsingFlags();
  }
  return m2._pf;
};
var isValid = function(m2) {
  var flags = null, parsedParts = false, isNowValid = m2._d && !isNaN(m2._d.getTime());
  if (isNowValid) {
    flags = getParsingFlags(m2);
    parsedParts = some.call(flags.parsedDateParts, function(i3) {
      return i3 != null;
    });
    isNowValid = flags.overflow < 0 && !flags.empty && !flags.invalidEra && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);
    if (m2._strict) {
      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;
    }
  }
  if (Object.isFrozen == null || !Object.isFrozen(m2)) {
    m2._isValid = isNowValid;
  } else {
    return isNowValid;
  }
  return m2._isValid;
};
var createInvalid = function(flags) {
  var m2 = createUTC(NaN);
  if (flags != null) {
    extend(getParsingFlags(m2), flags);
  } else {
    getParsingFlags(m2).userInvalidated = true;
  }
  return m2;
};
var copyConfig = function(to, from) {
  var i3, prop, val, momentPropertiesLen = momentProperties.length;
  if (!isUndefined(from._isAMomentObject)) {
    to._isAMomentObject = from._isAMomentObject;
  }
  if (!isUndefined(from._i)) {
    to._i = from._i;
  }
  if (!isUndefined(from._f)) {
    to._f = from._f;
  }
  if (!isUndefined(from._l)) {
    to._l = from._l;
  }
  if (!isUndefined(from._strict)) {
    to._strict = from._strict;
  }
  if (!isUndefined(from._tzm)) {
    to._tzm = from._tzm;
  }
  if (!isUndefined(from._isUTC)) {
    to._isUTC = from._isUTC;
  }
  if (!isUndefined(from._offset)) {
    to._offset = from._offset;
  }
  if (!isUndefined(from._pf)) {
    to._pf = getParsingFlags(from);
  }
  if (!isUndefined(from._locale)) {
    to._locale = from._locale;
  }
  if (momentPropertiesLen > 0) {
    for (i3 = 0;i3 < momentPropertiesLen; i3++) {
      prop = momentProperties[i3];
      val = from[prop];
      if (!isUndefined(val)) {
        to[prop] = val;
      }
    }
  }
  return to;
};
var Moment = function(config) {
  copyConfig(this, config);
  this._d = new Date(config._d != null ? config._d.getTime() : NaN);
  if (!this.isValid()) {
    this._d = new Date(NaN);
  }
  if (updateInProgress === false) {
    updateInProgress = true;
    hooks.updateOffset(this);
    updateInProgress = false;
  }
};
var isMoment = function(obj) {
  return obj instanceof Moment || obj != null && obj._isAMomentObject != null;
};
var warn = function(msg) {
  if (hooks.suppressDeprecationWarnings === false && typeof console !== "undefined" && console.warn) {
    console.warn("Deprecation warning: " + msg);
  }
};
var deprecate = function(msg, fn) {
  var firstTime = true;
  return extend(function() {
    if (hooks.deprecationHandler != null) {
      hooks.deprecationHandler(null, msg);
    }
    if (firstTime) {
      var args = [], arg, i3, key, argLen = arguments.length;
      for (i3 = 0;i3 < argLen; i3++) {
        arg = "";
        if (typeof arguments[i3] === "object") {
          arg += "\n[" + i3 + "] ";
          for (key in arguments[0]) {
            if (hasOwnProp(arguments[0], key)) {
              arg += key + ": " + arguments[0][key] + ", ";
            }
          }
          arg = arg.slice(0, -2);
        } else {
          arg = arguments[i3];
        }
        args.push(arg);
      }
      warn(msg + "\nArguments: " + Array.prototype.slice.call(args).join("") + "\n" + new Error().stack);
      firstTime = false;
    }
    return fn.apply(this, arguments);
  }, fn);
};
var deprecateSimple = function(name, msg) {
  if (hooks.deprecationHandler != null) {
    hooks.deprecationHandler(name, msg);
  }
  if (!deprecations[name]) {
    warn(msg);
    deprecations[name] = true;
  }
};
var isFunction = function(input) {
  return typeof Function !== "undefined" && input instanceof Function || Object.prototype.toString.call(input) === "[object Function]";
};
var set = function(config) {
  var prop, i3;
  for (i3 in config) {
    if (hasOwnProp(config, i3)) {
      prop = config[i3];
      if (isFunction(prop)) {
        this[i3] = prop;
      } else {
        this["_" + i3] = prop;
      }
    }
  }
  this._config = config;
  this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
};
var mergeConfigs = function(parentConfig, childConfig) {
  var res = extend({}, parentConfig), prop;
  for (prop in childConfig) {
    if (hasOwnProp(childConfig, prop)) {
      if (isObject2(parentConfig[prop]) && isObject2(childConfig[prop])) {
        res[prop] = {};
        extend(res[prop], parentConfig[prop]);
        extend(res[prop], childConfig[prop]);
      } else if (childConfig[prop] != null) {
        res[prop] = childConfig[prop];
      } else {
        delete res[prop];
      }
    }
  }
  for (prop in parentConfig) {
    if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject2(parentConfig[prop])) {
      res[prop] = extend({}, res[prop]);
    }
  }
  return res;
};
var Locale = function(config) {
  if (config != null) {
    this.set(config);
  }
};
var calendar = function(key, mom, now2) {
  var output = this._calendar[key] || this._calendar["sameElse"];
  return isFunction(output) ? output.call(mom, now2) : output;
};
var zeroFill = function(number, targetLength, forceSign) {
  var absNumber = "" + Math.abs(number), zerosToFill = targetLength - absNumber.length, sign5 = number >= 0;
  return (sign5 ? forceSign ? "+" : "" : "-") + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
};
var addFormatToken = function(token, padded, ordinal, callback) {
  var func = callback;
  if (typeof callback === "string") {
    func = function() {
      return this[callback]();
    };
  }
  if (token) {
    formatTokenFunctions[token] = func;
  }
  if (padded) {
    formatTokenFunctions[padded[0]] = function() {
      return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
    };
  }
  if (ordinal) {
    formatTokenFunctions[ordinal] = function() {
      return this.localeData().ordinal(func.apply(this, arguments), token);
    };
  }
};
var removeFormattingTokens = function(input) {
  if (input.match(/\[[\s\S]/)) {
    return input.replace(/^\[|\]$/g, "");
  }
  return input.replace(/\\/g, "");
};
var makeFormatFunction = function(format) {
  var array = format.match(formattingTokens), i3, length;
  for (i3 = 0, length = array.length;i3 < length; i3++) {
    if (formatTokenFunctions[array[i3]]) {
      array[i3] = formatTokenFunctions[array[i3]];
    } else {
      array[i3] = removeFormattingTokens(array[i3]);
    }
  }
  return function(mom) {
    var output = "", i4;
    for (i4 = 0;i4 < length; i4++) {
      output += isFunction(array[i4]) ? array[i4].call(mom, format) : array[i4];
    }
    return output;
  };
};
var formatMoment = function(m2, format) {
  if (!m2.isValid()) {
    return m2.localeData().invalidDate();
  }
  format = expandFormat(format, m2.localeData());
  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);
  return formatFunctions[format](m2);
};
var expandFormat = function(format, locale) {
  var i3 = 5;
  function replaceLongDateFormatTokens(input) {
    return locale.longDateFormat(input) || input;
  }
  localFormattingTokens.lastIndex = 0;
  while (i3 >= 0 && localFormattingTokens.test(format)) {
    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
    localFormattingTokens.lastIndex = 0;
    i3 -= 1;
  }
  return format;
};
var longDateFormat = function(key) {
  var format = this._longDateFormat[key], formatUpper = this._longDateFormat[key.toUpperCase()];
  if (format || !formatUpper) {
    return format;
  }
  this._longDateFormat[key] = formatUpper.match(formattingTokens).map(function(tok) {
    if (tok === "MMMM" || tok === "MM" || tok === "DD" || tok === "dddd") {
      return tok.slice(1);
    }
    return tok;
  }).join("");
  return this._longDateFormat[key];
};
var invalidDate = function() {
  return this._invalidDate;
};
var ordinal = function(number) {
  return this._ordinal.replace("%d", number);
};
var relativeTime = function(number, withoutSuffix, string, isFuture) {
  var output = this._relativeTime[string];
  return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
};
var pastFuture = function(diff, output) {
  var format = this._relativeTime[diff > 0 ? "future" : "past"];
  return isFunction(format) ? format(output) : format.replace(/%s/i, output);
};
var normalizeUnits = function(units) {
  return typeof units === "string" ? aliases[units] || aliases[units.toLowerCase()] : undefined;
};
var normalizeObjectUnits = function(inputObject) {
  var normalizedInput = {}, normalizedProp, prop;
  for (prop in inputObject) {
    if (hasOwnProp(inputObject, prop)) {
      normalizedProp = normalizeUnits(prop);
      if (normalizedProp) {
        normalizedInput[normalizedProp] = inputObject[prop];
      }
    }
  }
  return normalizedInput;
};
var getPrioritizedUnits = function(unitsObj) {
  var units = [], u2;
  for (u2 in unitsObj) {
    if (hasOwnProp(unitsObj, u2)) {
      units.push({ unit: u2, priority: priorities[u2] });
    }
  }
  units.sort(function(a4, b3) {
    return a4.priority - b3.priority;
  });
  return units;
};
var addRegexToken = function(token, regex, strictRegex) {
  regexes[token] = isFunction(regex) ? regex : function(isStrict, localeData) {
    return isStrict && strictRegex ? strictRegex : regex;
  };
};
var getParseRegexForToken = function(token, config) {
  if (!hasOwnProp(regexes, token)) {
    return new RegExp(unescapeFormat(token));
  }
  return regexes[token](config._strict, config._locale);
};
var unescapeFormat = function(s5) {
  return regexEscape(s5.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(matched, p1, p2, p32, p4) {
    return p1 || p2 || p32 || p4;
  }));
};
var regexEscape = function(s5) {
  return s5.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
};
var absFloor = function(number) {
  if (number < 0) {
    return Math.ceil(number) || 0;
  } else {
    return Math.floor(number);
  }
};
var toInt = function(argumentForCoercion) {
  var coercedNumber = +argumentForCoercion, value4 = 0;
  if (coercedNumber !== 0 && isFinite(coercedNumber)) {
    value4 = absFloor(coercedNumber);
  }
  return value4;
};
var addParseToken = function(token, callback) {
  var i3, func = callback, tokenLen;
  if (typeof token === "string") {
    token = [token];
  }
  if (isNumber(callback)) {
    func = function(input, array) {
      array[callback] = toInt(input);
    };
  }
  tokenLen = token.length;
  for (i3 = 0;i3 < tokenLen; i3++) {
    tokens[token[i3]] = func;
  }
};
var addWeekParseToken = function(token, callback) {
  addParseToken(token, function(input, array, config, token2) {
    config._w = config._w || {};
    callback(input, config._w, config, token2);
  });
};
var addTimeToArrayFromToken = function(token, input, config) {
  if (input != null && hasOwnProp(tokens, token)) {
    tokens[token](input, config._a, config, token);
  }
};
var isLeapYear = function(year2) {
  return year2 % 4 === 0 && year2 % 100 !== 0 || year2 % 400 === 0;
};
var daysInYear = function(year2) {
  return isLeapYear(year2) ? 366 : 365;
};
var getIsLeapYear = function() {
  return isLeapYear(this.year());
};
var makeGetSet = function(unit, keepTime) {
  return function(value4) {
    if (value4 != null) {
      set$1(this, unit, value4);
      hooks.updateOffset(this, keepTime);
      return this;
    } else {
      return get(this, unit);
    }
  };
};
var get = function(mom, unit) {
  if (!mom.isValid()) {
    return NaN;
  }
  var { _d: d2, _isUTC: isUTC } = mom;
  switch (unit) {
    case "Milliseconds":
      return isUTC ? d2.getUTCMilliseconds() : d2.getMilliseconds();
    case "Seconds":
      return isUTC ? d2.getUTCSeconds() : d2.getSeconds();
    case "Minutes":
      return isUTC ? d2.getUTCMinutes() : d2.getMinutes();
    case "Hours":
      return isUTC ? d2.getUTCHours() : d2.getHours();
    case "Date":
      return isUTC ? d2.getUTCDate() : d2.getDate();
    case "Day":
      return isUTC ? d2.getUTCDay() : d2.getDay();
    case "Month":
      return isUTC ? d2.getUTCMonth() : d2.getMonth();
    case "FullYear":
      return isUTC ? d2.getUTCFullYear() : d2.getFullYear();
    default:
      return NaN;
  }
};
var set$1 = function(mom, unit, value4) {
  var d2, isUTC, year2, month, date;
  if (!mom.isValid() || isNaN(value4)) {
    return;
  }
  d2 = mom._d;
  isUTC = mom._isUTC;
  switch (unit) {
    case "Milliseconds":
      return void (isUTC ? d2.setUTCMilliseconds(value4) : d2.setMilliseconds(value4));
    case "Seconds":
      return void (isUTC ? d2.setUTCSeconds(value4) : d2.setSeconds(value4));
    case "Minutes":
      return void (isUTC ? d2.setUTCMinutes(value4) : d2.setMinutes(value4));
    case "Hours":
      return void (isUTC ? d2.setUTCHours(value4) : d2.setHours(value4));
    case "Date":
      return void (isUTC ? d2.setUTCDate(value4) : d2.setDate(value4));
    case "FullYear":
      break;
    default:
      return;
  }
  year2 = value4;
  month = mom.month();
  date = mom.date();
  date = date === 29 && month === 1 && !isLeapYear(year2) ? 28 : date;
  isUTC ? d2.setUTCFullYear(year2, month, date) : d2.setFullYear(year2, month, date);
};
var stringGet = function(units) {
  units = normalizeUnits(units);
  if (isFunction(this[units])) {
    return this[units]();
  }
  return this;
};
var stringSet = function(units, value4) {
  if (typeof units === "object") {
    units = normalizeObjectUnits(units);
    var prioritized = getPrioritizedUnits(units), i3, prioritizedLen = prioritized.length;
    for (i3 = 0;i3 < prioritizedLen; i3++) {
      this[prioritized[i3].unit](units[prioritized[i3].unit]);
    }
  } else {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
      return this[units](value4);
    }
  }
  return this;
};
var mod = function(n2, x) {
  return (n2 % x + x) % x;
};
var daysInMonth = function(year2, month) {
  if (isNaN(year2) || isNaN(month)) {
    return NaN;
  }
  var modMonth = mod(month, 12);
  year2 += (month - modMonth) / 12;
  return modMonth === 1 ? isLeapYear(year2) ? 29 : 28 : 31 - modMonth % 7 % 2;
};
var localeMonths = function(m2, format) {
  if (!m2) {
    return isArray(this._months) ? this._months : this._months["standalone"];
  }
  return isArray(this._months) ? this._months[m2.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? "format" : "standalone"][m2.month()];
};
var localeMonthsShort = function(m2, format) {
  if (!m2) {
    return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort["standalone"];
  }
  return isArray(this._monthsShort) ? this._monthsShort[m2.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? "format" : "standalone"][m2.month()];
};
var handleStrictParse = function(monthName, format, strict) {
  var i3, ii, mom, llc = monthName.toLocaleLowerCase();
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
    for (i3 = 0;i3 < 12; ++i3) {
      mom = createUTC([2000, i3]);
      this._shortMonthsParse[i3] = this.monthsShort(mom, "").toLocaleLowerCase();
      this._longMonthsParse[i3] = this.months(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format === "MMM") {
      ii = indexOf.call(this._shortMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._longMonthsParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._longMonthsParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortMonthsParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
};
var localeMonthsParse = function(monthName, format, strict) {
  var i3, mom, regex;
  if (this._monthsParseExact) {
    return handleStrictParse.call(this, monthName, format, strict);
  }
  if (!this._monthsParse) {
    this._monthsParse = [];
    this._longMonthsParse = [];
    this._shortMonthsParse = [];
  }
  for (i3 = 0;i3 < 12; i3++) {
    mom = createUTC([2000, i3]);
    if (strict && !this._longMonthsParse[i3]) {
      this._longMonthsParse[i3] = new RegExp("^" + this.months(mom, "").replace(".", "") + "$", "i");
      this._shortMonthsParse[i3] = new RegExp("^" + this.monthsShort(mom, "").replace(".", "") + "$", "i");
    }
    if (!strict && !this._monthsParse[i3]) {
      regex = "^" + this.months(mom, "") + "|^" + this.monthsShort(mom, "");
      this._monthsParse[i3] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format === "MMMM" && this._longMonthsParse[i3].test(monthName)) {
      return i3;
    } else if (strict && format === "MMM" && this._shortMonthsParse[i3].test(monthName)) {
      return i3;
    } else if (!strict && this._monthsParse[i3].test(monthName)) {
      return i3;
    }
  }
};
var setMonth = function(mom, value4) {
  if (!mom.isValid()) {
    return mom;
  }
  if (typeof value4 === "string") {
    if (/^\d+$/.test(value4)) {
      value4 = toInt(value4);
    } else {
      value4 = mom.localeData().monthsParse(value4);
      if (!isNumber(value4)) {
        return mom;
      }
    }
  }
  var month = value4, date = mom.date();
  date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));
  mom._isUTC ? mom._d.setUTCMonth(month, date) : mom._d.setMonth(month, date);
  return mom;
};
var getSetMonth = function(value4) {
  if (value4 != null) {
    setMonth(this, value4);
    hooks.updateOffset(this, true);
    return this;
  } else {
    return get(this, "Month");
  }
};
var getDaysInMonth = function() {
  return daysInMonth(this.year(), this.month());
};
var monthsShortRegex = function(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsShortStrictRegex;
    } else {
      return this._monthsShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsShortRegex")) {
      this._monthsShortRegex = defaultMonthsShortRegex;
    }
    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;
  }
};
var monthsRegex = function(isStrict) {
  if (this._monthsParseExact) {
    if (!hasOwnProp(this, "_monthsRegex")) {
      computeMonthsParse.call(this);
    }
    if (isStrict) {
      return this._monthsStrictRegex;
    } else {
      return this._monthsRegex;
    }
  } else {
    if (!hasOwnProp(this, "_monthsRegex")) {
      this._monthsRegex = defaultMonthsRegex;
    }
    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;
  }
};
var computeMonthsParse = function() {
  function cmpLenRev(a4, b3) {
    return b3.length - a4.length;
  }
  var shortPieces = [], longPieces = [], mixedPieces = [], i3, mom, shortP, longP;
  for (i3 = 0;i3 < 12; i3++) {
    mom = createUTC([2000, i3]);
    shortP = regexEscape(this.monthsShort(mom, ""));
    longP = regexEscape(this.months(mom, ""));
    shortPieces.push(shortP);
    longPieces.push(longP);
    mixedPieces.push(longP);
    mixedPieces.push(shortP);
  }
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._monthsRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._monthsShortRegex = this._monthsRegex;
  this._monthsStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
  this._monthsShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
};
var createDate = function(y3, m2, d2, h2, M, s5, ms) {
  var date;
  if (y3 < 100 && y3 >= 0) {
    date = new Date(y3 + 400, m2, d2, h2, M, s5, ms);
    if (isFinite(date.getFullYear())) {
      date.setFullYear(y3);
    }
  } else {
    date = new Date(y3, m2, d2, h2, M, s5, ms);
  }
  return date;
};
var createUTCDate = function(y3) {
  var date, args;
  if (y3 < 100 && y3 >= 0) {
    args = Array.prototype.slice.call(arguments);
    args[0] = y3 + 400;
    date = new Date(Date.UTC.apply(null, args));
    if (isFinite(date.getUTCFullYear())) {
      date.setUTCFullYear(y3);
    }
  } else {
    date = new Date(Date.UTC.apply(null, arguments));
  }
  return date;
};
var firstWeekOffset = function(year2, dow, doy) {
  var fwd = 7 + dow - doy, fwdlw = (7 + createUTCDate(year2, 0, fwd).getUTCDay() - dow) % 7;
  return -fwdlw + fwd - 1;
};
var dayOfYearFromWeeks = function(year2, week2, weekday, dow, doy) {
  var localWeekday = (7 + weekday - dow) % 7, weekOffset = firstWeekOffset(year2, dow, doy), dayOfYear = 1 + 7 * (week2 - 1) + localWeekday + weekOffset, resYear, resDayOfYear;
  if (dayOfYear <= 0) {
    resYear = year2 - 1;
    resDayOfYear = daysInYear(resYear) + dayOfYear;
  } else if (dayOfYear > daysInYear(year2)) {
    resYear = year2 + 1;
    resDayOfYear = dayOfYear - daysInYear(year2);
  } else {
    resYear = year2;
    resDayOfYear = dayOfYear;
  }
  return {
    year: resYear,
    dayOfYear: resDayOfYear
  };
};
var weekOfYear = function(mom, dow, doy) {
  var weekOffset = firstWeekOffset(mom.year(), dow, doy), week2 = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1, resWeek, resYear;
  if (week2 < 1) {
    resYear = mom.year() - 1;
    resWeek = week2 + weeksInYear(resYear, dow, doy);
  } else if (week2 > weeksInYear(mom.year(), dow, doy)) {
    resWeek = week2 - weeksInYear(mom.year(), dow, doy);
    resYear = mom.year() + 1;
  } else {
    resYear = mom.year();
    resWeek = week2;
  }
  return {
    week: resWeek,
    year: resYear
  };
};
var weeksInYear = function(year2, dow, doy) {
  var weekOffset = firstWeekOffset(year2, dow, doy), weekOffsetNext = firstWeekOffset(year2 + 1, dow, doy);
  return (daysInYear(year2) - weekOffset + weekOffsetNext) / 7;
};
var localeWeek = function(mom) {
  return weekOfYear(mom, this._week.dow, this._week.doy).week;
};
var localeFirstDayOfWeek = function() {
  return this._week.dow;
};
var localeFirstDayOfYear = function() {
  return this._week.doy;
};
var getSetWeek = function(input) {
  var week2 = this.localeData().week(this);
  return input == null ? week2 : this.add((input - week2) * 7, "d");
};
var getSetISOWeek = function(input) {
  var week2 = weekOfYear(this, 1, 4).week;
  return input == null ? week2 : this.add((input - week2) * 7, "d");
};
var parseWeekday = function(input, locale) {
  if (typeof input !== "string") {
    return input;
  }
  if (!isNaN(input)) {
    return parseInt(input, 10);
  }
  input = locale.weekdaysParse(input);
  if (typeof input === "number") {
    return input;
  }
  return null;
};
var parseIsoWeekday = function(input, locale) {
  if (typeof input === "string") {
    return locale.weekdaysParse(input) % 7 || 7;
  }
  return isNaN(input) ? null : input;
};
var shiftWeekdays = function(ws3, n2) {
  return ws3.slice(n2, 7).concat(ws3.slice(0, n2));
};
var localeWeekdays = function(m2, format) {
  var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m2 && m2 !== true && this._weekdays.isFormat.test(format) ? "format" : "standalone"];
  return m2 === true ? shiftWeekdays(weekdays, this._week.dow) : m2 ? weekdays[m2.day()] : weekdays;
};
var localeWeekdaysShort = function(m2) {
  return m2 === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m2 ? this._weekdaysShort[m2.day()] : this._weekdaysShort;
};
var localeWeekdaysMin = function(m2) {
  return m2 === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m2 ? this._weekdaysMin[m2.day()] : this._weekdaysMin;
};
var handleStrictParse$1 = function(weekdayName, format, strict) {
  var i3, ii, mom, llc = weekdayName.toLocaleLowerCase();
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._minWeekdaysParse = [];
    for (i3 = 0;i3 < 7; ++i3) {
      mom = createUTC([2000, 1]).day(i3);
      this._minWeekdaysParse[i3] = this.weekdaysMin(mom, "").toLocaleLowerCase();
      this._shortWeekdaysParse[i3] = this.weekdaysShort(mom, "").toLocaleLowerCase();
      this._weekdaysParse[i3] = this.weekdays(mom, "").toLocaleLowerCase();
    }
  }
  if (strict) {
    if (format === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  } else {
    if (format === "dddd") {
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else if (format === "ddd") {
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._minWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    } else {
      ii = indexOf.call(this._minWeekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._weekdaysParse, llc);
      if (ii !== -1) {
        return ii;
      }
      ii = indexOf.call(this._shortWeekdaysParse, llc);
      return ii !== -1 ? ii : null;
    }
  }
};
var localeWeekdaysParse = function(weekdayName, format, strict) {
  var i3, mom, regex;
  if (this._weekdaysParseExact) {
    return handleStrictParse$1.call(this, weekdayName, format, strict);
  }
  if (!this._weekdaysParse) {
    this._weekdaysParse = [];
    this._minWeekdaysParse = [];
    this._shortWeekdaysParse = [];
    this._fullWeekdaysParse = [];
  }
  for (i3 = 0;i3 < 7; i3++) {
    mom = createUTC([2000, 1]).day(i3);
    if (strict && !this._fullWeekdaysParse[i3]) {
      this._fullWeekdaysParse[i3] = new RegExp("^" + this.weekdays(mom, "").replace(".", "\\.?") + "$", "i");
      this._shortWeekdaysParse[i3] = new RegExp("^" + this.weekdaysShort(mom, "").replace(".", "\\.?") + "$", "i");
      this._minWeekdaysParse[i3] = new RegExp("^" + this.weekdaysMin(mom, "").replace(".", "\\.?") + "$", "i");
    }
    if (!this._weekdaysParse[i3]) {
      regex = "^" + this.weekdays(mom, "") + "|^" + this.weekdaysShort(mom, "") + "|^" + this.weekdaysMin(mom, "");
      this._weekdaysParse[i3] = new RegExp(regex.replace(".", ""), "i");
    }
    if (strict && format === "dddd" && this._fullWeekdaysParse[i3].test(weekdayName)) {
      return i3;
    } else if (strict && format === "ddd" && this._shortWeekdaysParse[i3].test(weekdayName)) {
      return i3;
    } else if (strict && format === "dd" && this._minWeekdaysParse[i3].test(weekdayName)) {
      return i3;
    } else if (!strict && this._weekdaysParse[i3].test(weekdayName)) {
      return i3;
    }
  }
};
var getSetDayOfWeek = function(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var day2 = get(this, "Day");
  if (input != null) {
    input = parseWeekday(input, this.localeData());
    return this.add(input - day2, "d");
  } else {
    return day2;
  }
};
var getSetLocaleDayOfWeek = function(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
  return input == null ? weekday : this.add(input - weekday, "d");
};
var getSetISODayOfWeek = function(input) {
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    var weekday = parseIsoWeekday(input, this.localeData());
    return this.day(this.day() % 7 ? weekday : weekday - 7);
  } else {
    return this.day() || 7;
  }
};
var weekdaysRegex = function(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysStrictRegex;
    } else {
      return this._weekdaysRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      this._weekdaysRegex = defaultWeekdaysRegex;
    }
    return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;
  }
};
var weekdaysShortRegex = function(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysShortStrictRegex;
    } else {
      return this._weekdaysShortRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysShortRegex")) {
      this._weekdaysShortRegex = defaultWeekdaysShortRegex;
    }
    return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
  }
};
var weekdaysMinRegex = function(isStrict) {
  if (this._weekdaysParseExact) {
    if (!hasOwnProp(this, "_weekdaysRegex")) {
      computeWeekdaysParse.call(this);
    }
    if (isStrict) {
      return this._weekdaysMinStrictRegex;
    } else {
      return this._weekdaysMinRegex;
    }
  } else {
    if (!hasOwnProp(this, "_weekdaysMinRegex")) {
      this._weekdaysMinRegex = defaultWeekdaysMinRegex;
    }
    return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
  }
};
var computeWeekdaysParse = function() {
  function cmpLenRev(a4, b3) {
    return b3.length - a4.length;
  }
  var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [], i3, mom, minp, shortp, longp;
  for (i3 = 0;i3 < 7; i3++) {
    mom = createUTC([2000, 1]).day(i3);
    minp = regexEscape(this.weekdaysMin(mom, ""));
    shortp = regexEscape(this.weekdaysShort(mom, ""));
    longp = regexEscape(this.weekdays(mom, ""));
    minPieces.push(minp);
    shortPieces.push(shortp);
    longPieces.push(longp);
    mixedPieces.push(minp);
    mixedPieces.push(shortp);
    mixedPieces.push(longp);
  }
  minPieces.sort(cmpLenRev);
  shortPieces.sort(cmpLenRev);
  longPieces.sort(cmpLenRev);
  mixedPieces.sort(cmpLenRev);
  this._weekdaysRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._weekdaysShortRegex = this._weekdaysRegex;
  this._weekdaysMinRegex = this._weekdaysRegex;
  this._weekdaysStrictRegex = new RegExp("^(" + longPieces.join("|") + ")", "i");
  this._weekdaysShortStrictRegex = new RegExp("^(" + shortPieces.join("|") + ")", "i");
  this._weekdaysMinStrictRegex = new RegExp("^(" + minPieces.join("|") + ")", "i");
};
var hFormat = function() {
  return this.hours() % 12 || 12;
};
var kFormat = function() {
  return this.hours() || 24;
};
var meridiem = function(token, lowercase) {
  addFormatToken(token, 0, 0, function() {
    return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
  });
};
var matchMeridiem = function(isStrict, locale) {
  return locale._meridiemParse;
};
var localeIsPM = function(input) {
  return (input + "").toLowerCase().charAt(0) === "p";
};
var localeMeridiem = function(hours, minutes, isLower) {
  if (hours > 11) {
    return isLower ? "pm" : "PM";
  } else {
    return isLower ? "am" : "AM";
  }
};
var commonPrefix = function(arr1, arr2) {
  var i3, minl = Math.min(arr1.length, arr2.length);
  for (i3 = 0;i3 < minl; i3 += 1) {
    if (arr1[i3] !== arr2[i3]) {
      return i3;
    }
  }
  return minl;
};
var normalizeLocale = function(key) {
  return key ? key.toLowerCase().replace("_", "-") : key;
};
var chooseLocale = function(names) {
  var i3 = 0, j, next, locale, split;
  while (i3 < names.length) {
    split = normalizeLocale(names[i3]).split("-");
    j = split.length;
    next = normalizeLocale(names[i3 + 1]);
    next = next ? next.split("-") : null;
    while (j > 0) {
      locale = loadLocale(split.slice(0, j).join("-"));
      if (locale) {
        return locale;
      }
      if (next && next.length >= j && commonPrefix(split, next) >= j - 1) {
        break;
      }
      j--;
    }
    i3++;
  }
  return globalLocale;
};
var isLocaleNameSane = function(name) {
  return !!(name && name.match("^[^/\\\\]*$"));
};
var loadLocale = function(name) {
  var oldLocale = null, aliasedRequire;
  if (locales[name] === undefined && typeof module_moment !== "undefined" && module_moment && exports_moment && isLocaleNameSane(name)) {
    try {
      oldLocale = globalLocale._abbr;
      aliasedRequire = require;
      aliasedRequire("./locale/" + name);
      getSetGlobalLocale(oldLocale);
    } catch (e6) {
      locales[name] = null;
    }
  }
  return locales[name];
};
var getSetGlobalLocale = function(key, values) {
  var data;
  if (key) {
    if (isUndefined(values)) {
      data = getLocale(key);
    } else {
      data = defineLocale(key, values);
    }
    if (data) {
      globalLocale = data;
    } else {
      if (typeof console !== "undefined" && console.warn) {
        console.warn("Locale " + key + " not found. Did you forget to load it?");
      }
    }
  }
  return globalLocale._abbr;
};
var defineLocale = function(name, config) {
  if (config !== null) {
    var locale, parentConfig = baseConfig;
    config.abbr = name;
    if (locales[name] != null) {
      deprecateSimple("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info.");
      parentConfig = locales[name]._config;
    } else if (config.parentLocale != null) {
      if (locales[config.parentLocale] != null) {
        parentConfig = locales[config.parentLocale]._config;
      } else {
        locale = loadLocale(config.parentLocale);
        if (locale != null) {
          parentConfig = locale._config;
        } else {
          if (!localeFamilies[config.parentLocale]) {
            localeFamilies[config.parentLocale] = [];
          }
          localeFamilies[config.parentLocale].push({
            name,
            config
          });
          return null;
        }
      }
    }
    locales[name] = new Locale(mergeConfigs(parentConfig, config));
    if (localeFamilies[name]) {
      localeFamilies[name].forEach(function(x) {
        defineLocale(x.name, x.config);
      });
    }
    getSetGlobalLocale(name);
    return locales[name];
  } else {
    delete locales[name];
    return null;
  }
};
var updateLocale = function(name, config) {
  if (config != null) {
    var locale, tmpLocale, parentConfig = baseConfig;
    if (locales[name] != null && locales[name].parentLocale != null) {
      locales[name].set(mergeConfigs(locales[name]._config, config));
    } else {
      tmpLocale = loadLocale(name);
      if (tmpLocale != null) {
        parentConfig = tmpLocale._config;
      }
      config = mergeConfigs(parentConfig, config);
      if (tmpLocale == null) {
        config.abbr = name;
      }
      locale = new Locale(config);
      locale.parentLocale = locales[name];
      locales[name] = locale;
    }
    getSetGlobalLocale(name);
  } else {
    if (locales[name] != null) {
      if (locales[name].parentLocale != null) {
        locales[name] = locales[name].parentLocale;
        if (name === getSetGlobalLocale()) {
          getSetGlobalLocale(name);
        }
      } else if (locales[name] != null) {
        delete locales[name];
      }
    }
  }
  return locales[name];
};
var getLocale = function(key) {
  var locale;
  if (key && key._locale && key._locale._abbr) {
    key = key._locale._abbr;
  }
  if (!key) {
    return globalLocale;
  }
  if (!isArray(key)) {
    locale = loadLocale(key);
    if (locale) {
      return locale;
    }
    key = [key];
  }
  return chooseLocale(key);
};
var listLocales = function() {
  return keys(locales);
};
var checkOverflow = function(m2) {
  var overflow, a4 = m2._a;
  if (a4 && getParsingFlags(m2).overflow === -2) {
    overflow = a4[MONTH] < 0 || a4[MONTH] > 11 ? MONTH : a4[DATE] < 1 || a4[DATE] > daysInMonth(a4[YEAR], a4[MONTH]) ? DATE : a4[HOUR] < 0 || a4[HOUR] > 24 || a4[HOUR] === 24 && (a4[MINUTE] !== 0 || a4[SECOND] !== 0 || a4[MILLISECOND] !== 0) ? HOUR : a4[MINUTE] < 0 || a4[MINUTE] > 59 ? MINUTE : a4[SECOND] < 0 || a4[SECOND] > 59 ? SECOND : a4[MILLISECOND] < 0 || a4[MILLISECOND] > 999 ? MILLISECOND : -1;
    if (getParsingFlags(m2)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
      overflow = DATE;
    }
    if (getParsingFlags(m2)._overflowWeeks && overflow === -1) {
      overflow = WEEK;
    }
    if (getParsingFlags(m2)._overflowWeekday && overflow === -1) {
      overflow = WEEKDAY;
    }
    getParsingFlags(m2).overflow = overflow;
  }
  return m2;
};
var configFromISO = function(config) {
  var i3, l, string = config._i, match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string), allowTime, dateFormat, timeFormat, tzFormat, isoDatesLen = isoDates.length, isoTimesLen = isoTimes.length;
  if (match) {
    getParsingFlags(config).iso = true;
    for (i3 = 0, l = isoDatesLen;i3 < l; i3++) {
      if (isoDates[i3][1].exec(match[1])) {
        dateFormat = isoDates[i3][0];
        allowTime = isoDates[i3][2] !== false;
        break;
      }
    }
    if (dateFormat == null) {
      config._isValid = false;
      return;
    }
    if (match[3]) {
      for (i3 = 0, l = isoTimesLen;i3 < l; i3++) {
        if (isoTimes[i3][1].exec(match[3])) {
          timeFormat = (match[2] || " ") + isoTimes[i3][0];
          break;
        }
      }
      if (timeFormat == null) {
        config._isValid = false;
        return;
      }
    }
    if (!allowTime && timeFormat != null) {
      config._isValid = false;
      return;
    }
    if (match[4]) {
      if (tzRegex.exec(match[4])) {
        tzFormat = "Z";
      } else {
        config._isValid = false;
        return;
      }
    }
    config._f = dateFormat + (timeFormat || "") + (tzFormat || "");
    configFromStringAndFormat(config);
  } else {
    config._isValid = false;
  }
};
var extractFromRFC2822Strings = function(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
  var result = [
    untruncateYear(yearStr),
    defaultLocaleMonthsShort.indexOf(monthStr),
    parseInt(dayStr, 10),
    parseInt(hourStr, 10),
    parseInt(minuteStr, 10)
  ];
  if (secondStr) {
    result.push(parseInt(secondStr, 10));
  }
  return result;
};
var untruncateYear = function(yearStr) {
  var year2 = parseInt(yearStr, 10);
  if (year2 <= 49) {
    return 2000 + year2;
  } else if (year2 <= 999) {
    return 1900 + year2;
  }
  return year2;
};
var preprocessRFC2822 = function(s5) {
  return s5.replace(/\([^()]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
};
var checkWeekday = function(weekdayStr, parsedInput, config) {
  if (weekdayStr) {
    var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr), weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
    if (weekdayProvided !== weekdayActual) {
      getParsingFlags(config).weekdayMismatch = true;
      config._isValid = false;
      return false;
    }
  }
  return true;
};
var calculateOffset = function(obsOffset, militaryOffset, numOffset) {
  if (obsOffset) {
    return obsOffsets[obsOffset];
  } else if (militaryOffset) {
    return 0;
  } else {
    var hm = parseInt(numOffset, 10), m2 = hm % 100, h2 = (hm - m2) / 100;
    return h2 * 60 + m2;
  }
};
var configFromRFC2822 = function(config) {
  var match = rfc2822.exec(preprocessRFC2822(config._i)), parsedArray;
  if (match) {
    parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
    if (!checkWeekday(match[1], parsedArray, config)) {
      return;
    }
    config._a = parsedArray;
    config._tzm = calculateOffset(match[8], match[9], match[10]);
    config._d = createUTCDate.apply(null, config._a);
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    getParsingFlags(config).rfc2822 = true;
  } else {
    config._isValid = false;
  }
};
var configFromString = function(config) {
  var matched = aspNetJsonRegex.exec(config._i);
  if (matched !== null) {
    config._d = new Date(+matched[1]);
    return;
  }
  configFromISO(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  configFromRFC2822(config);
  if (config._isValid === false) {
    delete config._isValid;
  } else {
    return;
  }
  if (config._strict) {
    config._isValid = false;
  } else {
    hooks.createFromInputFallback(config);
  }
};
var defaults = function(a4, b3, c) {
  if (a4 != null) {
    return a4;
  }
  if (b3 != null) {
    return b3;
  }
  return c;
};
var currentDateArray = function(config) {
  var nowValue = new Date(hooks.now());
  if (config._useUTC) {
    return [
      nowValue.getUTCFullYear(),
      nowValue.getUTCMonth(),
      nowValue.getUTCDate()
    ];
  }
  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
};
var configFromArray = function(config) {
  var i3, date, input = [], currentDate, expectedWeekday, yearToUse;
  if (config._d) {
    return;
  }
  currentDate = currentDateArray(config);
  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
    dayOfYearFromWeekInfo(config);
  }
  if (config._dayOfYear != null) {
    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);
    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
      getParsingFlags(config)._overflowDayOfYear = true;
    }
    date = createUTCDate(yearToUse, 0, config._dayOfYear);
    config._a[MONTH] = date.getUTCMonth();
    config._a[DATE] = date.getUTCDate();
  }
  for (i3 = 0;i3 < 3 && config._a[i3] == null; ++i3) {
    config._a[i3] = input[i3] = currentDate[i3];
  }
  for (;i3 < 7; i3++) {
    config._a[i3] = input[i3] = config._a[i3] == null ? i3 === 2 ? 1 : 0 : config._a[i3];
  }
  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {
    config._nextDay = true;
    config._a[HOUR] = 0;
  }
  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();
  if (config._tzm != null) {
    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
  }
  if (config._nextDay) {
    config._a[HOUR] = 24;
  }
  if (config._w && typeof config._w.d !== "undefined" && config._w.d !== expectedWeekday) {
    getParsingFlags(config).weekdayMismatch = true;
  }
};
var dayOfYearFromWeekInfo = function(config) {
  var w, weekYear, week2, weekday, dow, doy, temp, weekdayOverflow, curWeek;
  w = config._w;
  if (w.GG != null || w.W != null || w.E != null) {
    dow = 1;
    doy = 4;
    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
    week2 = defaults(w.W, 1);
    weekday = defaults(w.E, 1);
    if (weekday < 1 || weekday > 7) {
      weekdayOverflow = true;
    }
  } else {
    dow = config._locale._week.dow;
    doy = config._locale._week.doy;
    curWeek = weekOfYear(createLocal(), dow, doy);
    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);
    week2 = defaults(w.w, curWeek.week);
    if (w.d != null) {
      weekday = w.d;
      if (weekday < 0 || weekday > 6) {
        weekdayOverflow = true;
      }
    } else if (w.e != null) {
      weekday = w.e + dow;
      if (w.e < 0 || w.e > 6) {
        weekdayOverflow = true;
      }
    } else {
      weekday = dow;
    }
  }
  if (week2 < 1 || week2 > weeksInYear(weekYear, dow, doy)) {
    getParsingFlags(config)._overflowWeeks = true;
  } else if (weekdayOverflow != null) {
    getParsingFlags(config)._overflowWeekday = true;
  } else {
    temp = dayOfYearFromWeeks(weekYear, week2, weekday, dow, doy);
    config._a[YEAR] = temp.year;
    config._dayOfYear = temp.dayOfYear;
  }
};
var configFromStringAndFormat = function(config) {
  if (config._f === hooks.ISO_8601) {
    configFromISO(config);
    return;
  }
  if (config._f === hooks.RFC_2822) {
    configFromRFC2822(config);
    return;
  }
  config._a = [];
  getParsingFlags(config).empty = true;
  var string = "" + config._i, i3, parsedInput, tokens, token, skipped, stringLength = string.length, totalParsedInputLength = 0, era, tokenLen;
  tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];
  tokenLen = tokens.length;
  for (i3 = 0;i3 < tokenLen; i3++) {
    token = tokens[i3];
    parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
    if (parsedInput) {
      skipped = string.substr(0, string.indexOf(parsedInput));
      if (skipped.length > 0) {
        getParsingFlags(config).unusedInput.push(skipped);
      }
      string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
      totalParsedInputLength += parsedInput.length;
    }
    if (formatTokenFunctions[token]) {
      if (parsedInput) {
        getParsingFlags(config).empty = false;
      } else {
        getParsingFlags(config).unusedTokens.push(token);
      }
      addTimeToArrayFromToken(token, parsedInput, config);
    } else if (config._strict && !parsedInput) {
      getParsingFlags(config).unusedTokens.push(token);
    }
  }
  getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
  if (string.length > 0) {
    getParsingFlags(config).unusedInput.push(string);
  }
  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {
    getParsingFlags(config).bigHour = undefined;
  }
  getParsingFlags(config).parsedDateParts = config._a.slice(0);
  getParsingFlags(config).meridiem = config._meridiem;
  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);
  era = getParsingFlags(config).era;
  if (era !== null) {
    config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
  }
  configFromArray(config);
  checkOverflow(config);
};
var meridiemFixWrap = function(locale, hour2, meridiem2) {
  var isPm;
  if (meridiem2 == null) {
    return hour2;
  }
  if (locale.meridiemHour != null) {
    return locale.meridiemHour(hour2, meridiem2);
  } else if (locale.isPM != null) {
    isPm = locale.isPM(meridiem2);
    if (isPm && hour2 < 12) {
      hour2 += 12;
    }
    if (!isPm && hour2 === 12) {
      hour2 = 0;
    }
    return hour2;
  } else {
    return hour2;
  }
};
var configFromStringAndArray = function(config) {
  var tempConfig, bestMoment, scoreToBeat, i3, currentScore, validFormatFound, bestFormatIsValid = false, configfLen = config._f.length;
  if (configfLen === 0) {
    getParsingFlags(config).invalidFormat = true;
    config._d = new Date(NaN);
    return;
  }
  for (i3 = 0;i3 < configfLen; i3++) {
    currentScore = 0;
    validFormatFound = false;
    tempConfig = copyConfig({}, config);
    if (config._useUTC != null) {
      tempConfig._useUTC = config._useUTC;
    }
    tempConfig._f = config._f[i3];
    configFromStringAndFormat(tempConfig);
    if (isValid(tempConfig)) {
      validFormatFound = true;
    }
    currentScore += getParsingFlags(tempConfig).charsLeftOver;
    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;
    getParsingFlags(tempConfig).score = currentScore;
    if (!bestFormatIsValid) {
      if (scoreToBeat == null || currentScore < scoreToBeat || validFormatFound) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
        if (validFormatFound) {
          bestFormatIsValid = true;
        }
      }
    } else {
      if (currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempConfig;
      }
    }
  }
  extend(config, bestMoment || tempConfig);
};
var configFromObject = function(config) {
  if (config._d) {
    return;
  }
  var i3 = normalizeObjectUnits(config._i), dayOrDate = i3.day === undefined ? i3.date : i3.day;
  config._a = map([i3.year, i3.month, dayOrDate, i3.hour, i3.minute, i3.second, i3.millisecond], function(obj) {
    return obj && parseInt(obj, 10);
  });
  configFromArray(config);
};
var createFromConfig = function(config) {
  var res = new Moment(checkOverflow(prepareConfig(config)));
  if (res._nextDay) {
    res.add(1, "d");
    res._nextDay = undefined;
  }
  return res;
};
var prepareConfig = function(config) {
  var { _i: input, _f: format } = config;
  config._locale = config._locale || getLocale(config._l);
  if (input === null || format === undefined && input === "") {
    return createInvalid({ nullInput: true });
  }
  if (typeof input === "string") {
    config._i = input = config._locale.preparse(input);
  }
  if (isMoment(input)) {
    return new Moment(checkOverflow(input));
  } else if (isDate3(input)) {
    config._d = input;
  } else if (isArray(format)) {
    configFromStringAndArray(config);
  } else if (format) {
    configFromStringAndFormat(config);
  } else {
    configFromInput(config);
  }
  if (!isValid(config)) {
    config._d = null;
  }
  return config;
};
var configFromInput = function(config) {
  var input = config._i;
  if (isUndefined(input)) {
    config._d = new Date(hooks.now());
  } else if (isDate3(input)) {
    config._d = new Date(input.valueOf());
  } else if (typeof input === "string") {
    configFromString(config);
  } else if (isArray(input)) {
    config._a = map(input.slice(0), function(obj) {
      return parseInt(obj, 10);
    });
    configFromArray(config);
  } else if (isObject2(input)) {
    configFromObject(config);
  } else if (isNumber(input)) {
    config._d = new Date(input);
  } else {
    hooks.createFromInputFallback(config);
  }
};
var createLocalOrUTC = function(input, format, locale, strict, isUTC) {
  var c = {};
  if (format === true || format === false) {
    strict = format;
    format = undefined;
  }
  if (locale === true || locale === false) {
    strict = locale;
    locale = undefined;
  }
  if (isObject2(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {
    input = undefined;
  }
  c._isAMomentObject = true;
  c._useUTC = c._isUTC = isUTC;
  c._l = locale;
  c._i = input;
  c._f = format;
  c._strict = strict;
  return createFromConfig(c);
};
var createLocal = function(input, format, locale, strict) {
  return createLocalOrUTC(input, format, locale, strict, false);
};
var pickBy = function(fn, moments) {
  var res, i3;
  if (moments.length === 1 && isArray(moments[0])) {
    moments = moments[0];
  }
  if (!moments.length) {
    return createLocal();
  }
  res = moments[0];
  for (i3 = 1;i3 < moments.length; ++i3) {
    if (!moments[i3].isValid() || moments[i3][fn](res)) {
      res = moments[i3];
    }
  }
  return res;
};
var min = function() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isBefore", args);
};
var max = function() {
  var args = [].slice.call(arguments, 0);
  return pickBy("isAfter", args);
};
var isDurationValid = function(m2) {
  var key, unitHasDecimal = false, i3, orderLen = ordering.length;
  for (key in m2) {
    if (hasOwnProp(m2, key) && !(indexOf.call(ordering, key) !== -1 && (m2[key] == null || !isNaN(m2[key])))) {
      return false;
    }
  }
  for (i3 = 0;i3 < orderLen; ++i3) {
    if (m2[ordering[i3]]) {
      if (unitHasDecimal) {
        return false;
      }
      if (parseFloat(m2[ordering[i3]]) !== toInt(m2[ordering[i3]])) {
        unitHasDecimal = true;
      }
    }
  }
  return true;
};
var isValid$1 = function() {
  return this._isValid;
};
var createInvalid$1 = function() {
  return createDuration(NaN);
};
var Duration = function(duration) {
  var normalizedInput = normalizeObjectUnits(duration), years = normalizedInput.year || 0, quarters = normalizedInput.quarter || 0, months = normalizedInput.month || 0, weeks = normalizedInput.week || normalizedInput.isoWeek || 0, days = normalizedInput.day || 0, hours = normalizedInput.hour || 0, minutes = normalizedInput.minute || 0, seconds = normalizedInput.second || 0, milliseconds = normalizedInput.millisecond || 0;
  this._isValid = isDurationValid(normalizedInput);
  this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60000 + hours * 1000 * 60 * 60;
  this._days = +days + weeks * 7;
  this._months = +months + quarters * 3 + years * 12;
  this._data = {};
  this._locale = getLocale();
  this._bubble();
};
var isDuration = function(obj) {
  return obj instanceof Duration;
};
var absRound = function(number) {
  if (number < 0) {
    return Math.round(-1 * number) * -1;
  } else {
    return Math.round(number);
  }
};
var compareArrays = function(array1, array2, dontConvert) {
  var len = Math.min(array1.length, array2.length), lengthDiff = Math.abs(array1.length - array2.length), diffs = 0, i3;
  for (i3 = 0;i3 < len; i3++) {
    if (dontConvert && array1[i3] !== array2[i3] || !dontConvert && toInt(array1[i3]) !== toInt(array2[i3])) {
      diffs++;
    }
  }
  return diffs + lengthDiff;
};
var offset = function(token, separator) {
  addFormatToken(token, 0, 0, function() {
    var offset2 = this.utcOffset(), sign5 = "+";
    if (offset2 < 0) {
      offset2 = -offset2;
      sign5 = "-";
    }
    return sign5 + zeroFill(~~(offset2 / 60), 2) + separator + zeroFill(~~offset2 % 60, 2);
  });
};
var offsetFromString = function(matcher, string) {
  var matches = (string || "").match(matcher), chunk, parts, minutes;
  if (matches === null) {
    return null;
  }
  chunk = matches[matches.length - 1] || [];
  parts = (chunk + "").match(chunkOffset) || ["-", 0, 0];
  minutes = +(parts[1] * 60) + toInt(parts[2]);
  return minutes === 0 ? 0 : parts[0] === "+" ? minutes : -minutes;
};
var cloneWithOffset = function(input, model7) {
  var res, diff;
  if (model7._isUTC) {
    res = model7.clone();
    diff = (isMoment(input) || isDate3(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
    res._d.setTime(res._d.valueOf() + diff);
    hooks.updateOffset(res, false);
    return res;
  } else {
    return createLocal(input).local();
  }
};
var getDateOffset = function(m2) {
  return -Math.round(m2._d.getTimezoneOffset());
};
var getSetOffset = function(input, keepLocalTime, keepMinutes) {
  var offset2 = this._offset || 0, localAdjust;
  if (!this.isValid()) {
    return input != null ? this : NaN;
  }
  if (input != null) {
    if (typeof input === "string") {
      input = offsetFromString(matchShortOffset, input);
      if (input === null) {
        return this;
      }
    } else if (Math.abs(input) < 16 && !keepMinutes) {
      input = input * 60;
    }
    if (!this._isUTC && keepLocalTime) {
      localAdjust = getDateOffset(this);
    }
    this._offset = input;
    this._isUTC = true;
    if (localAdjust != null) {
      this.add(localAdjust, "m");
    }
    if (offset2 !== input) {
      if (!keepLocalTime || this._changeInProgress) {
        addSubtract(this, createDuration(input - offset2, "m"), 1, false);
      } else if (!this._changeInProgress) {
        this._changeInProgress = true;
        hooks.updateOffset(this, true);
        this._changeInProgress = null;
      }
    }
    return this;
  } else {
    return this._isUTC ? offset2 : getDateOffset(this);
  }
};
var getSetZone = function(input, keepLocalTime) {
  if (input != null) {
    if (typeof input !== "string") {
      input = -input;
    }
    this.utcOffset(input, keepLocalTime);
    return this;
  } else {
    return -this.utcOffset();
  }
};
var setOffsetToUTC = function(keepLocalTime) {
  return this.utcOffset(0, keepLocalTime);
};
var setOffsetToLocal = function(keepLocalTime) {
  if (this._isUTC) {
    this.utcOffset(0, keepLocalTime);
    this._isUTC = false;
    if (keepLocalTime) {
      this.subtract(getDateOffset(this), "m");
    }
  }
  return this;
};
var setOffsetToParsedOffset = function() {
  if (this._tzm != null) {
    this.utcOffset(this._tzm, false, true);
  } else if (typeof this._i === "string") {
    var tZone = offsetFromString(matchOffset, this._i);
    if (tZone != null) {
      this.utcOffset(tZone);
    } else {
      this.utcOffset(0, true);
    }
  }
  return this;
};
var hasAlignedHourOffset = function(input) {
  if (!this.isValid()) {
    return false;
  }
  input = input ? createLocal(input).utcOffset() : 0;
  return (this.utcOffset() - input) % 60 === 0;
};
var isDaylightSavingTime = function() {
  return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
};
var isDaylightSavingTimeShifted = function() {
  if (!isUndefined(this._isDSTShifted)) {
    return this._isDSTShifted;
  }
  var c = {}, other;
  copyConfig(c, this);
  c = prepareConfig(c);
  if (c._a) {
    other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
    this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;
  } else {
    this._isDSTShifted = false;
  }
  return this._isDSTShifted;
};
var isLocal = function() {
  return this.isValid() ? !this._isUTC : false;
};
var isUtcOffset = function() {
  return this.isValid() ? this._isUTC : false;
};
var isUtc = function() {
  return this.isValid() ? this._isUTC && this._offset === 0 : false;
};
var createDuration = function(input, key) {
  var duration = input, match = null, sign5, ret, diffRes;
  if (isDuration(input)) {
    duration = {
      ms: input._milliseconds,
      d: input._days,
      M: input._months
    };
  } else if (isNumber(input) || !isNaN(+input)) {
    duration = {};
    if (key) {
      duration[key] = +input;
    } else {
      duration.milliseconds = +input;
    }
  } else if (match = aspNetRegex.exec(input)) {
    sign5 = match[1] === "-" ? -1 : 1;
    duration = {
      y: 0,
      d: toInt(match[DATE]) * sign5,
      h: toInt(match[HOUR]) * sign5,
      m: toInt(match[MINUTE]) * sign5,
      s: toInt(match[SECOND]) * sign5,
      ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign5
    };
  } else if (match = isoRegex.exec(input)) {
    sign5 = match[1] === "-" ? -1 : 1;
    duration = {
      y: parseIso(match[2], sign5),
      M: parseIso(match[3], sign5),
      w: parseIso(match[4], sign5),
      d: parseIso(match[5], sign5),
      h: parseIso(match[6], sign5),
      m: parseIso(match[7], sign5),
      s: parseIso(match[8], sign5)
    };
  } else if (duration == null) {
    duration = {};
  } else if (typeof duration === "object" && (("from" in duration) || ("to" in duration))) {
    diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));
    duration = {};
    duration.ms = diffRes.milliseconds;
    duration.M = diffRes.months;
  }
  ret = new Duration(duration);
  if (isDuration(input) && hasOwnProp(input, "_locale")) {
    ret._locale = input._locale;
  }
  if (isDuration(input) && hasOwnProp(input, "_isValid")) {
    ret._isValid = input._isValid;
  }
  return ret;
};
var parseIso = function(inp, sign5) {
  var res = inp && parseFloat(inp.replace(",", "."));
  return (isNaN(res) ? 0 : res) * sign5;
};
var positiveMomentsDifference = function(base, other) {
  var res = {};
  res.months = other.month() - base.month() + (other.year() - base.year()) * 12;
  if (base.clone().add(res.months, "M").isAfter(other)) {
    --res.months;
  }
  res.milliseconds = +other - +base.clone().add(res.months, "M");
  return res;
};
var momentsDifference = function(base, other) {
  var res;
  if (!(base.isValid() && other.isValid())) {
    return { milliseconds: 0, months: 0 };
  }
  other = cloneWithOffset(other, base);
  if (base.isBefore(other)) {
    res = positiveMomentsDifference(base, other);
  } else {
    res = positiveMomentsDifference(other, base);
    res.milliseconds = -res.milliseconds;
    res.months = -res.months;
  }
  return res;
};
var createAdder = function(direction, name) {
  return function(val, period) {
    var dur, tmp;
    if (period !== null && !isNaN(+period)) {
      deprecateSimple(name, "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
      tmp = val;
      val = period;
      period = tmp;
    }
    dur = createDuration(val, period);
    addSubtract(this, dur, direction);
    return this;
  };
};
var addSubtract = function(mom, duration, isAdding, updateOffset) {
  var milliseconds = duration._milliseconds, days = absRound(duration._days), months = absRound(duration._months);
  if (!mom.isValid()) {
    return;
  }
  updateOffset = updateOffset == null ? true : updateOffset;
  if (months) {
    setMonth(mom, get(mom, "Month") + months * isAdding);
  }
  if (days) {
    set$1(mom, "Date", get(mom, "Date") + days * isAdding);
  }
  if (milliseconds) {
    mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
  }
  if (updateOffset) {
    hooks.updateOffset(mom, days || months);
  }
};
var isString = function(input) {
  return typeof input === "string" || input instanceof String;
};
var isMomentInput = function(input) {
  return isMoment(input) || isDate3(input) || isString(input) || isNumber(input) || isNumberOrStringArray(input) || isMomentInputObject(input) || input === null || input === undefined;
};
var isMomentInputObject = function(input) {
  var objectTest = isObject2(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "years",
    "year",
    "y",
    "months",
    "month",
    "M",
    "days",
    "day",
    "d",
    "dates",
    "date",
    "D",
    "hours",
    "hour",
    "h",
    "minutes",
    "minute",
    "m",
    "seconds",
    "second",
    "s",
    "milliseconds",
    "millisecond",
    "ms"
  ], i3, property, propertyLen = properties.length;
  for (i3 = 0;i3 < propertyLen; i3 += 1) {
    property = properties[i3];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
};
var isNumberOrStringArray = function(input) {
  var arrayTest = isArray(input), dataTypeTest = false;
  if (arrayTest) {
    dataTypeTest = input.filter(function(item) {
      return !isNumber(item) && isString(input);
    }).length === 0;
  }
  return arrayTest && dataTypeTest;
};
var isCalendarSpec = function(input) {
  var objectTest = isObject2(input) && !isObjectEmpty(input), propertyTest = false, properties = [
    "sameDay",
    "nextDay",
    "lastDay",
    "nextWeek",
    "lastWeek",
    "sameElse"
  ], i3, property;
  for (i3 = 0;i3 < properties.length; i3 += 1) {
    property = properties[i3];
    propertyTest = propertyTest || hasOwnProp(input, property);
  }
  return objectTest && propertyTest;
};
var getCalendarFormat = function(myMoment, now2) {
  var diff = myMoment.diff(now2, "days", true);
  return diff < -6 ? "sameElse" : diff < -1 ? "lastWeek" : diff < 0 ? "lastDay" : diff < 1 ? "sameDay" : diff < 2 ? "nextDay" : diff < 7 ? "nextWeek" : "sameElse";
};
var calendar$1 = function(time, formats) {
  if (arguments.length === 1) {
    if (!arguments[0]) {
      time = undefined;
      formats = undefined;
    } else if (isMomentInput(arguments[0])) {
      time = arguments[0];
      formats = undefined;
    } else if (isCalendarSpec(arguments[0])) {
      formats = arguments[0];
      time = undefined;
    }
  }
  var now2 = time || createLocal(), sod = cloneWithOffset(now2, this).startOf("day"), format = hooks.calendarFormat(this, sod) || "sameElse", output = formats && (isFunction(formats[format]) ? formats[format].call(this, now2) : formats[format]);
  return this.format(output || this.localeData().calendar(format, this, createLocal(now2)));
};
var clone = function() {
  return new Moment(this);
};
var isAfter = function(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() > localInput.valueOf();
  } else {
    return localInput.valueOf() < this.clone().startOf(units).valueOf();
  }
};
var isBefore = function(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input);
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() < localInput.valueOf();
  } else {
    return this.clone().endOf(units).valueOf() < localInput.valueOf();
  }
};
var isBetween = function(from, to, units, inclusivity) {
  var localFrom = isMoment(from) ? from : createLocal(from), localTo = isMoment(to) ? to : createLocal(to);
  if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
    return false;
  }
  inclusivity = inclusivity || "()";
  return (inclusivity[0] === "(" ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ")" ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));
};
var isSame = function(input, units) {
  var localInput = isMoment(input) ? input : createLocal(input), inputMs;
  if (!(this.isValid() && localInput.isValid())) {
    return false;
  }
  units = normalizeUnits(units) || "millisecond";
  if (units === "millisecond") {
    return this.valueOf() === localInput.valueOf();
  } else {
    inputMs = localInput.valueOf();
    return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
  }
};
var isSameOrAfter = function(input, units) {
  return this.isSame(input, units) || this.isAfter(input, units);
};
var isSameOrBefore = function(input, units) {
  return this.isSame(input, units) || this.isBefore(input, units);
};
var diff = function(input, units, asFloat) {
  var that, zoneDelta, output;
  if (!this.isValid()) {
    return NaN;
  }
  that = cloneWithOffset(input, this);
  if (!that.isValid()) {
    return NaN;
  }
  zoneDelta = (that.utcOffset() - this.utcOffset()) * 60000;
  units = normalizeUnits(units);
  switch (units) {
    case "year":
      output = monthDiff(this, that) / 12;
      break;
    case "month":
      output = monthDiff(this, that);
      break;
    case "quarter":
      output = monthDiff(this, that) / 3;
      break;
    case "second":
      output = (this - that) / 1000;
      break;
    case "minute":
      output = (this - that) / 60000;
      break;
    case "hour":
      output = (this - that) / 3600000;
      break;
    case "day":
      output = (this - that - zoneDelta) / 86400000;
      break;
    case "week":
      output = (this - that - zoneDelta) / 604800000;
      break;
    default:
      output = this - that;
  }
  return asFloat ? output : absFloor(output);
};
var monthDiff = function(a4, b3) {
  if (a4.date() < b3.date()) {
    return -monthDiff(b3, a4);
  }
  var wholeMonthDiff = (b3.year() - a4.year()) * 12 + (b3.month() - a4.month()), anchor = a4.clone().add(wholeMonthDiff, "months"), anchor2, adjust;
  if (b3 - anchor < 0) {
    anchor2 = a4.clone().add(wholeMonthDiff - 1, "months");
    adjust = (b3 - anchor) / (anchor - anchor2);
  } else {
    anchor2 = a4.clone().add(wholeMonthDiff + 1, "months");
    adjust = (b3 - anchor) / (anchor2 - anchor);
  }
  return -(wholeMonthDiff + adjust) || 0;
};
var toString = function() {
  return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
};
var toISOString = function(keepOffset) {
  if (!this.isValid()) {
    return null;
  }
  var utc = keepOffset !== true, m2 = utc ? this.clone().utc() : this;
  if (m2.year() < 0 || m2.year() > 9999) {
    return formatMoment(m2, utc ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ");
  }
  if (isFunction(Date.prototype.toISOString)) {
    if (utc) {
      return this.toDate().toISOString();
    } else {
      return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace("Z", formatMoment(m2, "Z"));
    }
  }
  return formatMoment(m2, utc ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
};
var inspect = function() {
  if (!this.isValid()) {
    return "moment.invalid(/* " + this._i + " */)";
  }
  var func = "moment", zone = "", prefix, year2, datetime, suffix;
  if (!this.isLocal()) {
    func = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone";
    zone = "Z";
  }
  prefix = "[" + func + '("]';
  year2 = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY";
  datetime = "-MM-DD[T]HH:mm:ss.SSS";
  suffix = zone + '[")]';
  return this.format(prefix + year2 + datetime + suffix);
};
var format = function(inputString) {
  if (!inputString) {
    inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
  }
  var output = formatMoment(this, inputString);
  return this.localeData().postformat(output);
};
var from = function(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ to: this, from: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
};
var fromNow = function(withoutSuffix) {
  return this.from(createLocal(), withoutSuffix);
};
var to = function(time, withoutSuffix) {
  if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {
    return createDuration({ from: this, to: time }).locale(this.locale()).humanize(!withoutSuffix);
  } else {
    return this.localeData().invalidDate();
  }
};
var toNow = function(withoutSuffix) {
  return this.to(createLocal(), withoutSuffix);
};
var locale = function(key) {
  var newLocaleData;
  if (key === undefined) {
    return this._locale._abbr;
  } else {
    newLocaleData = getLocale(key);
    if (newLocaleData != null) {
      this._locale = newLocaleData;
    }
    return this;
  }
};
var localeData = function() {
  return this._locale;
};
var mod$1 = function(dividend, divisor) {
  return (dividend % divisor + divisor) % divisor;
};
var localStartOfDate = function(y3, m2, d2) {
  if (y3 < 100 && y3 >= 0) {
    return new Date(y3 + 400, m2, d2) - MS_PER_400_YEARS;
  } else {
    return new Date(y3, m2, d2).valueOf();
  }
};
var utcStartOfDate = function(y3, m2, d2) {
  if (y3 < 100 && y3 >= 0) {
    return Date.UTC(y3 + 400, m2, d2) - MS_PER_400_YEARS;
  } else {
    return Date.UTC(y3, m2, d2);
  }
};
var startOf = function(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === undefined || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year(), 0, 1);
      break;
    case "quarter":
      time = startOfDate(this.year(), this.month() - this.month() % 3, 1);
      break;
    case "month":
      time = startOfDate(this.year(), this.month(), 1);
      break;
    case "week":
      time = startOfDate(this.year(), this.month(), this.date() - this.weekday());
      break;
    case "isoWeek":
      time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date());
      break;
    case "hour":
      time = this._d.valueOf();
      time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);
      break;
    case "minute":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_MINUTE);
      break;
    case "second":
      time = this._d.valueOf();
      time -= mod$1(time, MS_PER_SECOND);
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
};
var endOf = function(units) {
  var time, startOfDate;
  units = normalizeUnits(units);
  if (units === undefined || units === "millisecond" || !this.isValid()) {
    return this;
  }
  startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;
  switch (units) {
    case "year":
      time = startOfDate(this.year() + 1, 0, 1) - 1;
      break;
    case "quarter":
      time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
      break;
    case "month":
      time = startOfDate(this.year(), this.month() + 1, 1) - 1;
      break;
    case "week":
      time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
      break;
    case "isoWeek":
      time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
      break;
    case "day":
    case "date":
      time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
      break;
    case "hour":
      time = this._d.valueOf();
      time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;
      break;
    case "minute":
      time = this._d.valueOf();
      time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
      break;
    case "second":
      time = this._d.valueOf();
      time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
      break;
  }
  this._d.setTime(time);
  hooks.updateOffset(this, true);
  return this;
};
var valueOf = function() {
  return this._d.valueOf() - (this._offset || 0) * 60000;
};
var unix = function() {
  return Math.floor(this.valueOf() / 1000);
};
var toDate = function() {
  return new Date(this.valueOf());
};
var toArray = function() {
  var m2 = this;
  return [
    m2.year(),
    m2.month(),
    m2.date(),
    m2.hour(),
    m2.minute(),
    m2.second(),
    m2.millisecond()
  ];
};
var toObject = function() {
  var m2 = this;
  return {
    years: m2.year(),
    months: m2.month(),
    date: m2.date(),
    hours: m2.hours(),
    minutes: m2.minutes(),
    seconds: m2.seconds(),
    milliseconds: m2.milliseconds()
  };
};
var toJSON = function() {
  return this.isValid() ? this.toISOString() : null;
};
var isValid$2 = function() {
  return isValid(this);
};
var parsingFlags = function() {
  return extend({}, getParsingFlags(this));
};
var invalidAt = function() {
  return getParsingFlags(this).overflow;
};
var creationData = function() {
  return {
    input: this._i,
    format: this._f,
    locale: this._locale,
    isUTC: this._isUTC,
    strict: this._strict
  };
};
var localeEras = function(m2, format2) {
  var i3, l, date, eras = this._eras || getLocale("en")._eras;
  for (i3 = 0, l = eras.length;i3 < l; ++i3) {
    switch (typeof eras[i3].since) {
      case "string":
        date = hooks(eras[i3].since).startOf("day");
        eras[i3].since = date.valueOf();
        break;
    }
    switch (typeof eras[i3].until) {
      case "undefined":
        eras[i3].until = Infinity;
        break;
      case "string":
        date = hooks(eras[i3].until).startOf("day").valueOf();
        eras[i3].until = date.valueOf();
        break;
    }
  }
  return eras;
};
var localeErasParse = function(eraName, format2, strict) {
  var i3, l, eras = this.eras(), name, abbr, narrow;
  eraName = eraName.toUpperCase();
  for (i3 = 0, l = eras.length;i3 < l; ++i3) {
    name = eras[i3].name.toUpperCase();
    abbr = eras[i3].abbr.toUpperCase();
    narrow = eras[i3].narrow.toUpperCase();
    if (strict) {
      switch (format2) {
        case "N":
        case "NN":
        case "NNN":
          if (abbr === eraName) {
            return eras[i3];
          }
          break;
        case "NNNN":
          if (name === eraName) {
            return eras[i3];
          }
          break;
        case "NNNNN":
          if (narrow === eraName) {
            return eras[i3];
          }
          break;
      }
    } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
      return eras[i3];
    }
  }
};
var localeErasConvertYear = function(era, year2) {
  var dir = era.since <= era.until ? 1 : -1;
  if (year2 === undefined) {
    return hooks(era.since).year();
  } else {
    return hooks(era.since).year() + (year2 - era.offset) * dir;
  }
};
var getEraName = function() {
  var i3, l, val, eras = this.localeData().eras();
  for (i3 = 0, l = eras.length;i3 < l; ++i3) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i3].since <= val && val <= eras[i3].until) {
      return eras[i3].name;
    }
    if (eras[i3].until <= val && val <= eras[i3].since) {
      return eras[i3].name;
    }
  }
  return "";
};
var getEraNarrow = function() {
  var i3, l, val, eras = this.localeData().eras();
  for (i3 = 0, l = eras.length;i3 < l; ++i3) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i3].since <= val && val <= eras[i3].until) {
      return eras[i3].narrow;
    }
    if (eras[i3].until <= val && val <= eras[i3].since) {
      return eras[i3].narrow;
    }
  }
  return "";
};
var getEraAbbr = function() {
  var i3, l, val, eras = this.localeData().eras();
  for (i3 = 0, l = eras.length;i3 < l; ++i3) {
    val = this.clone().startOf("day").valueOf();
    if (eras[i3].since <= val && val <= eras[i3].until) {
      return eras[i3].abbr;
    }
    if (eras[i3].until <= val && val <= eras[i3].since) {
      return eras[i3].abbr;
    }
  }
  return "";
};
var getEraYear = function() {
  var i3, l, dir, val, eras = this.localeData().eras();
  for (i3 = 0, l = eras.length;i3 < l; ++i3) {
    dir = eras[i3].since <= eras[i3].until ? 1 : -1;
    val = this.clone().startOf("day").valueOf();
    if (eras[i3].since <= val && val <= eras[i3].until || eras[i3].until <= val && val <= eras[i3].since) {
      return (this.year() - hooks(eras[i3].since).year()) * dir + eras[i3].offset;
    }
  }
  return this.year();
};
var erasNameRegex = function(isStrict) {
  if (!hasOwnProp(this, "_erasNameRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNameRegex : this._erasRegex;
};
var erasAbbrRegex = function(isStrict) {
  if (!hasOwnProp(this, "_erasAbbrRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasAbbrRegex : this._erasRegex;
};
var erasNarrowRegex = function(isStrict) {
  if (!hasOwnProp(this, "_erasNarrowRegex")) {
    computeErasParse.call(this);
  }
  return isStrict ? this._erasNarrowRegex : this._erasRegex;
};
var matchEraAbbr = function(isStrict, locale2) {
  return locale2.erasAbbrRegex(isStrict);
};
var matchEraName = function(isStrict, locale2) {
  return locale2.erasNameRegex(isStrict);
};
var matchEraNarrow = function(isStrict, locale2) {
  return locale2.erasNarrowRegex(isStrict);
};
var matchEraYearOrdinal = function(isStrict, locale2) {
  return locale2._eraYearOrdinalRegex || matchUnsigned;
};
var computeErasParse = function() {
  var abbrPieces = [], namePieces = [], narrowPieces = [], mixedPieces = [], i3, l, erasName, erasAbbr, erasNarrow, eras = this.eras();
  for (i3 = 0, l = eras.length;i3 < l; ++i3) {
    erasName = regexEscape(eras[i3].name);
    erasAbbr = regexEscape(eras[i3].abbr);
    erasNarrow = regexEscape(eras[i3].narrow);
    namePieces.push(erasName);
    abbrPieces.push(erasAbbr);
    narrowPieces.push(erasNarrow);
    mixedPieces.push(erasName);
    mixedPieces.push(erasAbbr);
    mixedPieces.push(erasNarrow);
  }
  this._erasRegex = new RegExp("^(" + mixedPieces.join("|") + ")", "i");
  this._erasNameRegex = new RegExp("^(" + namePieces.join("|") + ")", "i");
  this._erasAbbrRegex = new RegExp("^(" + abbrPieces.join("|") + ")", "i");
  this._erasNarrowRegex = new RegExp("^(" + narrowPieces.join("|") + ")", "i");
};
var addWeekYearFormatToken = function(token, getter) {
  addFormatToken(0, [token, token.length], 0, getter);
};
var getSetWeekYear = function(input) {
  return getSetWeekYearHelper.call(this, input, this.week(), this.weekday() + this.localeData()._week.dow, this.localeData()._week.dow, this.localeData()._week.doy);
};
var getSetISOWeekYear = function(input) {
  return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);
};
var getISOWeeksInYear = function() {
  return weeksInYear(this.year(), 1, 4);
};
var getISOWeeksInISOWeekYear = function() {
  return weeksInYear(this.isoWeekYear(), 1, 4);
};
var getWeeksInYear = function() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
};
var getWeeksInWeekYear = function() {
  var weekInfo = this.localeData()._week;
  return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
};
var getSetWeekYearHelper = function(input, week2, weekday, dow, doy) {
  var weeksTarget;
  if (input == null) {
    return weekOfYear(this, dow, doy).year;
  } else {
    weeksTarget = weeksInYear(input, dow, doy);
    if (week2 > weeksTarget) {
      week2 = weeksTarget;
    }
    return setWeekAll.call(this, input, week2, weekday, dow, doy);
  }
};
var setWeekAll = function(weekYear, week2, weekday, dow, doy) {
  var dayOfYearData = dayOfYearFromWeeks(weekYear, week2, weekday, dow, doy), date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);
  this.year(date.getUTCFullYear());
  this.month(date.getUTCMonth());
  this.date(date.getUTCDate());
  return this;
};
var getSetQuarter = function(input) {
  return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
};
var getSetDayOfYear = function(input) {
  var dayOfYear = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 86400000) + 1;
  return input == null ? dayOfYear : this.add(input - dayOfYear, "d");
};
var parseMs = function(input, array) {
  array[MILLISECOND] = toInt(("0." + input) * 1000);
};
var getZoneAbbr = function() {
  return this._isUTC ? "UTC" : "";
};
var getZoneName = function() {
  return this._isUTC ? "Coordinated Universal Time" : "";
};
var createUnix = function(input) {
  return createLocal(input * 1000);
};
var createInZone = function() {
  return createLocal.apply(null, arguments).parseZone();
};
var preParsePostFormat = function(string) {
  return string;
};
var get$1 = function(format2, index, field, setter) {
  var locale2 = getLocale(), utc = createUTC().set(setter, index);
  return locale2[field](utc, format2);
};
var listMonthsImpl = function(format2, index, field) {
  if (isNumber(format2)) {
    index = format2;
    format2 = undefined;
  }
  format2 = format2 || "";
  if (index != null) {
    return get$1(format2, index, field, "month");
  }
  var i3, out = [];
  for (i3 = 0;i3 < 12; i3++) {
    out[i3] = get$1(format2, i3, field, "month");
  }
  return out;
};
var listWeekdaysImpl = function(localeSorted, format2, index, field) {
  if (typeof localeSorted === "boolean") {
    if (isNumber(format2)) {
      index = format2;
      format2 = undefined;
    }
    format2 = format2 || "";
  } else {
    format2 = localeSorted;
    index = format2;
    localeSorted = false;
    if (isNumber(format2)) {
      index = format2;
      format2 = undefined;
    }
    format2 = format2 || "";
  }
  var locale2 = getLocale(), shift = localeSorted ? locale2._week.dow : 0, i3, out = [];
  if (index != null) {
    return get$1(format2, (index + shift) % 7, field, "day");
  }
  for (i3 = 0;i3 < 7; i3++) {
    out[i3] = get$1(format2, (i3 + shift) % 7, field, "day");
  }
  return out;
};
var listMonths = function(format2, index) {
  return listMonthsImpl(format2, index, "months");
};
var listMonthsShort = function(format2, index) {
  return listMonthsImpl(format2, index, "monthsShort");
};
var listWeekdays = function(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdays");
};
var listWeekdaysShort = function(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysShort");
};
var listWeekdaysMin = function(localeSorted, format2, index) {
  return listWeekdaysImpl(localeSorted, format2, index, "weekdaysMin");
};
var abs = function() {
  var data = this._data;
  this._milliseconds = mathAbs(this._milliseconds);
  this._days = mathAbs(this._days);
  this._months = mathAbs(this._months);
  data.milliseconds = mathAbs(data.milliseconds);
  data.seconds = mathAbs(data.seconds);
  data.minutes = mathAbs(data.minutes);
  data.hours = mathAbs(data.hours);
  data.months = mathAbs(data.months);
  data.years = mathAbs(data.years);
  return this;
};
var addSubtract$1 = function(duration, input, value4, direction) {
  var other = createDuration(input, value4);
  duration._milliseconds += direction * other._milliseconds;
  duration._days += direction * other._days;
  duration._months += direction * other._months;
  return duration._bubble();
};
var add$1 = function(input, value4) {
  return addSubtract$1(this, input, value4, 1);
};
var subtract$1 = function(input, value4) {
  return addSubtract$1(this, input, value4, -1);
};
var absCeil = function(number) {
  if (number < 0) {
    return Math.floor(number);
  } else {
    return Math.ceil(number);
  }
};
var bubble = function() {
  var milliseconds = this._milliseconds, days = this._days, months = this._months, data = this._data, seconds, minutes, hours, years, monthsFromDays;
  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {
    milliseconds += absCeil(monthsToDays(months) + days) * 86400000;
    days = 0;
    months = 0;
  }
  data.milliseconds = milliseconds % 1000;
  seconds = absFloor(milliseconds / 1000);
  data.seconds = seconds % 60;
  minutes = absFloor(seconds / 60);
  data.minutes = minutes % 60;
  hours = absFloor(minutes / 60);
  data.hours = hours % 24;
  days += absFloor(hours / 24);
  monthsFromDays = absFloor(daysToMonths(days));
  months += monthsFromDays;
  days -= absCeil(monthsToDays(monthsFromDays));
  years = absFloor(months / 12);
  months %= 12;
  data.days = days;
  data.months = months;
  data.years = years;
  return this;
};
var daysToMonths = function(days) {
  return days * 4800 / 146097;
};
var monthsToDays = function(months) {
  return months * 146097 / 4800;
};
var as = function(units) {
  if (!this.isValid()) {
    return NaN;
  }
  var days, months, milliseconds = this._milliseconds;
  units = normalizeUnits(units);
  if (units === "month" || units === "quarter" || units === "year") {
    days = this._days + milliseconds / 86400000;
    months = this._months + daysToMonths(days);
    switch (units) {
      case "month":
        return months;
      case "quarter":
        return months / 3;
      case "year":
        return months / 12;
    }
  } else {
    days = this._days + Math.round(monthsToDays(this._months));
    switch (units) {
      case "week":
        return days / 7 + milliseconds / 604800000;
      case "day":
        return days + milliseconds / 86400000;
      case "hour":
        return days * 24 + milliseconds / 3600000;
      case "minute":
        return days * 1440 + milliseconds / 60000;
      case "second":
        return days * 86400 + milliseconds / 1000;
      case "millisecond":
        return Math.floor(days * 86400000) + milliseconds;
      default:
        throw new Error("Unknown unit " + units);
    }
  }
};
var makeAs = function(alias) {
  return function() {
    return this.as(alias);
  };
};
var clone$1 = function() {
  return createDuration(this);
};
var get$2 = function(units) {
  units = normalizeUnits(units);
  return this.isValid() ? this[units + "s"]() : NaN;
};
var makeGetter = function(name) {
  return function() {
    return this.isValid() ? this._data[name] : NaN;
  };
};
var weeks = function() {
  return absFloor(this.days() / 7);
};
var substituteTimeAgo = function(string, number, withoutSuffix, isFuture, locale2) {
  return locale2.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
};
var relativeTime$1 = function(posNegDuration, withoutSuffix, thresholds, locale2) {
  var duration = createDuration(posNegDuration).abs(), seconds = round(duration.as("s")), minutes = round(duration.as("m")), hours = round(duration.as("h")), days = round(duration.as("d")), months = round(duration.as("M")), weeks2 = round(duration.as("w")), years = round(duration.as("y")), a4 = seconds <= thresholds.ss && ["s", seconds] || seconds < thresholds.s && ["ss", seconds] || minutes <= 1 && ["m"] || minutes < thresholds.m && ["mm", minutes] || hours <= 1 && ["h"] || hours < thresholds.h && ["hh", hours] || days <= 1 && ["d"] || days < thresholds.d && ["dd", days];
  if (thresholds.w != null) {
    a4 = a4 || weeks2 <= 1 && ["w"] || weeks2 < thresholds.w && ["ww", weeks2];
  }
  a4 = a4 || months <= 1 && ["M"] || months < thresholds.M && ["MM", months] || years <= 1 && ["y"] || ["yy", years];
  a4[2] = withoutSuffix;
  a4[3] = +posNegDuration > 0;
  a4[4] = locale2;
  return substituteTimeAgo.apply(null, a4);
};
var getSetRelativeTimeRounding = function(roundingFunction) {
  if (roundingFunction === undefined) {
    return round;
  }
  if (typeof roundingFunction === "function") {
    round = roundingFunction;
    return true;
  }
  return false;
};
var getSetRelativeTimeThreshold = function(threshold, limit) {
  if (thresholds[threshold] === undefined) {
    return false;
  }
  if (limit === undefined) {
    return thresholds[threshold];
  }
  thresholds[threshold] = limit;
  if (threshold === "s") {
    thresholds.ss = limit - 1;
  }
  return true;
};
var humanize = function(argWithSuffix, argThresholds) {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var withSuffix = false, th2 = thresholds, locale2, output;
  if (typeof argWithSuffix === "object") {
    argThresholds = argWithSuffix;
    argWithSuffix = false;
  }
  if (typeof argWithSuffix === "boolean") {
    withSuffix = argWithSuffix;
  }
  if (typeof argThresholds === "object") {
    th2 = Object.assign({}, thresholds, argThresholds);
    if (argThresholds.s != null && argThresholds.ss == null) {
      th2.ss = argThresholds.s - 1;
    }
  }
  locale2 = this.localeData();
  output = relativeTime$1(this, !withSuffix, th2, locale2);
  if (withSuffix) {
    output = locale2.pastFuture(+this, output);
  }
  return locale2.postformat(output);
};
var sign5 = function(x) {
  return (x > 0) - (x < 0) || +x;
};
var toISOString$1 = function() {
  if (!this.isValid()) {
    return this.localeData().invalidDate();
  }
  var seconds = abs$1(this._milliseconds) / 1000, days = abs$1(this._days), months = abs$1(this._months), minutes, hours, years, s5, total = this.asSeconds(), totalSign, ymSign, daysSign, hmsSign;
  if (!total) {
    return "P0D";
  }
  minutes = absFloor(seconds / 60);
  hours = absFloor(minutes / 60);
  seconds %= 60;
  minutes %= 60;
  years = absFloor(months / 12);
  months %= 12;
  s5 = seconds ? seconds.toFixed(3).replace(/\.?0+$/, "") : "";
  totalSign = total < 0 ? "-" : "";
  ymSign = sign5(this._months) !== sign5(total) ? "-" : "";
  daysSign = sign5(this._days) !== sign5(total) ? "-" : "";
  hmsSign = sign5(this._milliseconds) !== sign5(total) ? "-" : "";
  return totalSign + "P" + (years ? ymSign + years + "Y" : "") + (months ? ymSign + months + "M" : "") + (days ? daysSign + days + "D" : "") + (hours || minutes || seconds ? "T" : "") + (hours ? hmsSign + hours + "H" : "") + (minutes ? hmsSign + minutes + "M" : "") + (seconds ? hmsSign + s5 + "S" : "");
};
//! moment.js
//! version : 2.30.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com
var hookCallback;
var some;
if (Array.prototype.some) {
  some = Array.prototype.some;
} else {
  some = function(fun) {
    var t6 = Object(this), len = t6.length >>> 0, i3;
    for (i3 = 0;i3 < len; i3++) {
      if ((i3 in t6) && fun.call(this, t6[i3], i3, t6)) {
        return true;
      }
    }
    return false;
  };
}
var momentProperties = hooks.momentProperties = [];
var updateInProgress = false;
var deprecations = {};
hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;
var keys;
if (Object.keys) {
  keys = Object.keys;
} else {
  keys = function(obj) {
    var i3, res = [];
    for (i3 in obj) {
      if (hasOwnProp(obj, i3)) {
        res.push(i3);
      }
    }
    return res;
  };
}
var defaultCalendar = {
  sameDay: "[Today at] LT",
  nextDay: "[Tomorrow at] LT",
  nextWeek: "dddd [at] LT",
  lastDay: "[Yesterday at] LT",
  lastWeek: "[Last] dddd [at] LT",
  sameElse: "L"
};
var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;
var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;
var formatFunctions = {};
var formatTokenFunctions = {};
var defaultLongDateFormat = {
  LTS: "h:mm:ss A",
  LT: "h:mm A",
  L: "MM/DD/YYYY",
  LL: "MMMM D, YYYY",
  LLL: "MMMM D, YYYY h:mm A",
  LLLL: "dddd, MMMM D, YYYY h:mm A"
};
var defaultInvalidDate = "Invalid date";
var defaultOrdinal = "%d";
var defaultDayOfMonthOrdinalParse = /\d{1,2}/;
var defaultRelativeTime = {
  future: "in %s",
  past: "%s ago",
  s: "a few seconds",
  ss: "%d seconds",
  m: "a minute",
  mm: "%d minutes",
  h: "an hour",
  hh: "%d hours",
  d: "a day",
  dd: "%d days",
  w: "a week",
  ww: "%d weeks",
  M: "a month",
  MM: "%d months",
  y: "a year",
  yy: "%d years"
};
var aliases = {
  D: "date",
  dates: "date",
  date: "date",
  d: "day",
  days: "day",
  day: "day",
  e: "weekday",
  weekdays: "weekday",
  weekday: "weekday",
  E: "isoWeekday",
  isoweekdays: "isoWeekday",
  isoweekday: "isoWeekday",
  DDD: "dayOfYear",
  dayofyears: "dayOfYear",
  dayofyear: "dayOfYear",
  h: "hour",
  hours: "hour",
  hour: "hour",
  ms: "millisecond",
  milliseconds: "millisecond",
  millisecond: "millisecond",
  m: "minute",
  minutes: "minute",
  minute: "minute",
  M: "month",
  months: "month",
  month: "month",
  Q: "quarter",
  quarters: "quarter",
  quarter: "quarter",
  s: "second",
  seconds: "second",
  second: "second",
  gg: "weekYear",
  weekyears: "weekYear",
  weekyear: "weekYear",
  GG: "isoWeekYear",
  isoweekyears: "isoWeekYear",
  isoweekyear: "isoWeekYear",
  w: "week",
  weeks: "week",
  week: "week",
  W: "isoWeek",
  isoweeks: "isoWeek",
  isoweek: "isoWeek",
  y: "year",
  years: "year",
  year: "year"
};
var priorities = {
  date: 9,
  day: 11,
  weekday: 11,
  isoWeekday: 11,
  dayOfYear: 4,
  hour: 13,
  millisecond: 16,
  minute: 14,
  month: 8,
  quarter: 7,
  second: 15,
  weekYear: 1,
  isoWeekYear: 1,
  week: 5,
  isoWeek: 5,
  year: 1
};
var match1 = /\d/;
var match2 = /\d\d/;
var match3 = /\d{3}/;
var match4 = /\d{4}/;
var match6 = /[+-]?\d{6}/;
var match1to2 = /\d\d?/;
var match3to4 = /\d\d\d\d?/;
var match5to6 = /\d\d\d\d\d\d?/;
var match1to3 = /\d{1,3}/;
var match1to4 = /\d{1,4}/;
var match1to6 = /[+-]?\d{1,6}/;
var matchUnsigned = /\d+/;
var matchSigned = /[+-]?\d+/;
var matchOffset = /Z|[+-]\d\d:?\d\d/gi;
var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi;
var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/;
var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
var match1to2NoLeadingZero = /^[1-9]\d?/;
var match1to2HasZero = /^([1-9]\d|\d)/;
var regexes;
regexes = {};
var tokens = {};
var YEAR = 0;
var MONTH = 1;
var DATE = 2;
var HOUR = 3;
var MINUTE = 4;
var SECOND = 5;
var MILLISECOND = 6;
var WEEK = 7;
var WEEKDAY = 8;
addFormatToken("Y", 0, 0, function() {
  var y3 = this.year();
  return y3 <= 9999 ? zeroFill(y3, 4) : "+" + y3;
});
addFormatToken(0, ["YY", 2], 0, function() {
  return this.year() % 100;
});
addFormatToken(0, ["YYYY", 4], 0, "year");
addFormatToken(0, ["YYYYY", 5], 0, "year");
addFormatToken(0, ["YYYYYY", 6, true], 0, "year");
addRegexToken("Y", matchSigned);
addRegexToken("YY", match1to2, match2);
addRegexToken("YYYY", match1to4, match4);
addRegexToken("YYYYY", match1to6, match6);
addRegexToken("YYYYYY", match1to6, match6);
addParseToken(["YYYYY", "YYYYYY"], YEAR);
addParseToken("YYYY", function(input, array) {
  array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken("YY", function(input, array) {
  array[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken("Y", function(input, array) {
  array[YEAR] = parseInt(input, 10);
});
hooks.parseTwoDigitYear = function(input) {
  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
};
var getSetYear = makeGetSet("FullYear", true);
var indexOf;
if (Array.prototype.indexOf) {
  indexOf = Array.prototype.indexOf;
} else {
  indexOf = function(o2) {
    var i3;
    for (i3 = 0;i3 < this.length; ++i3) {
      if (this[i3] === o2) {
        return i3;
      }
    }
    return -1;
  };
}
addFormatToken("M", ["MM", 2], "Mo", function() {
  return this.month() + 1;
});
addFormatToken("MMM", 0, 0, function(format2) {
  return this.localeData().monthsShort(this, format2);
});
addFormatToken("MMMM", 0, 0, function(format2) {
  return this.localeData().months(this, format2);
});
addRegexToken("M", match1to2, match1to2NoLeadingZero);
addRegexToken("MM", match1to2, match2);
addRegexToken("MMM", function(isStrict, locale2) {
  return locale2.monthsShortRegex(isStrict);
});
addRegexToken("MMMM", function(isStrict, locale2) {
  return locale2.monthsRegex(isStrict);
});
addParseToken(["M", "MM"], function(input, array) {
  array[MONTH] = toInt(input) - 1;
});
addParseToken(["MMM", "MMMM"], function(input, array, config, token) {
  var month = config._locale.monthsParse(input, token, config._strict);
  if (month != null) {
    array[MONTH] = month;
  } else {
    getParsingFlags(config).invalidMonth = input;
  }
});
var defaultLocaleMonths = "January_February_March_April_May_June_July_August_September_October_November_December".split("_");
var defaultLocaleMonthsShort = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_");
var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultMonthsShortRegex = matchWord;
var defaultMonthsRegex = matchWord;
addFormatToken("w", ["ww", 2], "wo", "week");
addFormatToken("W", ["WW", 2], "Wo", "isoWeek");
addRegexToken("w", match1to2, match1to2NoLeadingZero);
addRegexToken("ww", match1to2, match2);
addRegexToken("W", match1to2, match1to2NoLeadingZero);
addRegexToken("WW", match1to2, match2);
addWeekParseToken(["w", "ww", "W", "WW"], function(input, week2, config, token) {
  week2[token.substr(0, 1)] = toInt(input);
});
var defaultLocaleWeek = {
  dow: 0,
  doy: 6
};
addFormatToken("d", 0, "do", "day");
addFormatToken("dd", 0, 0, function(format2) {
  return this.localeData().weekdaysMin(this, format2);
});
addFormatToken("ddd", 0, 0, function(format2) {
  return this.localeData().weekdaysShort(this, format2);
});
addFormatToken("dddd", 0, 0, function(format2) {
  return this.localeData().weekdays(this, format2);
});
addFormatToken("e", 0, 0, "weekday");
addFormatToken("E", 0, 0, "isoWeekday");
addRegexToken("d", match1to2);
addRegexToken("e", match1to2);
addRegexToken("E", match1to2);
addRegexToken("dd", function(isStrict, locale2) {
  return locale2.weekdaysMinRegex(isStrict);
});
addRegexToken("ddd", function(isStrict, locale2) {
  return locale2.weekdaysShortRegex(isStrict);
});
addRegexToken("dddd", function(isStrict, locale2) {
  return locale2.weekdaysRegex(isStrict);
});
addWeekParseToken(["dd", "ddd", "dddd"], function(input, week2, config, token) {
  var weekday = config._locale.weekdaysParse(input, token, config._strict);
  if (weekday != null) {
    week2.d = weekday;
  } else {
    getParsingFlags(config).invalidWeekday = input;
  }
});
addWeekParseToken(["d", "e", "E"], function(input, week2, config, token) {
  week2[token] = toInt(input);
});
var defaultLocaleWeekdays = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_");
var defaultLocaleWeekdaysShort = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_");
var defaultLocaleWeekdaysMin = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
var defaultWeekdaysRegex = matchWord;
var defaultWeekdaysShortRegex = matchWord;
var defaultWeekdaysMinRegex = matchWord;
addFormatToken("H", ["HH", 2], 0, "hour");
addFormatToken("h", ["hh", 2], 0, hFormat);
addFormatToken("k", ["kk", 2], 0, kFormat);
addFormatToken("hmm", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});
addFormatToken("hmmss", 0, 0, function() {
  return "" + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
addFormatToken("Hmm", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2);
});
addFormatToken("Hmmss", 0, 0, function() {
  return "" + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);
});
meridiem("a", true);
meridiem("A", false);
addRegexToken("a", matchMeridiem);
addRegexToken("A", matchMeridiem);
addRegexToken("H", match1to2, match1to2HasZero);
addRegexToken("h", match1to2, match1to2NoLeadingZero);
addRegexToken("k", match1to2, match1to2NoLeadingZero);
addRegexToken("HH", match1to2, match2);
addRegexToken("hh", match1to2, match2);
addRegexToken("kk", match1to2, match2);
addRegexToken("hmm", match3to4);
addRegexToken("hmmss", match5to6);
addRegexToken("Hmm", match3to4);
addRegexToken("Hmmss", match5to6);
addParseToken(["H", "HH"], HOUR);
addParseToken(["k", "kk"], function(input, array, config) {
  var kInput = toInt(input);
  array[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(["a", "A"], function(input, array, config) {
  config._isPm = config._locale.isPM(input);
  config._meridiem = input;
});
addParseToken(["h", "hh"], function(input, array, config) {
  array[HOUR] = toInt(input);
  getParsingFlags(config).bigHour = true;
});
addParseToken("hmm", function(input, array, config) {
  var pos = input.length - 2;
  array[HOUR] = toInt(input.substr(0, pos));
  array[MINUTE] = toInt(input.substr(pos));
  getParsingFlags(config).bigHour = true;
});
addParseToken("hmmss", function(input, array, config) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array[HOUR] = toInt(input.substr(0, pos1));
  array[MINUTE] = toInt(input.substr(pos1, 2));
  array[SECOND] = toInt(input.substr(pos2));
  getParsingFlags(config).bigHour = true;
});
addParseToken("Hmm", function(input, array, config) {
  var pos = input.length - 2;
  array[HOUR] = toInt(input.substr(0, pos));
  array[MINUTE] = toInt(input.substr(pos));
});
addParseToken("Hmmss", function(input, array, config) {
  var pos1 = input.length - 4, pos2 = input.length - 2;
  array[HOUR] = toInt(input.substr(0, pos1));
  array[MINUTE] = toInt(input.substr(pos1, 2));
  array[SECOND] = toInt(input.substr(pos2));
});
var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
var getSetHour = makeGetSet("Hours", true);
var baseConfig = {
  calendar: defaultCalendar,
  longDateFormat: defaultLongDateFormat,
  invalidDate: defaultInvalidDate,
  ordinal: defaultOrdinal,
  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
  relativeTime: defaultRelativeTime,
  months: defaultLocaleMonths,
  monthsShort: defaultLocaleMonthsShort,
  week: defaultLocaleWeek,
  weekdays: defaultLocaleWeekdays,
  weekdaysMin: defaultLocaleWeekdaysMin,
  weekdaysShort: defaultLocaleWeekdaysShort,
  meridiemParse: defaultLocaleMeridiemParse
};
var locales = {};
var localeFamilies = {};
var globalLocale;
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;
var isoDates = [
  ["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/],
  ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/],
  ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/],
  ["GGGG-[W]WW", /\d{4}-W\d\d/, false],
  ["YYYY-DDD", /\d{4}-\d{3}/],
  ["YYYY-MM", /\d{4}-\d\d/, false],
  ["YYYYYYMMDD", /[+-]\d{10}/],
  ["YYYYMMDD", /\d{8}/],
  ["GGGG[W]WWE", /\d{4}W\d{3}/],
  ["GGGG[W]WW", /\d{4}W\d{2}/, false],
  ["YYYYDDD", /\d{7}/],
  ["YYYYMM", /\d{6}/, false],
  ["YYYY", /\d{4}/, false]
];
var isoTimes = [
  ["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/],
  ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/],
  ["HH:mm:ss", /\d\d:\d\d:\d\d/],
  ["HH:mm", /\d\d:\d\d/],
  ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/],
  ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/],
  ["HHmmss", /\d\d\d\d\d\d/],
  ["HHmm", /\d\d\d\d/],
  ["HH", /\d\d/]
];
var aspNetJsonRegex = /^\/?Date\((-?\d+)/i;
var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;
var obsOffsets = {
  UT: 0,
  GMT: 0,
  EDT: -4 * 60,
  EST: -5 * 60,
  CDT: -5 * 60,
  CST: -6 * 60,
  MDT: -6 * 60,
  MST: -7 * 60,
  PDT: -7 * 60,
  PST: -8 * 60
};
hooks.createFromInputFallback = deprecate("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(config) {
  config._d = new Date(config._i + (config._useUTC ? " UTC" : ""));
});
hooks.ISO_8601 = function() {
};
hooks.RFC_2822 = function() {
};
var prototypeMin = deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
  var other = createLocal.apply(null, arguments);
  if (this.isValid() && other.isValid()) {
    return other < this ? this : other;
  } else {
    return createInvalid();
  }
});
var prototypeMax = deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
  var other = createLocal.apply(null, arguments);
  if (this.isValid() && other.isValid()) {
    return other > this ? this : other;
  } else {
    return createInvalid();
  }
});
var now2 = function() {
  return Date.now ? Date.now() : +new Date;
};
var ordering = [
  "year",
  "quarter",
  "month",
  "week",
  "day",
  "hour",
  "minute",
  "second",
  "millisecond"
];
offset("Z", ":");
offset("ZZ", "");
addRegexToken("Z", matchShortOffset);
addRegexToken("ZZ", matchShortOffset);
addParseToken(["Z", "ZZ"], function(input, array, config) {
  config._useUTC = true;
  config._tzm = offsetFromString(matchShortOffset, input);
});
var chunkOffset = /([\+\-]|\d\d)/gi;
hooks.updateOffset = function() {
};
var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/;
var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;
var add = createAdder(1, "add");
var subtract = createAdder(-1, "subtract");
hooks.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
hooks.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
var lang = deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(key) {
  if (key === undefined) {
    return this.localeData();
  } else {
    return this.locale(key);
  }
});
var MS_PER_SECOND = 1000;
var MS_PER_MINUTE = 60 * MS_PER_SECOND;
var MS_PER_HOUR = 60 * MS_PER_MINUTE;
var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;
addFormatToken("N", 0, 0, "eraAbbr");
addFormatToken("NN", 0, 0, "eraAbbr");
addFormatToken("NNN", 0, 0, "eraAbbr");
addFormatToken("NNNN", 0, 0, "eraName");
addFormatToken("NNNNN", 0, 0, "eraNarrow");
addFormatToken("y", ["y", 1], "yo", "eraYear");
addFormatToken("y", ["yy", 2], 0, "eraYear");
addFormatToken("y", ["yyy", 3], 0, "eraYear");
addFormatToken("y", ["yyyy", 4], 0, "eraYear");
addRegexToken("N", matchEraAbbr);
addRegexToken("NN", matchEraAbbr);
addRegexToken("NNN", matchEraAbbr);
addRegexToken("NNNN", matchEraName);
addRegexToken("NNNNN", matchEraNarrow);
addParseToken(["N", "NN", "NNN", "NNNN", "NNNNN"], function(input, array, config, token) {
  var era = config._locale.erasParse(input, token, config._strict);
  if (era) {
    getParsingFlags(config).era = era;
  } else {
    getParsingFlags(config).invalidEra = input;
  }
});
addRegexToken("y", matchUnsigned);
addRegexToken("yy", matchUnsigned);
addRegexToken("yyy", matchUnsigned);
addRegexToken("yyyy", matchUnsigned);
addRegexToken("yo", matchEraYearOrdinal);
addParseToken(["y", "yy", "yyy", "yyyy"], YEAR);
addParseToken(["yo"], function(input, array, config, token) {
  var match;
  if (config._locale._eraYearOrdinalRegex) {
    match = input.match(config._locale._eraYearOrdinalRegex);
  }
  if (config._locale.eraYearOrdinalParse) {
    array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
  } else {
    array[YEAR] = parseInt(input, 10);
  }
});
addFormatToken(0, ["gg", 2], 0, function() {
  return this.weekYear() % 100;
});
addFormatToken(0, ["GG", 2], 0, function() {
  return this.isoWeekYear() % 100;
});
addWeekYearFormatToken("gggg", "weekYear");
addWeekYearFormatToken("ggggg", "weekYear");
addWeekYearFormatToken("GGGG", "isoWeekYear");
addWeekYearFormatToken("GGGGG", "isoWeekYear");
addRegexToken("G", matchSigned);
addRegexToken("g", matchSigned);
addRegexToken("GG", match1to2, match2);
addRegexToken("gg", match1to2, match2);
addRegexToken("GGGG", match1to4, match4);
addRegexToken("gggg", match1to4, match4);
addRegexToken("GGGGG", match1to6, match6);
addRegexToken("ggggg", match1to6, match6);
addWeekParseToken(["gggg", "ggggg", "GGGG", "GGGGG"], function(input, week2, config, token) {
  week2[token.substr(0, 2)] = toInt(input);
});
addWeekParseToken(["gg", "GG"], function(input, week2, config, token) {
  week2[token] = hooks.parseTwoDigitYear(input);
});
addFormatToken("Q", 0, "Qo", "quarter");
addRegexToken("Q", match1);
addParseToken("Q", function(input, array) {
  array[MONTH] = (toInt(input) - 1) * 3;
});
addFormatToken("D", ["DD", 2], "Do", "date");
addRegexToken("D", match1to2, match1to2NoLeadingZero);
addRegexToken("DD", match1to2, match2);
addRegexToken("Do", function(isStrict, locale2) {
  return isStrict ? locale2._dayOfMonthOrdinalParse || locale2._ordinalParse : locale2._dayOfMonthOrdinalParseLenient;
});
addParseToken(["D", "DD"], DATE);
addParseToken("Do", function(input, array) {
  array[DATE] = toInt(input.match(match1to2)[0]);
});
var getSetDayOfMonth = makeGetSet("Date", true);
addFormatToken("DDD", ["DDDD", 3], "DDDo", "dayOfYear");
addRegexToken("DDD", match1to3);
addRegexToken("DDDD", match3);
addParseToken(["DDD", "DDDD"], function(input, array, config) {
  config._dayOfYear = toInt(input);
});
addFormatToken("m", ["mm", 2], 0, "minute");
addRegexToken("m", match1to2, match1to2HasZero);
addRegexToken("mm", match1to2, match2);
addParseToken(["m", "mm"], MINUTE);
var getSetMinute = makeGetSet("Minutes", false);
addFormatToken("s", ["ss", 2], 0, "second");
addRegexToken("s", match1to2, match1to2HasZero);
addRegexToken("ss", match1to2, match2);
addParseToken(["s", "ss"], SECOND);
var getSetSecond = makeGetSet("Seconds", false);
addFormatToken("S", 0, 0, function() {
  return ~~(this.millisecond() / 100);
});
addFormatToken(0, ["SS", 2], 0, function() {
  return ~~(this.millisecond() / 10);
});
addFormatToken(0, ["SSS", 3], 0, "millisecond");
addFormatToken(0, ["SSSS", 4], 0, function() {
  return this.millisecond() * 10;
});
addFormatToken(0, ["SSSSS", 5], 0, function() {
  return this.millisecond() * 100;
});
addFormatToken(0, ["SSSSSS", 6], 0, function() {
  return this.millisecond() * 1000;
});
addFormatToken(0, ["SSSSSSS", 7], 0, function() {
  return this.millisecond() * 1e4;
});
addFormatToken(0, ["SSSSSSSS", 8], 0, function() {
  return this.millisecond() * 1e5;
});
addFormatToken(0, ["SSSSSSSSS", 9], 0, function() {
  return this.millisecond() * 1e6;
});
addRegexToken("S", match1to3, match1);
addRegexToken("SS", match1to3, match2);
addRegexToken("SSS", match1to3, match3);
var token;
var getSetMillisecond;
for (token = "SSSS";token.length <= 9; token += "S") {
  addRegexToken(token, matchUnsigned);
}
for (token = "S";token.length <= 9; token += "S") {
  addParseToken(token, parseMs);
}
getSetMillisecond = makeGetSet("Milliseconds", false);
addFormatToken("z", 0, 0, "zoneAbbr");
addFormatToken("zz", 0, 0, "zoneName");
var proto = Moment.prototype;
proto.add = add;
proto.calendar = calendar$1;
proto.clone = clone;
proto.diff = diff;
proto.endOf = endOf;
proto.format = format;
proto.from = from;
proto.fromNow = fromNow;
proto.to = to;
proto.toNow = toNow;
proto.get = stringGet;
proto.invalidAt = invalidAt;
proto.isAfter = isAfter;
proto.isBefore = isBefore;
proto.isBetween = isBetween;
proto.isSame = isSame;
proto.isSameOrAfter = isSameOrAfter;
proto.isSameOrBefore = isSameOrBefore;
proto.isValid = isValid$2;
proto.lang = lang;
proto.locale = locale;
proto.localeData = localeData;
proto.max = prototypeMax;
proto.min = prototypeMin;
proto.parsingFlags = parsingFlags;
proto.set = stringSet;
proto.startOf = startOf;
proto.subtract = subtract;
proto.toArray = toArray;
proto.toObject = toObject;
proto.toDate = toDate;
proto.toISOString = toISOString;
proto.inspect = inspect;
if (typeof Symbol !== "undefined" && Symbol.for != null) {
  proto[Symbol.for("nodejs.util.inspect.custom")] = function() {
    return "Moment<" + this.format() + ">";
  };
}
proto.toJSON = toJSON;
proto.toString = toString;
proto.unix = unix;
proto.valueOf = valueOf;
proto.creationData = creationData;
proto.eraName = getEraName;
proto.eraNarrow = getEraNarrow;
proto.eraAbbr = getEraAbbr;
proto.eraYear = getEraYear;
proto.year = getSetYear;
proto.isLeapYear = getIsLeapYear;
proto.weekYear = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;
proto.quarter = proto.quarters = getSetQuarter;
proto.month = getSetMonth;
proto.daysInMonth = getDaysInMonth;
proto.week = proto.weeks = getSetWeek;
proto.isoWeek = proto.isoWeeks = getSetISOWeek;
proto.weeksInYear = getWeeksInYear;
proto.weeksInWeekYear = getWeeksInWeekYear;
proto.isoWeeksInYear = getISOWeeksInYear;
proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
proto.date = getSetDayOfMonth;
proto.day = proto.days = getSetDayOfWeek;
proto.weekday = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear = getSetDayOfYear;
proto.hour = proto.hours = getSetHour;
proto.minute = proto.minutes = getSetMinute;
proto.second = proto.seconds = getSetSecond;
proto.millisecond = proto.milliseconds = getSetMillisecond;
proto.utcOffset = getSetOffset;
proto.utc = setOffsetToUTC;
proto.local = setOffsetToLocal;
proto.parseZone = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST = isDaylightSavingTime;
proto.isLocal = isLocal;
proto.isUtcOffset = isUtcOffset;
proto.isUtc = isUtc;
proto.isUTC = isUtc;
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;
proto.dates = deprecate("dates accessor is deprecated. Use date instead.", getSetDayOfMonth);
proto.months = deprecate("months accessor is deprecated. Use month instead", getSetMonth);
proto.years = deprecate("years accessor is deprecated. Use year instead", getSetYear);
proto.zone = deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", getSetZone);
proto.isDSTShifted = deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", isDaylightSavingTimeShifted);
var proto$1 = Locale.prototype;
proto$1.calendar = calendar;
proto$1.longDateFormat = longDateFormat;
proto$1.invalidDate = invalidDate;
proto$1.ordinal = ordinal;
proto$1.preparse = preParsePostFormat;
proto$1.postformat = preParsePostFormat;
proto$1.relativeTime = relativeTime;
proto$1.pastFuture = pastFuture;
proto$1.set = set;
proto$1.eras = localeEras;
proto$1.erasParse = localeErasParse;
proto$1.erasConvertYear = localeErasConvertYear;
proto$1.erasAbbrRegex = erasAbbrRegex;
proto$1.erasNameRegex = erasNameRegex;
proto$1.erasNarrowRegex = erasNarrowRegex;
proto$1.months = localeMonths;
proto$1.monthsShort = localeMonthsShort;
proto$1.monthsParse = localeMonthsParse;
proto$1.monthsRegex = monthsRegex;
proto$1.monthsShortRegex = monthsShortRegex;
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;
proto$1.weekdays = localeWeekdays;
proto$1.weekdaysMin = localeWeekdaysMin;
proto$1.weekdaysShort = localeWeekdaysShort;
proto$1.weekdaysParse = localeWeekdaysParse;
proto$1.weekdaysRegex = weekdaysRegex;
proto$1.weekdaysShortRegex = weekdaysShortRegex;
proto$1.weekdaysMinRegex = weekdaysMinRegex;
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;
getSetGlobalLocale("en", {
  eras: [
    {
      since: "0001-01-01",
      until: Infinity,
      offset: 1,
      name: "Anno Domini",
      narrow: "AD",
      abbr: "AD"
    },
    {
      since: "0000-12-31",
      until: (-Infinity),
      offset: 1,
      name: "Before Christ",
      narrow: "BC",
      abbr: "BC"
    }
  ],
  dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
  ordinal: function(number) {
    var b3 = number % 10, output = toInt(number % 100 / 10) === 1 ? "th" : b3 === 1 ? "st" : b3 === 2 ? "nd" : b3 === 3 ? "rd" : "th";
    return number + output;
  }
});
hooks.lang = deprecate("moment.lang is deprecated. Use moment.locale instead.", getSetGlobalLocale);
hooks.langData = deprecate("moment.langData is deprecated. Use moment.localeData instead.", getLocale);
var mathAbs = Math.abs;
var asMilliseconds = makeAs("ms");
var asSeconds = makeAs("s");
var asMinutes = makeAs("m");
var asHours = makeAs("h");
var asDays = makeAs("d");
var asWeeks = makeAs("w");
var asMonths = makeAs("M");
var asQuarters = makeAs("Q");
var asYears = makeAs("y");
var valueOf$1 = asMilliseconds;
var milliseconds = makeGetter("milliseconds");
var seconds = makeGetter("seconds");
var minutes = makeGetter("minutes");
var hours = makeGetter("hours");
var days = makeGetter("days");
var months = makeGetter("months");
var years = makeGetter("years");
var round = Math.round;
var thresholds = {
  ss: 44,
  s: 45,
  m: 45,
  h: 22,
  d: 26,
  w: null,
  M: 11
};
var abs$1 = Math.abs;
var proto$2 = Duration.prototype;
proto$2.isValid = isValid$1;
proto$2.abs = abs;
proto$2.add = add$1;
proto$2.subtract = subtract$1;
proto$2.as = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds = asSeconds;
proto$2.asMinutes = asMinutes;
proto$2.asHours = asHours;
proto$2.asDays = asDays;
proto$2.asWeeks = asWeeks;
proto$2.asMonths = asMonths;
proto$2.asQuarters = asQuarters;
proto$2.asYears = asYears;
proto$2.valueOf = valueOf$1;
proto$2._bubble = bubble;
proto$2.clone = clone$1;
proto$2.get = get$2;
proto$2.milliseconds = milliseconds;
proto$2.seconds = seconds;
proto$2.minutes = minutes;
proto$2.hours = hours;
proto$2.days = days;
proto$2.weeks = weeks;
proto$2.months = months;
proto$2.years = years;
proto$2.humanize = humanize;
proto$2.toISOString = toISOString$1;
proto$2.toString = toISOString$1;
proto$2.toJSON = toISOString$1;
proto$2.locale = locale;
proto$2.localeData = localeData;
proto$2.toIsoString = deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", toISOString$1);
proto$2.lang = lang;
addFormatToken("X", 0, 0, "unix");
addFormatToken("x", 0, 0, "valueOf");
addRegexToken("x", matchSigned);
addRegexToken("X", matchTimestamp);
addParseToken("X", function(input, array, config) {
  config._d = new Date(parseFloat(input) * 1000);
});
addParseToken("x", function(input, array, config) {
  config._d = new Date(toInt(input));
});
//! moment.js
hooks.version = "2.30.1";
setHookCallback(createLocal);
hooks.fn = proto;
hooks.min = min;
hooks.max = max;
hooks.now = now2;
hooks.utc = createUTC;
hooks.unix = createUnix;
hooks.months = listMonths;
hooks.isDate = isDate3;
hooks.locale = getSetGlobalLocale;
hooks.invalid = createInvalid;
hooks.duration = createDuration;
hooks.isMoment = isMoment;
hooks.weekdays = listWeekdays;
hooks.parseZone = createInZone;
hooks.localeData = getLocale;
hooks.isDuration = isDuration;
hooks.monthsShort = listMonthsShort;
hooks.weekdaysMin = listWeekdaysMin;
hooks.defineLocale = defineLocale;
hooks.updateLocale = updateLocale;
hooks.locales = listLocales;
hooks.weekdaysShort = listWeekdaysShort;
hooks.normalizeUnits = normalizeUnits;
hooks.relativeTimeRounding = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat = getCalendarFormat;
hooks.prototype = proto;
hooks.HTML5_FMT = {
  DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
  DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
  DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
  DATE: "YYYY-MM-DD",
  TIME: "HH:mm",
  TIME_SECONDS: "HH:mm:ss",
  TIME_MS: "HH:mm:ss.SSS",
  WEEK: "GGGG-[W]WW",
  MONTH: "YYYY-MM"
};
var moment_default = hooks;

// src/routes/bank.transactions.routes.ts
var bankTransactions = new q().use(ctx).group("/transaction", (app) => {
  return app.get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset2 = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const transactions = await db3.bankTransactions.findMany({
      orderBy,
      skip: offset2,
      take: limit,
      where: {
        OR: [
          {
            transactionCode: {
              contains: q2 ?? ""
            }
          },
          {
            transactionType: {
              contains: q2 ?? ""
            }
          },
          {
            transactionDate: {
              lte: q2 ? new Date(q2) : undefined,
              gte: q2 ? new Date(q2) : undefined
            }
          },
          {
            amount: {
              equals: parseInt(q2 ?? "0")
            }
          },
          {
            created_at: {
              lte: q2 ? new Date(q2) : undefined,
              gte: q2 ? new Date(q2) : undefined
            }
          }
        ]
      },
      select: {
        id: true,
        transactionCode: true,
        transactionDate: true,
        transactionType: true,
        description: true,
        amount: true,
        created_at: true,
        updated_at: true
      }
    });
    return transactions;
  }, {
    detail: {
      tags: ["Bank Transaction"]
    }
  }).post("/", async ({ db: db3, body }) => {
    const { transactionType, amount, farmerOrderId, bankAccountId } = body;
    const transaction = await db3.bankTransactions.create({
      data: {
        transactionType,
        amount,
        description: `Transaction ${transactionType} for farmer order ${farmerOrderId}`,
        farmerOrderId,
        bankAccountId,
        transactionDate: new Date,
        transactionCode: `TRX-${moment_default().format("YYYYMMDDHHmmss")}`
      }
    });
    return transaction;
  }, {
    detail: {
      tags: ["Bank Transaction"]
    },
    body: typebox2.Type.Object({
      transactionType: typebox2.Type.String(),
      amount: typebox2.Type.Number(),
      farmerOrderId: typebox2.Type.Number(),
      bankAccountId: typebox2.Type.Number()
    })
  }).get("/:id", async ({ db: db3, params }) => {
    const { id } = params;
    const transaction = await db3.bankTransactions.findUnique({
      where: {
        id: parseInt(id)
      },
      select: {
        id: true,
        transactionCode: true,
        transactionDate: true,
        transactionType: true,
        supplierOrder: true,
        farmerOrder: true,
        factoryOrder: true,
        amount: true,
        supplierInvCode: true,
        factoryInvCode: true,
        farmerOrderId: true,
        created_at: true,
        updated_at: true
      }
    });
    if (!transaction) {
      throw new Error("Transaction not found");
    }
    const filteredTransaction = Object.fromEntries(Object.entries(transaction).filter(([_, v]) => v != null));
    return filteredTransaction;
  }, {
    detail: {
      tags: ["Bank Transaction"]
    }
  }).get("/report", async ({ db: db3, query }) => {
    const { _startDate, _endDate, factoryId } = query;
    let whereClause = {};
    const gte = _startDate ? moment_default(_startDate).startOf("day") : moment_default().subtract(30, "days").startOf("day");
    const lte = _endDate ? moment_default(_endDate).endOf("day") : moment_default().endOf("day");
    if (gte && lte) {
      whereClause = {
        transactionDate: {
          gte: new Date(gte.format()),
          lte: new Date(lte.format())
        }
      };
    }
    const transactions = await db3.bankTransactions.findMany({
      where: whereClause,
      select: {
        id: true,
        transactionCode: true,
        transactionDate: true,
        transactionType: true,
        supplierOrder: true,
        farmerOrder: true,
        factoryOrder: {
          select: {
            factoryId: true
          }
        },
        amount: true,
        description: true,
        created_at: true,
        updated_at: true
      }
    });
    const supplierTransactions = await db3.supplierOrders.findMany({
      where: {
        invDate: {
          gte: new Date(gte.format()),
          lte: new Date(lte.format())
        }
      },
      select: {
        id: true,
        invCode: true,
        invDate: true,
        invTotal: true,
        status: true,
        supplier: {
          select: {
            id: true,
            name: true,
            code: true
          }
        },
        supplierPrice: {
          select: {
            id: true,
            price: true
          }
        },
        created_at: true
      }
    });
    const factoryTransactions = await db3.factoryOrders.findMany({
      where: {
        invDate: {
          gte: new Date(gte.format()),
          lte: new Date(lte.format())
        },
        factoryId: factoryId ? { equals: parseInt(factoryId) } : undefined
      },
      select: {
        id: true,
        invCode: true,
        invDate: true,
        invTotal: true,
        factory: {
          select: {
            id: true,
            name: true,
            code: true
          }
        },
        factoryPrice: {
          select: {
            id: true,
            price: true
          }
        },
        BankTransactions: {
          select: {
            id: true,
            transactionCode: true,
            transactionDate: true,
            transactionType: true,
            amount: true,
            description: true,
            created_at: true
          }
        },
        created_at: true
      }
    });
    const pendingTransaction = supplierTransactions.filter((transaction) => transaction.status === "Pending");
    const sumPendingTransaction = pendingTransaction.reduce((acc, transaction) => {
      return acc + transaction.invTotal;
    }, 0);
    const grossIncome = transactions.reduce((acc, transaction) => {
      if (transaction.transactionType === "Debit") {
        return acc + transaction.amount;
      } else {
        return acc;
      }
    }, 0);
    const countTransaction = transactions.reduce((acc, transaction) => {
      if (transaction.transactionType === "Debit") {
        return acc + 1;
      } else {
        return acc;
      }
    }, 0);
    const profit = transactions.reduce((acc, transaction) => {
      if (transaction.transactionType === "Debit") {
        return acc + transaction.amount;
      } else {
        return acc - transaction.amount;
      }
    }, 0);
    const cost = transactions.reduce((acc, transaction) => {
      if (transaction.transactionType === "Credit") {
        return acc + transaction.amount;
      } else {
        return acc;
      }
    }, 0);
    return {
      data: transactions,
      pendingCost: sumPendingTransaction,
      grossIncome,
      profit,
      cost,
      countTransaction,
      gte,
      lte
    };
  }, {
    detail: {
      tags: ["Bank Transaction"]
    }
  });
});
// src/routes/bankAccount.routes.ts
var bankAccount = new q().use(ctx).group("/bank", (app) => {
  return app.get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset2 = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const bankAccounts = await db3.bankAccounts.findMany({
      orderBy,
      skip: offset2,
      take: limit,
      where: {
        OR: [
          {
            accountNumber: {
              contains: q2 ?? ""
            }
          },
          {
            accountName: {
              contains: q2 ?? ""
            }
          },
          {
            bankName: {
              contains: q2 ?? ""
            }
          },
          {
            balance: {
              equals: parseInt(q2 ?? "0")
            }
          },
          {
            created_at: {
              lte: q2 ? new Date(q2) : undefined,
              gte: q2 ? new Date(q2) : undefined
            }
          }
        ]
      },
      select: {
        id: true,
        accountNumber: true,
        accountName: true,
        bankName: true,
        balance: true,
        created_at: true,
        updated_at: true
      }
    });
    const count = await db3.bankAccounts.count();
    return bankAccounts;
  }, {
    detail: {
      tags: ["Bank Account"]
    }
  }).get("/:id", async ({ db: db3, params }) => {
    const { id } = params;
    const bankAccount2 = await db3.bankAccounts.findUnique({
      where: {
        id: parseInt(id)
      },
      select: {
        id: true,
        accountNumber: true,
        accountName: true,
        bankName: true,
        balance: true,
        bankTransactions: true,
        created_at: true,
        updated_at: true
      }
    });
    return bankAccount2;
  }, {
    detail: {
      tags: ["Bank Account"]
    }
  }).post("/", async ({ db: db3, body }) => {
    const { accountNumber, accountName, bankName, balance } = body;
    const bankAccount2 = await db3.bankAccounts.create({
      data: {
        accountNumber,
        accountName,
        bankName,
        balance
      }
    });
    const bankTransaction = await db3.bankTransactions.create({
      data: {
        amount: balance,
        transactionType: "Debit",
        transactionDate: new Date,
        transactionCode: "TRS-" + bankAccount2.id + "-" + Math.floor(Math.random() * 1000),
        description: "Setoran awal",
        bankAccounts: {
          connect: {
            id: bankAccount2.id
          }
        }
      }
    });
    return {
      bankAccount: bankAccount2,
      bankTransaction
    };
  }, {
    body: typebox2.Type.Object({
      accountNumber: typebox2.Type.String(),
      accountName: typebox2.Type.String(),
      bankName: typebox2.Type.String(),
      balance: typebox2.Type.Number()
    }),
    detail: {
      tags: ["Bank Account"]
    }
  }).put("/:id", async ({ db: db3, params, body }) => {
    const { id } = params;
    const bankAccount2 = await db3.bankAccounts.update({
      where: {
        id: parseInt(id)
      },
      data: {
        ...body
      }
    });
    return bankAccount2;
  }, {
    body: typebox2.Type.Object({
      accountNumber: typebox2.Type.String(),
      accountName: typebox2.Type.String(),
      bankName: typebox2.Type.String()
    }),
    detail: {
      tags: ["Bank Account"]
    }
  }).delete("/:id", async ({ db: db3, params }) => {
    const { id } = params;
    const bankAccount2 = await db3.bankAccounts.delete({
      where: {
        id: parseInt(id)
      }
    });
    return bankAccount2;
  }, {
    detail: {
      tags: ["Bank Account"]
    }
  }).get("/:id/transactions", async ({ db: db3, params }) => {
    const { id } = params;
    const bankAccount2 = await db3.bankAccounts.findUnique({
      where: {
        id: parseInt(id)
      },
      select: {
        bankTransactions: {
          orderBy: {
            id: "desc"
          }
        }
      }
    });
    const data = bankAccount2?.bankTransactions.map((item) => item);
    return data;
  }, {
    detail: {
      tags: ["Bank Account"]
    }
  }).post("/:id/transactions", async ({ db: db3, params, body, invoiceCode }) => {
    const { id } = params;
    const { amount, type, description, toBankAccountId } = body;
    const bankAccount2 = await db3.bankAccounts.findUnique({
      where: { id: parseInt(id) },
      select: { id: true, balance: true, bankName: true, accountName: true, accountNumber: true }
    });
    const { balance } = bankAccount2 ?? { balance: 0 };
    const isTransfer = type === "Transfer" ? true : false;
    const newBalance = type === "Debit" ? balance + amount : balance - amount;
    let newDescription = "";
    if (description) {
      newDescription = type === "Debit" ? description : "Penarikan " + description;
    } else {
      newDescription = type === "Debit" ? "Setoran " : "Penarikan ";
    }
    if (!isTransfer) {
      const bankTransaction = await db3.bankTransactions.create({
        data: {
          amount,
          transactionType: type,
          transactionDate: new Date,
          transactionCode: "TRS-" + invoiceCode + "-" + Math.floor(Math.random() * 1000),
          description: newDescription,
          bankAccounts: {
            connect: {
              id: parseInt(id)
            }
          }
        }
      });
      const updateBankAccount = await db3.bankAccounts.update({
        where: {
          id: parseInt(id)
        },
        data: {
          balance: newBalance
        }
      });
      return {
        bankTransaction,
        updateBankAccount
      };
    } else {
      if (type === "Transfer") {
        if (!toBankAccountId) {
          throw new Error("Target bank account ID is required for transfers");
        }
        const targetBankAccount = await db3.bankAccounts.findUnique({
          where: { id: toBankAccountId },
          select: { id: true, balance: true, bankName: true, accountName: true, accountNumber: true }
        });
        if (!targetBankAccount) {
          throw new Error("Target bank account not found");
        }
        if (balance < amount) {
          throw new Error("Insufficient balance");
        }
        await db3.bankAccounts.update({
          where: { id: parseInt(id) },
          data: { balance: balance - amount }
        });
        await db3.bankAccounts.update({
          where: { id: toBankAccountId },
          data: { balance: targetBankAccount.balance + amount }
        });
        const bankTransaction = await db3.bankTransactions.create({
          data: {
            amount,
            transactionType: type,
            transactionDate: new Date,
            transactionCode: "TRS-" + invoiceCode + "-" + Math.floor(Math.random() * 1000),
            description: `Transfer Ke rekening ${targetBankAccount.bankName} ${targetBankAccount.accountNumber}`,
            bankAccounts: { connect: { id: parseInt(id) } }
          }
        });
        if (bankAccount2) {
          await db3.bankTransactions.create({
            data: {
              amount,
              transactionType: type,
              transactionDate: new Date,
              transactionCode: "TRS-" + invoiceCode + "-" + Math.floor(Math.random() * 1000),
              description: `Transfer Dari rekening ${bankAccount2.bankName} ${bankAccount2.accountNumber}`,
              bankAccounts: { connect: { id: toBankAccountId } }
            }
          });
        }
        return {
          bankTransaction
        };
      }
    }
  }, {
    body: typebox2.Type.Object({
      amount: typebox2.Type.Number(),
      type: typebox2.Type.String(),
      description: typebox2.Type.Optional(typebox2.Type.String()),
      toBankAccountId: typebox2.Type.Optional(typebox2.Type.Number())
    }),
    detail: {
      tags: ["Bank Account"]
    }
  });
});
// src/routes/orders.routes.ts
var ordersRoutes = new q().use(ctx).group("/orders", (app) => {
  return app.get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, q: q2, _status, "supplier.id": supplierId, "factory.id": factoryId } = query;
    const limit = +(_end ?? 10);
    const offset2 = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "desc";
    const orderBy = { [sort]: order };
    const orders = [];
    if (supplierId) {
      const whereSupplier = { id: Number(supplierId) };
      const supplierOrdersQue = await db3.supplierOrders.findMany({
        where: {
          supplier: whereSupplier,
          OR: [
            {
              invCode: {
                contains: q2 ?? "",
                mode: "insensitive"
              }
            },
            {
              status: {
                contains: _status ?? "",
                mode: "insensitive"
              }
            }
          ]
        },
        orderBy,
        skip: offset2,
        take: limit,
        select: {
          id: true,
          invCode: true,
          invTotal: true,
          invDate: true,
          status: true,
          qty: true,
          supplier: {
            select: {
              id: true,
              name: true,
              code: true,
              products: true,
              prices: {
                select: {
                  id: true,
                  price: true,
                  isPPN: true,
                  factoryPrice: {
                    select: {
                      id: true,
                      price: true,
                      factory: {
                        select: {
                          id: true,
                          name: true,
                          code: true
                        }
                      }
                    }
                  },
                  created_at: true
                }
              }
            }
          },
          supplierPrice: {
            select: {
              id: true,
              price: true,
              isPPN: true,
              factoryPrice: {
                select: {
                  id: true,
                  price: true,
                  factory: {
                    select: {
                      id: true,
                      name: true,
                      code: true
                    }
                  }
                }
              },
              created_at: true
            }
          },
          vehicleOrders: true,
          created_at: true
        }
      });
      const supplierOrders = supplierOrdersQue.map((order2) => ({
        ...order2,
        profits: order2.supplierPrice.factoryPrice.price * order2.qty - order2.invTotal
      }));
      orders.push(...supplierOrders);
    }
    if (factoryId) {
      const whereFactory = { id: Number(factoryId) };
      const factoryOrders = await db3.factoryOrders.findMany({
        where: {
          factory: whereFactory,
          OR: [
            {
              invCode: {
                contains: q2 ?? "",
                mode: "insensitive"
              }
            },
            {
              status: {
                contains: _status ?? "",
                mode: "insensitive"
              }
            }
          ]
        },
        orderBy,
        skip: offset2,
        take: limit,
        select: {
          id: true,
          invCode: true,
          invTotal: true,
          invDate: true,
          status: true,
          qty: true,
          factory: {
            select: {
              id: true,
              name: true,
              code: true
            }
          },
          factoryPrice: {
            select: {
              id: true,
              price: true
            }
          },
          vehicleOrders: true,
          created_at: true
        }
      });
      orders.push(...factoryOrders);
    }
    if (!supplierId && !factoryId) {
      const supplierOrders = await db3.supplierOrders.findMany({
        orderBy,
        skip: offset2,
        take: limit,
        where: {
          OR: [
            {
              invCode: {
                contains: q2 ?? "",
                mode: "insensitive"
              }
            },
            {
              status: {
                contains: _status ?? "",
                mode: "insensitive"
              }
            }
          ]
        },
        select: {
          id: true,
          invCode: true,
          invTotal: true,
          invDate: true,
          status: true,
          qty: true,
          supplier: {
            select: {
              id: true,
              name: true,
              code: true,
              prices: {
                select: {
                  id: true,
                  price: true,
                  isPPN: true,
                  factoryPrice: {
                    select: {
                      id: true,
                      price: true,
                      factory: {
                        select: {
                          id: true,
                          name: true,
                          code: true
                        }
                      }
                    }
                  },
                  created_at: true
                }
              }
            }
          },
          supplierPrice: true,
          vehicleOrders: true,
          created_at: true
        }
      });
      const factoryOrders = await db3.factoryOrders.findMany({
        where: {
          OR: [
            {
              invCode: {
                contains: q2 ?? "",
                mode: "insensitive"
              }
            },
            {
              status: {
                contains: _status ?? "",
                mode: "insensitive"
              }
            }
          ]
        },
        orderBy,
        skip: offset2,
        take: limit,
        select: {
          id: true,
          invCode: true,
          invTotal: true,
          invDate: true,
          status: true,
          qty: true,
          factory: {
            select: {
              id: true,
              name: true,
              code: true
            }
          },
          factoryPrice: {
            select: {
              id: true,
              price: true
            }
          },
          vehicleOrders: true,
          created_at: true
        }
      });
      orders.push(...supplierOrders, ...factoryOrders);
    }
    return orders;
  }, {
    detail: {
      tags: ["Orders"]
    }
  });
}).group("/recentOrders", (app) => {
  return app.get("/", async ({ db: db3 }) => {
    const supplierOrders = await db3.supplierOrders.findMany({
      where: {
        status: "Pending"
      },
      orderBy: {
        created_at: "desc"
      },
      take: 5,
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        status: true,
        qty: true,
        supplier: {
          select: {
            id: true,
            name: true,
            code: true,
            prices: true
          }
        },
        supplierPrice: true,
        vehicleOrders: true,
        created_at: true
      }
    });
    return supplierOrders;
  }, {
    detail: {
      tags: ["Recent Orders"]
    }
  });
});
// src/routes/dailyOrders.routes.ts
var dailyOrders = new q().use(ctx).group("/dailyOrders", (app) => {
  return app.get("/", async ({ db: db3, query }) => {
    const { _page, _end, _sort, _order, _status, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset2 = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const whereConditions = [];
    if (q2) {
      const invTotalNumber = parseInt(q2);
      if (!isNaN(invTotalNumber)) {
        whereConditions.push({ invTotal: { equals: invTotalNumber } });
      }
      whereConditions.push({ invCode: { contains: q2, mode: "insensitive" } });
    }
    if (_status) {
      whereConditions.push({ status: { equals: _status, mode: "insensitive" } });
    }
    const invoices = await db3.factoryOrders.findMany({
      orderBy,
      skip: offset2,
      take: limit,
      where: whereConditions.length > 0 ? { AND: whereConditions } : {},
      select: {
        id: true,
        invCode: true,
        invTotal: true,
        invDate: true,
        status: true,
        factory: {
          select: {
            id: true,
            name: true,
            code: true
          }
        },
        factoryPrice: {
          select: {
            id: true,
            price: true
          }
        },
        vehicleOrders: {
          select: {
            id: true,
            qty: true,
            plate: true
          }
        }
      }
    });
    const data = [];
    const gte = moment_default().subtract(20, "days").startOf("day");
    const lte = moment_default().endOf("day");
    const dates = [];
    const startDate = moment_default(gte).startOf("day");
    const endDate = moment_default(lte).endOf("day");
    let currentDate = startDate.clone();
    while (currentDate.isSameOrBefore(endDate)) {
      dates.push(currentDate.toDate());
      currentDate.add(1, "day");
    }
    for (const date of dates) {
      const value4 = invoices.filter((invoice) => {
        const invoiceDate = moment_default(invoice.invDate).startOf("day").add(1, "day").toDate();
        return moment_default(invoiceDate).isSame(date, "day");
      }).length;
      data.push({ date, value: value4 });
    }
    const trend = data.reduce((acc, curr) => {
      return acc + curr.value;
    }, 0);
    const total = invoices.length;
    return {
      data,
      total,
      trend
    };
  });
});
// src/routes/dailyRevenue.routes.ts
var client2 = __toESM(require_index_browser3(), 1);
var db3 = new client2.PrismaClient;
var dailyRevenue = new q().use(ctx).group("/dailyRevenue", (app) => {
  return app.get("/", async ({ query }) => {
    const { _end, _sort, _order, _status, start, end, q: q2 } = query;
    const limit = +(_end ?? 10);
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const gte = start ? moment_default(start, "ddd, DD MMM YYYY HH:mm:ss [GMT]").toDate() : undefined;
    const lte = end ? moment_default(end, "ddd, DD MMM YYYY HH:mm:ss [GMT]").toDate() : undefined;
    const daysDifference = moment_default(lte).diff(moment_default(gte), "days");
    const previousPeriodGte = moment_default(gte).subtract(daysDifference, "days").toDate();
    const previousPeriodLte = moment_default(lte).subtract(daysDifference, "days").toDate();
    const whereConditions = [];
    if (q2) {
      const invTotalNumber = parseInt(q2);
      if (!isNaN(invTotalNumber)) {
        whereConditions.push({ invTotal: { equals: invTotalNumber } });
      }
      whereConditions.push({ invCode: { contains: q2, mode: client2.Prisma.QueryMode.insensitive } });
    }
    if (_status) {
      whereConditions.push({ status: { equals: _status, mode: client2.Prisma.QueryMode.insensitive } });
    }
    if (lte || gte) {
      whereConditions.push({
        invDate: {
          lte: lte ? new Date(lte) : undefined,
          gte: gte ? new Date(gte) : undefined
        }
      });
    }
    function calculateTotal(invoices) {
      return invoices.map((invoice) => {
        if (invoice.supplierPrice && invoice.supplierPrice.factoryPrice) {
          const profit = (invoice.supplierPrice.factoryPrice.price - invoice.supplierPrice.price) * invoice.qty;
          return new client2.Prisma.Decimal(profit);
        }
        return new client2.Prisma.Decimal(0);
      }).reduce((acc, curr) => acc.add(curr), new client2.Prisma.Decimal(0));
    }
    try {
      const previousPeriodData = await db3.supplierOrders.findMany({
        where: {
          AND: whereConditions,
          invDate: {
            gte: previousPeriodGte,
            lte: previousPeriodLte
          }
        },
        select: {
          invTotal: true,
          invDate: true,
          qty: true,
          supplierPrice: {
            select: {
              id: true,
              price: true,
              factoryPrice: {
                select: {
                  id: true,
                  price: true,
                  factory: {
                    select: {
                      id: true,
                      name: true,
                      code: true
                    }
                  }
                }
              }
            }
          }
        }
      });
      const invoices = await db3.supplierOrders.findMany({
        where: {
          AND: whereConditions,
          invDate: {
            gte,
            lte
          }
        },
        select: {
          id: true,
          invCode: true,
          invTotal: true,
          invDate: true,
          status: true,
          qty: true,
          factoryPrice: {
            select: {
              id: true,
              price: true
            }
          },
          vehicleOrders: {
            select: {
              id: true,
              qty: true,
              plate: true
            }
          },
          BankTransactions: {
            select: {
              id: true,
              amount: true,
              transactionDate: true
            }
          },
          supplierPrice: {
            select: {
              id: true,
              price: true,
              factoryPrice: {
                select: {
                  id: true,
                  price: true,
                  factory: {
                    select: {
                      id: true,
                      name: true,
                      code: true
                    }
                  }
                }
              }
            }
          }
        }
      });
      const data = [];
      if (lte && gte) {
        const dates = [];
        const startDate = moment_default(gte).startOf("day");
        const endDate = moment_default(lte).endOf("day");
        let currentDate = startDate.clone();
        while (currentDate.isSameOrBefore(endDate)) {
          dates.push(currentDate.toDate());
          currentDate.add(1, "day");
        }
        for (const date of dates) {
          const value4 = invoices.reduce((acc, invoice) => {
            const invoiceDate = invoice.BankTransactions?.transactionDate ? moment_default(invoice.BankTransactions.transactionDate).startOf("day") : null;
            if (invoiceDate && invoiceDate.isBetween(startDate, endDate, null, "[)") && invoiceDate.isSame(date, "day")) {
              const invoiceValue = (invoice.supplierPrice.factoryPrice.price - invoice.supplierPrice.price) * invoice.qty;
              return acc.add(new client2.Prisma.Decimal(invoiceValue));
            }
            return acc;
          }, new client2.Prisma.Decimal(0));
          data.push({ date, value: value4 });
        }
      }
      const total = calculateTotal(invoices);
      const trend = calculateTotal(previousPeriodData);
      return {
        data,
        total,
        trend
      };
    } catch (error7) {
      return {
        message: "An error occurred while fetching the data."
      };
    }
  });
});
// src/routes/product.routes.ts
var productRoutes = new q().group("/products", (app) => {
  return app.use(ctx).get("/", async ({ db: db4, query }) => {
    const { _page, _end, _sort, _order, q: q2 } = query;
    const limit = +(_end ?? 10);
    const offset2 = (+(_page ?? 1) - 1) * limit;
    const sort = (_sort ?? "id").toString();
    const order = _order ?? "asc";
    const orderBy = { [sort]: order };
    const products = await db4.products.findMany({
      orderBy,
      skip: offset2,
      take: limit,
      where: {
        OR: [
          {
            code: {
              contains: q2 ?? "",
              mode: "insensitive"
            }
          },
          {
            name: {
              contains: q2 ?? "",
              mode: "insensitive"
            }
          }
        ]
      },
      select: {
        id: true,
        code: true,
        name: true,
        created_at: true
      }
    });
    return products;
  }, {
    detail: {
      tags: ["Products"]
    }
  });
});
// src/index.ts
var app = new q({
  name: "@app/ctx"
}).use(swagger({
  path: "/v1/swagger",
  documentation: {
    info: {
      title: "Elysia API",
      description: "Elysia API Documentation",
      version: "1.0.0"
    },
    tags: [
      {
        name: "Auth",
        description: "Auth API"
      },
      {
        name: "Factories",
        description: "Factories API"
      },
      {
        name: "Farmers",
        description: "Farmers API"
      },
      {
        name: "Suppliers",
        description: "Suppliers API"
      },
      {
        name: "Users",
        description: "Users API"
      },
      {
        name: "Vehicles",
        description: "Vehicles API"
      }
    ],
    components: {
      securitySchemes: {
        bearerAuth: {
          type: "http",
          scheme: "bearer",
          bearerFormat: "JWT"
        }
      }
    },
    security: [
      {
        bearerAuth: []
      }
    ]
  }
})).group("/api/v1", (app2) => app2.use(jwt({
  name: "jwt",
  secret: "Fischl von Luftschloss Narfidort"
})).use(cookie4()).use(authRoutes).use(usersRoutes).use(factoryRoutes).use(suppliersRoutes).use(farmersRoutes).use(vehiclesRoutes).use(bankAccount).use(bankTransactions).use(factoryInvoicesRoutes).use(supplierInvoiceRoutes).use(ordersRoutes).use(dailyOrders).use(dailyRevenue).use(productRoutes)).use(cors()).listen({
  port: 3000
});
console.log(`Running at http://${app.server.hostname}:${app.server.port}`);
